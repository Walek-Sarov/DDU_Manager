////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Возврат при получении формы для анализа.
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.Пользователь)
	 ИЛИ (   НЕ Пользователи.ЭтоПолноправныйПользователь()
	       И Параметры.Пользователь <> Пользователи.ТекущийПользователь() ) Тогда
		
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Установка заголовка формы.
	Заголовок = УправлениеДоступомСлужебный.ЗаголовокПодчиненнойФормы(
		НСтр("ru = 'Права доступа: %1 (%2)'"), Параметры.Пользователь);
	
	Элементы.ПодробныеСведенияОПравахДоступа.Видимость =
		НЕ УправлениеДоступомПереопределяемый.УпрощенныйИнтерфейсНастройкиПравДоступа();
	
	ВывестиОтчет(Параметры.Пользователь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ДокументОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗнч(Расшифровка) = Тип("Строка")
	   И Лев(Расшифровка, СтрДлина("Открыть форму списка: ")) = "Открыть форму списка: " Тогда
		//
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму(Сред(Расшифровка, СтрДлина("Открыть форму списка: ") + 1) + ".ФормаСписка");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Сформировать(Команда)
	
	ВывестиОтчет(Параметры.Пользователь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ВывестиОтчет(Ссылка)
	
	ВыводПравГруппы = ТипЗнч(Параметры.Пользователь) = Тип("СправочникСсылка.ГруппыПользователей")
	              ИЛИ ТипЗнч(Параметры.Пользователь) = Тип("СправочникСсылка.ГруппыВнешнихПользователей");
	
	УпрощенныйИнтерфейс = УправлениеДоступомПереопределяемый.УпрощенныйИнтерфейсНастройкиПравДоступа();
	
	Документ = Новый ТабличныйДокумент;
	
	Макет = РеквизитФормыВЗначение("Отчет").ПолучитьМакет("Макет");
	ОбластьОтступ = Макет.ПолучитьОбласть("Отступ");
	Свойства = Новый Структура;
	Свойства.Вставить("Ссылка", Ссылка);
	
	// Вывод заголовка.
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Пользователи") Тогда
		Свойства.Вставить("ПредставлениеВидаОбъекта",    НСтр("ru = 'пользователя'"));
		Свойства.Вставить("ПредставлениеВидаОбъектаДоп", НСтр("ru = 'пользователю'"));
		Свойства.Вставить("ПредставлениеОбъекта",        НСтр("ru = 'Пользователь: '") + Ссылка);
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ВнешниеПользователи") Тогда
		Свойства.Вставить("ПредставлениеВидаОбъекта",    НСтр("ru = 'внешнего пользователя'"));
		Свойства.Вставить("ПредставлениеВидаОбъектаДоп", НСтр("ru = 'внешнему пользователю'"));
		Свойства.Вставить("ПредставлениеОбъекта",        НСтр("ru = 'Внешний пользователь: '") + Ссылка);
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		Свойства.Вставить("ПредставлениеВидаОбъекта",    НСтр("ru = 'группы пользователей'"));
		Свойства.Вставить("ПредставлениеВидаОбъектаДоп", НСтр("ru = 'группе пользователей'"));
		Свойства.Вставить("ПредставлениеОбъекта",        НСтр("ru = 'Группа пользователей: '") + Ссылка);
	Иначе
		Свойства.Вставить("ПредставлениеВидаОбъекта",    НСтр("ru = 'группы внешних пользователей'"));
		Свойства.Вставить("ПредставлениеВидаОбъектаДоп", НСтр("ru = 'группе внешних пользователей'"));
		Свойства.Вставить("ПредставлениеОбъекта",        НСтр("ru = 'Группа внешних пользователей: '") + Ссылка);
	КонецЕсли;
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.Заполнить(Свойства);
	Документ.Вывести(Область);
	
	// Вывод свойств пользователя ИБ для пользователя и внешнего пользователя
	Если НЕ ВыводПравГруппы Тогда
		//
		Документ.НачатьАвтогруппировкуСтрок();
		Документ.Вывести(Макет.ПолучитьОбласть("СвойстваПользователяИБГруппировка"), 1,, Истина);
		Область = Макет.ПолучитьОбласть("СвойстваПользователяИБДетали1");
		
		СвойстваПользователяИБ = Неопределено;
		
		УстановитьПривилегированныйРежим(Истина);
		
		ПользовательИБПрочитан = Пользователи.ПрочитатьПользователяИБ(
			ОбщегоНазначения.ПолучитьЗначениеРеквизита(Ссылка, "ИдентификаторПользователяИБ"),
			СвойстваПользователяИБ);
		
		УстановитьПривилегированныйРежим(Ложь);
		
		Если ПользовательИБПрочитан Тогда
			Область.Параметры.ДоступКИнформационнойБазеРазрешен = Истина;
			Документ.Вывести(Область, 2);
			
			Область = Макет.ПолучитьОбласть("СвойстваПользователяИБДетали2");
			Область.Параметры.Заполнить(СвойстваПользователяИБ);
			
			Область.Параметры.ЯзыкПредставление =
				ПредставлениеЯзыка(СвойстваПользователяИБ.Язык);
			
			Область.Параметры.РежимЗапускаПредставление =
				ПредставлениеРежимаЗапуска(СвойстваПользователяИБ.РежимЗапуска);
			
			Если НЕ ЗначениеЗаполнено(СвойстваПользователяИБ.ПользовательОС) Тогда
				Область.Параметры.ПользовательОС = НСтр("ru = 'Не указан'");
			КонецЕсли;
			Документ.Вывести(Область, 2);
		Иначе
			Область.Параметры.ДоступКИнформационнойБазеРазрешен = Ложь;
			Документ.Вывести(Область, 2);
		КонецЕсли;
		Документ.ЗакончитьАвтогруппировкуСтрок();
	КонецЕсли;
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Пользователи")
		ИЛИ ТипЗнч(Ссылка) = Тип("СправочникСсылка.ВнешниеПользователи") Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(
			ОбщегоНазначения.ПолучитьЗначениеРеквизита(Ссылка, "ИдентификаторПользователяИБ"));
		УстановитьПривилегированныйРежим(Ложь);
		
		Если Пользователи.ЭтоПолноправныйПользователь(ПользовательИБ, Истина) Тогда
			
			Область = Макет.ПолучитьОбласть("ПолноправныйПользователь");
			Документ.Вывести(Область, 1);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// Вывод групп доступа.
	УстановитьПривилегированныйРежим(Истина);
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь",    Ссылка);
	Запрос.УстановитьПараметр("ВыводПравГруппы", ВыводПравГруппы);
	Запрос.УстановитьПараметр("СинонимыРолей",   ПользователиСлужебныйПовтИсп.СинонимыРолей());
	Запрос.УстановитьПараметр("СинонимыТаблиц",  УправлениеДоступомСлужебныйПовтИсп.СинонимыТаблиц());
	
	Запрос.УстановитьПараметр("ПраваОМДРолей",
		УправлениеДоступомСлужебныйПовтИсп.ОграничиваемыеПраваОбъектовМетаданныхРолей(Истина));
	
	Запрос.УстановитьПараметр("ВидыОграниченийПрав", ВидыОграниченийПравОбъектовМетаданных());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СинонимыРолей.Роль,
	|	СинонимыРолей.РольСиноним
	|ПОМЕСТИТЬ СинонимыРолей
	|ИЗ
	|	&СинонимыРолей КАК СинонимыРолей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СинонимыТаблиц.Коллекция,
	|	СинонимыТаблиц.КоллекцияСиноним,
	|	СинонимыТаблиц.КоллекцияПорядок,
	|	СинонимыТаблиц.ОбъектМетаданных,
	|	СинонимыТаблиц.ОбъектМетаданныхСиноним,
	|	СинонимыТаблиц.Таблица,
	|	СинонимыТаблиц.ТаблицаСиноним
	|ПОМЕСТИТЬ СинонимыТаблиц
	|ИЗ
	|	&СинонимыТаблиц КАК СинонимыТаблиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПраваОМДРолей.Роль,
	|	ПраваОМДРолей.Таблица,
	|	ПраваОМДРолей.Добавление,
	|	ПраваОМДРолей.Изменение,
	|	ПраваОМДРолей.ЧтениеБезОграничения,
	|	ПраваОМДРолей.ДобавлениеБезОграничения,
	|	ПраваОМДРолей.ИзменениеБезОграничения,
	|	ПраваОМДРолей.Просмотр,
	|	ПраваОМДРолей.ИнтерактивноеДобавление,
	|	ПраваОМДРолей.Редактирование
	|ПОМЕСТИТЬ ПраваОМДРолей
	|ИЗ
	|	&ПраваОМДРолей КАК ПраваОМДРолей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СправочникГруппыДоступа.Ссылка КАК ГруппаДоступа,
	|	СправочникГруппыДоступа.Профиль КАК Профиль,
	|	ПользователиГруппДоступа.Пользователь КАК Пользователь,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ПользователиГруппДоступа.Пользователь) <> ТИП(Справочник.Пользователи)
	|				И ТИПЗНАЧЕНИЯ(ПользователиГруппДоступа.Пользователь) <> ТИП(Справочник.ВнешниеПользователи)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ГрупповоеУчастие,
	|	ВЫБОР
	|		КОГДА ПользователиГруппДоступа.Пользователь В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					СоставыГруппПользователей.ГруппаПользователей КАК ГруппаПользователей
	|				ИЗ
	|					РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
	|				ГДЕ
	|					СоставыГруппПользователей.Пользователь = &Пользователь)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПодчиненноеУчастие
	|ПОМЕСТИТЬ ГруппыДоступаПользователя
	|ИЗ
	|	Справочник.ГруппыДоступа КАК СправочникГруппыДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа.Пользователи КАК ПользователиГруппДоступа
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыПользователей
	|			ПО ПользователиГруппДоступа.Пользователь = ГруппыПользователей.ГруппаДоступа
	|				И (ГруппыПользователей.ЗначениеДоступа = &Пользователь)
	|				И (ТИПЗНАЧЕНИЯ(&Пользователь) = ТИП(Справочник.Пользователи)
	|					ИЛИ ТИПЗНАЧЕНИЯ(&Пользователь) = ТИП(Справочник.ВнешниеПользователи)
	|					ИЛИ ГруппыПользователей.ГруппаДоступа = &Пользователь)
	|		ПО СправочникГруппыДоступа.Ссылка = ПользователиГруппДоступа.Ссылка
	|			И (НЕ СправочникГруппыДоступа.ПометкаУдаления)
	|			И (НЕ СправочникГруппыДоступа.Профиль.ПометкаУдаления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыДоступаПользователя.ГруппаДоступа КАК ГруппаДоступа,
	|	ПРЕДСТАВЛЕНИЕ(ГруппыДоступаПользователя.ГруппаДоступа) КАК ПредставлениеГруппыДоступа,
	|	ГруппыДоступаПользователя.Пользователь КАК Участник,
	|	ГруппыДоступаПользователя.Пользователь.Наименование КАК ПредставлениеУчастника,
	|	ГруппыДоступаПользователя.ГрупповоеУчастие,
	|	ГруппыДоступаПользователя.ПодчиненноеУчастие,
	|	ГруппыДоступаПользователя.ГруппаДоступа.Администратор КАК Администратор,
	|	ГруппыДоступаПользователя.ГруппаДоступа.Администратор.Наименование КАК ПредставлениеАдминистратора,
	|	ГруппыДоступаПользователя.ГруппаДоступа.Описание КАК Описание,
	|	ГруппыДоступаПользователя.ГруппаДоступа.Профиль КАК Профиль,
	|	ГруппыДоступаПользователя.ГруппаДоступа.Профиль КАК ПредставлениеПрофиля
	|ИЗ
	|	ГруппыДоступаПользователя КАК ГруппыДоступаПользователя
	|ИТОГИ
	|	МАКСИМУМ(Участник)
	|ПО
	|	ГруппаДоступа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГруппыДоступаПользователя.Профиль
	|ПОМЕСТИТЬ ПрофилиПользователя
	|ИЗ
	|	ГруппыДоступаПользователя КАК ГруппыДоступаПользователя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрофилиПользователя.Профиль КАК Профиль,
	|	ПРЕДСТАВЛЕНИЕ(ПрофилиПользователя.Профиль) КАК ПредставлениеПрофиля,
	|	РолиПрофилей.Роль КАК Роль,
	|	ЕСТЬNULL(СинонимыРолей.РольСиноним, ""? "" + РолиПрофилей.Роль) КАК ПредставлениеРоли
	|ИЗ
	|	ПрофилиПользователя КАК ПрофилиПользователя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК РолиПрофилей
	|		ПО ПрофилиПользователя.Профиль = РолиПрофилей.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СинонимыРолей КАК СинонимыРолей
	|		ПО (РолиПрофилей.Роль = СинонимыРолей.Роль)
	|ИТОГИ
	|	МАКСИМУМ(Профиль),
	|	МАКСИМУМ(ПредставлениеПрофиля),
	|	МАКСИМУМ(Роль),
	|	МАКСИМУМ(ПредставлениеРоли)
	|ПО
	|	Профиль,
	|	Роль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТИПЗНАЧЕНИЯ(ПраваПоЗначениямДоступа.ЗначениеДоступа) КАК ТипЗначений,
	|	ПраваПоЗначениямДоступа.ЗначениеДоступа КАК ЗначениеДоступа,
	|	ПраваПоЗначениямДоступа.Пользователь КАК Пользователь,
	|	ПраваПоЗначениямДоступа.Пользователь.Наименование КАК ПользовательНаименование,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ПраваПоЗначениямДоступа.Пользователь) <> ТИП(Справочник.Пользователи)
	|				И ТИПЗНАЧЕНИЯ(ПраваПоЗначениямДоступа.Пользователь) <> ТИП(Справочник.ВнешниеПользователи)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ГрупповоеУчастие,
	|	ВЫБОР
	|		КОГДА ПраваПоЗначениямДоступа.Пользователь В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					СоставыГруппПользователей.ГруппаПользователей КАК ГруппаПользователей
	|				ИЗ
	|					РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
	|				ГДЕ
	|					СоставыГруппПользователей.Пользователь = &Пользователь)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПодчиненноеУчастие,
	|	ПраваПоЗначениямДоступа.Право,
	|	ПраваПоЗначениямДоступа.Запрещено КАК Запрещено,
	|	ПраваПоЗначениямДоступа.РаспространяетсяВИерархии КАК РаспространяетсяВИерархии
	|ИЗ
	|	РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениямДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
	|		ПО (ПользователиИГруппыПользователей.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка))
	|			И (ПользователиИГруппыПользователей.ЗначениеДоступа = &Пользователь)
	|			И (ПользователиИГруппыПользователей.ТолькоВидДоступа = ЛОЖЬ)
	|			И (ПользователиИГруппыПользователей.ГруппаДоступа = ПраваПоЗначениямДоступа.Пользователь)
	|			И (ВЫБОР
	|				КОГДА &ВыводПравГруппы
	|					ТОГДА ПользователиИГруппыПользователей.ГруппаДоступа = &Пользователь
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|ИТОГИ
	|	МАКСИМУМ(Пользователь),
	|	МАКСИМУМ(ПользовательНаименование),
	|	МАКСИМУМ(ГрупповоеУчастие),
	|	МАКСИМУМ(ПодчиненноеУчастие),
	|	МАКСИМУМ(Запрещено),
	|	МАКСИМУМ(РаспространяетсяВИерархии)
	|ПО
	|	ТипЗначений,
	|	ЗначениеДоступа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыОграниченийПрав.Таблица,
	|	ВидыОграниченийПрав.Право,
	|	ВидыОграниченийПрав.ВидДоступа
	|ПОМЕСТИТЬ ВидыОграниченийПрав
	|ИЗ
	|	&ВидыОграниченийПрав КАК ВидыОграниченийПрав
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СинонимыТаблиц.Коллекция КАК ВидОбъектов,
	|	СинонимыТаблиц.КоллекцияСиноним КАК ПредставлениеВидаОбъектов,
	|	СинонимыТаблиц.КоллекцияПорядок КАК ПорядокВидаОбъектов,
	|	СинонимыТаблиц.Таблица КАК Таблица,
	|	СинонимыТаблиц.ОбъектМетаданных КАК Объект,
	|	СинонимыТаблиц.ОбъектМетаданныхСиноним КАК ПредставлениеОбъекта,
	|	ПраваРолейПрофилейГруппДоступа.Профиль КАК Профиль,
	|	ПраваРолейПрофилейГруппДоступа.Профиль.Наименование КАК ПредставлениеПрофиля,
	|	ПраваРолейПрофилейГруппДоступа.Роль КАК Роль,
	|	ЕСТЬNULL(СинонимыРолей.РольСиноним, ""? "" + ПраваРолейПрофилейГруппДоступа.Роль) КАК ПредставлениеРоли,
	|	ПраваРолейПрофилейГруппДоступа.ВидРолей КАК ВидРолей,
	|	ПраваРолейПрофилейГруппДоступа.ЧтениеБезОграничения КАК ЧтениеБезОграничения,
	|	ПраваРолейПрофилейГруппДоступа.Просмотр КАК Просмотр,
	|	ПраваРолейПрофилейГруппДоступа.ГруппаДоступа КАК ГруппаДоступа,
	|	ПраваРолейПрофилейГруппДоступа.ГруппаДоступа.Наименование КАК ПредставлениеГруппыДоступа,
	|	ПраваРолейПрофилейГруппДоступа.ВидДоступа КАК ВидДоступа,
	|	ПраваРолейПрофилейГруппДоступа.ВидДоступа.Наименование КАК ПредставлениеВидаДоступа,
	|	ПраваРолейПрофилейГруппДоступа.ДоступРазрешен КАК ДоступРазрешен,
	|	ПраваРолейПрофилейГруппДоступа.ЗначениеДоступа КАК ЗначениеДоступа,
	|	ПРЕДСТАВЛЕНИЕ(ПраваРолейПрофилейГруппДоступа.ЗначениеДоступа) КАК ПредставлениеЗначенияДоступа
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПраваОМДРолей.Таблица КАК Таблица,
	|		РолиПрофилей.Ссылка КАК Профиль,
	|		ВЫБОР
	|			КОГДА ПраваОМДРолей.Просмотр
	|					И ПраваОМДРолей.ЧтениеБезОграничения
	|				ТОГДА 0
	|			КОГДА НЕ ПраваОМДРолей.Просмотр
	|					И ПраваОМДРолей.ЧтениеБезОграничения
	|				ТОГДА 1
	|			КОГДА ПраваОМДРолей.Просмотр
	|					И НЕ ПраваОМДРолей.ЧтениеБезОграничения
	|				ТОГДА 2
	|			ИНАЧЕ 3
	|		КОНЕЦ КАК ВидРолей,
	|		ПраваОМДРолей.Роль КАК Роль,
	|		ПраваОМДРолей.ЧтениеБезОграничения КАК ЧтениеБезОграничения,
	|		ПраваОМДРолей.Просмотр КАК Просмотр,
	|		НЕОПРЕДЕЛЕНО КАК ГруппаДоступа,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка) КАК ВидДоступа,
	|		НЕОПРЕДЕЛЕНО КАК ДоступРазрешен,
	|		НЕОПРЕДЕЛЕНО КАК ЗначениеДоступа
	|	ИЗ
	|		ПраваОМДРолей КАК ПраваОМДРолей
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК РолиПрофилей
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрофилиПользователя КАК ПрофилиПользователя
	|				ПО РолиПрофилей.Ссылка = ПрофилиПользователя.Профиль
	|			ПО ПраваОМДРолей.Роль = РолиПрофилей.Роль
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ПраваОМДРолей.Таблица,
	|		ПрофилиПользователя.Профиль,
	|		1000,
	|		"""",
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ВидыИЗначенияДоступа.ГруппаДоступа,
	|		ЕСТЬNULL(ВидыОграниченийПрав.ВидДоступа, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)),
	|		ВидыИЗначенияДоступа.ДоступРазрешен,
	|		ВидыИЗначенияДоступа.ЗначениеДоступа
	|	ИЗ
	|		ПраваОМДРолей КАК ПраваОМДРолей
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК РолиПрофилей
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрофилиПользователя КАК ПрофилиПользователя
	|				ПО РолиПрофилей.Ссылка = ПрофилиПользователя.Профиль
	|			ПО ПраваОМДРолей.Роль = РолиПрофилей.Роль
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ГруппыДоступаПользователя.Профиль КАК Профиль,
	|				ГруппыДоступаПользователя.ГруппаДоступа КАК ГруппаДоступа,
	|				ЕСТЬNULL(ГруппыДоступаВидыДоступа.ВидДоступа, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)) КАК ВидДоступа,
	|				ЕСТЬNULL(ГруппыДоступаВидыДоступа.ДоступРазрешен, ЛОЖЬ) КАК ДоступРазрешен,
	|				ЕСТЬNULL(ГруппыДоступаЗначенияДоступа.ЗначениеДоступа, НЕОПРЕДЕЛЕНО) КАК ЗначениеДоступа
	|			ИЗ
	|				ГруппыДоступаПользователя КАК ГруппыДоступаПользователя
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа.ВидыДоступа КАК ГруппыДоступаВидыДоступа
	|					ПО (ГруппыДоступаВидыДоступа.Ссылка = ГруппыДоступаПользователя.ГруппаДоступа)
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа.ЗначенияДоступа КАК ГруппыДоступаЗначенияДоступа
	|					ПО (ГруппыДоступаВидыДоступа.Ссылка = ГруппыДоступаЗначенияДоступа.Ссылка)
	|						И (ГруппыДоступаВидыДоступа.ВидДоступа = ГруппыДоступаЗначенияДоступа.ВидДоступа)
	|			
	|			ОБЪЕДИНИТЬ
	|			
	|			ВЫБРАТЬ
	|				ГруппыДоступаПользователя.Профиль,
	|				ГруппыДоступаПользователя.ГруппаДоступа,
	|				ПрофилиГруппДоступаВидыДоступа.ВидДоступа,
	|				ПрофилиГруппДоступаВидыДоступа.ДоступРазрешен,
	|				ЕСТЬNULL(ПрофилиГруппДоступаЗначенияДоступа.ЗначениеДоступа, НЕОПРЕДЕЛЕНО)
	|			ИЗ
	|				ГруппыДоступаПользователя КАК ГруппыДоступаПользователя
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ВидыДоступа КАК ПрофилиГруппДоступаВидыДоступа
	|					ПО (ПрофилиГруппДоступаВидыДоступа.Ссылка = ГруппыДоступаПользователя.Профиль)
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ЗначенияДоступа КАК ПрофилиГруппДоступаЗначенияДоступа
	|					ПО (ПрофилиГруппДоступаВидыДоступа.Ссылка = ПрофилиГруппДоступаЗначенияДоступа.Ссылка)
	|						И (ПрофилиГруппДоступаВидыДоступа.ВидДоступа = ПрофилиГруппДоступаЗначенияДоступа.ВидДоступа)
	|			ГДЕ
	|				ПрофилиГруппДоступаВидыДоступа.Предустановленный) КАК ВидыИЗначенияДоступа
	|			ПО (ПрофилиПользователя.Профиль = ВидыИЗначенияДоступа.Профиль)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВидыОграниченийПрав КАК ВидыОграниченийПрав
	|			ПО (ВидыОграниченийПрав.Таблица = ПраваОМДРолей.Таблица)
	|				И (ВидыОграниченийПрав.Право = ""Чтение"")
	|				И (ВидыОграниченийПрав.ВидДоступа = ВидыИЗначенияДоступа.ВидДоступа)) КАК ПраваРолейПрофилейГруппДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СинонимыТаблиц КАК СинонимыТаблиц
	|		ПО ПраваРолейПрофилейГруппДоступа.Таблица = СинонимыТаблиц.Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ СинонимыРолей КАК СинонимыРолей
	|		ПО ПраваРолейПрофилейГруппДоступа.Роль = СинонимыРолей.Роль
	|ИТОГИ
	|	МАКСИМУМ(ПредставлениеВидаОбъектов),
	|	МАКСИМУМ(ПорядокВидаОбъектов),
	|	МАКСИМУМ(Таблица),
	|	МАКСИМУМ(ПредставлениеОбъекта),
	|	МАКСИМУМ(ПредставлениеПрофиля),
	|	МАКСИМУМ(ПредставлениеРоли),
	|	МАКСИМУМ(ЧтениеБезОграничения),
	|	МАКСИМУМ(Просмотр),
	|	МАКСИМУМ(ПредставлениеГруппыДоступа),
	|	МАКСИМУМ(ПредставлениеВидаДоступа),
	|	МАКСИМУМ(ДоступРазрешен)
	|ПО
	|	ВидОбъектов,
	|	Объект,
	|	Профиль,
	|	ВидРолей,
	|	Роль,
	|	ГруппаДоступа,
	|	ВидДоступа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СинонимыТаблиц.Коллекция КАК ВидОбъектов,
	|	СинонимыТаблиц.КоллекцияСиноним КАК ПредставлениеВидаОбъектов,
	|	СинонимыТаблиц.КоллекцияПорядок КАК ПорядокВидаОбъектов,
	|	СинонимыТаблиц.Таблица КАК Таблица,
	|	СинонимыТаблиц.ОбъектМетаданных КАК Объект,
	|	СинонимыТаблиц.ОбъектМетаданныхСиноним КАК ПредставлениеОбъекта,
	|	ПраваРолейПрофилейГруппДоступа.Профиль КАК Профиль,
	|	ПраваРолейПрофилейГруппДоступа.Профиль.Наименование КАК ПредставлениеПрофиля,
	|	ПраваРолейПрофилейГруппДоступа.Роль КАК Роль,
	|	ЕСТЬNULL(СинонимыРолей.РольСиноним, ""? "" + ПраваРолейПрофилейГруппДоступа.Роль) КАК ПредставлениеРоли,
	|	ПраваРолейПрофилейГруппДоступа.ВидРолей КАК ВидРолей,
	|	ПраваРолейПрофилейГруппДоступа.Добавление КАК Добавление,
	|	ПраваРолейПрофилейГруппДоступа.Изменение КАК Изменение,
	|	ПраваРолейПрофилейГруппДоступа.ДобавлениеБезОграничения КАК ДобавлениеБезОграничения,
	|	ПраваРолейПрофилейГруппДоступа.ИзменениеБезОграничения КАК ИзменениеБезОграничения,
	|	ПраваРолейПрофилейГруппДоступа.ИнтерактивноеДобавление КАК ИнтерактивноеДобавление,
	|	ПраваРолейПрофилейГруппДоступа.Редактирование КАК Редактирование,
	|	ПраваРолейПрофилейГруппДоступа.ГруппаДоступа КАК ГруппаДоступа,
	|	ПраваРолейПрофилейГруппДоступа.ГруппаДоступа.Наименование КАК ПредставлениеГруппыДоступа,
	|	ПраваРолейПрофилейГруппДоступа.ВидДоступа КАК ВидДоступа,
	|	ПраваРолейПрофилейГруппДоступа.ВидДоступа.Наименование КАК ПредставлениеВидаДоступа,
	|	ПраваРолейПрофилейГруппДоступа.ДоступРазрешен КАК ДоступРазрешен,
	|	ПраваРолейПрофилейГруппДоступа.ЗначениеДоступа КАК ЗначениеДоступа,
	|	ПРЕДСТАВЛЕНИЕ(ПраваРолейПрофилейГруппДоступа.ЗначениеДоступа) КАК ПредставлениеЗначенияДоступа
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПраваОМДРолей.Таблица КАК Таблица,
	|		РолиПрофилей.Ссылка КАК Профиль,
	|		ВЫБОР
	|			КОГДА ПраваОМДРолей.ДобавлениеБезОграничения
	|					И ПраваОМДРолей.ИзменениеБезОграничения
	|				ТОГДА 0
	|			КОГДА НЕ ПраваОМДРолей.ДобавлениеБезОграничения
	|					И ПраваОМДРолей.ИзменениеБезОграничения
	|				ТОГДА 100
	|			КОГДА ПраваОМДРолей.ДобавлениеБезОграничения
	|					И НЕ ПраваОМДРолей.ИзменениеБезОграничения
	|				ТОГДА 200
	|			ИНАЧЕ 300
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ПраваОМДРолей.Добавление
	|					И ПраваОМДРолей.Изменение
	|				ТОГДА 0
	|			КОГДА НЕ ПраваОМДРолей.Добавление
	|					И ПраваОМДРолей.Изменение
	|				ТОГДА 10
	|			КОГДА ПраваОМДРолей.Добавление
	|					И НЕ ПраваОМДРолей.Изменение
	|				ТОГДА 20
	|			ИНАЧЕ 30
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ПраваОМДРолей.ИнтерактивноеДобавление
	|					И ПраваОМДРолей.Редактирование
	|				ТОГДА 0
	|			КОГДА НЕ ПраваОМДРолей.ИнтерактивноеДобавление
	|					И ПраваОМДРолей.Редактирование
	|				ТОГДА 1
	|			КОГДА ПраваОМДРолей.ИнтерактивноеДобавление
	|					И НЕ ПраваОМДРолей.Редактирование
	|				ТОГДА 2
	|			ИНАЧЕ 3
	|		КОНЕЦ КАК ВидРолей,
	|		ПраваОМДРолей.Роль КАК Роль,
	|		ПраваОМДРолей.Добавление КАК Добавление,
	|		ПраваОМДРолей.Изменение КАК Изменение,
	|		ПраваОМДРолей.ДобавлениеБезОграничения КАК ДобавлениеБезОграничения,
	|		ПраваОМДРолей.ИзменениеБезОграничения КАК ИзменениеБезОграничения,
	|		ПраваОМДРолей.ИнтерактивноеДобавление КАК ИнтерактивноеДобавление,
	|		ПраваОМДРолей.Редактирование КАК Редактирование,
	|		НЕОПРЕДЕЛЕНО КАК ГруппаДоступа,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка) КАК ВидДоступа,
	|		НЕОПРЕДЕЛЕНО КАК ДоступРазрешен,
	|		НЕОПРЕДЕЛЕНО КАК ЗначениеДоступа
	|	ИЗ
	|		ПраваОМДРолей КАК ПраваОМДРолей
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК РолиПрофилей
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрофилиПользователя КАК ПрофилиПользователя
	|				ПО РолиПрофилей.Ссылка = ПрофилиПользователя.Профиль
	|			ПО ПраваОМДРолей.Роль = РолиПрофилей.Роль
	|				И (ПраваОМДРолей.Добавление
	|					ИЛИ ПраваОМДРолей.Изменение)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ПраваОМДРолей.Таблица,
	|		ПрофилиПользователя.Профиль,
	|		1000,
	|		"""",
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ВидыИЗначенияДоступа.ГруппаДоступа,
	|		ЕСТЬNULL(ВидыОграниченийПрав.ВидДоступа, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)),
	|		ВидыИЗначенияДоступа.ДоступРазрешен,
	|		ВидыИЗначенияДоступа.ЗначениеДоступа
	|	ИЗ
	|		ПраваОМДРолей КАК ПраваОМДРолей
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК РолиПрофилей
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрофилиПользователя КАК ПрофилиПользователя
	|				ПО РолиПрофилей.Ссылка = ПрофилиПользователя.Профиль
	|			ПО ПраваОМДРолей.Роль = РолиПрофилей.Роль
	|				И (ПраваОМДРолей.Добавление)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ГруппыДоступаПользователя.Профиль КАК Профиль,
	|				ГруппыДоступаПользователя.ГруппаДоступа КАК ГруппаДоступа,
	|				ЕСТЬNULL(ГруппыДоступаВидыДоступа.ВидДоступа, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)) КАК ВидДоступа,
	|				ЕСТЬNULL(ГруппыДоступаВидыДоступа.ДоступРазрешен, ЛОЖЬ) КАК ДоступРазрешен,
	|				ЕСТЬNULL(ГруппыДоступаЗначенияДоступа.ЗначениеДоступа, НЕОПРЕДЕЛЕНО) КАК ЗначениеДоступа
	|			ИЗ
	|				ГруппыДоступаПользователя КАК ГруппыДоступаПользователя
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа.ВидыДоступа КАК ГруппыДоступаВидыДоступа
	|					ПО (ГруппыДоступаВидыДоступа.Ссылка = ГруппыДоступаПользователя.ГруппаДоступа)
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа.ЗначенияДоступа КАК ГруппыДоступаЗначенияДоступа
	|					ПО (ГруппыДоступаВидыДоступа.Ссылка = ГруппыДоступаЗначенияДоступа.Ссылка)
	|						И (ГруппыДоступаВидыДоступа.ВидДоступа = ГруппыДоступаЗначенияДоступа.ВидДоступа)
	|			
	|			ОБЪЕДИНИТЬ
	|			
	|			ВЫБРАТЬ
	|				ГруппыДоступаПользователя.Профиль,
	|				ГруппыДоступаПользователя.ГруппаДоступа,
	|				ПрофилиГруппДоступаВидыДоступа.ВидДоступа,
	|				ПрофилиГруппДоступаВидыДоступа.ДоступРазрешен,
	|				ЕСТЬNULL(ПрофилиГруппДоступаЗначенияДоступа.ЗначениеДоступа, НЕОПРЕДЕЛЕНО)
	|			ИЗ
	|				ГруппыДоступаПользователя КАК ГруппыДоступаПользователя
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ВидыДоступа КАК ПрофилиГруппДоступаВидыДоступа
	|					ПО (ПрофилиГруппДоступаВидыДоступа.Ссылка = ГруппыДоступаПользователя.Профиль)
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ЗначенияДоступа КАК ПрофилиГруппДоступаЗначенияДоступа
	|					ПО (ПрофилиГруппДоступаВидыДоступа.Ссылка = ПрофилиГруппДоступаЗначенияДоступа.Ссылка)
	|						И (ПрофилиГруппДоступаВидыДоступа.ВидДоступа = ПрофилиГруппДоступаЗначенияДоступа.ВидДоступа)
	|			ГДЕ
	|				ПрофилиГруппДоступаВидыДоступа.Предустановленный) КАК ВидыИЗначенияДоступа
	|			ПО (ПрофилиПользователя.Профиль = ВидыИЗначенияДоступа.Профиль)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВидыОграниченийПрав КАК ВидыОграниченийПрав
	|			ПО (ВидыОграниченийПрав.Таблица = ПраваОМДРолей.Таблица)
	|				И (ВидыОграниченийПрав.Право = ""Добавление"")
	|				И (ВидыОграниченийПрав.ВидДоступа = ВидыИЗначенияДоступа.ВидДоступа)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ПраваОМДРолей.Таблица,
	|		ПрофилиПользователя.Профиль,
	|		1000,
	|		"""",
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ВидыИЗначенияДоступа.ГруппаДоступа,
	|		ЕСТЬNULL(ВидыОграниченийПрав.ВидДоступа, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)),
	|		ВидыИЗначенияДоступа.ДоступРазрешен,
	|		ВидыИЗначенияДоступа.ЗначениеДоступа
	|	ИЗ
	|		ПраваОМДРолей КАК ПраваОМДРолей
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК РолиПрофилей
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрофилиПользователя КАК ПрофилиПользователя
	|				ПО РолиПрофилей.Ссылка = ПрофилиПользователя.Профиль
	|			ПО ПраваОМДРолей.Роль = РолиПрофилей.Роль
	|				И (ПраваОМДРолей.Изменение)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ГруппыДоступаПользователя.Профиль КАК Профиль,
	|				ГруппыДоступаПользователя.ГруппаДоступа КАК ГруппаДоступа,
	|				ЕСТЬNULL(ГруппыДоступаВидыДоступа.ВидДоступа, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)) КАК ВидДоступа,
	|				ЕСТЬNULL(ГруппыДоступаВидыДоступа.ДоступРазрешен, ЛОЖЬ) КАК ДоступРазрешен,
	|				ЕСТЬNULL(ГруппыДоступаЗначенияДоступа.ЗначениеДоступа, НЕОПРЕДЕЛЕНО) КАК ЗначениеДоступа
	|			ИЗ
	|				ГруппыДоступаПользователя КАК ГруппыДоступаПользователя
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа.ВидыДоступа КАК ГруппыДоступаВидыДоступа
	|					ПО (ГруппыДоступаВидыДоступа.Ссылка = ГруппыДоступаПользователя.ГруппаДоступа)
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа.ЗначенияДоступа КАК ГруппыДоступаЗначенияДоступа
	|					ПО (ГруппыДоступаВидыДоступа.Ссылка = ГруппыДоступаЗначенияДоступа.Ссылка)
	|						И (ГруппыДоступаВидыДоступа.ВидДоступа = ГруппыДоступаЗначенияДоступа.ВидДоступа)
	|			
	|			ОБЪЕДИНИТЬ
	|			
	|			ВЫБРАТЬ
	|				ГруппыДоступаПользователя.Профиль,
	|				ГруппыДоступаПользователя.ГруппаДоступа,
	|				ПрофилиГруппДоступаВидыДоступа.ВидДоступа,
	|				ПрофилиГруппДоступаВидыДоступа.ДоступРазрешен,
	|				ЕСТЬNULL(ПрофилиГруппДоступаЗначенияДоступа.ЗначениеДоступа, НЕОПРЕДЕЛЕНО)
	|			ИЗ
	|				ГруппыДоступаПользователя КАК ГруппыДоступаПользователя
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ВидыДоступа КАК ПрофилиГруппДоступаВидыДоступа
	|					ПО (ПрофилиГруппДоступаВидыДоступа.Ссылка = ГруппыДоступаПользователя.Профиль)
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ЗначенияДоступа КАК ПрофилиГруппДоступаЗначенияДоступа
	|					ПО (ПрофилиГруппДоступаВидыДоступа.Ссылка = ПрофилиГруппДоступаЗначенияДоступа.Ссылка)
	|						И (ПрофилиГруппДоступаВидыДоступа.ВидДоступа = ПрофилиГруппДоступаЗначенияДоступа.ВидДоступа)
	|			ГДЕ
	|				ПрофилиГруппДоступаВидыДоступа.Предустановленный) КАК ВидыИЗначенияДоступа
	|			ПО (ПрофилиПользователя.Профиль = ВидыИЗначенияДоступа.Профиль)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВидыОграниченийПрав КАК ВидыОграниченийПрав
	|			ПО (ВидыОграниченийПрав.Таблица = ПраваОМДРолей.Таблица)
	|				И (ВидыОграниченийПрав.Право = ""Изменение"")
	|				И (ВидыОграниченийПрав.ВидДоступа = ВидыИЗначенияДоступа.ВидДоступа)) КАК ПраваРолейПрофилейГруппДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СинонимыТаблиц КАК СинонимыТаблиц
	|		ПО ПраваРолейПрофилейГруппДоступа.Таблица = СинонимыТаблиц.Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ СинонимыРолей КАК СинонимыРолей
	|		ПО ПраваРолейПрофилейГруппДоступа.Роль = СинонимыРолей.Роль
	|ИТОГИ
	|	МАКСИМУМ(ПредставлениеВидаОбъектов),
	|	МАКСИМУМ(ПорядокВидаОбъектов),
	|	МАКСИМУМ(Таблица),
	|	МАКСИМУМ(ПредставлениеОбъекта),
	|	МАКСИМУМ(ПредставлениеПрофиля),
	|	МАКСИМУМ(ПредставлениеРоли),
	|	МАКСИМУМ(Добавление),
	|	МАКСИМУМ(Изменение),
	|	МАКСИМУМ(ДобавлениеБезОграничения),
	|	МАКСИМУМ(ИзменениеБезОграничения),
	|	МАКСИМУМ(ИнтерактивноеДобавление),
	|	МАКСИМУМ(Редактирование),
	|	МАКСИМУМ(ПредставлениеГруппыДоступа),
	|	МАКСИМУМ(ПредставлениеВидаДоступа),
	|	МАКСИМУМ(ДоступРазрешен)
	|ПО
	|	ВидОбъектов,
	|	Объект,
	|	Профиль,
	|	ВидРолей,
	|	Роль,
	|	ГруппаДоступа,
	|	ВидДоступа";
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Документ.НачатьАвтогруппировкуСтрок();
	
	Если ПодробныеСведенияОПравахДоступа Тогда
		// Вывод групп доступа.
		ОписанияГруппДоступа = РезультатыЗапроса[4].Выгрузить(
			ОбходРезультатаЗапроса.ПоГруппировкам).Строки;
		
		ОднаПерсональнаяГруппа
			= ОписанияГруппДоступа.Количество() = 1
			И ЗначениеЗаполнено(ОписанияГруппДоступа[0].Участник);
		
		Область = Макет.ПолучитьОбласть("ВсеГруппыДоступаГруппировка");
		Область.Параметры.Заполнить(Свойства);
		
		Область.Параметры.ПредставлениеДоступа = ?(
			ОднаПерсональнаяГруппа,
			НСтр("ru = 'Ограничения доступа'"),
			НСтр("ru = 'Группы доступа'"));
		
		Документ.Вывести(Область, 1);
		Документ.Вывести(ОбластьОтступ, 2);
		
		Для каждого ОписаниеГруппыДоступа Из ОписанияГруппДоступа Цикл
			Если НЕ ОднаПерсональнаяГруппа Тогда
				Область = Макет.ПолучитьОбласть("ГруппаДоступаГруппировка");
				Область.Параметры.Заполнить(ОписаниеГруппыДоступа);
				Документ.Вывести(Область, 2);
			КонецЕсли;
			// Вывод случаев участия в группе.
			Если ОписаниеГруппыДоступа.Строки.Количество() = 1
			   И ОписаниеГруппыДоступа.Строки[0].Участник = Ссылка Тогда
				// Пользователь входит в группу доступа только явно
				// поэтому вывод не требуется.
			Иначе
				Область = Макет.ПолучитьОбласть("ГруппаДоступаДеталиПользовательВходитВГруппу");
				Документ.Вывести(Область, 3);
				Если ОписаниеГруппыДоступа.Строки.Найти(Ссылка, "Участник") <> Неопределено Тогда
					Область = Макет.ПолучитьОбласть("ГруппаДоступаДеталиПользовательВходитВГруппуЯвно");
					Документ.Вывести(Область, 3);
				КонецЕсли;
				Отбор = Новый Структура("ГрупповоеУчастие, ПодчиненноеУчастие", Истина, Ложь);
				ОписанияГруппПользователей = ОписаниеГруппыДоступа.Строки.НайтиСтроки(Отбор);
				Если ОписанияГруппПользователей.Количество() > 0 Тогда
					
					Область = Макет.ПолучитьОбласть(
						"ГруппаДоступаДеталиПользовательВходитВГруппуКакУчастникГруппПользователей");
					
					Документ.Вывести(Область, 3);
					Для каждого ОписаниеГруппыПользователя ИЗ ОписанияГруппПользователей Цикл
						
						Область = Макет.ПолучитьОбласть(
							"ГруппаДоступаДеталиПользовательВходитВГруппаКакПредставлениеУчастника");
						
						Область.Параметры.Заполнить(ОписаниеГруппыПользователя);
						Документ.Вывести(Область, 3);
					КонецЦикла;
				КонецЕсли;
				Отбор = Новый Структура("ГрупповоеУчастие, ПодчиненноеУчастие", Ложь, Истина);
				ОписанияПодчиненныхПользователей = ОписаниеГруппыДоступа.Строки.НайтиСтроки(Отбор);
				Если ОписанияПодчиненныхПользователей.Количество() > 0 Тогда
					
					Область = Макет.ПолучитьОбласть(
						"ГруппаДоступаДеталиПользовательВходитВГруппуКакРуководитель");
					
					Документ.Вывести(Область, 3);
					Для каждого ОписаниеПодчиненногоПользователя ИЗ ОписанияПодчиненныхПользователей Цикл
						
						Область = Макет.ПолучитьОбласть(
							"ГруппаДоступаДеталиПользовательВходитВГруппаКакПредставлениеУчастника");
						
						Область.Параметры.Заполнить(ОписаниеПодчиненногоПользователя);
						Документ.Вывести(Область, 3);
					КонецЦикла;
				КонецЕсли;
				Отбор = Новый Структура("ГрупповоеУчастие, ПодчиненноеУчастие", Истина, Истина);
				ОписанияГруппПодчиненныхПользователей = ОписаниеГруппыДоступа.Строки.НайтиСтроки(Отбор);
				Если ОписанияГруппПодчиненныхПользователей.Количество() > 0 Тогда
					
					Область = Макет.ПолучитьОбласть(
						"ГруппаДоступаДеталиПользовательВходитВГруппуКакРуководительОдноИзУчастниковГруппыПользователей");
					
					Документ.Вывести(Область, 3);
					Для каждого ОписаниеГруппыПодчиненныхПользователей ИЗ ОписанияГруппПодчиненныхПользователей Цикл
						
						Область = Макет.ПолучитьОбласть(
							"ГруппаДоступаДеталиПользовательВходитВГруппаКакПредставлениеУчастника");
						
						Область.Параметры.Заполнить(ОписаниеГруппыПодчиненныхПользователей);
						Документ.Вывести(Область, 3);
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			
			Если НЕ ОднаПерсональнаяГруппа Тогда
				// Вывод профиля.
				Область = Макет.ПолучитьОбласть("ГруппаДоступаДеталиПрофиль");
				Область.Параметры.Заполнить(ОписаниеГруппыДоступа);
				Документ.Вывести(Область, 3);
			КонецЕсли;
			
			// Вывод администратора участников.
			Если НЕ ОднаПерсональнаяГруппа И ЗначениеЗаполнено(ОписаниеГруппыДоступа.Администратор) Тогда
				Область = Макет.ПолучитьОбласть("ГруппаДоступаДеталиАдминистратор");
				Область.Параметры.Заполнить(ОписаниеГруппыДоступа);
				Документ.Вывести(Область, 3);
			КонецЕсли;
			
			// Вывод описания.
			Если НЕ ОднаПерсональнаяГруппа И ЗначениеЗаполнено(ОписаниеГруппыДоступа.Описание) Тогда
				Область = Макет.ПолучитьОбласть("ГруппаДоступаДеталиОписание");
				Область.Параметры.Заполнить(ОписаниеГруппыДоступа);
				Документ.Вывести(Область, 3);
			КонецЕсли;
			
			Документ.Вывести(ОбластьОтступ, 3);
			Документ.Вывести(ОбластьОтступ, 3);
		КонецЦикла;
		
		// Вывод ролей по профилям.
		РолиПоПрофилям = РезультатыЗапроса[6].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
		РолиПоПрофилям.Строки.Сортировать("ПредставлениеПрофиля Возр, ПредставлениеРоли Возр");
		
		Если РолиПоПрофилям.Строки.Количество() > 0 Тогда
			Область = Макет.ПолучитьОбласть("РолиПоПрофилямГруппировка");
			Область.Параметры.Заполнить(Свойства);
			Документ.Вывести(Область, 1);
			Документ.Вывести(ОбластьОтступ, 2);
			
			Для каждого ОписаниеПрофиля Из РолиПоПрофилям.Строки Цикл
				Область = Макет.ПолучитьОбласть("РолиПоПрофилямПрофильПредставление");
				Область.Параметры.Заполнить(ОписаниеПрофиля);
				Документ.Вывести(Область, 2);
				Для каждого ОписаниеРоли Из ОписаниеПрофиля.Строки Цикл
					Область = Макет.ПолучитьОбласть("РолиПоПрофилямРольПредставление");
					Область.Параметры.Заполнить(ОписаниеРоли);
					Документ.Вывести(Область, 3);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		Документ.Вывести(ОбластьОтступ, 2);
		Документ.Вывести(ОбластьОтступ, 2);
	КонецЕсли;
	
	// Вывод объектов для просмотра.
	ПраваОбъектов = РезультатыЗапроса[9].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПраваОбъектов.Строки.Сортировать(
		"ПорядокВидаОбъектов Возр,
		|ПредставлениеОбъекта Возр,
		|ПредставлениеПрофиля Возр,
		|ВидРолей Возр,
		|ПредставлениеРоли Возр,
		|ПредставлениеГруппыДоступа Возр,
		|ПредставлениеВидаДоступа Возр,
		|ПредставлениеЗначенияДоступа Возр",
		Истина);
	
	Область = Макет.ПолучитьОбласть("ПраваОбъектовГруппировка");
	Область.Параметры.ПредставлениеГруппировкиПравОбъектов = НСтр("ru = 'Просмотр объектов'");
	Документ.Вывести(Область, 1);
	Область = Макет.ПолучитьОбласть("ПросмотрОбъековЛегенда");
	Документ.Вывести(Область, 2);
	
	Для каждого ОписаниеВидаОбъектов Из ПраваОбъектов.Строки Цикл
		Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаЗаголовок");
		Если УпрощенныйИнтерфейс Тогда
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = НСтр("ru = 'Профили'");
		Иначе
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = НСтр("ru = 'Группы доступа'");
		КонецЕсли;
		Область.Параметры.Заполнить(ОписаниеВидаОбъектов);
		Документ.Вывести(Область, 2);
		
		Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаЗаголовокДоп");
		Если ПодробныеСведенияОПравахДоступа Тогда
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = НСтр("ru = '(профиль, роли)'");
		Иначе
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = "";
		КонецЕсли;
		Область.Параметры.Заполнить(ОписаниеВидаОбъектов);
		Документ.Вывести(Область, 3);
		
		Для каждого ОписаниеОбъекта Из ОписаниеВидаОбъектов.Строки Цикл
			НачальнаяСтрокаОбластиОбъекта = Неопределено;
			КонечнаяСтрокаОбластиОбъекта  = Неопределено;
			Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрока");
			Область.Параметры.ОткрытьФормуСписка = "Открыть форму списка: " + ОписаниеОбъекта.Таблица;
			Область.Параметры.ПредставлениеОбъекта = ОписаниеОбъекта.ПредставлениеОбъекта
				+ "
				  |(" + НСтр("ru = 'просмотр'")
				+ ?(ОписаниеОбъекта.Просмотр,
					"",
					НСтр("ru = '*'") )
				+ ", "
				+ ?(ОписаниеОбъекта.ЧтениеБезОграничения,
					НСтр("ru = 'не ограничен'"),
					НСтр("ru = 'ограничен'") )
				+ ")";
			Для каждого ОписаниеПрофиля Из ОписаниеОбъекта.Строки Цикл
				ПредставлениеРолейПрофиля = "";
				КоличествоРолей = 0;
				ВсеРолиСОграничением = Истина;
				Для каждого ОписаниеВидаРолей Из ОписаниеПрофиля.Строки Цикл
					Если ОписаниеВидаРолей.ВидРолей < 1000 Тогда
						Если ПодробныеСведенияОПравахДоступа Тогда
							// Описание роли с/без ограничений.
							Для каждого ОписаниеРоли Из ОписаниеВидаРолей.Строки Цикл
								
								Если ОписаниеВидаРолей.Строки.Количество() > 1
								   И ОписаниеВидаРолей.Строки.Индекс(ОписаниеРоли)
								         < ОписаниеВидаРолей.Строки.Количество()-1 Тогда
									
									ПредставлениеРолейПрофиля
										= ПредставлениеРолейПрофиля
										+ ОписаниеРоли.ПредставлениеРоли + ",";
									
									КоличествоРолей = КоличествоРолей + 1;
								КонецЕсли;
								Если ОписаниеВидаРолей.ЧтениеБезОграничения Тогда
									ВсеРолиСОграничением = Ложь;
								КонецЕсли;
								
								Если ОписаниеВидаРолей.Строки.Индекс(ОписаниеРоли) =
								         ОписаниеВидаРолей.Строки.Количество()-1 Тогда
									
									ПредставлениеРолейПрофиля
										= ПредставлениеРолейПрофиля
										+ ОписаниеРоли.ПредставлениеРоли
										+ ",";
									
									КоличествоРолей = КоличествоРолей + 1;
								КонецЕсли;
								ПредставлениеРолейПрофиля = ПредставлениеРолейПрофиля + Символы.ПС;
							КонецЦикла;
						КонецЕсли;
					ИначеЕсли ОписаниеВидаРолей.Строки[0].Строки.Количество() > 0 Тогда
						// Описание ограничений доступа для ролей с ограничениями.
						Для каждого ОписаниеГруппыДоступа Из ОписаниеВидаРолей.Строки[0].Строки Цикл
							Индекс = ОписаниеГруппыДоступа.Строки.Количество()-1;
							Пока Индекс >= 0 Цикл
								Если НЕ ЗначениеЗаполнено(ОписаниеГруппыДоступа.Строки[Индекс].ВидДоступа) Тогда
									ОписаниеГруппыДоступа.Строки.Удалить(Индекс);
								КонецЕсли;
								Индекс = Индекс-1;
							КонецЦикла;
							НачальнаяСтрокаОбластиГруппыДоступа = Неопределено;
							Если Область = Неопределено Тогда
								Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрока");
							КонецЕсли;
							Если УпрощенныйИнтерфейс Тогда
								Область.Параметры.ПрофильИлиГруппаДоступа = ОписаниеПрофиля.ГруппаДоступа;
								
								Область.Параметры.ПредставлениеПрофиляИлиГруппыДоступа =
									ОписаниеПрофиля.ПредставлениеГруппыДоступа;
							Иначе
								Область.Параметры.ПрофильИлиГруппаДоступа = ОписаниеГруппыДоступа.ГруппаДоступа;
								Если ПодробныеСведенияОПравахДоступа Тогда
									ПредставлениеРолейПрофиля = СокрЛП(ПредставлениеРолейПрофиля);
									
									Если ЗначениеЗаполнено(ПредставлениеРолейПрофиля)
									   И Прав(ПредставлениеРолейПрофиля, 1) = "," Тогда
										
										ПредставлениеРолейПрофиля = Лев(
											ПредставлениеРолейПрофиля,
											СтрДлина(ПредставлениеРолейПрофиля) - 1);
									КонецЕсли;
									Область.Параметры.ПредставлениеПрофиляИлиГруппыДоступа
										= ОписаниеГруппыДоступа.ПредставлениеГруппыДоступа
										+ "
										  |("
										+ НСтр("ru = 'профиль'") + ": " + ОписаниеПрофиля.ПредставлениеПрофиля + ", "
										+ ?(КоличествоРолей > 1, НСтр("ru = 'роли'"), НСтр("ru = 'роль'")) + ":"
										+ "
										  |"
										+ СокрЛП(ПредставлениеРолейПрофиля) + ")";
								Иначе
									Область.Параметры.ПредставлениеПрофиляИлиГруппыДоступа =
										ОписаниеГруппыДоступа.ПредставлениеГруппыДоступа;
								КонецЕсли;
							КонецЕсли;
							Если ВсеРолиСОграничением Тогда
								Для каждого ОписаниеВидаДоступа Из ОписаниеГруппыДоступа.Строки Цикл
									Индекс = ОписаниеВидаДоступа.Строки.Количество()-1;
									Пока Индекс >= 0 Цикл
										Если НЕ ЗначениеЗаполнено(ОписаниеВидаДоступа.Строки[Индекс].ЗначениеДоступа) Тогда
											ОписаниеВидаДоступа.Строки.Удалить(Индекс);
										КонецЕсли;
										Индекс = Индекс-1;
									КонецЦикла;
									// Получение новой области, если вид доступа не первый
									Если Область = Неопределено Тогда
										Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрока");
									КонецЕсли;
									Область.Параметры.ВидДоступа = ОписаниеВидаДоступа.ВидДоступа;
									Если ОписаниеВидаДоступа.Строки.Количество() = 0 Тогда
										
										Область.Параметры.ПредставлениеВидаДоступа
											= ОписаниеВидаДоступа.ПредставлениеВидаДоступа
											+ " ("
											+ ?(ОписаниеВидаДоступа.ДоступРазрешен,
												   НСтр("ru = 'без запрещенных'"),
												   НСтр("ru = 'без разрешенных'"))
											+ ?(ОписаниеВидаДоступа.ВидДоступа = ПланыВидовХарактеристик.ВидыДоступа.Пользователи,
												НСтр("ru = ', текущий пользователь всегда разрешен'"),
												"")
											+ ?(ОписаниеВидаДоступа.ВидДоступа = ПланыВидовХарактеристик.ВидыДоступа.ВнешниеПользователи,
												НСтр("ru = ', текущий внешний пользователь всегда разрешен'"),
												"")
											+ ")";
									Иначе
										Область.Параметры.ПредставлениеВидаДоступа
											= ОписаниеВидаДоступа.ПредставлениеВидаДоступа
											+ " ("
											+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
													?(ОписаниеВидаДоступа.ДоступРазрешен,
													  НСтр("ru = 'запрешенные'"),
													  НСтр("ru = 'разрешенные'")),
													Свойства.ПредставлениеВидаОбъектаДоп)
											+ ?(ОписаниеВидаДоступа.ВидДоступа
												= ПланыВидовХарактеристик.ВидыДоступа.Пользователи,
												НСтр("ru = ', текущий пользователь всегда разрешен'"),
												"")
											+ ?(ОписаниеВидаДоступа.ВидДоступа
												= ПланыВидовХарактеристик.ВидыДоступа.ВнешниеПользователи,
												НСтр("ru = ', текущий внешний пользователь всегда разрешен'"),
												"")
											+ "):";
									КонецЕсли;
									
									ВывестиОбласть(
										Документ,
										Область,
										3,
										НачальнаяСтрокаОбластиОбъекта,
										КонечнаяСтрокаОбластиОбъекта,
										НачальнаяСтрокаОбластиГруппыДоступа);
									
									Для каждого ОписаниеЗначенияДоступа Из ОписаниеВидаДоступа.Строки Цикл
										Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрокаЗначенияДоступа");
										
										Область.Параметры.ПредставлениеЗначенияДоступа =
											ОписаниеЗначенияДоступа.ПредставлениеЗначенияДоступа;
										
										Область.Параметры.ЗначениеДоступа =
											ОписаниеЗначенияДоступа.ЗначениеДоступа;
										
										ВывестиОбласть(
											Документ,
											Область,
											3,
											НачальнаяСтрокаОбластиОбъекта,
											КонечнаяСтрокаОбластиОбъекта,
											НачальнаяСтрокаОбластиГруппыДоступа);
									КонецЦикла;
								КонецЦикла;
							КонецЕсли;
							Если Область <> Неопределено Тогда
								ВывестиОбласть(
									Документ,
									Область,
									3,
									НачальнаяСтрокаОбластиОбъекта,
									КонечнаяСтрокаОбластиОбъекта,
									НачальнаяСтрокаОбластиГруппыДоступа);
							КонецЕсли;
							// Установка границы видов доступа текущей группы доступа.
							УстановитьГраницыВидовИЗначенийДоступа(
								Документ,
								НачальнаяСтрокаОбластиГруппыДоступа,
								КонечнаяСтрокаОбластиОбъекта);
							// Объединение ячеек группы доступа и установка границы
							ОбъединитьЯчейкиУстановитьГраницы(
								Документ,
								НачальнаяСтрокаОбластиГруппыДоступа,
								КонечнаяСтрокаОбластиОбъекта,
								3);
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			// Объединение ячеек объектаи установка границы
			ОбъединитьЯчейкиУстановитьГраницы(
				Документ,
				НачальнаяСтрокаОбластиОбъекта,
				КонечнаяСтрокаОбластиОбъекта,
				2);
		КонецЦикла;
		Документ.Вывести(ОбластьОтступ, 3);
		Документ.Вывести(ОбластьОтступ, 3);
		Документ.Вывести(ОбластьОтступ, 3);
		Документ.Вывести(ОбластьОтступ, 3);
	КонецЦикла;
	Документ.Вывести(ОбластьОтступ, 2);
	Документ.Вывести(ОбластьОтступ, 2);
	
	// Вывод объектов для редактирования.
	ПраваОбъектов = РезультатыЗапроса[10].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ПраваОбъектов.Строки.Сортировать(
		"ПорядокВидаОбъектов Возр,
		|ПредставлениеОбъекта Возр,
		|ПредставлениеПрофиля Возр,
		|ВидРолей Возр,
		|ПредставлениеРоли Возр,
		|ПредставлениеГруппыДоступа Возр,
		|ПредставлениеВидаДоступа Возр,
		|ПредставлениеЗначенияДоступа Возр",
		Истина);
	
	Область = Макет.ПолучитьОбласть("ПраваОбъектовГруппировка");
	Область.Параметры.ПредставлениеГруппировкиПравОбъектов = НСтр("ru = 'Редактирование объектов'");
	Документ.Вывести(Область, 1);
	Область = Макет.ПолучитьОбласть("РедактированиеОбъековЛегенда");
	Документ.Вывести(Область, 2);
	
	Для каждого ОписаниеВидаОбъектов Из ПраваОбъектов.Строки Цикл
		Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаЗаголовок");
		Если УпрощенныйИнтерфейс Тогда
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = НСтр("ru = 'Профили'");
		Иначе
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = НСтр("ru = 'Группы доступа'");
		КонецЕсли;
		Область.Параметры.Заполнить(ОписаниеВидаОбъектов);
		Документ.Вывести(Область, 2);
		//
		Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаЗаголовокДоп");
		Если ПодробныеСведенияОПравахДоступа Тогда
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = НСтр("ru = '(профиль, роли)'");
		Иначе
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = "";
		КонецЕсли;
		Область.Параметры.Заполнить(ОписаниеВидаОбъектов);
		Документ.Вывести(Область, 3);

		ДобавлениеИспользуется =
			ВРег(Лев(ОписаниеВидаОбъектов.ВидОбъектов, СтрДлина("Регистр"))) <> ВРег("Регистр");
		
		Для каждого ОписаниеОбъекта Из ОписаниеВидаОбъектов.Строки Цикл
			НачальнаяСтрокаОбластиОбъекта = Неопределено;
			КонечнаяСтрокаОбластиОбъекта  = Неопределено;
			Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрока");
			Область.Параметры.ОткрытьФормуСписка = "Открыть форму списка: " + ОписаниеОбъекта.Таблица;
			Область.Параметры.ПредставлениеОбъекта = ОписаниеОбъекта.ПредставлениеОбъекта
				+ ?(НЕ ДобавлениеИспользуется,
					"",
					Символы.ПС + "("
					+ НСтр("ru = 'добавление'")
					+ ?(НЕ ОписаниеОбъекта.Добавление,
						" " + НСтр("ru = 'не доступно'"),
						?(ОписаниеОбъекта.ИнтерактивноеДобавление,
							"",
							НСтр("ru = '*'") )
						+ ", "
						+ ?(ОписаниеОбъекта.ДобавлениеБезОграничения,
							НСтр("ru = 'не ограничено'"),
							НСтр("ru = 'ограничено'") ) ) )
				+ Символы.ПС
				+ ?(ДобавлениеИспользуется, "", "(")
				+ НСтр("ru = 'изменение'")
				+ ?(НЕ ОписаниеОбъекта.Изменение,
					" " + НСтр("ru = 'не доступно'"),
					?(ОписаниеОбъекта.Редактирование,
						"",
						НСтр("ru = '*'"))
					+ ", "
					+ ?(ОписаниеОбъекта.ИзменениеБезОграничения,
						НСтр("ru = 'не ограничено'"),
						НСтр("ru = 'ограничено'") ))
				+ ")";
			Для каждого ОписаниеПрофиля Из ОписаниеОбъекта.Строки Цикл
				ПредставлениеРолейПрофиля = "";
				КоличествоРолей = 0;
				ВсеРолиСОграничением = Истина;
				Для каждого ОписаниеВидаРолей Из ОписаниеПрофиля.Строки Цикл
					Если ОписаниеВидаРолей.ВидРолей < 1000 Тогда
						// Описание роли с/без ограничений.
						Если ПодробныеСведенияОПравахДоступа Тогда
							Для каждого ОписаниеРоли Из ОписаниеВидаРолей.Строки Цикл
								
								Если ОписаниеВидаРолей.Строки.Количество() > 1
								   И ОписаниеВидаРолей.Строки.Индекс(ОписаниеРоли)
								         < ОписаниеВидаРолей.Строки.Количество()-1 Тогда
									
									ПредставлениеРолейПрофиля =
										ПредставлениеРолейПрофиля + ОписаниеРоли.ПредставлениеРоли + ",";
									
									КоличествоРолей = КоличествоРолей + 1;
								КонецЕсли;
								
								Если ОписаниеВидаРолей.ДобавлениеБезОграничения
								   И ОписаниеВидаРолей.ИзменениеБезОграничения Тогда
									
									ВсеРолиСОграничением = Ложь;
								КонецЕсли;
								
								Если ОписаниеВидаРолей.Строки.Индекс(ОписаниеРоли) =
								         ОписаниеВидаРолей.Строки.Количество()-1 Тогда
									
									ПредставлениеРолейПрофиля =
										ПредставлениеРолейПрофиля + ОписаниеРоли.ПредставлениеРоли + ",";
									
									КоличествоРолей = КоличествоРолей + 1;
								КонецЕсли;
								ПредставлениеРолейПрофиля = ПредставлениеРолейПрофиля + Символы.ПС;
							КонецЦикла;
						КонецЕсли;
					ИначеЕсли ОписаниеВидаРолей.Строки[0].Строки.Количество() > 0 Тогда
						// Описание ограничений доступа для ролей с ограничениями.
						Для каждого ОписаниеГруппыДоступа Из ОписаниеВидаРолей.Строки[0].Строки Цикл
							Индекс = ОписаниеГруппыДоступа.Строки.Количество()-1;
							Пока Индекс >= 0 Цикл
								Если НЕ ЗначениеЗаполнено(ОписаниеГруппыДоступа.Строки[Индекс].ВидДоступа) Тогда
									ОписаниеГруппыДоступа.Строки.Удалить(Индекс);
								КонецЕсли;
								Индекс = Индекс-1;
							КонецЦикла;
							НачальнаяСтрокаОбластиГруппыДоступа = Неопределено;
							Если Область = Неопределено Тогда
								Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрока");
							КонецЕсли;
							Если УпрощенныйИнтерфейс Тогда
								Область.Параметры.ПрофильИлиГруппаДоступа = ОписаниеПрофиля.ГруппаДоступа;
								Область.Параметры.ПредставлениеПрофиляИлиГруппыДоступа = ОписаниеПрофиля.ПредставлениеГруппыДоступа;
							Иначе
								Область.Параметры.ПрофильИлиГруппаДоступа = ОписаниеГруппыДоступа.ГруппаДоступа;
								Если ПодробныеСведенияОПравахДоступа Тогда
									ПредставлениеРолейПрофиля = СокрЛП(ПредставлениеРолейПрофиля);
									
									Если ЗначениеЗаполнено(ПредставлениеРолейПрофиля)
									   И Прав(ПредставлениеРолейПрофиля, 1) = "," Тогда
										
										ПредставлениеРолейПрофиля = Лев(
											ПредставлениеРолейПрофиля,
											СтрДлина(ПредставлениеРолейПрофиля)-1);
									КонецЕсли;
									Область.Параметры.ПредставлениеПрофиляИлиГруппыДоступа
										= ОписаниеГруппыДоступа.ПредставлениеГруппыДоступа
										+ "
										  |("
										+ НСтр("ru = 'профиль'") + ": " + ОписаниеПрофиля.ПредставлениеПрофиля + ", "
										+ ?(КоличествоРолей > 1, НСтр("ru = 'роли'"), НСтр("ru = 'роль'")) + ":"
										+ "
										  |"
										+ СокрЛП(ПредставлениеРолейПрофиля) + ")";
								Иначе
									Область.Параметры.ПредставлениеПрофиляИлиГруппыДоступа =
										ОписаниеГруппыДоступа.ПредставлениеГруппыДоступа;
								КонецЕсли;
							КонецЕсли;
							Если ВсеРолиСОграничением Тогда
								Для каждого ОписаниеВидаДоступа Из ОписаниеГруппыДоступа.Строки Цикл
									Индекс = ОписаниеВидаДоступа.Строки.Количество()-1;
									Пока Индекс >= 0 Цикл
										Если НЕ ЗначениеЗаполнено(ОписаниеВидаДоступа.Строки[Индекс].ЗначениеДоступа) Тогда
											ОписаниеВидаДоступа.Строки.Удалить(Индекс);
										КонецЕсли;
										Индекс = Индекс-1;
									КонецЦикла;
									Индекс = ОписаниеВидаДоступа.Строки.Количество()-1;
									Пока Индекс >= 0 Цикл
										Если НЕ ЗначениеЗаполнено(ОписаниеВидаДоступа.Строки[Индекс].ЗначениеДоступа) Тогда
											ОписаниеВидаДоступа.Строки.Удалить(Индекс);
										КонецЕсли;
										Индекс = Индекс-1;
									КонецЦикла;
									// Получение новой области, если вид доступа не первый
									Если Область = Неопределено Тогда
										Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрока");
									КонецЕсли;
									Область.Параметры.ВидДоступа = ОписаниеВидаДоступа.ВидДоступа;
									Если ОписаниеВидаДоступа.Строки.Количество() = 0 Тогда
										
										Область.Параметры.ПредставлениеВидаДоступа
											= ОписаниеВидаДоступа.ПредставлениеВидаДоступа
											+ " ("
											+ ?(ОписаниеВидаДоступа.ДоступРазрешен,
												   НСтр("ru = 'без запрещенных'"),
												   НСтр("ru = 'без разрешенных'"))
											+ ?(ОписаниеВидаДоступа.ВидДоступа = ПланыВидовХарактеристик.ВидыДоступа.Пользователи,
												НСтр("ru = ', текущий пользователь всегда разрешен'"),
												"")
											+ ?(ОписаниеВидаДоступа.ВидДоступа = ПланыВидовХарактеристик.ВидыДоступа.ВнешниеПользователи,
												НСтр("ru = ', текущий внешний пользователь всегда разрешен'"),
												"")
											+ ")";
									Иначе
										Область.Параметры.ПредставлениеВидаДоступа
											= ОписаниеВидаДоступа.ПредставлениеВидаДоступа
											+ " ("
											+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
													?(ОписаниеВидаДоступа.ДоступРазрешен,
													  НСтр("ru = 'запрешенные'"),
													  НСтр("ru = 'разрешенные'")),
													Свойства.ПредставлениеВидаОбъектаДоп)
											+ ?(ОписаниеВидаДоступа.ВидДоступа = ПланыВидовХарактеристик.ВидыДоступа.Пользователи,
												НСтр("ru = ', текущий пользователь всегда разрешен'"),
												"")
											+ ?(ОписаниеВидаДоступа.ВидДоступа = ПланыВидовХарактеристик.ВидыДоступа.ВнешниеПользователи,
												НСтр("ru = ', текущий внешний пользователь всегда разрешен'"),
												"")
											+ "):";
									КонецЕсли;
									
									ВывестиОбласть(
										Документ,
										Область,
										3,
										НачальнаяСтрокаОбластиОбъекта,
										КонечнаяСтрокаОбластиОбъекта,
										НачальнаяСтрокаОбластиГруппыДоступа);
									
									Для каждого ОписаниеЗначенияДоступа Из ОписаниеВидаДоступа.Строки Цикл
										Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрокаЗначенияДоступа");
										
										Область.Параметры.ПредставлениеЗначенияДоступа =
											ОписаниеЗначенияДоступа.ПредставлениеЗначенияДоступа;
										
										Область.Параметры.ЗначениеДоступа =
											ОписаниеЗначенияДоступа.ЗначениеДоступа;
										
										ВывестиОбласть(
											Документ,
											Область,
											3,
											НачальнаяСтрокаОбластиОбъекта,
											КонечнаяСтрокаОбластиОбъекта,
											НачальнаяСтрокаОбластиГруппыДоступа);
									КонецЦикла;
								КонецЦикла;
							КонецЕсли;
							Если Область <> Неопределено Тогда
								ВывестиОбласть(
									Документ,
									Область,
									3,
									НачальнаяСтрокаОбластиОбъекта,
									КонечнаяСтрокаОбластиОбъекта,
									НачальнаяСтрокаОбластиГруппыДоступа);
							КонецЕсли;
							// Установка границы видов доступа текущей группы доступа.
							УстановитьГраницыВидовИЗначенийДоступа(
								Документ,
								НачальнаяСтрокаОбластиГруппыДоступа,
								КонечнаяСтрокаОбластиОбъекта);
							
							// Объединение ячеек группы доступа и установка границы.
							ОбъединитьЯчейкиУстановитьГраницы(
								Документ,
								НачальнаяСтрокаОбластиГруппыДоступа,
								КонечнаяСтрокаОбластиОбъекта,
								3);
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			// Объединение ячеек объекта и установка границы.
			ОбъединитьЯчейкиУстановитьГраницы(
				Документ,
				НачальнаяСтрокаОбластиОбъекта,
				КонечнаяСтрокаОбластиОбъекта,
				2);
		КонецЦикла;
		Документ.Вывести(ОбластьОтступ, 3);
		Документ.Вывести(ОбластьОтступ, 3);
		Документ.Вывести(ОбластьОтступ, 3);
		Документ.Вывести(ОбластьОтступ, 3);
	КонецЦикла;
	Документ.Вывести(ОбластьОтступ, 2);
	Документ.Вывести(ОбластьОтступ, 2);
	
	// Вывод прав на объекты
	ПраваПоЗначениям = РезультатыЗапроса[7].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ПраваПоЗначениям.Колонки.Добавить("ТипЗначенияПолноеИмя");
	ПраваПоЗначениям.Колонки.Добавить("ПредставлениеВидаОбъектов");
	ПраваПоЗначениям.Колонки.Добавить("ПолноеНаименование");
	
	Для каждого ОписаниеТипаЗначений Из ПраваПоЗначениям.Строки Цикл
		МетаданныеТипа = Метаданные.НайтиПоТипу(ОписаниеТипаЗначений.ТипЗначений);
		ОписаниеТипаЗначений.ТипЗначенияПолноеИмя      = МетаданныеТипа.ПолноеИмя();
		ОписаниеТипаЗначений.ПредставлениеВидаОбъектов = МетаданныеТипа.Представление();
	КонецЦикла;
	ПраваПоЗначениям.Строки.Сортировать("ПредставлениеВидаОбъектов Возр");
	
	Для каждого ОписаниеТипаЗначений Из ПраваПоЗначениям.Строки Цикл
		
		ПраваПоЗначению = УправлениеДоступомСлужебный.ВозможныеПраваПоЗначениюДоступа(
			ОписаниеТипаЗначений.ТипЗначенияПолноеИмя);
		
		Для каждого ОписаниеОбъекта Из ОписаниеТипаЗначений.Строки Цикл
			ОписаниеОбъекта.ПолноеНаименование = ОписаниеОбъекта.ЗначениеДоступа.ПолноеНаименование();
		КонецЦикла;
		ОписаниеТипаЗначений.Строки.Сортировать("ПолноеНаименование Возр");
		
		Область = Макет.ПолучитьОбласть("ПраваПоЗначениямГруппировка");
		Область.Параметры.Заполнить(ОписаниеТипаЗначений);
		Документ.Вывести(Область, 1);
		
		// Вывод легенды
		Область = Макет.ПолучитьОбласть("ПраваПоЗначениямЛегендаШапка");
		Документ.Вывести(Область, 2);
		Для каждого ОписаниеПрава ИЗ ПраваПоЗначению Цикл
			Область = Макет.ПолучитьОбласть("ПраваПоЗначениямЛегендаСтрока");
			Область.Параметры.Заполнить(ОписаниеПрава);
			Если НЕ ЗначениеЗаполнено(ОписаниеПрава.Заголовок) Тогда
				Область.Параметры.Заголовок = ОписаниеПрава.Сокращение;
			КонецЕсли;
			Документ.Вывести(Область, 2);
		КонецЦикла;
		Документ.Вывести(ОбластьОтступ, 2);
		
		// Подготовка макета строки
		МакетШапки  = Новый ТабличныйДокумент;
		МакетСтроки = Новый ТабличныйДокумент;
		Для Индекс = 1 По ПраваПоЗначению.Количество() + ?(ВыводПравГруппы, 2, 3) Цикл
			НоваяЯчейкаШапки  = Макет.ПолучитьОбласть("ПраваПоЗначениямДеталиЯчейкаШапки");
			МакетШапки.Присоединить(НоваяЯчейкаШапки);
			НоваяЯчейкаСтроки = Макет.ПолучитьОбласть("ПраваПоЗначениямДеталиЯчейкаСтроки");
			МакетСтроки.Присоединить(НоваяЯчейкаСтроки);
		КонецЦикла;
		
		// Вывод шапки таблицы
		МакетШапки.Область("R1C1").Текст = НСтр("ru = 'Расп'");
		МакетШапки.Область("R1C1").ШиринаКолонки = 6;
		МакетШапки.Область("R1C2").Текст = НСтр("ru = 'Тип прав'");
		МакетШапки.Область("R1C2").ШиринаКолонки = 12;
		ТекущийНомерОбласти = 3;
		Для каждого ОписаниеПрава ИЗ ПраваПоЗначению Цикл
			НомерЯчейки = "R1C" + Формат(ТекущийНомерОбласти, "ЧГ=");
			Если ЗначениеЗаполнено(ОписаниеПрава.Заголовок) Тогда
				МакетШапки.Область(НомерЯчейки).Текст = ОписаниеПрава.Заголовок;
			Иначе
				МакетШапки.Область(НомерЯчейки).Текст = ОписаниеПрава.Сокращение;
			КонецЕсли;
			МакетШапки.Область(НомерЯчейки).ШиринаКолонки = 6;
			ТекущийНомерОбласти = ТекущийНомерОбласти + 1;
			//
			МакетСтроки.Область(НомерЯчейки).ШиринаКолонки = 6;
		КонецЦикла;
		Если НЕ ВыводПравГруппы Тогда
			НомерЯчейки = "R1C" + Формат(ТекущийНомерОбласти, "ЧГ=");
			МакетШапки.Область(НомерЯчейки).Текст = НСтр("ru = 'Настрока прав от'");
			МакетШапки.Область(НомерЯчейки).ШиринаКолонки = 40;
		КонецЕсли;
		Документ.Вывести(МакетШапки, 2);
		
		// Вывод строк таблицы
		Для каждого ОписаниеОбъекта Из ОписаниеТипаЗначений.Строки Цикл
			Область = Макет.ПолучитьОбласть("ПраваПоЗначениямДеталиОбъект");
			Область.Параметры.Заполнить(ОписаниеОбъекта);
			Документ.Вывести(Область, 2);
			
			МакетСтроки.Область("R1C1").Текст = ?(
				ОписаниеОбъекта.РаспространяетсяВИерархии, "+", "");
			
			МакетСтроки.Область("R1C1").ШиринаКолонки = 6;
			
			МакетСтроки.Область("R1C2").Текст = ?(
				ОписаниеОбъекта.Запрещено,
				НСтр("ru = 'Запрещено'"),
				НСтр("ru = 'Разрешено'"));
			
			МакетСтроки.Область("R1C2").ШиринаКолонки = 12;
			
			Для НомерОбластиПрава = 3 По ПраваПоЗначению.Количество() + 2 Цикл
				НомерЯчейки = "R1C" + Формат(НомерОбластиПрава, "ЧГ=");
				МакетСтроки.Область(НомерЯчейки).Текст = "";
			КонецЦикла;
			Для каждого ОписаниеПрава ИЗ ОписаниеОбъекта.Строки Цикл
				ПравоПоЗначению = ПраваПоЗначению.Найти(ОписаниеПрава.Право, "Имя");
				Если ПравоПоЗначению <> Неопределено Тогда
					НомерОбластиПрава = ПраваПоЗначению.Индекс(ПравоПоЗначению) + 3;
					НомерЯчейки = "R1C" + Формат(НомерОбластиПрава, "ЧГ=");
					МакетСтроки.Область(НомерЯчейки).Текст = "+";
				КонецЕсли;
			КонецЦикла;
			НомерЯчейки = "R1C" + Формат(ПраваПоЗначению.Количество() + 3, "ЧГ=");
			Если НЕ ВыводПравГруппы Тогда
				Если ОписаниеОбъекта.ГрупповоеУчастие И НЕ ОписаниеОбъекта.ПодчиненноеУчастие Тогда
					
					МакетСтроки.Область(НомерЯчейки).Текст =
						ОписаниеПрава.ПользовательНаименование + " (" + НСтр("ru = 'группа'") + ")";
					
				ИначеЕсли ОписаниеОбъекта.ГрупповоеУчастие И ОписаниеОбъекта.ПодчиненноеУчастие Тогда
					
					МакетСтроки.Область(НомерЯчейки).Текст =
						ОписаниеПрава.ПользовательНаименование + " (" + НСтр("ru = 'группа подчиненного'") + ")";
					
				ИначеЕсли НЕ ОписаниеОбъекта.ГрупповоеУчастие И ОписаниеОбъекта.ПодчиненноеУчастие Тогда
					МакетСтроки.Область(НомерЯчейки).Текст =
						ОписаниеПрава.ПользовательНаименование + " (" + НСтр("ru = 'подчиненный'") + ")";;
				КонецЕсли;
			КонецЕсли;
			МакетСтроки.Область(НомерЯчейки).ШиринаКолонки = 40;
			Документ.Вывести(МакетСтроки, 2);
		КонецЦикла;
	КонецЦикла;
	
	Документ.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры

&НаСервере
Процедура ВывестиОбласть(Знач Документ,
                         Область,
                         Уровень,
                         НачальнаяСтрокаОбластиОбъекта,
                         КонечнаяСтрокаОбластиОбъекта,
                         НачальнаяСтрокаОбластиГруппыДоступа)
	
	Если НачальнаяСтрокаОбластиОбъекта = Неопределено Тогда
		НачальнаяСтрокаОбластиОбъекта = Документ.Вывести(Область, Уровень);
		КонечнаяСтрокаОбластиОбъекта        = НачальнаяСтрокаОбластиОбъекта;
	Иначе
		КонечнаяСтрокаОбластиОбъекта = Документ.Вывести(Область);
	КонецЕсли;
	
	Если НачальнаяСтрокаОбластиГруппыДоступа = Неопределено Тогда
		НачальнаяСтрокаОбластиГруппыДоступа = КонечнаяСтрокаОбластиОбъекта;
	КонецЕсли;
	
	Область = Неопределено;
	
КонецПроцедуры

&НаСервере
Процедура ОбъединитьЯчейкиУстановитьГраницы(Знач Документ,
                                            Знач НачальнаяСтрокаОбласти,
                                            Знач КонечнаяСтрокаОбласти,
                                            Знач НомерКолонки)
	
	Область = Документ.Область(
		НачальнаяСтрокаОбласти.Верх,
		НомерКолонки,
		КонечнаяСтрокаОбласти.Низ,
		НомерКолонки);
	
	Область.Объединить();
	
	ЛинияГраницы = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Точечная);
	
	Область.ГраницаСверху = ЛинияГраницы;
	Область.ГраницаСнизу  = ЛинияГраницы;
	
КонецПроцедуры
	
&НаСервере
Процедура УстановитьГраницыВидовИЗначенийДоступа(Знач Документ,
                                                 Знач НачальнаяСтрокаОбластиГруппыДоступа,
                                                 Знач КонечнаяСтрокаОбластиОбъекта)
	
	ЛинияГраницы = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Точечная);
	
	Область = Документ.Область(
		НачальнаяСтрокаОбластиГруппыДоступа.Верх,
		4,
		НачальнаяСтрокаОбластиГруппыДоступа.Верх,
		5);
	
	Область.ГраницаСверху = ЛинияГраницы;
	
	Область = Документ.Область(
		КонечнаяСтрокаОбластиОбъекта.Низ,
		4,
		КонечнаяСтрокаОбластиОбъекта.Низ,
		5);
	
	Область.ГраницаСнизу = ЛинияГраницы;
	
КонецПроцедуры

&НаСервере
Функция ПредставлениеРежимаЗапуска(РежимЗапуска)
	
	Если РежимЗапуска = "Авто" Тогда
		ПредставлениеРежимаЗапуска = НСтр("ru = 'Авто'");
		
	ИначеЕсли РежимЗапуска = "ОбычноеПриложение" Тогда
		ПредставлениеРежимаЗапуска = НСтр("ru = 'Обычное приложение'");
		
	ИначеЕсли РежимЗапуска = "УправляемоеПриложение" Тогда
		ПредставлениеРежимаЗапуска = НСтр("ru = 'Управляемое приложение'");
	Иначе
		ПредставлениеРежимаЗапуска = "";
	КонецЕсли;
	
	Возврат ПредставлениеРежимаЗапуска;
	
КонецФункции

&НаСервере
Функция ПредставлениеЯзыка(Язык)
	
	ПредставлениеЯзыка = "";
	
	Для каждого МетаданныеЯзыка ИЗ Метаданные.Языки Цикл
	
		Если МетаданныеЯзыка.Имя = Язык Тогда
			ПредставлениеЯзыка = МетаданныеЯзыка.Синоним;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПредставлениеЯзыка;
	
КонецФункции

// Функция ВидыОграниченийПравОбъектовМетаданных возвращает
// таблицу значений, содержащую вид ограничений доступа
// по каждому праву объектов метаданных.
//  Если записи по праву нет, значит ограничений по праву нет.
//
// Возвращаемое значение:
//  ТаблицаЗначений:
//    ВидДоступа - ПланВидовХарактеристикСсылка.ВидыДоступа
//    Таблица    - Строка - имя таблицы объекта метаданных, например, Справочник.Контрагенты
//    Право      - Строка: "Чтение", "Добавление", "Изменение", "Удаление"
//
&НаСервере
Функция ВидыОграниченийПравОбъектовМетаданных()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр(
		"ПостоянныеВидыОграничений",
		УправлениеДоступомСлужебныйПовтИсп.ПостоянныеВидыОграниченийПравОбъектовМетаданных());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПостоянныеВидыОграничений.Таблица,
	|	ПостоянныеВидыОграничений.Право,
	|	ПостоянныеВидыОграничений.ВидДоступа,
	|	ПостоянныеВидыОграничений.ТаблицаОбъекта
	|ПОМЕСТИТЬ ПостоянныеВидыОграничений
	|ИЗ
	|	&ПостоянныеВидыОграничений КАК ПостоянныеВидыОграничений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПостоянныеВидыОграничений.Таблица,
	|	""Чтение"" КАК Право,
	|	НаборыЗначенийДоступа.ВидДоступа
	|ПОМЕСТИТЬ ПеременныеВидыОграничений
	|ИЗ
	|	РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначенийДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылок
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПостоянныеВидыОграничений КАК ПостоянныеВидыОграничений
	|			ПО ТипыСсылок.Таблица = ПостоянныеВидыОграничений.ТаблицаОбъекта
	|				И (ПостоянныеВидыОграничений.Право = ""Чтение"")
	|				И (ПостоянныеВидыОграничений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка))
	|		ПО (ТИПЗНАЧЕНИЯ(НаборыЗначенийДоступа.Объект) = ТИПЗНАЧЕНИЯ(ТипыСсылок.ТипТаблицы))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Наборы.Объект КАК Объект,
	|			Наборы.НомерНабора КАК НомерНабора
	|		ИЗ
	|			РегистрСведений.НаборыЗначенийДоступа КАК Наборы
	|		ГДЕ
	|			Наборы.Чтение) КАК НомераНаборовПрава
	|		ПО НаборыЗначенийДоступа.Объект = НомераНаборовПрава.Объект
	|			И НаборыЗначенийДоступа.НомерНабора = НомераНаборовПрава.НомерНабора
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПостоянныеВидыОграничений.Таблица,
	|	""Добавление"",
	|	НаборыЗначенийДоступа.ВидДоступа
	|ИЗ
	|	РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначенийДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылок
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПостоянныеВидыОграничений КАК ПостоянныеВидыОграничений
	|			ПО ТипыСсылок.Таблица = ПостоянныеВидыОграничений.ТаблицаОбъекта
	|				И (ПостоянныеВидыОграничений.Право = ""Добавление"")
	|				И (ПостоянныеВидыОграничений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка))
	|		ПО (ТИПЗНАЧЕНИЯ(НаборыЗначенийДоступа.Объект) = ТИПЗНАЧЕНИЯ(ТипыСсылок.ТипТаблицы))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Наборы.Объект КАК Объект,
	|			Наборы.НомерНабора КАК НомерНабора
	|		ИЗ
	|			РегистрСведений.НаборыЗначенийДоступа КАК Наборы
	|		ГДЕ
	|			Наборы.Добавление) КАК НомераНаборовПрава
	|		ПО НаборыЗначенийДоступа.Объект = НомераНаборовПрава.Объект
	|			И НаборыЗначенийДоступа.НомерНабора = НомераНаборовПрава.НомерНабора
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПостоянныеВидыОграничений.Таблица,
	|	""Изменение"",
	|	НаборыЗначенийДоступа.ВидДоступа
	|ИЗ
	|	РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначенийДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылок
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПостоянныеВидыОграничений КАК ПостоянныеВидыОграничений
	|			ПО ТипыСсылок.Таблица = ПостоянныеВидыОграничений.ТаблицаОбъекта
	|				И (ПостоянныеВидыОграничений.Право = ""Изменение"")
	|				И (ПостоянныеВидыОграничений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка))
	|		ПО (ТИПЗНАЧЕНИЯ(НаборыЗначенийДоступа.Объект) = ТИПЗНАЧЕНИЯ(ТипыСсылок.ТипТаблицы))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Наборы.Объект КАК Объект,
	|			Наборы.НомерНабора КАК НомерНабора
	|		ИЗ
	|			РегистрСведений.НаборыЗначенийДоступа КАК Наборы
	|		ГДЕ
	|			Наборы.Изменение) КАК НомераНаборовПрава
	|		ПО НаборыЗначенийДоступа.Объект = НомераНаборовПрава.Объект
	|			И НаборыЗначенийДоступа.НомерНабора = НомераНаборовПрава.НомерНабора
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПостоянныеВидыОграничений.Таблица,
	|	""Удаление"",
	|	НаборыЗначенийДоступа.ВидДоступа
	|ИЗ
	|	РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначенийДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылок
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПостоянныеВидыОграничений КАК ПостоянныеВидыОграничений
	|			ПО ТипыСсылок.Таблица = ПостоянныеВидыОграничений.ТаблицаОбъекта
	|				И (ПостоянныеВидыОграничений.Право = ""Удаление"")
	|				И (ПостоянныеВидыОграничений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка))
	|		ПО (ТИПЗНАЧЕНИЯ(НаборыЗначенийДоступа.Объект) = ТИПЗНАЧЕНИЯ(ТипыСсылок.ТипТаблицы))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Наборы.Объект КАК Объект,
	|			Наборы.НомерНабора КАК НомерНабора
	|		ИЗ
	|			РегистрСведений.НаборыЗначенийДоступа КАК Наборы
	|		ГДЕ
	|			Наборы.Удаление) КАК НомераНаборовПрава
	|		ПО НаборыЗначенийДоступа.Объект = НомераНаборовПрава.Объект
	|			И НаборыЗначенийДоступа.НомерНабора = НомераНаборовПрава.НомерНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПостоянныеВидыОграничений.Таблица,
	|	ПостоянныеВидыОграничений.Право,
	|	ПостоянныеВидыОграничений.ВидДоступа
	|ИЗ
	|	ПостоянныеВидыОграничений КАК ПостоянныеВидыОграничений
	|ГДЕ
	|	ПостоянныеВидыОграничений.ВидДоступа <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПеременныеВидыОграничений.Таблица,
	|	ПеременныеВидыОграничений.Право,
	|	ПеременныеВидыОграничений.ВидДоступа
	|ИЗ
	|	ПеременныеВидыОграничений КАК ПеременныеВидыОграничений
	|ГДЕ
	|	ПеременныеВидыОграничений.ВидДоступа <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
	|	И ПеременныеВидыОграничений.ВидДоступа <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
	|	И ПеременныеВидыОграничений.ВидДоступа <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
	|	И ПеременныеВидыОграничений.ВидДоступа <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
