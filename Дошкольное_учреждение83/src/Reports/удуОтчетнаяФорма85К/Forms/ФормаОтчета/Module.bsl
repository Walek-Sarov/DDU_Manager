&НаСервере
Процедура ЗаполнитьПараметрыСтраницы1(НаборПараметровСтраницы)
	НаборПараметровСтраницы.ПараметрПериод = "за " + Формат(Отчет.ДатаФормирования, "ДФ='yyyy ""год""'");
	НаборПараметровСтраницы.НаименованиеОрганизации = СокрЛП(Отчет.Учреждение.ПолноеНаименование);
	
	НайденнаяСтрокаАдреса = Отчет.Учреждение.КонтактнаяИнформация.Найти(Справочники.ВидыКонтактнойИнформации.ФактическийАдресУчреждения);
	Если НайденнаяСтрокаАдреса = Неопределено Тогда
		НайденнаяСтрокаАдреса = Отчет.Учреждение.КонтактнаяИнформация.Найти(Справочники.ВидыКонтактнойИнформации.ЮридическийАдресУчреждения);
	КонецЕсли;
	
	Если НайденнаяСтрокаАдреса <> Неопределено Тогда
		НаборПараметровСтраницы.ПочтовыйАдрес = СокрЛП(НайденнаяСтрокаАдреса.Представление);
	КонецЕсли;
	                                     
	НаборПараметровСтраницы.КодОКПО = СокрЛП(Отчет.Учреждение.ОКПО);
	НаборПараметровСтраницы.НомерДОУ = СокрЛП(Отчет.Учреждение.Код);
	НаборПараметровСтраницы.РежимРаботы = ?(Отчет.Учреждение.РежимРаботыДОУ = Перечисления.удуРежимРаботыДОУ.Пятидневный, "1", "2");
	НаборПараметровСтраницы.КодПрофиля = СокрЛП(Отчет.Учреждение.КодПрофиляУчреждения);
	НаборПараметровСтраницы.КапитальныйРемонт = ?(Отчет.Учреждение.НаходитсяНаКапитальномРемонте, "1", "");
	
	ОтборПоУчреждению = Новый Структура;
	ОтборПоУчреждению.Вставить("Учреждение", Отчет.Учреждение);
	СведенияОбАккредитации = РегистрыСведений.удуСведенияОбАккредитации.ПолучитьПоследнее(Отчет.ДатаФормирования, ОтборПоУчреждению);
	НаборПараметровСтраницы.КатегорияАккредитации = СокрЛП(СведенияОбАккредитации.КатегорияАккредитации);
	
	Если НайденнаяСтрокаАдреса <> Неопределено Тогда
		НаборПараметровСтраницы.КодГородаПоселка = ?(ЗначениеЗаполнено(НайденнаяСтрокаАдреса.Город), "1", "2");	
	Иначе
		НаборПараметровСтраницы.КодГородаПоселка = "";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСтраницы2(НаборПараметровСтраницы)
	НаборПараметровСтраницы.ДОУ = ?(Отчет.Учреждение.ТипУчреждения = Перечисления.удуТипУчреждения.ДОУ, "1", "0");
	НаборПараметровСтраницы.ОУ = ?(Отчет.Учреждение.ТипУчреждения = Перечисления.удуТипУчреждения.ОУ, "1", "0");	
	
	НаборПараметровСтраницы.ДетскийСад = ?(Отчет.Учреждение.ВидУчреждения = Перечисления.удуВидыДошкольногоУчреждения.ДетскийСад, "1", "0");
	НаборПараметровСтраницы.ДетскийСадКомбинированногоВида = ?(Отчет.Учреждение.ВидУчреждения = Перечисления.удуВидыДошкольногоУчреждения.ДетскийСадКомбинированногоВида, "1", "0");
	НаборПараметровСтраницы.ДетскийСадКомпенсирующегоВида = ?(Отчет.Учреждение.ВидУчреждения = Перечисления.удуВидыДошкольногоУчреждения.ДетскийСадКомпенсирующегоВида, "1", "0");
	НаборПараметровСтраницы.ДетскийСадОбщеразвивающегоВида = ?(Отчет.Учреждение.ВидУчреждения = Перечисления.удуВидыДошкольногоУчреждения.ДетскийСадОбщеразвивающегоВида, "1", "0");
	НаборПараметровСтраницы.ДетскийСадПредшкольногоВозраста = ?(Отчет.Учреждение.ВидУчреждения = Перечисления.удуВидыДошкольногоУчреждения.ДетскийСадПредшкольногоВозраста, "1", "0");
	НаборПараметровСтраницы.ДетскийСадПрисмотраОздоровления = ?(Отчет.Учреждение.ВидУчреждения = Перечисления.удуВидыДошкольногоУчреждения.ДетскийСадПрисмотраОздоровления, "1", "0");
	НаборПараметровСтраницы.ДетскийСадРаннегоВозраста = ?(Отчет.Учреждение.ВидУчреждения = Перечисления.удуВидыДошкольногоУчреждения.ДетскийСадРаннегоВозраста, "1", "0");
	НаборПараметровСтраницы.ЦентрРазвитияРебенка = ?(Отчет.Учреждение.ВидУчреждения = Перечисления.удуВидыДошкольногоУчреждения.ЦентрРазвитияРебенка, "1", "0");
		
	НаборПараметровСтраницы.ПодразделенияДошкольногоОбразования = ?(Отчет.Учреждение.ОрганизационнаяСтруктура = Перечисления.удуОрганизационнаяСтруктура.ПодразделенияДошкольногоОбразования, "1", "0");
	НаборПараметровСтраницы.СамостоятельноеУчреждение = ?(Отчет.Учреждение.ОрганизационнаяСтруктура = Перечисления.удуОрганизационнаяСтруктура.СамостоятельноеУчреждение, "1", "0");
	НаборПараметровСтраницы.ФилиалДошкольногоОбразовательногоУчреждения = ?(Отчет.Учреждение.ОрганизационнаяСтруктура = Перечисления.удуОрганизационнаяСтруктура.ФилиалДошкольногоОбразовательногоУчреждения, "1", "0");
	НаборПараметровСтраницы.ФилиалОбщеобразовательногоУчреждения = ?(Отчет.Учреждение.ОрганизационнаяСтруктура = Перечисления.удуОрганизационнаяСтруктура.ФилиалОбщеобразовательногоУчреждения, "1", "0");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСтраницы3(НаборПараметровСтраницы)
	
КонецПроцедуры
                                                                                      
&НаСервере
Процедура ЗаполнитьПараметрыСтраницы4(НаборПараметровСтраницы)
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСтраницы5(НаборПараметровСтраницы)
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСтраницы6(НаборПараметровСтраницы)
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСтраницы7(НаборПараметровСтраницы)
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСтраницы8(НаборПараметровСтраницы)
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСтраницы9(НаборПараметровСтраницы)
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСтраницы10(НаборПараметровСтраницы)
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСтраницы11(НаборПараметровСтраницы)
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСтраницы12(НаборПараметровСтраницы)
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСтраницы13(НаборПараметровСтраницы)
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСтраницы14(НаборПараметровСтраницы)
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьПараметрыТекущейСтраницы(СекцияТекущаяСтраница, НомерСтраницы)
	
	Если НомерСтраницы = 1 Тогда
		// заполним параметры страницы 1
		ЗаполнитьПараметрыСтраницы1(СекцияТекущаяСтраница.Параметры);
	ИначеЕсли НомерСтраницы = 2 Тогда
		// заполним параметры страницы 2
		ЗаполнитьПараметрыСтраницы2(СекцияТекущаяСтраница.Параметры);
	ИначеЕсли НомерСтраницы = 3 Тогда
		// заполним параметры страницы 3
		ЗаполнитьПараметрыСтраницы3(СекцияТекущаяСтраница.Параметры);
	ИначеЕсли НомерСтраницы = 4 Тогда
		// заполним параметры страницы 4
		ЗаполнитьПараметрыСтраницы4(СекцияТекущаяСтраница.Параметры);
	ИначеЕсли НомерСтраницы = 5 Тогда
		// заполним параметры страницы 5
		ЗаполнитьПараметрыСтраницы5(СекцияТекущаяСтраница.Параметры);
	ИначеЕсли НомерСтраницы = 6 Тогда
		// заполним параметры страницы 6
		ЗаполнитьПараметрыСтраницы6(СекцияТекущаяСтраница.Параметры);
	ИначеЕсли НомерСтраницы = 7 Тогда
		// заполним параметры страницы 7
		ЗаполнитьПараметрыСтраницы7(СекцияТекущаяСтраница.Параметры);
	ИначеЕсли НомерСтраницы = 8 Тогда
		// заполним параметры страницы 8
		ЗаполнитьПараметрыСтраницы8(СекцияТекущаяСтраница.Параметры);
	ИначеЕсли НомерСтраницы = 9 Тогда
		// заполним параметры страницы 9
		ЗаполнитьПараметрыСтраницы9(СекцияТекущаяСтраница.Параметры);
	ИначеЕсли НомерСтраницы = 10 Тогда
		// заполним параметры страницы 10
		ЗаполнитьПараметрыСтраницы10(СекцияТекущаяСтраница.Параметры);
	ИначеЕсли НомерСтраницы = 11 Тогда
		// заполним параметры страницы 11
		ЗаполнитьПараметрыСтраницы11(СекцияТекущаяСтраница.Параметры);
	ИначеЕсли НомерСтраницы = 12 Тогда
		// заполним параметры страницы 12
		ЗаполнитьПараметрыСтраницы12(СекцияТекущаяСтраница.Параметры);
	ИначеЕсли НомерСтраницы = 13 Тогда
		// заполним параметры страницы 13
		ЗаполнитьПараметрыСтраницы13(СекцияТекущаяСтраница.Параметры);
	ИначеЕсли НомерСтраницы = 14 Тогда
		// заполним параметры страницы 14
		ЗаполнитьПараметрыСтраницы14(СекцияТекущаяСтраница.Параметры);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СформироватьОтчетНаСервере()
	
	РезультирующаяТаблица = Новый ТабличныйДокумент;
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	
	Макет = ОтчетОбъект.ПолучитьМакет("МакетФорма85К");
	
	Для СчетчикСтраниц = 1 По 14 Цикл
		СекцияТекущаяСтраница = Макет.ПолучитьОбласть("Страница" + Строка(СчетчикСтраниц));
		ЗаполнитьПараметрыТекущейСтраницы(СекцияТекущаяСтраница, СчетчикСтраниц);
		РезультирующаяТаблица.Вывести(СекцияТекущаяСтраница);		
		РезультирующаяТаблица.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;	
	
	Возврат РезультирующаяТаблица;	
КонецФункции

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	// Вставить содержимое обработчика.
	ОтказОтФормирования = Ложь;
	Если Не ЗначениеЗаполнено(Отчет.Учреждение) Тогда
		Вопрос("Перед формирование отчета обязательно укажите учреждение", РежимДиалогаВопрос.ОК);
		ОтказОтФормирования = Истина;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(Отчет.ДатаФормирования) Тогда
		Вопрос("Перед формирование отчета обязательно укажите период формирования отчета", РежимДиалогаВопрос.ОК);
		ОтказОтФормирования = Истина;
	КонецЕсли;	
	
	Если Не ОтказОтФормирования Тогда
		ОсновнаяТаблица = СформироватьОтчетНаСервере();
		
		ОсновнаяТаблица.ОтображатьЗаголовки = Ложь;
		ОсновнаяТаблица.ОтображатьСетку = Ложь;
		ОсновнаяТаблица.АвтоМасштаб = Истина;
		ОсновнаяТаблица.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
		ОсновнаяТаблица.ТолькоПросмотр = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.Учреждение = Константы.удуОсновноеУчреждение.Получить();
	Отчет.ДатаФормирования = КонецГода(ТекущаяДата());
КонецПроцедуры

&НаКлиенте
Процедура ДатаФормированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ДатаФормированияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СписокДатВыбора = Новый СписокЗначений;
	Для Сч = 1 по 8 Цикл
		КоличествоМесяцев = (Сч - 7) * 12;
		ТекущееЗначениеДаты = ДобавитьМесяц(КонецГода(ТекущаяДата()), КоличествоМесяцев);
		СписокДатВыбора.Добавить(ТекущееЗначениеДаты, Формат(ТекущееЗначениеДаты, "ДФ='yyyy ""год""'"));		
	КонецЦикла;
	
	НайденноеЗначение = СписокДатВыбора.НайтиПоЗначению(Отчет.ДатаФормирования);
	Если НайденноеЗначение <> Неопределено Тогда
		ВыбранноеЗначение = ВыбратьИзСписка(СписокДатВыбора, Элемент, НайденноеЗначение);
	Иначе
		ВыбранноеЗначение = ВыбратьИзСписка(СписокДатВыбора, Элемент);
	КонецЕсли;
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		Отчет.ДатаФормирования = ВыбранноеЗначение.Значение;
	КонецЕсли;		
	
КонецПроцедуры
