Функция РассчитатьКолвоСтрокОтчета(ДанныеСтроки)
	КолВоДетальныхСтрок = 0;
	Для каждого СтрокаДвижения из ДанныеСтроки.Строки Цикл
		Если СтрокаДвижения.Строки.Количество() = 0 и ЗначениеЗаполнено(СтрокаДвижения.Должность)  тогда 
			// Проверка на заполненость колонки "Должность" нужна для проверки выборки по подразделению без штатного расписания.
			КолВоДетальныхСтрок = КолВоДетальныхСтрок + 1;
		ИначеЕсли СтрокаДвижения.Строки.Количество() > 0 тогда
			КолВоДетальныхСтрок = КолВоДетальныхСтрок + РассчитатьКолвоСтрокОтчета(СтрокаДвижения);
		КонецЕсли;
	КонецЦикла;
	Возврат КолВоДетальныхСтрок;	
КонецФункции

// Выводит строки по подразделениям очередного уровня
Процедура ВывестиШтатноеРасписание(ДанныеВыборкаСтрокШтРасписания, ВыведеноСтрокВОтчет, КоличествоСтрокОтчета, ДокументРезультат, 
	СписокНадбавок, ОбластьДоНадбавок, ОбластьНадбавка, ОбластьПослеНадбавок,
	ОбластьСтрокаДоНадбавок, ОбластьСтрокаНадбавка, ОбластьСтрокаПослеНадбавок, ВыводимаяСтрока, 
	КоличествоСтавокЛиста, МинимальныйМесячныйФондЛиста, СуммаМинимальныхТарифныхСтавокЛиста,
	ОбластьПодвалаЛистаДоНадбавок, ОбластьПодвалаЛистаНадбавка, ОбластьПодвалаЛистаПослеНадбавок, ВыводимыеОбласти, Макет, МинимальныйМесячныйФондОрганизации, ВсегоКоличествоСтавок)
	
		КоличествоНадбавок = СписокНадбавок.Количество();
	
	Для каждого ВыборкаСтрокШтРасписания из ДанныеВыборкаСтрокШтРасписания.Строки Цикл 
		
		ЕстьВыборкаСледующегоУровня = ВыборкаСтрокШтРасписания.Строки.Количество() > 0 И НЕ ЗначениеЗаполнено(ВыборкаСтрокШтРасписания.Строки[0].Должность);
		
		МинСтавка = 0;
		КоличествоСтавок = 0;
		МинФонд = 0;
		
		Для каждого ВыборкаСтрокШтРасписанияДолжность из ВыборкаСтрокШтРасписания.Строки Цикл 
			Если Не ЗначениеЗаполнено(ВыборкаСтрокШтРасписанияДолжность.Должность) тогда
				Продолжить;
			КонецЕсли;
			
			// Готовим строку отчета для последующего вывода
			ВыводимаяСтрока.Очистить();
			ВыведеноНадбавок = 0;
			
			Для каждого ВыборкаСтрокШтРасписанияНадбавка из ВыборкаСтрокШтРасписанияДолжность.Строки Цикл 
				
				КоличествоСтавок = ВыборкаСтрокШтРасписанияНадбавка.КоличествоСтавок;
				
				
				// Из первой строки надбавок возьмем общие данные позиции штатного расписания.
				Если ВыведеноНадбавок = 0 Тогда
					
					МинФонд = ?(ВыборкаСтрокШтРасписанияНадбавка.МинОсновнойТариф <> NULL,ВыборкаСтрокШтРасписанияНадбавка.МинОсновнойТариф,0) ;
					МинСтавка = ВыборкаСтрокШтРасписанияНадбавка.МинСтавка;
					
					// Выводим начало строки
					ОбластьСтрокаДоНадбавок.Параметры.Заполнить(ВыборкаСтрокШтРасписанияНадбавка); 
					ОбластьСтрокаДоНадбавок.Параметры.ОкладТарифнаяСтавка = удуОбщегоНазначенияСервер.ФорматСумм(МинСтавка);
					ОбластьСтрокаДоНадбавок.Параметры.ПодразделениеОрганизацииКод = ВыборкаСтрокШтРасписания.ПодразделениеОрганизации.Код;
					ВыводимаяСтрока.Вывести(ОбластьСтрокаДоНадбавок);
					
				КонецЕсли;	 
				
				РазмерНадбавки = "";
				Если ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки <> NULL и ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки <> 0 Тогда
					// Рассчитываем фонд заработной платы с учетом надбавок.
					
					Если ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.удуСпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке 
						ИЛИ ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.удуСпособыРасчетаОплатыТруда.ОтСтажаПоЧасовойТарифнойСтавке 
						ИЛИ ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.удуСпособыРасчетаОплатыТруда.ОтСтажаПоЧасовойТарифнойСтавке тогда
						
						МинСуммаНадбвки  = ВыборкаСтрокШтРасписанияНадбавка.МинСуммаНадбавки * ВыборкаСтрокШтРасписанияНадбавка.НормаЧасовЗаПериод;
						
					ИначеЕсли ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.удуСпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке 
						ИЛИ ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.удуСпособыРасчетаОплатыТруда.ОтСтажаПоДневнойТарифнойСтавке 
						ИЛИ ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.удуСпособыРасчетаОплатыТруда.ОтСтажаПоДневнойТарифнойСтавке тогда
						
						МинСуммаНадбвки  = ВыборкаСтрокШтРасписанияНадбавка.МинСуммаНадбавки * ВыборкаСтрокШтРасписанияНадбавка.НормаДнейЗаПериод;
						
					Иначе
						МинСуммаНадбвки  = ВыборкаСтрокШтРасписанияНадбавка.МинСуммаНадбавки;
					КонецЕсли;
					
					МинФонд  = МинФонд + МинСуммаНадбвки;
					РазмерНадбавки = удуОбщегоНазначенияСервер.ФорматСумм(ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки);
					
				КонецЕсли;	 
				ОбластьСтрокаНадбавка.Параметры.РазмерНадбавки = РазмерНадбавки;
				ВыводимаяСтрока.Присоединить(ОбластьСтрокаНадбавка);	
				ВыведеноНадбавок = ВыведеноНадбавок+1;
			КонецЦикла;//Цикл по надбавкам
			
			// Согласно типовой формы должно быть не менее 3 колонок для надбавок
			ОбластьСтрокаНадбавка.Параметры.РазмерНадбавки = "";
			Для Н=ВыведеноНадбавок+1 По 3 цикл
				ВыводимаяСтрока.Присоединить(ОбластьСтрокаНадбавка);	
			КонецЦикла;	
			
			// Выводим хвост строки
			ОбластьСтрокаПослеНадбавок.Параметры.МесячныйФонд = удуОбщегоНазначенияСервер.ФорматСумм(МинФонд);
			ВыводимаяСтрока.Присоединить(ОбластьСтрокаПослеНадбавок);
			
			// Посчитали подготовленную строку
			ВыведеноСтрокВОтчет = ВыведеноСтрокВОтчет + 1;  
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу
			ВывестиПодвалЛиста = Не удуОбщегоНазначенияСервер.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста и ВыведеноСтрокВОтчет = КоличествоСтрокОтчета Тогда
				// Для последней строки отчета дополнительно проверим, 
				// уместится ли на этой же странице подвал всего отчета
				ВыводимыеОбласти.Добавить(Макет.ПолучитьОбласть("Подвал"));
				ВывестиПодвалЛиста = Не удуОбщегоНазначенияСервер.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти);
			КонецЕсли;	
			
			// Если нужно, выводим подвал листа
			Если ВывестиПодвалЛиста Тогда
				ОбластьПодвалаЛистаДоНадбавок.Параметры.КоличествоСтавок = КоличествоСтавокЛиста;
				ДокументРезультат.Вывести(ОбластьПодвалаЛистаДоНадбавок);
				
				Для Н=0 по КоличествоНадбавок-1 цикл
					ДокументРезультат.Присоединить(ОбластьПодвалаЛистаНадбавка);
				КонецЦикла;	
				
				ОбластьПодвалаЛистаПослеНадбавок.Параметры.МесячныйФонд = удуОбщегоНазначенияСервер.ФорматСумм(МинимальныйМесячныйФондЛиста);
				ДокументРезультат.Присоединить(ОбластьПодвалаЛистаПослеНадбавок);
				
				// Начнем новую страницу
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				КоличествоСтавокЛиста = 0;
				МинимальныйМесячныйФондЛиста = 0;
				СуммаМинимальныхТарифныхСтавокЛиста = 0;
				
				// Выводим шапку нового листа
				НомерВерхнейСтрокиШапки = ДокументРезультат.ВысотаТаблицы+1;
				ДокументРезультат.Вывести(ОбластьДоНадбавок);
				Для Н=0 по КоличествоНадбавок-1 цикл
					ОбластьНадбавка.Параметры.ИмяНадбавки = СписокНадбавок[Н];
					ОбластьНадбавка.Параметры.НомерКолонки = 6+Н;
					ДокументРезультат.Присоединить(ОбластьНадбавка);	
				КонецЦикла;	
				// Объединяем ячейки и пишем общий заголовок для надбавок 
				ОбластьШапкиНадбавок = ДокументРезультат.Область(НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+1,НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+КоличествоНадбавок*3);
				ОбластьШапкиНадбавок.Объединить();
				ОбластьШапкиНадбавок.Текст = "Надбавки, руб";
				
				ОбластьПослеНадбавок.Параметры.НомерКолонкиФонд = 6+КоличествоНадбавок;
				ОбластьПослеНадбавок.Параметры.НомерКолонкиПримечание = 6+КоличествоНадбавок+1;
				ДокументРезультат.Присоединить(ОбластьПослеНадбавок);
			КонецЕсли;
			
			// Теперь выводим строку
			ДокументРезультат.Вывести(ВыводимаяСтрока);
			
			// Увеличиваем счетчики по листу
			КоличествоСтавокЛиста = КоличествоСтавокЛиста + КоличествоСтавок;
			СуммаМинимальныхТарифныхСтавокЛиста = СуммаМинимальныхТарифныхСтавокЛиста + МинСтавка;
			МинимальныйМесячныйФондЛиста = МинимальныйМесячныйФондЛиста + МинФонд;
			МинимальныйМесячныйФондОрганизации = МинимальныйМесячныйФондОрганизации + МинФонд;
			ВсегоКоличествоСтавок = ВсегоКоличествоСтавок + КоличествоСтавок;
			
		КонецЦикла; // Цикл по должностям
		
		Если ЕстьВыборкаСледующегоУровня тогда
			ВывестиШтатноеРасписание(ВыборкаСтрокШтРасписания, ВыведеноСтрокВОтчет, КоличествоСтрокОтчета, ДокументРезультат, 
			СписокНадбавок, ОбластьДоНадбавок, ОбластьНадбавка, ОбластьПослеНадбавок,
			ОбластьСтрокаДоНадбавок, ОбластьСтрокаНадбавка, ОбластьСтрокаПослеНадбавок, ВыводимаяСтрока, 
			КоличествоСтавокЛиста, МинимальныйМесячныйФондЛиста, СуммаМинимальныхТарифныхСтавокЛиста,
			ОбластьПодвалаЛистаДоНадбавок, ОбластьПодвалаЛистаНадбавка, ОбластьПодвалаЛистаПослеНадбавок, ВыводимыеОбласти, Макет, МинимальныйМесячныйФондОрганизации, ВсегоКоличествоСтавок)
		КонецЕсли;
		
	КонецЦикла; // Цикл по подразделениям текущего уровня 
	
КонецПроцедуры

Функция ПолучитьСписокНадбавок(ДанныеСтроки, СписокНадбавок = Неопределено)
		Если СписокНадбавок = Неопределено тогда
			СписокНадбавок = Новый СписокЗначений; 
		КонецЕсли;
		Для каждого СтрокаДвижения из ДанныеСтроки.Строки Цикл
			Если ЗначениеЗаполнено(СтрокаДвижения.ВидНадбавки) И СписокНадбавок.НайтиПоЗначению(СтрокаДвижения.ВидНадбавки) = Неопределено тогда
				СписокНадбавок.Добавить(СтрокаДвижения.ВидНадбавки);
			КонецЕсли;
			Если СтрокаДвижения.Строки.Количество() <> 0 тогда 
				ПолучитьСписокНадбавок(СтрокаДвижения, СписокНадбавок);			
			КонецЕсли;
		КонецЦикла;
		
		Возврат СписокНадбавок;
КонецФункции

Функция СформироватьОтчет(Отчет,Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина) Экспорт
	
	// Параметры документа
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Результат.ПолеСлева			 = 0;
	Результат.ПолеСправа		 = 0;
	Результат.Защита             = Ложь;
	Результат.ТолькоПросмотр     = Истина;
	Результат.АвтоМАсштаб        = Истина;
	Результат.Очистить();
	
	НастрокаПоУмолчанию        = Отчет.КомпоновщикНастроек.ПолучитьНастройки();

	ЗначениеПараметра = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	Если ЗначениеПараметра <> Неопределено тогда
		Если Дата(ЗначениеПараметра.Значение) <> '00010101' тогда
			ДатаАктуальности = Дата(ЗначениеПараметра.Значение);
		Иначе
			ДатаАктуальности           = ТекущаяДата();
			ЗначениеПараметра.Значение = ТекущаяДата();
			ЗначениеПараметра.Использование = истина;
		КонецЕсли;
	Иначе
		ДатаАктуальности = ТекущаяДата();
	КонецЕсли;

		
	удуУправлениеОтчетами.УстановитьПараметр(Отчет.КомпоновщикНастроек, "ПериодКонец",  КонецМесяца(ДатаАктуальности));
	удуУправлениеОтчетами.УстановитьПараметр(Отчет.КомпоновщикНастроек, "ПериодНачало", НачалоМесяца(ДатаАктуальности));
	
	Отчет.КомпоновщикНастроек.Настройки.Структура.Очистить();
	Отчет.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
	
	удуУправлениеОтчетами.ДобавитьГруппировку(Отчет.КомпоновщикНастроек, "Организация", );
	удуУправлениеОтчетами.ДобавитьГруппировку(Отчет.КомпоновщикНастроек, "ПодразделениеОрганизации", );
	удуУправлениеОтчетами.ДобавитьГруппировку(Отчет.КомпоновщикНастроек, "Должность", );
	удуУправлениеОтчетами.ДобавитьГруппировку(Отчет.КомпоновщикНастроек, "ВидНадбавки", );
	
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "КоличествоСтавок");
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "Курс");
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "МинСтавка");
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "МинСуммаНадбавки");
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "КоличествоСтавок");
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "Размер");
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "РазмерНадбавки");
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "СпособРасчета");
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "МинОсновнойТариф");
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "ДолжностьРуководителя");
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "ДолжностьКадровика");
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "ФИОГлавбуха");
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "ФИОКадровика");
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "ФИОРуководителя");
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "НормаДнейЗаПериод");
	удуУправлениеОтчетами.ДобавитьВыбранноеПоле(Отчет.КомпоновщикНастроек, "НормаЧасовЗаПериод");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	Макет = Отчеты.удуУнифицированнаяФормаТ3.ПолучитьМакет("ПФ_MXL_Т3_от_5_1_2004");
	СхемаКомпоновкиДанных = Отчеты.удуУнифицированнаяФормаТ3.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Отчет.КомпоновщикНастроек.Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ДеревоДанных =  Новый ДеревоЗначений;
	
	ПроцессорВывода.УстановитьОбъект(ДеревоДанных);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Для каждого ДанныеОрганизации из ДеревоДанных.Строки Цикл
		ВыведеноСтрокВОтчет   = 0;
		
		КоличествоСтрокОтчета = РассчитатьКолвоСтрокОтчета(ДанныеОрганизации);
		СписокНадбавок        = ПолучитьСписокНадбавок(ДанныеОрганизации);
		// Количество надбавок должны быть не меньше трёх (согласно типовой форме).
		Пока СписокНадбавок.Количество()<3 Цикл
			СписокНадбавок.Добавить("");
		КонецЦикла;
		КоличествоНадбавок    = СписокНадбавок.Количество();
		// Выводим шапку
		ОбластьШапкаДоНадбавок = Макет.ПолучитьОбласть("Шапка|ДоНадбавок");
		ОбластьШапкаДоНадбавок.Параметры.НазваниеОрганизации = ДанныеОрганизации.Организация.ПолноеНаименование;
		ОбластьШапкаДоНадбавок.Параметры.Организация = ДанныеОрганизации.Организация;
		ОбластьШапкаДоНадбавок.Параметры.ДатаАктуальности = НачалоМесяца(ДатаАктуальности);
		Результат.Вывести(ОбластьШапкаДоНадбавок);
		
		ОбластьШапкаНадбавка = Макет.ПолучитьОбласть("Шапка|Надбавка");
		Для Н=0 по КоличествоНадбавок-1 цикл
			Результат.Присоединить(ОбластьШапкаНадбавка);	
		КонецЦикла;	
		
		// Рассчитаем кол-во ставок
		//
		КолВоСтавок = 0;
		Для каждого СтрокаПодразделния из ДанныеОрганизации.Строки Цикл
			Для каждого СтрокаДолжность из СтрокаПодразделния.Строки Цикл
				КолСТ = 0;
				Для каждого СтрокаНадбавка из СтрокаДолжность.Строки Цикл
					КолСТ = СтрокаНадбавка.КоличествоСтавок;
				КонецЦикла;
				КолВоСтавок = КолВоСтавок + КолСТ;
			КонецЦикла;
		КонецЦикла;
		
		ОбластьШапкаПослеНадбавок = Макет.ПолучитьОбласть("Шапка|ПослеНадбавок");
		ОбластьШапкаПослеНадбавок.Параметры.ОКПО = ДанныеОрганизации.Организация.ОКПО;
		ОбластьШапкаПослеНадбавок.Параметры.ШтатВКоличестве = "штат в количестве " + КолВоСтавок + " единиц";
		Результат.Присоединить(ОбластьШапкаПослеНадбавок);
		
		// Выводим шапку листа
		НомерВерхнейСтрокиШапки = Результат.ВысотаТаблицы + 1;
		ОбластьДоНадбавок = Макет.ПолучитьОбласть("ШапкаЛиста|ДоНадбавок");
		Результат.Вывести(ОбластьДоНадбавок);
		
		ОбластьНадбавка = Макет.ПолучитьОбласть("ШапкаЛиста|Надбавка");
		Для Н=0 по КоличествоНадбавок-1 цикл
			ОбластьНадбавка.Параметры.ИмяНадбавки = СписокНадбавок[Н];
			ОбластьНадбавка.Параметры.НомерКолонки = 6+Н;
			Результат.Присоединить(ОбластьНадбавка);	
		КонецЦикла;	
		// Объединяем ячейки и пишем общий заголовок для надбавок 
		ОбластьШапкиНадбавок = Результат.Область(НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+1,НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+КоличествоНадбавок*3);
		ОбластьШапкиНадбавок.Объединить();
		ОбластьШапкиНадбавок.Текст = "Надбавки, руб";
		
		ОбластьПослеНадбавок = Макет.ПолучитьОбласть("ШапкаЛиста|ПослеНадбавок");
		ОбластьПослеНадбавок.Параметры.НомерКолонкиФонд = 6+КоличествоНадбавок;
		ОбластьПослеНадбавок.Параметры.НомерКолонкиПримечание = 6+КоличествоНадбавок+1;
		Результат.Присоединить(ОбластьПослеНадбавок);
		
		ОбластьСтрокаДоНадбавок = Макет.ПолучитьОбласть("Строка|ДоНадбавок");
		ОбластьСтрокаНадбавка = Макет.ПолучитьОбласть("Строка|Надбавка");
		ОбластьСтрокаПослеНадбавок = Макет.ПолучитьОбласть("Строка|ПослеНадбавок");
		
		ОбластьПодвалаЛистаДоНадбавок = Макет.ПолучитьОбласть("ПодвалЛиста|ДоНадбавок");
		ОбластьПодвалаЛистаПослеНадбавок = Макет.ПолучитьОбласть("ПодвалЛиста|ПослеНадбавок");
		ОбластьПодвалаЛистаНадбавка = Макет.ПолучитьОбласть("ПодвалЛиста|Надбавка");
		
		КоличествоСтавокЛиста = 0;
		МинимальныйМесячныйФондЛиста = 0;
		СуммаМинимальныхТарифныхСтавокЛиста = 0;
		
		// массив с двумя строками - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимаяСтрока = Новый ТабличныйДокумент();
		ВыводимыеОбласти.Добавить(ВыводимаяСтрока);
		ВыводимыеОбласти.Добавить(Макет.ПолучитьОбласть("ПодвалЛиста"));
		
		
		КоличествоСтавокЛиста      = 0;
		ВсегоКоличествоСтавок = 0;
		МинимальныйМесячныйФондЛиста = 0;
		СуммаМинимальныхТарифныхСтавокЛиста = 0;
		МинимальныйМесячныйФондОрганизации  = 0;
		
		ВывестиШтатноеРасписание(ДанныеОрганизации, ВыведеноСтрокВОтчет, КоличествоСтрокОтчета, Результат, СписокНадбавок, ОбластьДоНадбавок, ОбластьНадбавка, ОбластьПослеНадбавок,
		ОбластьСтрокаДоНадбавок, ОбластьСтрокаНадбавка, ОбластьСтрокаПослеНадбавок, ВыводимаяСтрока, КоличествоСтавокЛиста, МинимальныйМесячныйФондЛиста,
		СуммаМинимальныхТарифныхСтавокЛиста, ОбластьПодвалаЛистаДоНадбавок, ОбластьПодвалаЛистаНадбавка, ОбластьПодвалаЛистаПослеНадбавок, ВыводимыеОбласти, Макет, МинимальныйМесячныйФондОрганизации, ВсегоКоличествоСтавок);
		
		ОбластьПодвалаЛистаДоНадбавок.Параметры.КоличествоСтавок = КоличествоСтавокЛиста;
		Результат.Вывести(ОбластьПодвалаЛистаДоНадбавок);
		
		Для Н=0 по КоличествоНадбавок-1 цикл
			Результат.Присоединить(ОбластьПодвалаЛистаНадбавка);
		КонецЦикла;	
		
		ОбластьПодвалаЛистаПослеНадбавок.Параметры.МесячныйФонд = удуОбщегоНазначенияСервер.ФорматСумм(МинимальныйМесячныйФондЛиста);
		Результат.Присоединить(ОбластьПодвалаЛистаПослеНадбавок);
		
		// Выводим подвал документа
		НомерВерхнейСтрокиПодвала = Результат.ВысотаТаблицы+1;
		ОбластьПодвалДоНадбавок = Макет.ПолучитьОбласть("Подвал|ДоНадбавок");
		
		ОбластьПодвалДоНадбавок.Параметры.Заполнить(ДанныеОрганизации); 
		ОбластьПодвалДоНадбавок.Параметры.КоличествоСтавок = ВсегоКоличествоСтавок;
		Подписи = Макет.ПолучитьОбласть("Подписи");
		Подписи.Параметры.Заполнить(ДанныеОрганизации);
		Результат.Вывести(ОбластьПодвалДоНадбавок);
		
		ОбластьПодвалНадбавка = Макет.ПолучитьОбласть("Подвал|Надбавка");
		Для Н=0 по КоличествоНадбавок-1 цикл
			Результат.Присоединить(ОбластьПодвалНадбавка);	
		КонецЦикла;	
		
			
		ОбластьПодвалПослеНадбавок = Макет.ПолучитьОбласть("Подвал|ПослеНадбавок");
		ОбластьПодвалПослеНадбавок.Параметры.МесячныйФонд = удуОбщегоНазначенияСервер.ФорматСумм(МинимальныйМесячныйФондОрганизации);
		
		ОбластьПодвалПослеНадбавок.Параметры.Заполнить(ДанныеОрганизации);
		
		Результат.Присоединить(ОбластьПодвалПослеНадбавок);
		
		Результат.Вывести(Подписи);
		
		Если НЕ ДеревоДанных.Строки.Индекс(ДанныеОрганизации)+1 = ДеревоДанных.Строки.Количество() тогда
			Результат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

	КонецЦикла;                                                 	
	Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(НастрокаПоУмолчанию);
	Возврат Результат;

	
КонецФункции
