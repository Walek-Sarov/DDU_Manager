<?xml version="1.0" encoding="UTF-8"?>
<Rights xmlns="http://v8.1c.ru/8.2/roles" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Rights" version="2.6">
	<setForNewObjects>false</setForNewObjects>
	<setForAttributesByDefault>true</setForAttributesByDefault>
	<independentRightsOfChildObjects>true</independentRightsOfChildObjects>
	<object>
		<name>CommonForm.удуМетодическиеМатериалыНаРуках</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.удуВозвратМетодическихМатериалов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>Posting</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractivePosting</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractivePostingRegular</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.удуАвторы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.удуНастройкиРегистрацииДокументов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Subsystem.удуМетодическиеМатериалы.Subsystem.Документы</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.удуНаправленияДеятельностиДОУ</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.удуПеремещениеТМЦ</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>Posting</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractivePosting</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractivePostingRegular</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.удуРолиАвтора</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.удуРегистрацияУчетныхДокументов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.удуСтатьи</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.удуСерии</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.удуСвязьДокументовСДелопроизводством</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.удуИздательства</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.удуВыдачаМетодическихМатериалов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>Posting</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractivePosting</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractivePostingRegular</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.удуПоискВДанныхВММ.Command.Поиск</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.удуМноготомники</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.удуОприходованиеТМЦ</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>Posting</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractivePosting</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractivePostingRegular</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.удуПричиныВыдачиМетодическихМатериалов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.удуУчетныеЕдиницы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Subsystem.удуМетодическиеМатериалы</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.удуНедоступныеМетодическиеМатериалы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.удуПоискВДанныхВММ</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.удуМетодическиеМатериалыНаРуках</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.удуВидыМетодическихМатериалов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Файлы</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениямИНаборамРасширенный( "Справочник.Файлы","Чтение","",
"",
"",
" ","Т.ВладелецФайла","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","", "","","", "","","")</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениямИНаборамРасширенный( "Справочник.Файлы","Добавление","",
"",
"",
" ","Т.ВладелецФайла","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","", "","","", "","","")</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениямИНаборамРасширенный( "Справочник.Файлы","Изменение","",
"",
"",
" ","Т.ВладелецФайла","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","",
"","","", "","","", "","","")</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<restrictionTemplate>
		<name>ПоЗначениямИНаборамРасширенный</name>
		<condition>// ПоЗначениямИНаборамРасширенный ( Таблица, Право, Модификатор, ПрисоединяемыеТаблицы, О, В1,П1,О1, В2,П2,О2,..., В(n), П(n), О(n)).
// №  параметра:                          1,     2,           3,                     4, 5,  6, 7, 8,  9,10,11,...,3+n*3,4+n*3,5+n*3 .
// Читается так: "ограничение доступа по наборам и значениям расширенный".
// Параметры:
//     Таблица -   Имя текущей таблицы, например "Документ.ПоступлениеТоваровИУслуг".
//     Право     - Одна из строк "Чтение", "Добавление", "Изменение", "Удаление".
//     Модификатор - изменяет шаблон.
//                 1-й модификтор - строка "НеОграничиватьДоступКГруппам" указывает
//                  безусловно выбирать группы иерархического справочника. 
//                 Других модификаторов в этой версии шаблона не предусмотрено.
//     ПрисоединяемыеТаблицы - текст присоедиения дополнительных таблиц на языке запросов, например,
//                 "ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.ОплатаПоставщикам КАК Т1
//                  ПО Т.Ссылка = Т1.Ссылка".
//                 Присоединение позволяет указать поля таблицы ОплатаПоставщикам, как поля основной таблицы
//                  для проверки их значений, как значений основной таблицы.
//                 Следует помнить, что при размножении строк в результате соединения, достаточно чтобы
//                  всего одна строка прошла условия проверки, т.е. результаты проверки строк объединяются по "ИЛИ".
//     О         - Начальные скобки "(".
//     В(n)     - ВидДоступа (имя предопределённого элемента ПланВидовХарактеристик.ВидыДоступа).
//                 Когда В(n) = "Условие" (или ""), тогда Р(n) содержит строку условия на языке запросов, например
//                   "Т.Автор = &amp;ТекущийПользователь",
//                   "ТипЗначения(Т.Владелец) = Тип(Справочник.Организации)", где Т - псевдоним текущей таблицы.
//                 Когда В(n) = "ПравоЧтения" ИЛИ "ПравоДобавления" ИЛИ "ПравоИзменения",
//                   выполняется проверка наличия права на таблицу значения Т.Р(n).
//                 Когда В(n) = "Объект" (или " "), то
//                   когда есть запись зависимости прав в регистре сведений ЗависимостиПравДоступа
//                     тогда используется данные записи - проверка указанного права Т.Р(n) и/или наборов значений доступа
//                         в регистре сведений НаборыЗначенийДоступа, считываемых по ссылке Т.Р(n) для указанного ограничения права;
//                   иначе используется стандартное правило:
//                     когда Право = "Чтение" тогда выполняется проверка права чтения Т.Р(n) и наборов значений доступа
//                       в регистре сведений НаборыЗначенийДоступа, считываемых по ссылке Т.Р(n) для права чтения;
//                     когда Право = "Добавление" ИЛИ "Изменение" ИЛИ "Удаление" тогда выполняется проверка права изменения Т.Р(n)
//                       и наборов значений доступа, считываемых по ссылке Т.Р(n) для права изменения.
//     П(n)     - Поле с псевдонимом, например "Т.Организация", значение которого проверяется
//                по виду доступа, кроме случая В(n) = "Условие" (или "").
//     О(n)      - Логические операции "И", "ИЛИ" в сочетании с скобками "(", ")".
//  Примечение: максимальное количество одновременно проверяемых значений полей можно увеличить, изменив шаблон, но
// необходимо будет указывать все параметры шаблона, т.е. указывать пустые строки, когда количество полей меньше максимального.
//  Шаблон имеет структуру:
//     &lt;Соединение по таблице1&gt;  &lt;Соединение по таблице2&gt;  ... &lt;Соединение по таблице(m)&gt;
//     &lt;Общая часть условий&gt; &lt;Условие по группе параметров 1&gt; И/ИЛИ &lt;Условие по группе параметров 1&gt; И/ИЛИ ... &lt;Условие по группе параметров(n)&gt;
//  Пример:
//      ПоЗначениямИНаборамРасширенный("ЖурналДокументов.СкладскиеДокументы", "Чтение", "",
//      "",
//      "",
//      "Объект","Т.Ссылка","И",
//      "Объект","Т.ОсновнойДокумент","", "","","", ...)

// Проверка правильности параметра Модификатор.
#Если НЕ ("#Параметр(3)" = "НеОграничиватьДоступКГруппам" ИЛИ "#Параметр(3)" = "") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    НеверныйМодификатор: #Параметр(3)
#КонецЕсли
// Проверка правильности параметра Право.
#Если НЕ ("#Параметр(2)" = "Чтение"    ИЛИ "#Параметр(2)" = "Добавление" ИЛИ
          "#Параметр(2)" = "Изменение" ИЛИ "#Параметр(2)" = "Удаление") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    НеверноеПраво: #Параметр(2)
#КонецЕсли

// Общая проверка использования ограничений доступа на уровне записей.
#Если НЕ &amp;ОграничиватьДоступПоВиду = "" #Тогда

Т ИЗ Т // Т - псевдоним текущей таблицы (выбран коротким, чтобы сократить количество символов в тексте параметра-условия на языке запросов).

//// Подготовка ТипаСсылки значения поля группы параметров 1.
#Если "#Параметр(6)" = "ПравоЧтения" ИЛИ "#Параметр(6)" = "ПравоДобавления" ИЛИ "#Параметр(6)" = "ПравоИзменения"
  ИЛИ "#Параметр(6)" = "Объект"      ИЛИ "#Параметр(6)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр7
    ПО
          ТипЗначения(#Параметр(7)) = ТипЗначения(ТипыСсылокПараметр7.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 1.
#Если "#Параметр(6)" = "Объект" ИЛИ "#Параметр(6)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр7
    ПО 
          ЗависимостиПравПараметр7.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр7.ТипВедущейТаблицы  = ТипыСсылокПараметр7.ТипТаблицы
#КонецЕсли

//// Подготовка ТипаСсылки значения поля группы параметров 2.
#Если "#Параметр(9)" = "ПравоЧтения" ИЛИ "#Параметр(9)" = "ПравоДобавления" ИЛИ "#Параметр(9)" = "ПравоИзменения"
  ИЛИ "#Параметр(9)" = "Объект"      ИЛИ "#Параметр(9)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр10
    ПО
          ТипЗначения(#Параметр(10)) = ТипЗначения(ТипыСсылокПараметр10.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 2.
#Если "#Параметр(9)" = "Объект" ИЛИ "#Параметр(9)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр10
    ПО 
          ЗависимостиПравПараметр10.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр10.ТипВедущейТаблицы  = ТипыСсылокПараметр10.ТипТаблицы
#КонецЕсли

//// Подготовка ТипаСсылки значения поля группы параметров 3.
#Если "#Параметр(12)" = "ПравоЧтения" ИЛИ "#Параметр(12)" = "ПравоДобавления" ИЛИ "#Параметр(12)" = "ПравоИзменения"
  ИЛИ "#Параметр(12)" = "Объект"      ИЛИ "#Параметр(12)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр13
    ПО
          ТипЗначения(#Параметр(13)) = ТипЗначения(ТипыСсылокПараметр13.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 3.
#Если "#Параметр(12)" = "Объект" ИЛИ "#Параметр(12)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр13
    ПО 
          ЗависимостиПравПараметр13.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр13.ТипВедущейТаблицы  = ТипыСсылокПараметр13.ТипТаблицы
#КонецЕсли

//// Подготовка ТипаСсылки значения поля группы параметров 4.
#Если "#Параметр(15)" = "ПравоЧтения" ИЛИ "#Параметр(15)" = "ПравоДобавления" ИЛИ "#Параметр(15)" = "ПравоИзменения"
  ИЛИ "#Параметр(15)" = "Объект"      ИЛИ "#Параметр(15)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр16
    ПО
          ТипЗначения(#Параметр(16)) = ТипЗначения(ТипыСсылокПараметр16.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 4.
#Если "#Параметр(15)" = "Объект" ИЛИ "#Параметр(15)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр16
    ПО 
          ЗависимостиПравПараметр16.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр16.ТипВедущейТаблицы  = ТипыСсылокПараметр16.ТипТаблицы
#КонецЕсли

//// Подготовка ТипаСсылки значения поля группы параметров 5.
#Если "#Параметр(18)" = "ПравоЧтения" ИЛИ "#Параметр(18)" = "ПравоДобавления" ИЛИ "#Параметр(18)" = "ПравоИзменения"
  ИЛИ "#Параметр(18)" = "Объект"      ИЛИ "#Параметр(18)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр19
    ПО
          ТипЗначения(#Параметр(19)) = ТипЗначения(ТипыСсылокПараметр19.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 5.
#Если "#Параметр(18)" = "Объект" ИЛИ "#Параметр(18)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр19
    ПО 
          ЗависимостиПравПараметр19.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр19.ТипВедущейТаблицы  = ТипыСсылокПараметр19.ТипТаблицы
#КонецЕсли

//// Подготовка ТипаСсылки значения поля группы параметров 6.
#Если "#Параметр(21)" = "ПравоЧтения" ИЛИ "#Параметр(21)" = "ПравоДобавления" ИЛИ "#Параметр(21)" = "ПравоИзменения"
  ИЛИ "#Параметр(21)" = "Объект"      ИЛИ "#Параметр(21)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр22
    ПО
          ТипЗначения(#Параметр(22)) = ТипЗначения(ТипыСсылокПараметр22.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 6.
#Если "#Параметр(21)" = "Объект" ИЛИ "#Параметр(21)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр22
    ПО 
          ЗависимостиПравПараметр22.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр22.ТипВедущейТаблицы  = ТипыСсылокПараметр22.ТипТаблицы
#КонецЕсли

//// Подготовка ТипаСсылки значения поля группы параметров 7.
#Если "#Параметр(24)" = "ПравоЧтения" ИЛИ "#Параметр(24)" = "ПравоДобавления" ИЛИ "#Параметр(24)" = "ПравоИзменения"
  ИЛИ "#Параметр(24)" = "Объект"      ИЛИ "#Параметр(24)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр25
    ПО
          ТипЗначения(#Параметр(25)) = ТипЗначения(ТипыСсылокПараметр25.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 7.
#Если "#Параметр(24)" = "Объект" ИЛИ "#Параметр(24)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр25
    ПО 
          ЗависимостиПравПараметр25.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр25.ТипВедущейТаблицы  = ТипыСсылокПараметр25.ТипТаблицы
#КонецЕсли

//// Подготовка ТипаСсылки значения поля группы параметров 8.
#Если "#Параметр(27)" = "ПравоЧтения" ИЛИ "#Параметр(27)" = "ПравоДобавления" ИЛИ "#Параметр(27)" = "ПравоИзменения"
  ИЛИ "#Параметр(27)" = "Объект"      ИЛИ "#Параметр(27)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр28
    ПО
          ТипЗначения(#Параметр(28)) = ТипЗначения(ТипыСсылокПараметр28.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 8.
#Если "#Параметр(27)" = "Объект" ИЛИ "#Параметр(27)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр28
    ПО 
          ЗависимостиПравПараметр28.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр28.ТипВедущейТаблицы  = ТипыСсылокПараметр28.ТипТаблицы
#КонецЕсли

//// Подготовка ТипаСсылки значения поля группы параметров 9.
#Если "#Параметр(30)" = "ПравоЧтения" ИЛИ "#Параметр(30)" = "ПравоДобавления" ИЛИ "#Параметр(30)" = "ПравоИзменения"
  ИЛИ "#Параметр(30)" = "Объект"      ИЛИ "#Параметр(30)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр31
    ПО
          ТипЗначения(#Параметр(31)) = ТипЗначения(ТипыСсылокПараметр31.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 9.
#Если "#Параметр(30)" = "Объект" ИЛИ "#Параметр(30)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр31
    ПО 
          ЗависимостиПравПараметр31.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр31.ТипВедущейТаблицы  = ТипыСсылокПараметр31.ТипТаблицы
#КонецЕсли

//// Подготовка ТипаСсылки значения поля группы параметров 10.
#Если "#Параметр(33)" = "ПравоЧтения" ИЛИ "#Параметр(33)" = "ПравоДобавления" ИЛИ "#Параметр(33)" = "ПравоИзменения"
  ИЛИ "#Параметр(33)" = "Объект"      ИЛИ "#Параметр(33)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр34
    ПО
          ТипЗначения(#Параметр(34)) = ТипЗначения(ТипыСсылокПараметр34.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 10.
#Если "#Параметр(33)" = "Объект" ИЛИ "#Параметр(33)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр34
    ПО 
          ЗависимостиПравПараметр34.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр34.ТипВедущейТаблицы  = ТипыСсылокПараметр34.ТипТаблицы
#КонецЕсли

//// Подготовка ТипаСсылки значения поля группы параметров 11.
#Если "#Параметр(36)" = "ПравоЧтения" ИЛИ "#Параметр(36)" = "ПравоДобавления" ИЛИ "#Параметр(36)" = "ПравоИзменения"
  ИЛИ "#Параметр(36)" = "Объект"      ИЛИ "#Параметр(36)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр37
    ПО
          ТипЗначения(#Параметр(37)) = ТипЗначения(ТипыСсылокПараметр37.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 11.
#Если "#Параметр(36)" = "Объект" ИЛИ "#Параметр(36)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр37
    ПО 
          ЗависимостиПравПараметр37.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр37.ТипВедущейТаблицы  = ТипыСсылокПараметр37.ТипТаблицы
#КонецЕсли

//// Подготовка ТипаСсылки значения поля группы параметров 12.
#Если "#Параметр(39)" = "ПравоЧтения" ИЛИ "#Параметр(39)" = "ПравоДобавления" ИЛИ "#Параметр(39)" = "ПравоИзменения"
  ИЛИ "#Параметр(39)" = "Объект"      ИЛИ "#Параметр(39)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр40
    ПО
          ТипЗначения(#Параметр(40)) = ТипЗначения(ТипыСсылокПараметр40.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 12.
#Если "#Параметр(39)" = "Объект" ИЛИ "#Параметр(39)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр40
    ПО 
          ЗависимостиПравПараметр40.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр40.ТипВедущейТаблицы  = ТипыСсылокПараметр40.ТипТаблицы
#КонецЕсли

//// Подготовка ТипаСсылки значения поля группы параметров 13.
#Если "#Параметр(42)" = "ПравоЧтения" ИЛИ "#Параметр(42)" = "ПравоДобавления" ИЛИ "#Параметр(42)" = "ПравоИзменения"
  ИЛИ "#Параметр(42)" = "Объект"      ИЛИ "#Параметр(42)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр43
    ПО
          ТипЗначения(#Параметр(43)) = ТипЗначения(ТипыСсылокПараметр43.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 13.
#Если "#Параметр(42)" = "Объект" ИЛИ "#Параметр(42)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр43
    ПО 
          ЗависимостиПравПараметр43.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр43.ТипВедущейТаблицы  = ТипыСсылокПараметр43.ТипТаблицы
#КонецЕсли

//// Подготовка ТипаСсылки значения поля группы параметров 14.
#Если "#Параметр(45)" = "ПравоЧтения" ИЛИ "#Параметр(45)" = "ПравоДобавления" ИЛИ "#Параметр(45)" = "ПравоИзменения"
  ИЛИ "#Параметр(45)" = "Объект"      ИЛИ "#Параметр(45)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр46
    ПО
          ТипЗначения(#Параметр(46)) = ТипЗначения(ТипыСсылокПараметр46.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 14.
#Если "#Параметр(45)" = "Объект" ИЛИ "#Параметр(45)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр46
    ПО 
          ЗависимостиПравПараметр46.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр46.ТипВедущейТаблицы  = ТипыСсылокПараметр46.ТипТаблицы
#КонецЕсли

//// Подготовка ТипаСсылки значения поля группы параметров 15.
#Если "#Параметр(48)" = "ПравоЧтения" ИЛИ "#Параметр(48)" = "ПравоДобавления" ИЛИ "#Параметр(48)" = "ПравоИзменения"
  ИЛИ "#Параметр(48)" = "Объект"      ИЛИ "#Параметр(48)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр49
    ПО
          ТипЗначения(#Параметр(49)) = ТипЗначения(ТипыСсылокПараметр49.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 15.
#Если "#Параметр(48)" = "Объект" ИЛИ "#Параметр(48)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр49
    ПО 
          ЗависимостиПравПараметр49.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр49.ТипВедущейТаблицы  = ТипыСсылокПараметр49.ТипТаблицы
#КонецЕсли

//// Подготовка ТипаСсылки значения поля группы параметров 16.
#Если "#Параметр(51)" = "ПравоЧтения" ИЛИ "#Параметр(51)" = "ПравоДобавления" ИЛИ "#Параметр(51)" = "ПравоИзменения"
  ИЛИ "#Параметр(51)" = "Объект"      ИЛИ "#Параметр(51)" = " " #Тогда
    Левое Соединение Справочник.ПрофилиГруппДоступа.ТипыСсылок КАК ТипыСсылокПараметр52
    ПО
          ТипЗначения(#Параметр(52)) = ТипЗначения(ТипыСсылокПараметр52.ТипТаблицы)
#КонецЕсли

//// Подготовка зависимости прав доступа текущей таблицы и объекта группы параметров 16.
#Если "#Параметр(51)" = "Объект" ИЛИ "#Параметр(51)" = " " #Тогда
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравПараметр52
    ПО 
          ЗависимостиПравПараметр52.ПодчиненнаяТаблица = "#Параметр(1)"
        И ЗависимостиПравПараметр52.ТипВедущейТаблицы  = ТипыСсылокПараметр52.ТипТаблицы
#КонецЕсли

// Присоединяемые таблицы к проверяемой строке текущей таблицы "Т".
#Параметр(4)

ГДЕ

// Безусловная выборка групп в иерархическом объекте метаданных (если нужно).
#Если "#Параметр(3)" = "НеОграничиватьДоступКГруппам" #Тогда
    Т.ЭтоГруппа ИЛИ
#КонецЕсли

Истина В
(   // Проверка права пользователя на текущую таблицу в целом.
    // Права на таблицы формируются по составу ролей профиля группы доступа.
    Выбрать Первые 1 Истина
    ИЗ
    (
        Выбрать РАЗЛИЧНЫЕ
            ТаблицыГруппДоступа.ГруппаДоступа
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступа
            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
            ПО
                  ТаблицыГруппДоступа.Таблица = "#Параметр(1)"
            #Если НЕ "#Параметр(2)" = "Чтение" #Тогда
                И ТаблицыГруппДоступа.#Параметр(2)
            #КонецЕсли
                И ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                И ПользователиИГруппыПользователей.ГруппаДоступа   = ТаблицыГруппДоступа.Пользователь
    ) КАК ТаблицыГруппДоступа
    ГДЕ
          ( // Поиск значений заданных полей в группах доступа (пользователей) по заданным видам доступа.

    #Параметр(5)  // [([(][(]...] 0-n открывающихся скобок.

//// Проверка значения поля группы параметров 1.
#Если "#Параметр(6)" = "Условие" ИЛИ "#Параметр(6)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    ( #Параметр(7) )
#ИначеЕсли "#Параметр(6)" = "ПравоЧтения" ИЛИ "#Параметр(6)" = "ПравоДобавления" ИЛИ "#Параметр(6)" = "ПравоИзменения" #Тогда
      #Параметр(7) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр7.ТипТаблицы
        #Если "#Параметр(6)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(6)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(6)" = "Объект" ИЛИ "#Параметр(6)" = " " #Тогда
      #Параметр(7) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр7.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр7.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр7.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр7.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(7)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр7.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр7.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(7)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(6) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(7)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(7)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(6)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(7)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(7)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(6)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(7)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(7)
        #ИначеЕсли "#Параметр(7)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(6)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(7)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(6) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(6) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(7)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(6)
            #КонецЕсли
        #Иначе  // "##Параметр(7)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(7)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(8)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 2.
#Если "#Параметр(9)" = "" И "#Параметр(10)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(9)" = "Условие" ИЛИ "#Параметр(9)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(10) )
#ИначеЕсли "#Параметр(9)" = "ПравоЧтения" ИЛИ "#Параметр(9)" = "ПравоДобавления" ИЛИ "#Параметр(9)" = "ПравоИзменения" #Тогда
     #Параметр(10) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр10.ТипТаблицы
        #Если "#Параметр(9)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(9)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(9)" = "Объект" ИЛИ "#Параметр(9)" = " " #Тогда
      #Параметр(10) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр10.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр10.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр10.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр10.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(10)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр10.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр10.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(10)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(9) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(10)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(10)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(9)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(10)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(10)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(9)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(10)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(10)
        #ИначеЕсли "#Параметр(10)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(9)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(10)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(9) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(9) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(10)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(9)
            #КонецЕсли
        #Иначе  // "##Параметр(10)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(10)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(11)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 3.
#Если "#Параметр(12)" = "" И "#Параметр(13)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(12)" = "Условие" ИЛИ "#Параметр(12)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(13) )
#ИначеЕсли "#Параметр(12)" = "ПравоЧтения" ИЛИ "#Параметр(12)" = "ПравоДобавления" ИЛИ "#Параметр(12)" = "ПравоИзменения" #Тогда
     #Параметр(13) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр13.ТипТаблицы
        #Если "#Параметр(12)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(12)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(12)" = "Объект" ИЛИ "#Параметр(12)" = " " #Тогда
      #Параметр(13) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр13.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр13.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр13.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр13.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(13)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр13.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр13.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(13)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(12) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(13)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(13)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(12)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(13)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(13)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(12)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(13)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(13)
        #ИначеЕсли "#Параметр(13)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(12)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(13)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(12) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(12) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(13)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(12)
            #КонецЕсли
        #Иначе  // "##Параметр(13)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(13)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(14)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 4.
#Если "#Параметр(15)" = "" И "#Параметр(16)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(15)" = "Условие" ИЛИ "#Параметр(15)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(16) )
#ИначеЕсли "#Параметр(15)" = "ПравоЧтения" ИЛИ "#Параметр(15)" = "ПравоДобавления" ИЛИ "#Параметр(15)" = "ПравоИзменения" #Тогда
     #Параметр(16) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр16.ТипТаблицы
        #Если "#Параметр(15)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(15)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(15)" = "Объект" ИЛИ "#Параметр(15)" = " " #Тогда
      #Параметр(16) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр16.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр16.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр16.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр16.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(16)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр16.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр16.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(16)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(15) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(16)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(16)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(15)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(16)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(16)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(15)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(16)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(16)
        #ИначеЕсли "#Параметр(16)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(15)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(16)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(15) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(15) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(16)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(15)
            #КонецЕсли
        #Иначе  // "##Параметр(16)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(16)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(17)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 5.
#Если "#Параметр(18)" = "" И "#Параметр(19)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(18)" = "Условие" ИЛИ "#Параметр(18)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(19) )
#ИначеЕсли "#Параметр(18)" = "ПравоЧтения" ИЛИ "#Параметр(18)" = "ПравоДобавления" ИЛИ "#Параметр(18)" = "ПравоИзменения" #Тогда
     #Параметр(19) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр19.ТипТаблицы
        #Если "#Параметр(18)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(18)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(18)" = "Объект" ИЛИ "#Параметр(18)" = " " #Тогда
      #Параметр(19) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр19.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр19.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр19.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр19.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(19)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр19.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр19.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(19)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(18) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(19)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(19)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(18)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(19)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(19)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(18)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(19)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(19)
        #ИначеЕсли "#Параметр(19)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(18)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(19)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(18) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(18) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(19)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(18)
            #КонецЕсли
        #Иначе  // "##Параметр(19)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(19)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(20)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 6.
#Если "#Параметр(21)" = "" И "#Параметр(22)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(21)" = "Условие" ИЛИ "#Параметр(21)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(22) )
#ИначеЕсли "#Параметр(21)" = "ПравоЧтения" ИЛИ "#Параметр(21)" = "ПравоДобавления" ИЛИ "#Параметр(21)" = "ПравоИзменения" #Тогда
     #Параметр(22) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр22.ТипТаблицы
        #Если "#Параметр(21)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(21)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(21)" = "Объект" ИЛИ "#Параметр(21)" = " " #Тогда
      #Параметр(22) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр22.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр22.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр22.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр22.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(22)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр22.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр22.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(22)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(21) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(22)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(22)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(21)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(22)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(22)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(21)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(22)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(22)
        #ИначеЕсли "#Параметр(22)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(21)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(22)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(21) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(21) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(22)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(21)
            #КонецЕсли
        #Иначе  // "##Параметр(22)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(22)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(23)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 7.
#Если "#Параметр(24)" = "" И "#Параметр(25)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(24)" = "Условие" ИЛИ "#Параметр(24)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(25) )
#ИначеЕсли "#Параметр(24)" = "ПравоЧтения" ИЛИ "#Параметр(24)" = "ПравоДобавления" ИЛИ "#Параметр(24)" = "ПравоИзменения" #Тогда
     #Параметр(25) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр25.ТипТаблицы
        #Если "#Параметр(24)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(24)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(24)" = "Объект" ИЛИ "#Параметр(24)" = " " #Тогда
      #Параметр(25) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр25.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр25.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр25.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр25.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(25)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр25.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр25.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(25)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(24) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(25)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(25)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(24)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(25)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(25)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(24)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(25)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(25)
        #ИначеЕсли "#Параметр(25)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(24)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(25)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(24) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(24) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(25)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(24)
            #КонецЕсли
        #Иначе  // "##Параметр(25)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(25)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(26)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 8.
#Если "#Параметр(27)" = "" И "#Параметр(28)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(27)" = "Условие" ИЛИ "#Параметр(27)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(28) )
#ИначеЕсли "#Параметр(27)" = "ПравоЧтения" ИЛИ "#Параметр(27)" = "ПравоДобавления" ИЛИ "#Параметр(27)" = "ПравоИзменения" #Тогда
     #Параметр(28) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр28.ТипТаблицы
        #Если "#Параметр(27)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(27)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(27)" = "Объект" ИЛИ "#Параметр(27)" = " " #Тогда
      #Параметр(28) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр28.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр28.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр28.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр28.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(28)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр28.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр28.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(28)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(27) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(28)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(28)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(27)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(28)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(28)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(27)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(28)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(28)
        #ИначеЕсли "#Параметр(28)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(27)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(28)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(27) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(27) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(28)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(27)
            #КонецЕсли
        #Иначе  // "##Параметр(28)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(28)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(29)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 9.
#Если "#Параметр(30)" = "" И "#Параметр(31)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(30)" = "Условие" ИЛИ "#Параметр(30)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(31) )
#ИначеЕсли "#Параметр(30)" = "ПравоЧтения" ИЛИ "#Параметр(30)" = "ПравоДобавления" ИЛИ "#Параметр(30)" = "ПравоИзменения" #Тогда
     #Параметр(31) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр31.ТипТаблицы
        #Если "#Параметр(30)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(30)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(30)" = "Объект" ИЛИ "#Параметр(30)" = " " #Тогда
      #Параметр(31) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр31.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр31.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр31.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр31.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(31)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр31.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр31.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(31)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(30) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(31)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(31)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(30)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(31)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(31)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(30)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(31)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(31)
        #ИначеЕсли "#Параметр(31)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(30)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(31)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(30) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(30) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(31)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(30)
            #КонецЕсли
        #Иначе  // "##Параметр(31)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(31)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(32)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 10.
#Если "#Параметр(33)" = "" И "#Параметр(34)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(33)" = "Условие" ИЛИ "#Параметр(33)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(34) )
#ИначеЕсли "#Параметр(33)" = "ПравоЧтения" ИЛИ "#Параметр(33)" = "ПравоДобавления" ИЛИ "#Параметр(33)" = "ПравоИзменения" #Тогда
     #Параметр(34) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр34.ТипТаблицы
        #Если "#Параметр(33)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(33)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(33)" = "Объект" ИЛИ "#Параметр(33)" = " " #Тогда
      #Параметр(34) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр34.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр34.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр34.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр34.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(34)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр34.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр34.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(34)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(33) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(34)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(34)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(33)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(34)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(34)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(33)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(34)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(34)
        #ИначеЕсли "#Параметр(34)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(33)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(34)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(33) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(33) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(34)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(33)
            #КонецЕсли
        #Иначе  // "##Параметр(34)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(34)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(35)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 11.
#Если "#Параметр(36)" = "" И "#Параметр(37)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(36)" = "Условие" ИЛИ "#Параметр(36)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(37) )
#ИначеЕсли "#Параметр(36)" = "ПравоЧтения" ИЛИ "#Параметр(36)" = "ПравоДобавления" ИЛИ "#Параметр(36)" = "ПравоИзменения" #Тогда
     #Параметр(37) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр37.ТипТаблицы
        #Если "#Параметр(36)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(36)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(36)" = "Объект" ИЛИ "#Параметр(36)" = " " #Тогда
      #Параметр(37) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр37.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр37.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр37.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр37.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(37)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр37.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр37.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(37)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(36) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(37)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(37)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(36)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(37)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(37)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(36)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(37)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(37)
        #ИначеЕсли "#Параметр(37)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(36)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(37)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(36) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(36) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(37)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(36)
            #КонецЕсли
        #Иначе  // "##Параметр(37)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(37)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(38)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 12.
#Если "#Параметр(39)" = "" И "#Параметр(40)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(39)" = "Условие" ИЛИ "#Параметр(39)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(40) )
#ИначеЕсли "#Параметр(39)" = "ПравоЧтения" ИЛИ "#Параметр(39)" = "ПравоДобавления" ИЛИ "#Параметр(39)" = "ПравоИзменения" #Тогда
     #Параметр(40) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр40.ТипТаблицы
        #Если "#Параметр(39)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(39)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(39)" = "Объект" ИЛИ "#Параметр(39)" = " " #Тогда
      #Параметр(40) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр40.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр40.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр40.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр40.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(40)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр40.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр40.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(40)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(39) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(40)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(40)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(39)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(40)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(40)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(39)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(40)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(40)
        #ИначеЕсли "#Параметр(40)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(39)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(40)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(39) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(39) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(40)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(39)
            #КонецЕсли
        #Иначе  // "##Параметр(40)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(40)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(41)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 13.
#Если "#Параметр(42)" = "" И "#Параметр(43)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(42)" = "Условие" ИЛИ "#Параметр(42)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(43) )
#ИначеЕсли "#Параметр(42)" = "ПравоЧтения" ИЛИ "#Параметр(42)" = "ПравоДобавления" ИЛИ "#Параметр(42)" = "ПравоИзменения" #Тогда
     #Параметр(43) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр43.ТипТаблицы
        #Если "#Параметр(42)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(42)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(42)" = "Объект" ИЛИ "#Параметр(42)" = " " #Тогда
      #Параметр(43) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр43.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр43.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр43.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр43.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(43)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр43.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр43.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(43)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(42) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(43)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(43)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(42)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(43)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(43)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(42)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(43)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(43)
        #ИначеЕсли "#Параметр(43)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(42)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(43)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(42) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(42) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(43)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(42)
            #КонецЕсли
        #Иначе  // "##Параметр(43)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(43)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(44)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 14.
#Если "#Параметр(45)" = "" И "#Параметр(46)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(45)" = "Условие" ИЛИ "#Параметр(45)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(46) )
#ИначеЕсли "#Параметр(45)" = "ПравоЧтения" ИЛИ "#Параметр(45)" = "ПравоДобавления" ИЛИ "#Параметр(45)" = "ПравоИзменения" #Тогда
     #Параметр(46) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр46.ТипТаблицы
        #Если "#Параметр(45)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(45)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(45)" = "Объект" ИЛИ "#Параметр(45)" = " " #Тогда
      #Параметр(46) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр46.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр46.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр46.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр46.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(46)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр46.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр46.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(46)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(45) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(46)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(46)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(45)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(46)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(46)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(45)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(46)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(46)
        #ИначеЕсли "#Параметр(46)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(45)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(46)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(45) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(45) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(46)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(45)
            #КонецЕсли
        #Иначе  // "##Параметр(46)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(46)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(47)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 15.
#Если "#Параметр(48)" = "" И "#Параметр(49)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(48)" = "Условие" ИЛИ "#Параметр(48)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(49) )
#ИначеЕсли "#Параметр(48)" = "ПравоЧтения" ИЛИ "#Параметр(48)" = "ПравоДобавления" ИЛИ "#Параметр(48)" = "ПравоИзменения" #Тогда
     #Параметр(49) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр49.ТипТаблицы
        #Если "#Параметр(48)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(48)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(48)" = "Объект" ИЛИ "#Параметр(48)" = " " #Тогда
      #Параметр(49) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр49.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр49.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр49.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр49.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(49)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр49.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр49.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(49)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(48) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(49)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(49)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(48)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(49)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(49)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(48)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(49)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(49)
        #ИначеЕсли "#Параметр(49)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(48)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(49)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(48) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(48) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(49)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(48)
            #КонецЕсли
        #Иначе  // "##Параметр(49)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(49)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(50)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 16.
#Если "#Параметр(51)" = "" И "#Параметр(52)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(51)" = "Условие" ИЛИ "#Параметр(51)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(52) )
#ИначеЕсли "#Параметр(51)" = "ПравоЧтения" ИЛИ "#Параметр(51)" = "ПравоДобавления" ИЛИ "#Параметр(51)" = "ПравоИзменения" #Тогда
     #Параметр(52) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы    = ТипыСсылокПараметр52.ТипТаблицы
        #Если "#Параметр(51)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(51)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(51)" = "Объект" ИЛИ "#Параметр(51)" = " " #Тогда
      #Параметр(52) &lt;&gt; Неопределено
    // Проверка права
    И НЕ
    (
          НЕ ЕстьNULL(ЗависимостиПравПараметр52.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
        И НЕ Истина В
        (
        Выбрать Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
        ГДЕ
              ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
            И ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы    = ТипыСсылокПараметр52.ТипТаблицы
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр52.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр52.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления,
                    ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения )
        )
    )
    // Проверка ограничения права
    И Истина В
    (
        Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
        ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
        ГДЕ
              НомераНаборов.Объект = #Параметр(52)
        #Если "#Параметр(2)" = "Чтение" #Тогда
            И (ЕстьNULL(ЗависимостиПравПараметр52.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)) ) В
        #Иначе
            И (ЕстьNULL(ЗависимостиПравПараметр52.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)) ) В
        #КонецЕсли
                  ( НомераНаборов.ВидДоступаПравоЧтения,
                    НомераНаборов.ВидДоступаПравоДобавления,
                    НомераНаборов.ВидДоступаПравоИзменения )
            И НЕ Ложь В
        (
            Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
            ГДЕ
                  НаборыЗначений.Объект      = #Параметр(52)
                И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                И НЕ
            Выбор
            // Проверка заведомого ложного или истинного однострочного набора значений.
            Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
            Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
            // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            Когда ТипЗначенияДоступа &lt;&gt; Неопределено
            Тогда Истина В
                (   Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                    ГДЕ
                          ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ТаблицыГруппДоступа.ГруппаДоступа
                        И ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы    = НаборыЗначений.ТипЗначенияДоступа
                        И НаборыЗначений.ВидДоступа В ( Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоДобавления,
                                                        ТаблицыГруппДоступаПроверкаПраваНаОбъект.ВидДоступаПравоИзменения )
                )
        #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
            Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
            Тогда
                (
                 НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                    (
                    Выбрать Истина
                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                    ГДЕ
                          Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                        И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И Виды.ТолькоВидДоступа = Истина
                    )
                ИЛИ
                    Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                    И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        Выбрать Первые 1 Ложь
                        ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                            ПО
                                  ИерархияЗначений.ИспользоватьПраваСсылки
                                И ИерархияЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                И ИерархияЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                                И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                                И ПраваПоЗначениям.#Параметр(2)Запрещено
                                И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                            Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                            ПО
                                  ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                                И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
                        )
                )
        #КонецЕсли
            Иначе
        #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
              НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                (
                // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                // Проверка наличия вида доступа у значения доступа.
                ИЛИ НЕ Истина В
                    (
                    Выбрать Первые 1 Истина 
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                    ГДЕ
                          ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                        И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        И ВидыЗначений.ТолькоВидДоступа = Истина
                    )
                )
            И
        #КонецЕсли
                Выбор
                Когда
                #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = "" #Тогда
                    НаборыЗначений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                    И Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                    ГДЕ
                          ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                        И ПользователиИГруппыПользователей.ГруппаДоступа   = НаборыЗначений.ЗначениеДоступа
                    )
                    ИЛИ
                #КонецЕсли
                #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                      &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                    Выбор
                    Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                        ГДЕ
                              Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Значения.ТолькоВидДоступа = Ложь
                            И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                #Иначе
                    Выбор
                    Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                    Тогда
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Иначе
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                    И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                                    И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Конец
                #КонецЕсли
                    =
                    Выбор
                    Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Тогда Истина
                Иначе Ложь
                Конец
            Конец
        )   //      НЕ Ложь В
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(51) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(52)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(52)
                    И ПраваПоЗначениям.Таблица         = "#Параметр(1)"
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ПО
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(51)" = "Пользователи" #Тогда
            Истина В
                (
                Выбрать Первые 1 Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
                ГДЕ
                      ПользователиИГруппыПользователей.ЗначениеДоступа = &amp;ТекущийПользователь
                    И ПользователиИГруппыПользователей.ГруппаДоступа   = #Параметр(52)
                )
            ИЛИ
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(52)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(51)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(52)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(52)
        #ИначеЕсли "#Параметр(52)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(51)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(52)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(51) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(51) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(52)
                    И Значения.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(51)
            #КонецЕсли
        #Иначе  // "##Параметр(52)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(52)
                    И Значения.ГруппаДоступа         = ТаблицыГруппДоступа.ГруппаДоступа
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ТаблицыГруппДоступа.ГруппаДоступа
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(53)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

  )
)
#КонецЕсли</condition>
	</restrictionTemplate>
</Rights>