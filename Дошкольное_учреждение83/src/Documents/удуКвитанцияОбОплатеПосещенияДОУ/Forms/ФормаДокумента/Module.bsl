&НаСервере
Процедура ОбновитьСведенияОбОплатеДоговора() Экспорт
	// Отбор по учреждению
	ТекстЗапроса = "ВЫБРАТЬ
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Группа,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.СостояниеУчетаВГруппе,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.ОснованиеЗачисления,
	               |	ЕСТЬNULL(удуВзаиморасчетыСРодителямиОстатки.СуммаОстаток, 0) КАК Сумма
	               |ИЗ
	               |	РегистрСведений.удуСведенияОЗачисленииРебенкаВГруппу.СрезПоследних(
	               |			&ДатаВыборки,
	               |			Ребенок = &ПараметрРебенок
	               |				И Учреждение = &Учреждение) КАК удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.удуВзаиморасчетыСРодителями.Остатки(
	               |				&ДатаВыборки,
	               |				Ребенок = &ПараметрРебенок
	               |					И Учреждение = &Учреждение) КАК удуВзаиморасчетыСРодителямиОстатки
	               |		ПО (ИСТИНА)";
				   
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДатаВыборки", Объект.Дата);
	Запрос.УстановитьПараметр("ПараметрРебенок", Объект.Ребенок);
	Запрос.УстановитьПараметр("Учреждение",Объект.Учреждение);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Не ЗначениеЗаполнено(Объект.СуммаОплаты) Тогда 
		Если Результат.Количество() = 0 Тогда
			ТекущийДоговор = Документы.удуДоговорОЗачисленииРебенка.ПустаяСсылка();
			Объект.СуммаОплаты = 0;
		Иначе
			СтрокаРезультат = Результат.Получить(Результат.Количество() - 1);
			Если СтрокаРезультат.СостояниеУчетаВГруппе = Перечисления.удуСостояниеРебенкаНаУчетеВГруппе.ПринятВГруппу Тогда 
				ТекущийДоговор = СтрокаРезультат.ОснованиеЗачисления;
				Объект.СуммаОплаты = СтрокаРезультат.Сумма;
			Иначе
				ТекущийДоговор = Документы.удуДоговорОЗачисленииРебенка.ПустаяСсылка();
				Объект.СуммаОплаты = 0;
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;

	СведенияОДоговоре = ТекущийДоговор;
		
	Если ЗначениеЗаполнено(ТекущийДоговор) Тогда 
		Элементы.НадписьСведенияОбОплате.Заголовок = "Оплата по договору посещения группы составляет: " + Формат(ТекущийДоговор.ОплатаПоДоговору) + " руб.";
	Иначе
		Элементы.НадписьСведенияОбОплате.Заголовок = "Отсутствуют сведения о договоре посещения группы";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьТекущуюГруппуРебенка(Ребенок, ДатаВыборки) Экспорт
	ТекстЗапроса = "ВЫБРАТЬ
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Группа,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.СостояниеУчетаВГруппе
	               |ИЗ
	               |	РегистрСведений.удуСведенияОЗачисленииРебенкаВГруппу.СрезПоследних(&ДатаВыборки, Ребенок = &ПараметрРебенок) КАК удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних";
				   
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДатаВыборки", ДатаВыборки);
	Запрос.УстановитьПараметр("ПараметрРебенок", Ребенок);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда
		Возврат Справочники.удуГруппыУчреждения.ПустаяСсылка();
	Иначе
		СтрокаРезультат = Результат.Получить(Результат.Количество() - 1);
		Если СтрокаРезультат.СостояниеУчетаВГруппе = Перечисления.удуСостояниеРебенкаНаУчетеВГруппе.ПринятВГруппу Тогда 
			Возврат СтрокаРезультат.Группа;
		Иначе
			Возврат Справочники.удуГруппыУчреждения.ПустаяСсылка();	
		КонецЕсли;	
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ОбновитьСведенияОСоставеГруппы() Экспорт
	// Отбор по учреждению
	сэРезультатВыполнения = удуОбработкаПросмотрИнформации.ПолучитьсоставГруппы(Объект.Группа, ТекущаяДата());
	ЗначениеВРеквизитФормы(сэРезультатВыполнения, "СоставВыбраннойГруппы");
	
	Если Объект.Группа.БезОграниченияВместительности Тогда
		Элементы.НадписьСведенияОГруппе.Заголовок = "Количество детей в выбранной группе: " + Строка(сэРезультатВыполнения.Количество()) + ". Вместительность группы не ограничена.";
	Иначе
		Элементы.НадписьСведенияОГруппе.Заголовок = "Количество детей в выбранной группе: " + Строка(сэРезультатВыполнения.Количество()) + ". Вместительность группы: " + Строка(Объект.Группа.Вместительность);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НадписьСведенияОГруппеНажатие(Элемент)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	Если СоставВыбраннойГруппы.Количество() > 0 Тогда 
		ФормаПросмотра = ПолучитьФорму("ОбщаяФорма.удуФормаПросмотраСоставаГруппы");	
		ФормаПросмотра.ВладелецФормы = ЭтаФорма;
		Для Каждого СтрокаСоставГруппы Из СоставВыбраннойГруппы Цикл
			НоваяСтрокаФормыПросмотра = ФормаПросмотра.ТабличнаяЧастьДети.Добавить();
			НоваяСтрокаФормыПросмотра.Ребенок = СтрокаСоставГруппы.Ребенок;
			НоваяСтрокаФормыПросмотра.Пол = СтрокаСоставГруппы.Пол;
			НоваяСтрокаФормыПросмотра.ДатаРождения = СтрокаСоставГруппы.ДатаРождения;
		КонецЦикла;
		ФормаПросмотра.ОткрытьМодально();		
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтоНовый = Не ЗначениеЗаполнено(ЭтаФорма.Объект.Ссылка);
	
	Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
		Объект.Учреждение = Константы.удуОсновноеУчреждение.Получить();
		Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
			ЭтаФорма.Элементы.Учреждение.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьСведенияОСоставеГруппы();	
	
	Если ЭтоНовый Тогда 
		ОбновитьСведенияОбОплатеДоговора();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РебенокОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;

	ТекущаяГруппа = ПолучитьТекущуюГруппуРебенка(ВыбранноеЗначение, Объект.Дата);
	
	Если ЗначениеЗаполнено(ТекущаяГруппа) Тогда
		Если ТекущаяГруппа = Объект.Группа Тогда
			Объект.Ребенок = ВыбранноеЗначение;			
		ИначеЕсли Не ЗначениеЗаполнено(Объект.Группа) Тогда
			Объект.Ребенок = ВыбранноеЗначение;
			Объект.Группа = ТекущаяГруппа;			
		Иначе
			Если Вопрос("На " + Формат(Объект.Дата, "ДЛФ=D") + " " + Строка(ВыбранноеЗначение) + " числится в другой группе, заменить значение в документе?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				Объект.Ребенок = ВыбранноеЗначение;
				Объект.Группа = ТекущаяГруппа;				
			КонецЕсли;
		КонецЕсли;
	Иначе
		Вопрос("На " + Формат(Объект.Дата, "ДЛФ=D") + " " + Строка(ВыбранноеЗначение) + " не числится ни в какой группе!", РежимДиалогаВопрос.ОК);
	КонецЕсли;
	
	Объект.РодительОплатившийКвитанцию = ПредопределенноеЗначение("Справочник.удуРодители.ПустаяСсылка");
	
	ОбновитьСведенияОбОплатеДоговора();
	ОбновитьСведенияОСоставеГруппы();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НадписьСведенияОбОплатеНажатие(Элемент)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(СведенияОДоговоре) Тогда 
		ПередаваемыеПараметры = Новый Структура("Ключ", СведенияОДоговоре);
		ОткрытьФормуМодально("Документ.удуДоговорОЗачисленииРебенка.Форма.ФормаДокумента", ПередаваемыеПараметры, ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаОчистка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура РодительОплатившийКвитанциюНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.Ребенок) Тогда
		ФормаВыбораРодителя = ПолучитьФорму("ОбщаяФорма.удуФормаВыбораРодителя");
		ФормаВыбораРодителя.ПараметрРебенок = Объект.Ребенок;
		ФормаВыбораРодителя.ВладелецФормы = ЭтаФорма;
		ФормаВыбораРодителя.ОткрытьМодально();				
	Иначе
		Вопрос("Перед выбором родителя необходимо выбрать ребенка!", РежимДиалогаВопрос.ОК);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.удуРодители") Тогда
		Объект.РодительОплатившийКвитанцию = ВыбранноеЗначение;
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.удуСотрудникиОрганизаций") Тогда
		Объект.ФИОВоспитателя = ВыбранноеЗначение;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ФИОВоспитателяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.Группа) Тогда
		ФормаВыбораВоспитателя = ПолучитьФорму("ОбщаяФорма.удуФормаВыбораВоспитателя");
		ФормаВыбораВоспитателя.ПараметрГруппа = Объект.Группа;
		ФормаВыбораВоспитателя.ВладелецФормы = ЭтаФорма;
		ФормаВыбораВоспитателя.ОткрытьМодально();				
	Иначе
		Вопрос("Перед выбором воспитателя необходимо сначала выбрать группу!", РежимДиалогаВопрос.ОК);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(Объект.Ребенок) Тогда	
		ГруппаНаДату = ПолучитьТекущуюГруппуРебенка(Объект.Ребенок, ВыбранноеЗначение);		
		Если ГруппаНаДату <> Объект.Группа Тогда
			СтандартнаяОбработка = Ложь;
			Вопрос("На " + Формат(ВыбранноеЗначение, "ДЛФ=D") + " " + Строка(Объект.Ребенок) + " не числится в данной группе, изменение даты невозможно!", РежимДиалогаВопрос.ОК);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(Объект.Ребенок) Тогда	
		ГруппаНаДату = ПолучитьТекущуюГруппуРебенка(Объект.Ребенок, Дата(Текст));		
		Если ГруппаНаДату <> Объект.Группа Тогда
			СтандартнаяОбработка = Ложь;
			Вопрос("На " + Формат(Дата(Текст), "ДЛФ=D") + " " + Строка(Объект.Ребенок) + " не числится в данной группе, изменение даты невозможно!", РежимДиалогаВопрос.ОК);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

