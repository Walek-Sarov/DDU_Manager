&НаСервере
Функция ОтсутствуютДоговораПоЗаявке(ПереданнаяЗаявка)
	ТекстЗапроса = "ВЫБРАТЬ
	               |	удуДоговорОЗачисленииРебенка.Ссылка
	               |ИЗ
	               |	Документ.удуДоговорОЗачисленииРебенка КАК удуДоговорОЗачисленииРебенка
	               |ГДЕ
	               |	(НЕ удуДоговорОЗачисленииРебенка.ПометкаУдаления)
	               |	И удуДоговорОЗачисленииРебенка.ЗаявкаОснование = &ЗаявкаОснование
	               |	И (НЕ удуДоговорОЗачисленииРебенка.ПризнакФормированияБезЗаявки)
	               |	И удуДоговорОЗачисленииРебенка.Ссылка <> &Ссылка";
				   
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ЗаявкаОснование", ПереданнаяЗаявка);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Булево(Результат.Количество() = 0);	
КонецФункции

&НаСервере
Функция ВЗаявкеНеОтказано(ПереданнаяЗаявка)
	Возврат НЕ ПереданнаяЗаявка.ПризнакОтказаВЗачислении;
КонецФункции

&НаСервере
Процедура ЗаполнитьПоДокументуОснованиюНаСервере(ПараметрОснование)
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Дата = ТекущаяДата();
	ДокументОбъект.Группа = ПараметрОснование.ГруппаЖелаемая;
	ДокументОбъект.Ребенок = ПараметрОснование.Ребенок;
	ДокументОбъект.Родитель = ПараметрОснование.РодительПодавшийЗаявку;
	ДокументОбъект.Учреждение = ПараметрОснование.Учреждение;
	ДокументОбъект.ПризнакФормированияБезЗаявки = Ложь;
	ДокументОбъект.ЗаявкаОснование = ПараметрОснование.Ссылка;	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

&НаСервере
Процедура ОбновитьСведенияОСоставеГруппы()
	// Отбор по учреждению
	Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда 
		Объект.Учреждение = Объект.Группа.Учреждение;
	КонецЕсли;
	
	сэРезультатВыполнения = удуОбработкаПросмотрИнформации.ПолучитьсоставГруппы(Объект.Группа, ТекущаяДата());		
	ЗначениеВРеквизитФормы(сэРезультатВыполнения, "СоставВыбраннойГруппы");
	
	Если Объект.Группа.БезОграниченияВместительности Тогда
		Элементы.НадписьСведенияОГруппе.Заголовок = "Количество детей в выбранной группе: " + Строка(сэРезультатВыполнения.Количество()) + ". Вместительность группы не ограничена.";
	Иначе
		Элементы.НадписьСведенияОГруппе.Заголовок = "Количество детей в выбранной группе: " + Строка(сэРезультатВыполнения.Количество()) + ". Вместительность группы: " + Строка(Объект.Группа.Вместительность);
	КонецЕсли;
	
	Если Объект.Группа.КомпенсирующаяНаправленность Тогда
		Объект.ОплатаПоДоговору = 0;
		Элементы.ОплатаПоДоговору.Доступность = Ложь;
	Иначе
		Элементы.ОплатаПоДоговору.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
		Объект.Учреждение = Константы.удуОсновноеУчреждение.Получить();
		Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
			ЭтаФорма.Элементы.Учреждение.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьСведенияОСоставеГруппы();	
	
	Элементы.ЗаявкаОснование.Доступность = НЕ Объект.ПризнакФормированияБезЗаявки;
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура НадписьСведенияОГруппеНажатие(Элемент)
	// Вставить содержимое обработчика.
	Если СоставВыбраннойГруппы.Количество() > 0 Тогда 
		ФормаПросмотра = ПолучитьФорму("ОбщаяФорма.удуФормаПросмотраСоставаГруппы");
		ФормаПросмотра.ВладелецФормы = ЭтаФорма;
		Для Каждого СтрокаСоставГруппы Из СоставВыбраннойГруппы Цикл
			НоваяСтрокаФормыПросмотра = ФормаПросмотра.ТабличнаяЧастьДети.Добавить();
			НоваяСтрокаФормыПросмотра.Ребенок = СтрокаСоставГруппы.Ребенок;
			НоваяСтрокаФормыПросмотра.Пол = СтрокаСоставГруппы.Пол;
			НоваяСтрокаФормыПросмотра.ДатаРождения = СтрокаСоставГруппы.ДатаРождения;
		КонецЦикла;
		ФормаПросмотра.ОткрытьМодально();		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ОбновитьСведенияОСоставеГруппы();
КонецПроцедуры

&НаКлиенте
Процедура РодительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.Ребенок) Тогда
		ФормаВыбораРодителя = ПолучитьФорму("ОбщаяФорма.удуФормаВыбораРодителя");
		ФормаВыбораРодителя.ПараметрРебенок = Объект.Ребенок;
		ФормаВыбораРодителя.ВладелецФормы = ЭтаФорма;
		ФормаВыбораРодителя.ОткрытьМодально();				
	Иначе
		Вопрос("Перед выбором родителя необходимо выбрать ребенка!", РежимДиалогаВопрос.ОК);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.удуРодители") Тогда
		Объект.Родитель = ВыбранноеЗначение;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкаОснованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Если ОтсутствуютДоговораПоЗаявке(ВыбранноеЗначение) Тогда
			Если ВЗаявкеНеОтказано(ВыбранноеЗначение) Тогда 		
				Если Вопрос("При изменении документа-основания реквизиты документа будут изменены в соответствии с выбранным значением! Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
					ЗаполнитьПоДокументуОснованиюНаСервере(ВыбранноеЗначение);
				Иначе
					СтандартнаяОбработка = Ложь;
				КонецЕсли;		
			Иначе
				Вопрос("По выбранной заявке было отказано в зачислении ребенка в группу", РежимДиалогаВопрос.ОК);
				СтандартнаяОбработка = Ложь;
			КонецЕсли;			
		Иначе
			Вопрос("По выбранной заявке уже сформирован договор о зачислении ребенка в группу", РежимДиалогаВопрос.ОК);
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПризнакФормированияБезЗаявкиПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Элементы.ЗаявкаОснование.Доступность = НЕ Объект.ПризнакФормированияБезЗаявки;
	
	Если Объект.ПризнакФормированияБезЗаявки Тогда
		Объект.ЗаявкаОснование = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ПризнакФормированияБезЗаявки.Доступность = НЕ ЗначениеЗаполнено(Объект.ЗаявкаОснование);
	Элементы.ЗаявкаОснование.Доступность = НЕ Объект.ПризнакФормированияБезЗаявки;
КонецПроцедуры

&НаКлиенте
Процедура ВидСтавкиОплатыПриИзменении(Элемент)
	
	УстановитьЗаголовокОплатыПоДоговору()
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокОплатыПоДоговору()
	Если Объект.ВидСтавкиОплаты=Перечисления.удуВидыСтавокРодительскойПлаты.Месячная Тогда 
		Элементы.ОплатаПоДоговору.Заголовок="Оплата по договору (руб./мес.)"
	Иначе
		Элементы.ОплатаПоДоговору.Заголовок="Оплата по договору (руб./день)"
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		Если ЗначениеЗаполнено(Объект.Учреждение) Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыОтбора = Новый Структура("Учреждение",Объект.Учреждение);
		ПараметрыФормы = Новый Структура("Отбор", ПараметрыОтбора);
		ОткрытьФорму("Справочник.удуГруппыУчреждения.ФормаВыбора",ПараметрыФормы,Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкаОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.Учреждение) тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыОтбора = Новый Структура("Учреждение",Объект.Учреждение);
		ПараметрыФормы = Новый Структура("Отбор",ПараметрыОтбора);
		ОткрытьФорму("Документ.удуЗаявкаНаЗачислениеРебенкаВДОУ.ФормаВыбора",ПараметрыФормы,Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УчреждениеПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(Объект.Учреждение) Тогда
		Объект.Группа = Объект.Группа.Пустая();
	КонецЕсли;
КонецПроцедуры
