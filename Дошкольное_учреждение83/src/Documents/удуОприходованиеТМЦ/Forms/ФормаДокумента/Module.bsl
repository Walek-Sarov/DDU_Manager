////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


// Анализирует состав ТЧ ТМЦ, и определяет, нужно ли очищать ее при смене вида операции.
// Параметры:
// ВидОперации - Вид операции документа
//
&НаСервере
Функция ОпределитьНеобходимостьОчисткиТЧ_ТМЦ(ВидОперации)
	
    // Проверять нечего:	
	Если Объект.ТМЦ.Количество() = 0 Тогда
		Возврат(Ложь)
	КонецЕсли;
	
	// В соответствии с видом операции, в тч "ТМЦ" должна быть номенклатура одного типа.
	// Поэтому достаточно определить вид номенклатуры первой позиции:
	ВидНом = Объект.ТМЦ[0].Номенклатура.ВидНоменклатуры;
	
	Рез = Истина;
	
	Если ((ВидОперации = Перечисления.удуВидыОперацийПриходТМЦ.ПокупкаМатериалов) или
		 (ВидОперации = Перечисления.удуВидыОперацийПриходТМЦ.ПоступлениеМатериаловПрочее)) 
	   и (ВидНом = Перечисления.удуВидыНоменклатуры.Материал) Тогда
	   Рез = Ложь;
	   
   	ИначеЕсли (ВидОперации = Перечисления.удуВидыОперацийПриходТМЦ.ПокупкаОС)
	        и (ВидНом = Перечисления.удуВидыНоменклатуры.ОС) Тогда
       Рез = Ложь;
		
	ИначеЕсли (ВидОперации = Перечисления.удуВидыОперацийПриходТМЦ.ПокупкаПродуктовПитания)
	        и (ВидНом = Перечисления.удуВидыНоменклатуры.ПродуктПитания) Тогда
       Рез = Ложь; 
		
	КонецЕсли;
	
	Возврат (Рез);
	
КонецФункции	


// В зависимости от вида операции, определяет допустимый вид номенклатуры.
// Параметры:
// ВидОперации - Вид операции документа
//
&НаСервере
Функция ОпределитьДоступныеВидНоменклатуры(ВидОперации)

	Рез = Перечисления.удуВидыНоменклатуры.Материал;
	
	Если ВидОперации = Перечисления.удуВидыОперацийПриходТМЦ.ПокупкаОС Тогда
		Рез = Перечисления.удуВидыНоменклатуры.ОС;
	ИначеЕсли  ВидОперации = Перечисления.удуВидыОперацийПриходТМЦ.ПокупкаПродуктовПитания Тогда 
		Рез = Перечисления.удуВидыНоменклатуры.ПродуктПитания;	
	КонецЕсли;
	
	Возврат (Рез);
	
КонецФункции	


// Получает ставку НДС по-умолчанию для указанной номенклатуры
// Параметры:
// Номенклатура - Номенклатура, ставку НДС которой необходимо получить
//
&НаСервере
Функция ПолучитьСтавкуНДС(Номенклатура)
	
	Возврат(Номенклатура.СтавкаНДС);
	
КонецФункции

// Управляет видимостью элементов на форме
//
//
&НаКлиенте
Процедура УправлениеВидимостью()
	
	Элементы.Склад.Видимость    = Не Объект.СкладыВТабличнойЧасти;
	Элементы.ТМЦСклад.Видимость = Объект.СкладыВТабличнойЧасти;	
	Элементы.УчетныеЕдиницыСклад.Видимость = Объект.СкладыВТабличнойЧасти;
	
	ВидимостьУчетныеЕдиницы = (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.удуВидыОперацийПриходТМЦ.ПокупкаМетодическихМатериалов"));
	
	Элементы.ГруппаТМЦ.Видимость = Не ВидимостьУчетныеЕдиницы;
	Элементы.ГруппаУчетныеЕдиницы.Видимость = ВидимостьУчетныеЕдиницы;
	
КонецПроцедуры


// Управляет параметрами отбора ТЧ "ТМЦ"
//
//
&НаКлиенте
Процедура УстановитьОтборыТЧ_ТМЦ()

    ВидНоменклатуры = ОпределитьДоступныеВидНоменклатуры(Объект.ВидОперации);
	НовыйПараметр = Новый ПараметрВыбора("Отбор.ВидНоменклатуры", ВидНоменклатуры);
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НовыйПараметр);
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	Элементы.ТМЦНоменклатура.ПараметрыВыбора = НовыеПараметры;
	
КонецПроцедуры

	
// Рассчитывает сумму НДС от суммы в зависимости от включения НДС в цену
//
// ЦенаВключаетНДС - Булево - Признак включения НДС в цену
// ПроцентНДС      - Число - Ставка НДС числом
// Сумма           - Число - Сумма, от которой необходимо рассчитать сумму НДС
//
&НаКлиенте
Функция РассчитатьСуммуНДС(Сумма, ПроцентНДС) Экспорт
	
	Если Объект.ЦенаВключаетНДС Тогда
		СуммаНДС = Сумма * ПроцентНДС / (ПроцентНДС + 1);
	Иначе
		СуммаНДС = Сумма * ПроцентНДС;
	КонецЕсли;
	
	Возврат СуммаНДС;
	
КонецФункции // РассчитатьСуммуНДС()

&НаКлиенте
Процедура ПересчитатьЦенуСтрокиТЧ(СтрокаТЧ)
	
	  СтрокаТЧ.Цена = ?(СтрокаТЧ.Количество = 0, 0, СтрокаТЧ.Сумма / СтрокаТЧ.Количество);
	
КонецПроцедуры


&НаКлиенте
Процедура ПересчитатьСуммуСтрокиТЧ(СтрокаТЧ)
	
	  СтрокаТЧ.Сумма = СтрокаТЧ.Цена * СтрокаТЧ.Количество;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСуммуНДССтрокиТЧ(СтрокаТЧ)
	
	  ПроцентНДС = удуОбработкаТабличнойЧастиТМЦПовтИсп.ПолучитьСтавкуНДСЧислом(СтрокаТЧ.СтавкаНДС);
	  СтрокаТЧ.СуммаНДС = РассчитатьСуммуНДС(СтрокаТЧ.Сумма, ПроцентНДС); 
	
 КонецПроцедуры
  
&НаКлиенте
Процедура ПересчитатьСуммыНДСВТЧ(ИмяТЧ = "ТМЦ")
	
	Таб = Неопределено;
	Объект.Свойство(ИмяТЧ, Таб);
	
	Для каждого СтрокаТЧ из Таб Цикл
		ПересчитатьСуммуНДССтрокиТЧ(СтрокаТЧ);
		ЗаполнитьСуммуВсегоВСтрокеТЧ(СтрокаТЧ);	
	КонецЦикла;
	
КонецПроцедуры
  

&НаКлиенте
Процедура ЗаполнитьСуммуВсегоВСтрокеТЧ(СтрокаТЧ)
	 
	Если Объект.ЦенаВключаетНДС Тогда
		СтрокаТЧ.СуммаВсего = СтрокаТЧ.Сумма;
	Иначе
		СтрокаТЧ.СуммаВсего = СтрокаТЧ.Сумма + СтрокаТЧ.СуммаНДС;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСуммыВсегоВТЧ(ИмяТЧ = "ТМЦ")
	
	Таб = Неопределено;
	Объект.Свойство(ИмяТЧ, Таб);
	
	Для каждого СтрокаТЧ из Таб Цикл	
		ЗаполнитьСуммуВсегоВСтрокеТЧ(СтрокаТЧ)	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСуммуПодвала()
	
	Сумма = Объект.ТМЦ.Итог("Сумма") + Объект.УчетныеЕдиницы.Итог("Сумма");

	Если Не Объект.ЦенаВключаетНДС Тогда
		Сумма = Сумма + Объект.ТМЦ.Итог("СуммаНДС") + Объект.УчетныеЕдиницы.Итог("СуммаНДС");
	КонецЕсли;

	Объект.СуммаДокумента = Сумма;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеВидимостью();
	
	УстановитьОтборыТЧ_ТМЦ();
	
	ЗаполнитьСуммыВсегоВТЧ("ТМЦ");
	ЗаполнитьСуммыВсегоВТЧ("УчетныеЕдиницы");
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаКлиенте
Процедура СкладыВТабличнойЧастиПриИзменении(Элемент)
	
	УправлениеВидимостью();
	
КонецПроцедуры


&НаКлиенте
Процедура ТМЦКоличествоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТМЦ.ТекущиеДанные;
			
	ПересчитатьСуммуСтрокиТЧ(ТекущаяСтрока); 	
	ПересчитатьСуммуНДССтрокиТЧ(ТекущаяСтрока);
	ЗаполнитьСуммуВсегоВСтрокеТЧ(ТекущаяСтрока);
	
	ОбновитьСуммуПодвала();

КонецПроцедуры

&НаКлиенте
Процедура ТМЦЦенаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТМЦ.ТекущиеДанные;
			
	ПересчитатьСуммуСтрокиТЧ(ТекущаяСтрока); 	
	ПересчитатьСуммуНДССтрокиТЧ(ТекущаяСтрока);
	ЗаполнитьСуммуВсегоВСтрокеТЧ(ТекущаяСтрока);
	
	ОбновитьСуммуПодвала();
	
КонецПроцедуры

&НаКлиенте
Процедура ТМЦСуммаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТМЦ.ТекущиеДанные;
	
	ПересчитатьЦенуСтрокиТЧ(ТекущаяСтрока);
	ПересчитатьСуммуНДССтрокиТЧ(ТекущаяСтрока);
	ЗаполнитьСуммуВсегоВСтрокеТЧ(ТекущаяСтрока);
	
	ОбновитьСуммуПодвала();
	
КонецПроцедуры

&НаКлиенте
Процедура ТМЦСтавкаНДСПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТМЦ.ТекущиеДанные;
	
	ПересчитатьСуммуНДССтрокиТЧ(ТекущаяСтрока);
	ЗаполнитьСуммуВсегоВСтрокеТЧ(ТекущаяСтрока);
	
	ОбновитьСуммуПодвала();	
	
КонецПроцедуры


&НаКлиенте
Процедура УчетныеЕдиницыКоличествоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.УчетныеЕдиницы.ТекущиеДанные;
			
	ПересчитатьСуммуСтрокиТЧ(ТекущаяСтрока); 	
	ПересчитатьСуммуНДССтрокиТЧ(ТекущаяСтрока);
	ЗаполнитьСуммуВсегоВСтрокеТЧ(ТекущаяСтрока);
	
	ОбновитьСуммуПодвала();	
	
КонецПроцедуры

&НаКлиенте
Процедура УчетныеЕдиницыЦенаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.УчетныеЕдиницы.ТекущиеДанные;
			
	ПересчитатьСуммуСтрокиТЧ(ТекущаяСтрока); 	
	ПересчитатьСуммуНДССтрокиТЧ(ТекущаяСтрока);
	ЗаполнитьСуммуВсегоВСтрокеТЧ(ТекущаяСтрока);
	
	ОбновитьСуммуПодвала();	
	
КонецПроцедуры

&НаКлиенте
Процедура УчетныеЕдиницыСуммаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.УчетныеЕдиницы.ТекущиеДанные;
	
	ПересчитатьЦенуСтрокиТЧ(ТекущаяСтрока);
	ПересчитатьСуммуНДССтрокиТЧ(ТекущаяСтрока);
	ЗаполнитьСуммуВсегоВСтрокеТЧ(ТекущаяСтрока);
	
	ОбновитьСуммуПодвала();
	
	
КонецПроцедуры

&НаКлиенте
Процедура УчетныеЕдиницыСтавкаНДСПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.УчетныеЕдиницы.ТекущиеДанные;
	
	ПересчитатьСуммуНДССтрокиТЧ(ТекущаяСтрока);
	ЗаполнитьСуммуВсегоВСтрокеТЧ(ТекущаяСтрока);
	
	ОбновитьСуммуПодвала();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаВключаетНДСПриИзменении(Элемент)
	
	ПересчитатьСуммыНДСВТЧ("ТМЦ");
	ПересчитатьСуммыНДСВТЧ("УчетныеЕдиницы");
	ОбновитьСуммуПодвала();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	УправлениеВидимостью();
	
	УстановитьОтборыТЧ_ТМЦ(); 

	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УчЕд = (ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.удуВидыОперацийПриходТМЦ.ПокупкаМетодическихМатериалов"));
	ЕстьУчЕд = объект.УчетныеЕдиницы.Количество() > 0;
	
	НужноОчищатьТЧ_ТМЦ = ОпределитьНеобходимостьОчисткиТЧ_ТМЦ(ВыбранноеЗначение);	
	
	Если НужноОчищатьТЧ_ТМЦ Тогда
		
		Ответ = Вопрос("Данные по ТМЦ будут очищены! Продолжить?",РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			СтандартнаяОбработка = Ложь;
			Возврат;
		Иначе 
			Объект.ТМЦ.Очистить();
		КонецЕсли;
				
	ИначеЕсли ((Не УчЕд) и ЕстьУчЕд) Тогда  	
		
		Ответ = Вопрос("Данные по Учетным единицам будут очищены! Продолжить?",РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда  
			СтандартнаяОбработка = Ложь;
			Возврат;
		Иначе 
			Объект.УчетныеЕдиницы.Очистить();
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ТМЦНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТМЦ.ТекущиеДанные;	
	
	Если Не ЗначениеЗаполнено(ТекущаяСтрока.СтавкаНДС) Тогда 
		
		ТекущаяСтрока.СтавкаНДС = ПолучитьСтавкуНДС(ТекущаяСтрока.Номенклатура);
		ПересчитатьСуммуНДССтрокиТЧ(ТекущаяСтрока);
		ЗаполнитьСуммуВсегоВСтрокеТЧ(ТекущаяСтрока);
		ОбновитьСуммуПодвала();
		
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура УчетныеЕдиницыУчетнаяЕдиницаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.УчетныеЕдиницы.ТекущиеДанные;	
	
	Если Не ЗначениеЗаполнено(ТекущаяСтрока.СтавкаНДС) Тогда 
		
		ТекущаяСтрока.СтавкаНДС = ПолучитьСтавкуНДС(ТекущаяСтрока.УчетнаяЕдиница);
		ПересчитатьСуммуНДССтрокиТЧ(ТекущаяСтрока);
		ЗаполнитьСуммуВсегоВСтрокеТЧ(ТекущаяСтрока);
		ОбновитьСуммуПодвала();
		
	КонецЕсли;

	
КонецПроцедуры









