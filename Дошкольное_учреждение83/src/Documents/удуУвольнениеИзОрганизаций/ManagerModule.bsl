////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Формирует запрос по документу.
//
// Параметры: 
//  Режим - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросДляПечати(Режим,Док)

	Запрос = Новый Запрос;
	Если не ЗначениеЗаполнено(Док) тогда
		 Возврат Неопределено;
	КонецЕсли;
	 
	// Установим параметры запроса.
	Запрос.УстановитьПараметр("ДокументСсылка",	Док);
	Запрос.УстановитьПараметр("ДатаДокумента",	Док.Дата);
	
	Если Режим = "ПоРеквизитамДокумента" Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтветственныеЛицаСрезПоследних.ФизЛицо.Наименование КАК НаименованиеФизлица,
		|	ОтветственныеЛицаСрезПоследних.Должность.Наименование КАК Должность,
		|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
		|	ОтветственныеЛицаСрезПоследних.ФизЛицо КАК Физлицо,
		|	ОтветственныеЛицаСрезПоследних.Учреждение КАК Организация
		|ПОМЕСТИТЬ ВТОтветственныеЛица
		|ИЗ
		|	РегистрСведений.удуОтветственныеЛицаУчреждения.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.РуководительОрганизации)) КАК ОтветственныеЛицаСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Физлицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
		|				ТОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "". ""
		|			ИНАЧЕ """"
		|		КОНЕЦ + ВЫБОР
		|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
		|				ТОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "". ""
		|			ИНАЧЕ """"
		|		КОНЕЦ + ФИОФизЛицСрезПоследних.Фамилия, ОтветственныеЛицаСрезПоследних.НаименованиеФизлица) КАК НаименованиеОтветственногоЛица,
		|	ОтветственныеЛицаСрезПоследних.Должность,
		|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
		|	ОтветственныеЛицаСрезПоследних.Физлицо,
		|	ОтветственныеЛицаСрезПоследних.Организация КАК Организация
		|ПОМЕСТИТЬ ВТДанныеОбОтветственномЛице
		|ИЗ
		|	ВТОтветственныеЛица КАК ОтветственныеЛицаСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуФИОФизЛиц.СрезПоследних(
		|				&ДатаДокумента,
		|				ФизЛицо В
		|					(ВЫБРАТЬ
		|						Ответственные.Физлицо
		|					ИЗ
		|						ВТОтветственныеЛица КАК Ответственные)) КАК ФИОФизЛицСрезПоследних
		|		ПО ОтветственныеЛицаСрезПоследних.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УвольнениеИзОрганизаций.Номер КАК НомерДок,
		|	УвольнениеИзОрганизаций.Дата КАК ДатаДок,
		|	УвольнениеИзОрганизаций.Организация.ОКПО КАК КодПоОКПО,
		|	ВЫРАЗИТЬ(УвольнениеИзОрганизаций.Организация.ПолноеНаименование КАК СТРОКА(300)) КАК НазваниеОрганизации,
		|	ВТДанныеОбОтветственномЛице.Должность КАК ДолжностьРуководителя,
		|	ВТДанныеОбОтветственномЛице.НаименованиеОтветственногоЛица КАК ФИОРуководителя,
		|	УвольнениеИзОрганизаций.Организация.Префикс,
		|	УвольнениеИзОрганизаций.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.удуУвольнениеИзОрганизаций КАК УвольнениеИзОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбОтветственномЛице КАК ВТДанныеОбОтветственномЛице
		|		ПО УвольнениеИзОрганизаций.Организация = ВТДанныеОбОтветственномЛице.Организация
		|ГДЕ
		|	УвольнениеИзОрганизаций.Ссылка = &ДокументСсылка";
		
	ИначеЕсли Режим = "ПоТабличнойЧастиДокумента" Тогда
				
		Запрос.Текст ="ВЫБРАТЬ
		              |	удуУвольнениеИзОрганизацийРаботникиОрганизации.Ссылка,
		              |	удуУвольнениеИзОрганизацийРаботникиОрганизации.НомерСтроки,
		              |	удуУвольнениеИзОрганизацийРаботникиОрганизации.Сотрудник,
		              |	удуУвольнениеИзОрганизацийРаботникиОрганизации.Физлицо,
		              |	удуУвольнениеИзОрганизацийРаботникиОрганизации.ДатаУвольнения,
		              |	удуУвольнениеИзОрганизацийРаботникиОрганизации.СтатьяТКРФ,
		              |	удуУвольнениеИзОрганизацийРаботникиОрганизации.ОснованиеУвольнения,
		              |	удуУвольнениеИзОрганизацийРаботникиОрганизации.РабочийГодС,
		              |	удуУвольнениеИзОрганизацийРаботникиОрганизации.РабочийГодПо
		              |ПОМЕСТИТЬ Док
		              |ИЗ
		              |	Документ.удуУвольнениеИзОрганизаций.РаботникиОрганизации КАК удуУвольнениеИзОрганизацийРаботникиОрганизации
		              |ГДЕ
		              |	удуУвольнениеИзОрганизацийРаботникиОрганизации.Ссылка = &ДокументСсылка
		              |;
		              |
		              |////////////////////////////////////////////////////////////////////////////////
		              |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		              |	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, Док.Сотрудник.Наименование) КАК Работник,
		              |	Док.Физлицо.Пол,
		              |	Док.Сотрудник.ДатаДоговора КАК ТрудовойДоговорДата,
		              |	Док.Сотрудник.НомерДоговора КАК ТрудовойДоговорНомер,
		              |	Док.НомерСтроки КАК НомерСтроки,
		              |	Док.ДатаУвольнения,
		              |	Док.СтатьяТКРФ.Наименование КАК СтатьяТКРФ,
		              |	Док.СтатьяТКРФ.ТекстОснования,
		              |	Док.ОснованиеУвольнения КАК ОснованиеУвольнения,
		              |	Работники.ПодразделениеОрганизации КАК Подразделение,
		              |	Работники.Должность КАК Должность,
		              |	Док.Сотрудник.Код КАК ТабельныйНомер
		              |ИЗ
		              |	Док КАК Док
		              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		              |			СписокДат.Сотрудник КАК Сотрудник,
		              |			РаботникиОрганизации.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизации,
		              |			РаботникиОрганизации.Должность.Наименование КАК Должность
		              |		ИЗ
		              |			(ВЫБРАТЬ
		              |				РаботникиВнутри.Сотрудник КАК Сотрудник,
		              |				МАКСИМУМ(РаботникиВнутри.Период) КАК ДатаПоследнегоИзменения
		              |			ИЗ
		              |				РегистрСведений.удуРаботникиОрганизаций КАК РаботникиВнутри
		              |					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Док КАК Док
		              |					ПО РаботникиВнутри.Период <= Док.ДатаУвольнения
		              |						И РаботникиВнутри.Сотрудник = Док.Сотрудник
		              |			
		              |			СГРУППИРОВАТЬ ПО
		              |				РаботникиВнутри.Сотрудник) КАК СписокДат
		              |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуРаботникиОрганизаций КАК РаботникиОрганизации
		              |				ПО СписокДат.ДатаПоследнегоИзменения = РаботникиОрганизации.Период
		              |					И СписокДат.Сотрудник = РаботникиОрганизации.Сотрудник) КАК Работники
		              |		ПО Док.Сотрудник = Работники.Сотрудник
		              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуФИОФизЛиц.СрезПоследних(
		              |				&ДатаДокумента,
		              |				Физлицо В
		              |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		              |						УвольнениеИзОрганизацииРаботники.Сотрудник.Физлицо
		              |					ИЗ
		              |						Док КАК УвольнениеИзОрганизацииРаботники)) КАК ФИОФизЛицСрезПоследних
		              |		ПО Док.Сотрудник.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
		              |
		              |УПОРЯДОЧИТЬ ПО
		              |	НомерСтроки";

	Иначе
		Возврат Неопределено;
	КонецЕсли;

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросДляПечати()

// Функция формирует табличный документ с печатной формой.
	//
	// Возвращаемое значение:
	//  Табличный документ - печатная форма.
	//
Функция СформироватьПечатнуюФормуТ8а(МассивОбъектов, ОбъектыПечати,ИмяМакета)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_удуУвольнениеИзОрганизаций_Т8а";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	ПервыйДокумент = Истина;
	
	Для Каждого  ДокументДляПечати из МассивОбъектов цикл
	
	// Получаем данные для печати.
	ВыборкаДляШапки = СформироватьЗапросДляПечати("ПоРеквизитамДокумента",ДокументДляПечати).Выбрать();
	ВыборкаРаботники= СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента",ДокументДляПечати).Выбрать();
	
	// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически.
	Макет = УправлениеПечатью.ПолучитьМакет(ИмяМакета);
	
	Если Не ПервыйДокумент Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ПервыйДокумент    = Ложь;
	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
			
	// Подсчитываем количество страниц документа - для корректного разбиения на страницы.
	ВсегоСтрокДокумента = ВыборкаРаботники.Количество();

	// Запоминаем области макета.
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ПовторятьПриПечатиСтроки = Макет.ПолучитьОбласть("ПовторятьПриПечати");
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаРаботник");

	// Массив с двумя строками - для разбиения на страницы.
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьМакета);
	
	// Выводим данные о руководителях организации.
	Если ВыборкаДляШапки.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапки);
		ОбластьМакетаШапка.Параметры.НазваниеОрганизации	= СокрЛП(ОбластьМакетаШапка.Параметры.НазваниеОрганизации);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапки);
	КонецЕсли;

	// Начинаем формировать выходной документ.
	ТабДокумент.Вывести(ОбластьМакетаШапка); 

	ВыведеноСтрок = 0;
	// Выводим строки по работникам.
	Пока ВыборкаРаботники.Следующий() Цикл

		// Данные по работнику.
		ОбластьМакета.Параметры.Заполнить(ВыборкаРаботники);
		
		РезультатСклонения = "";
		Если удуОбщегоНазначенияСервер.Просклонять(ВыборкаРаботники.Работник, 4, РезультатСклонения, ВыборкаРаботники.ФизЛицоПол) Тогда
			ОбластьМакета.Параметры.Работник	= РезультатСклонения
		КонецЕсли;
				
		// Уберем из табельного номера префикс.
		ОбластьМакета.Параметры.ТабельныйНомер = ВыборкаРаботники.ТабельныйНомер;
		
		// Разбиение на страницы.
		ВыведеноСтрок = ВыведеноСтрок + 1;
		
		// Проверим, уместится ли строка на странице или надо открывать новую страницу.
		ВывестиПодвалЛиста = Не удуОбщегоНазначенияСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		Если Не ВывестиПодвалЛиста и ВыведеноСтрок = ВсегоСтрокДокумента Тогда
			ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
			ВывестиПодвалЛиста = Не удуОбщегоНазначенияСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		КонецЕсли;
		Если ВывестиПодвалЛиста Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ПовторятьПриПечатиСтроки);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;

	// Если не было ни одного работника - выводим пустой бланк.
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьМакета);
	ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
	Для Сч = 1 По ОбластьМакета.Параметры.Количество() Цикл
		ОбластьМакета.Параметры.Установить(Сч - 1,""); 
	КонецЦикла;
	ОбластьМакета.Параметры.Работник = " " + Символы.ПС + " ";
	Пока удуОбщегоНазначенияСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти, Ложь) Цикл
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

	// Выводим предварительно подготовленный Подвал документа.
	ТабДокумент.Вывести(ОбластьМакетаПодвал);

	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДляШапки.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // СформироватьПечатнуюФормуАвансовогоОтчета()

// Функция формирует табличный документ с печатной формой накладной.
	// разработанной методистами.
	//
	// Возвращаемое значение:
	//  Табличный документ - печатная форма накладной.
	//
Функция СформироватьПечатнуюФормуТ8(МассивОбъектов, ОбъектыПечати,ИмяМакета)
	
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_удуУвольнениеИзОрганизаций_Т8";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	ПервыйДокумент = Истина;
	
	Для Каждого  ДокументДляПечати из МассивОбъектов цикл
	// Получаем данные для печати.
	ВыборкаДляШапки = СформироватьЗапросДляПечати("ПоРеквизитамДокумента",ДокументДляПечати).Выбрать();
	ВыборкаРаботники= СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента",ДокументДляПечати).Выбрать();
			
		// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически.
		Макет = УправлениеПечатью.ПолучитьМакет(ИмяМакета);
				
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент    = Ложь;
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	// Запоминаем области макета.
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); 
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета = Макет.ПолучитьОбласть("Работник"); 

	// Выводим данные о руководителях организации.
	Если ВыборкаДляШапки.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапки); 
		ОбластьМакетаШапка.Параметры.НазваниеОрганизации	= СокрЛП(ОбластьМакетаШапка.Параметры.НазваниеОрганизации);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапки);
		НомерДокДляПечати	= ВыборкаДляШапки.НомерДок;
		
		ОбластьМакетаПодвал.Параметры.ДатаДок = удуФормированиеПечатныхФорм.ПустаяДатаВПечатнойФорме();
		
	КонецЕсли;
	
	НомерФормы = 0;
	ПечататьПостфикс = ВыборкаРаботники.Количество() > 1;
	// Начинаем формировать выходной документ.
	Пока ВыборкаРаботники.Следующий() Цикл
		
		// Каждый приказ на отдельной странице.
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Если ПечататьПостфикс Тогда
			НомерФормы = НомерФормы + 1;
			ОбластьМакетаШапка.Параметры.НомерДок = НомерДокДляПечати + "/" + НомерФормы;
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		// Данные по работнику.
		ОбластьМакета.Параметры.Заполнить(ВыборкаРаботники);
		
		РезультатСклонения = "";
		Если удуОбщегоНазначенияСервер.Просклонять(ВыборкаРаботники.Работник, 4, РезультатСклонения, ВыборкаРаботники.ФизЛицоПол) Тогда
			ОбластьМакета.Параметры.Работник	= РезультатСклонения
		КонецЕсли;
		
		ПредставлениеДатыДоговора                       = Формат(ВыборкаРаботники.ТрудовойДоговорДата, "ДЛФ=DD");
		ОбластьМакета.Параметры.ТрудовойДоговорЧисло    = ?(ЗначениеЗаполнено(ВыборкаРаботники.ТрудовойДоговорДата), СокрЛП(Лев(ПредставлениеДатыДоговора,2)), "      ");
		ОбластьМакета.Параметры.ТрудовойДоговорМесяцГод = ?(ЗначениеЗаполнено(ВыборкаРаботники.ТрудовойДоговорДата), СокрЛП(Прав(ПредставлениеДатыДоговора, СтрДлина(ПредставлениеДатыДоговора)-2)), "                     г.");
		
		ПредставлениеДатыУвольнения                     = Формат(ВыборкаРаботники.ДатаУвольнения, "ДЛФ=DD");
		ОбластьМакета.Параметры.ДатаУвольненияЧисло     = ?(ЗначениеЗаполнено(ВыборкаРаботники.ДатаУвольнения), СокрЛП(Лев(ПредставлениеДатыУвольнения,2)), "      ");
		ОбластьМакета.Параметры.ДатаУвольненияМесяцГод  = ?(ЗначениеЗаполнено(ВыборкаРаботники.ДатаУвольнения),  СокрЛП(Прав(ПредставлениеДатыУвольнения, СтрДлина(ПредставлениеДатыУвольнения)-2)), "                     г.");
		
		ОбластьМакета.Параметры.СтатьяТКРФ = ?(ВыборкаРаботники.СтатьяТКРФ = NULL, "", ВыборкаРаботники.СтатьяТКРФ) + ". " + ВыборкаРаботники.СтатьяТКРФТекстОснования;
		
		// Уберем из табельного номера префикс.
		ОбластьМакета.Параметры.ТабельныйНомер = ВыборкаРаботники.ТабельныйНомер;

		ТабДокумент.Вывести(ОбластьМакета);

		// Подвал документа.
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		
	КонецЦикла;

	// Если не было ни одного работника - выводим пустой бланк.
	Если ТабДокумент.ВысотаТаблицы = 0 Тогда
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
	КонецЕсли;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДляШапки.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // СформироватьПечатнуюФормуАвансовогоОтчета()





 // Процедура печати документа.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьТ8а") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьТ8а",
			"Форма Т-8а",
			СформироватьПечатнуюФормуТ8а(МассивОбъектов, ОбъектыПечати,"Документ.удуУвольнениеИзОрганизаций.ПФ_MXL_Т8а_от_5_1_2004")
		);
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьТ8") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьТ8",
			"Форма Т-8",
			СформироватьПечатнуюФормуТ8(МассивОбъектов, ОбъектыПечати,"Документ.удуУвольнениеИзОрганизаций.ПФ_MXL_Т8_от_5_1_2004")
		);
		
	КонецЕсли;
	
КонецПроцедуры // Печать()
