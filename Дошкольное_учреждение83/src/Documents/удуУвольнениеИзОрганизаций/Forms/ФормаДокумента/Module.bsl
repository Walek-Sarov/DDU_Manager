&НаКлиенте
Перем АдресВХранилище;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОбработатьПодбор() Экспорт
	
	Сотрудник=ПолучитьИзХранилища(АдресВХранилище);
	Если ЗначениеЗаполнено(Сотрудник) тогда
		СтрокиРаботников = Объект.РаботникиОрганизации.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник));
		Если СтрокиРаботников.Количество() > 0 Тогда
			Предупреждение("В данном документе по одному сотруднику можно вводить только одну строку!");
			Возврат;
		КонецЕсли;
		СтрокаТЧ=Объект.РаботникиОрганизации.Добавить();
		Модифицированность=Истина;
		СтрокаТЧ.Сотрудник=Сотрудник;
		СтрокаТЧ.ДатаУвольнения = ТекущаяДата();
		ЗаполнитьСтрокиДопЗначениями(СтрокаТЧ.ПолучитьИдентификатор());
		мТекущийСотрудник = СтрокаТЧ.Сотрудник;	
	КонецЕсли;

КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Функция ПоместитьВХранилище(ДанныеДляХранилища=Неопределено)
	
	ДанныеДляХранилища=?(ДанныеДляХранилища=Неопределено,Справочники.удуСотрудникиОрганизаций.ПустаяСсылка(),ДанныеДляХранилища);
	Возврат ПоместитьВоВременноеХранилище(ДанныеДляХранилища, УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Функция ПолучитьИзХранилища(АдресВХранилище)
	
	Возврат ПолучитьИзВременногоХранилища(АдресВХранилище);
		
КонецФункции

&НаСервере
Процедура ЗаполнитьСтрокиДопЗначениями(Индекс=Неопределено)

	Если Индекс=Неопределено тогда
		Для Каждого СтрокаТЧ из Объект.РаботникиОрганизации цикл
			ЗаполнитьСтрокиДопЗначениями(СтрокаТЧ.ПолучитьИдентификатор());
		КонецЦикла;
	Иначе 	
		Объект.РаботникиОрганизации.НайтиПоИдентификатору(Индекс).ФизЛицо=Объект.РаботникиОрганизации.НайтиПоИдентификатору(Индекс).Сотрудник.ФизЛицо;
	КонецЕсли;
 
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормыДокументаСервер()
	
	 удуОбщегоНазначенияСервер.УстановитьЗаголовокФормыДокумента(, Объект, ЭтаФорма);
	
 КонецПроцедуры

&НаСервере
Процедура ПриОткрытииСервер()
	
  мТекущийСотрудник	= удуОбщегоНазначенияСервер.ПустоеЗначениеТипа("СправочникСсылка.удуСотрудникиОрганизаций");
  
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииСервер()
	
	удуОбщегоНазначенияСервер.ПроверитьНомерДокумента(Объект, мТекущаяДатаДокумента);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораСервер(ВыбранноеЗначение)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		Команда = "";
		Если ВыбранноеЗначение.Свойство("Команда",Команда) и Команда = "ЗаполнитьСписокРаботников" Тогда
			СписокРаботников=ПолучитьИзХранилища(ВыбранноеЗначение.АдресДанных);
			СписокРаботников.Колонки.Добавить("ДатаУвольнения");
			СписокРаботников.ЗаполнитьЗначения(ТекущаяДата(), "ДатаУвольнения"); 
			Объект.РаботникиОрганизации.Загрузить(СписокРаботников);
			ЗаполнитьСтрокиДопЗначениями();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

 &НаСервере
Функция ПолучитьВидДоговора()
	
	Возврат Перечисления.удуВидыДоговоровСФизЛицами.ТрудовойДоговор;
	
КонецФункции



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.АдресВХранилище) тогда
		 ОбъектИзХранилища=ПолучитьИзХранилища(Параметры.АдресВХранилище);
		 ЗначениеВДанныеФормы(ОбъектИзХранилища,Объект);
	 КонецЕсли;

	
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		удуДокументыКадровогоУчета.ЗаполнитьШапкуДокумента(Объект);
	КонецЕсли;

КонецПроцедуры
 
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьЗаголовокФормыДокументаСервер();	
  мТекущаяДатаДокумента	= Объект.Дата;

  ПриОткрытииСервер();
  
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ОбработкаВыбораСервер(ВыбранноеЗначение);
	Модифицированность=Истина;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	УстановитьЗаголовокФормыДокументаСервер();
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ЗаполнитьСпискомСотрудников(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Предупреждение("Не указана организация, отобрать список сотрудников невозможно!");
		Возврат;
	КонецЕсли;
	
	Если Объект.РаботникиОрганизации.Количество() > 0 Тогда
		ТекстВопроса = "Перед заполнением табличные части будут очищены. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;

	КонецЕсли;
	
	
	Структура=Новый Структура;
	Структура.Вставить("ДатаАктуальности",Объект.Дата);
    Структура.Вставить("Организация",Объект.Организация);	
	
	
	
	АдресВХранилище = ПоместитьВХранилище(Структура);
	ПараметрыФормы = Новый Структура("АдресДанныхНачальногоЗаполнения", АдресВХранилище);
	ФормаОтбора = ПолучитьФорму("Обработка.удуФормированиеСпискаРаботников.Форма.ФормаНастройки",ПараметрыФормы,ЭтаФорма);
	ФормаОтбора.ОткрытьМодально();
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	АдресВХранилище = ПоместитьВХранилище();
	ПараметрыПодбора = Новый Структура("ЭтоПодбор,АдресПодбора,ДатаСреза,НеПоказыватьУволенных,ВидДоговора", Истина, АдресВХранилище,Объект.Дата,Истина,ПолучитьВидДоговора());	
	ОткрытьФорму("Справочник.удуСотрудникиОрганизаций.Форма.ФормаСписка",ПараметрыПодбора ,ЭтаФорма);
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ДатаПриИзмененииСервер();
	мТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Объект.Номер="";
КонецПроцедуры




////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ РаботникиОрганизации



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ РаботникиОрганизации

&НаКлиенте
Процедура РаботникиОрганизацииСотрудникПриИзменении(Элемент)
	
	СтрокаТЧ=Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если не ЗначениеЗаполнено(СтрокаТЧ.ДатаУвольнения) тогда
		СтрокаТЧ.ДатаУвольнения = ТекущаяДата();
	КонецЕсли;
	ЗаполнитьСтрокиДопЗначениями(Элементы.РаботникиОрганизации.ТекущаяСтрока);
	мТекущийСотрудник=Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник;
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииСотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыПодбора = Новый Структура("ДляВыбора,ДатаСреза,НеПоказыватьУволенных,ВидДоговора", Истина,Объект.Дата,Истина,ПолучитьВидДоговора());
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.удуСотрудникиОрганизаций.Форма.ФормаСписка",ПараметрыПодбора ,Элемент);

КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииСотрудникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокиРаботников = Объект.РаботникиОрганизации.НайтиСтроки(Новый Структура("Сотрудник", ВыбранноеЗначение));
	СтрокаТЧ=Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если СтрокиРаботников.Количество() > 0 и СтрокаТЧ.Сотрудник <> ВыбранноеЗначение Тогда
		Предупреждение("В данном документе по одному сотруднику можно вводить только одну строку!");
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииДатаУвольненияПриИзменении(Элемент)
	
	СтрокаТЧ=Элементы.РаботникиОрганизации.ТекущиеДанные;
	СтрокаТЧ.РабочийГодПо=СтрокаТЧ.ДатаУвольнения;
	
КонецПроцедуры













