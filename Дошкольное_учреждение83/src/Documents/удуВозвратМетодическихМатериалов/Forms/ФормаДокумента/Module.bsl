///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ
//

&НаСервере
Процедура ЗаполнитьМетодМатериалы()
	
	Объект.УчетЕдКВозврату.Очистить();
	
	Если ЗначениеЗаполнено(Объект.Читатель) Тогда
	
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	удуМетодическиеМатериалыНаРукахОстатки.УчетнаяЕдиница,
		|	удуМетодическиеМатериалыНаРукахОстатки.ИнвентарныйНомер,
		|	удуМетодическиеМатериалыНаРукахОстатки.Читатель,
		|	удуМетодическиеМатериалыНаРукахОстатки.ПлановаяДатаВозврата,
		|	удуМетодическиеМатериалыНаРукахОстатки.ПричинаВыдачи,
		|	удуМетодическиеМатериалыНаРукахОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.удуМетодическиеМатериалыНаРуках.Остатки(&Период) КАК удуМетодическиеМатериалыНаРукахОстатки
		|ГДЕ
		|	удуМетодическиеМатериалыНаРукахОстатки.Читатель = &Читатель");
		
		Если ЗначениеЗаполнено(Объект.ПоПричине) Тогда
			Запрос.Текст = Запрос.Текст + 
				" И удуМетодическиеМатериалыНаРукахОстатки.ПричинаВыдачи = &ПричинаВыдачи";
			Запрос.Параметры.Вставить("ПричинаВыдачи", Объект.ПоПричине);
		КонецЕсли;
		
		Запрос.Параметры.Вставить("Читатель", Объект.Читатель);
		
		
		Период = ?(ЗначениеЗаполнено(Объект.Ссылка),//Существующий элемент
		Новый Граница(Новый МоментВремени(Объект.Дата, Объект.Ссылка),ВидГраницы.Исключая),
		?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата())); 
		
		Запрос.УстановитьПараметр("Период",Период);
		
		Выборка = Запрос.Выполнить().Выбрать();  
		
		Пока Выборка.Следующий() Цикл 
			
			НовСтрТЧ = Объект.УчетЕдКВозврату.Добавить();	
			НовСтрТЧ.УчетнаяЕдиница = Выборка.УчетнаяЕдиница;
			НовСтрТЧ.ИнвентарныйНомер = Выборка.ИнвентарныйНомер;
			НовСтрТЧ.ДатаВозврата = Выборка.ПлановаяДатаВозврата;
			НовСтрТЧ.Вернуть = Истина;			
			НовСтрТЧ.КоличествоНаРуках = Выборка.КоличествоОстаток;
			НовСтрТЧ.КоличествоКСдаче = Выборка.КоличествоОстаток;
			НовСтрТЧ.ПоПричине = Выборка.ПричинаВыдачи;
		КонецЦикла;
					
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьМетМатериалы()

&НаСервере
Процедура УстановитьДоступностьРеквизитов()
	Если Объект.Проведен Тогда
		Элементы.НомерДата.ТолькоПросмотр = Истина;
		Элементы.ЧитательПричина.ТолькоПросмотр = Истина;
		Элементы.УчетЕдКВозврату.ТолькоПросмотр = Истина;
		Элементы.УчетЕдКВозвратуВыделитьВсе.Доступность = Ложь;
		Элементы.УчетЕдКВозвратуСнятьВыделение.Доступность = Ложь;
		Элементы.ЗаполнитьПоЧитателю.Доступность = Ложь;		
	Иначе 		
		Элементы.УчетЕдКВозвратуИнвентарныйНомер.Видимость = Истина;
		Элементы.УчетЕдКВозвратуКоличествоКСдаче.Видимость = Истина;
		Элементы.УчетЕдКВозвратуКоличествоНаРуках.Видимость = Истина;
		Элементы.УчетЕдКВозвратуКоличествоНаРуках.ТолькоПросмотр = Истина;
		Элементы.УчетЕдКВозвратуВернуть.Видимость = Истина;
		Элементы.УчетЕдКВозвратуВыделитьВсе.Видимость = Истина;
		Элементы.УчетЕдКВозвратуСнятьВыделение.Видимость = Истина;
	КонецЕсли;	
КонецПроцедуры // УстановитьДоступностьРеквизитов()

&НаСервере
Процедура ЗаполнитьПредставлениеУчетнойЕдиницы(УчетЕд);
	ПредставлениеУЕ = УчетЕд.ПолучитьОбъект().Представление;
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ФОРМЫ
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьДоступностьРеквизитов();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	Для Каждого Элем Из Объект.УчетЕдКВозврату Цикл 
		Если НЕ Элем.Вернуть Тогда 
			Объект.УчетЕдКВозврату.Удалить(Элем);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Объект.Дата = ТекущаяДата();
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
//

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	Для Каждого Элем Из Объект.УчетЕдКВозврату Цикл
		Элем.Вернуть = Истина;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделение(Команда)
	Для Каждого Элем Из Объект.УчетЕдКВозврату Цикл
		Элем.Вернуть = Ложь;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоЧитателю(Команда)
	Если ЗначениеЗаполнено(Объект.Читатель) Тогда
		ЗаполнитьМетодМатериалы();
	Иначе
		Вопрос("Для заполнения списка методических материалов необходимо выбрать читателя.", РежимДиалогаВопрос.ОК);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчетЕдКВозвратуПриАктивизацииСтроки(Элемент)
	Если Объект.УчетЕдКВозврату.Количество() >  0 Тогда 
		Если ЗначениеЗаполнено(Элементы.УчетЕдКВозврату.ТекущиеДанные.УчетнаяЕдиница) Тогда
			ЗаполнитьПредставлениеУчетнойЕдиницы(Элементы.УчетЕдКВозврату.ТекущиеДанные.УчетнаяЕдиница);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЧитательПриИзменении(Элемент)
	
	Объект.УчетЕдКВозврату.Очистить();
	
	Если ЗначениеЗаполнено(Объект.Читатель) Тогда
		ЗаполнитьМетодМатериалы();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура УчетЕдКВозвратуКоличествоКСдачеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.УчетЕдКВозврату.ТекущиеДанные;
	
	Если ТекущиеДанные.КоличествоКСдаче > ТекущиеДанные.КоличествоНаРуках Тогда
		Вопрос("Нельзя вернуть больше, чем было получено.", РежимДиалогаВопрос.ОК);
		ТекущиеДанные.КоличествоКСдаче = ТекущиеДанные.КоличествоНаРуках;
	КонецЕсли;
	
КонецПроцедуры

