&НаСервере
Процедура ЗаполнитьТЧСоставомГруппы()
	ОбъектРеквизит = РеквизитФормыВЗначение("Объект");
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок
	               |ИЗ
	               |	РегистрСведений.удуСведенияОЗачисленииРебенкаВГруппу.СрезПоследних(
	               |			&ДатаВыборки,
	               |			Учреждение = &Учреждение
	               |				И Группа = &Группа) КАК удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних
	               |ГДЕ
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.СостояниеУчетаВГруппе = &СостояниеУчетаВГруппе";
				   
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДатаВыборки", ОбъектРеквизит.Дата);
	Запрос.УстановитьПараметр("Учреждение", ОбъектРеквизит.Учреждение);
	Запрос.УстановитьПараметр("Группа", ОбъектРеквизит.Группа);
	Запрос.УстановитьПараметр("СостояниеУчетаВГруппе", Перечисления.удуСостояниеРебенкаНаУчетеВГруппе.ПринятВГруппу);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаРезультата Из РезультатЗапроса Цикл
		НоваяСтрокаТабличнойЧасти = ОбъектРеквизит.ТабличнаяЧастьПосещениеГруппы.Добавить();
		НоваяСтрокаТабличнойЧасти.Ребенок = СтрокаРезультата.Ребенок;
		НоваяСтрокаТабличнойЧасти.ПризнакПрисутствия = Истина;
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(ОбъектРеквизит, "Объект");
КонецПроцедуры

&НаСервере
Процедура ОбновитьСведенияОСоставеГруппы()
	// Отбор по учреждению
	сэРезультатВыполнения = удуОбработкаПросмотрИнформации.ПолучитьсоставГруппы(Объект.Группа, ТекущаяДата());		
	ЗначениеВРеквизитФормы(сэРезультатВыполнения, "СоставВыбраннойГруппы");
	
	Если Объект.Группа.БезОграниченияВместительности Тогда
		Элементы.НадписьСведенияОГруппе.Заголовок = "Количество детей в выбранной группе: " + Строка(сэРезультатВыполнения.Количество()) + ". Вместительность группы не ограничена.";
	Иначе
		Элементы.НадписьСведенияОГруппе.Заголовок = "Количество детей в выбранной группе: " + Строка(сэРезультатВыполнения.Количество()) + ". Вместительность группы: " + Строка(Объект.Группа.Вместительность);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НадписьСведенияОГруппеНажатие(Элемент)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	Если СоставВыбраннойГруппы.Количество() > 0 Тогда 
		ФормаПросмотра = ПолучитьФорму("ОбщаяФорма.удуФормаПросмотраСоставаГруппы");
		ФормаПросмотра.ВладелецФормы = ЭтаФорма;
		Для Каждого СтрокаСоставГруппы Из СоставВыбраннойГруппы Цикл
			НоваяСтрокаФормыПросмотра = ФормаПросмотра.ТабличнаяЧастьДети.Добавить();
			НоваяСтрокаФормыПросмотра.Ребенок = СтрокаСоставГруппы.Ребенок;
			НоваяСтрокаФормыПросмотра.Пол = СтрокаСоставГруппы.Пол;
			НоваяСтрокаФормыПросмотра.ДатаРождения = СтрокаСоставГруппы.ДатаРождения;
		КонецЦикла;
		ФормаПросмотра.ОткрытьМодально();		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьТабличнуюЧасть(Команда)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(Объект.Группа) Тогда
		Если Объект.ТабличнаяЧастьПосещениеГруппы.Количество() > 0 Тогда
			Если Вопрос("перед заполнением табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				Объект.ТабличнаяЧастьПосещениеГруппы.Очистить();
			Иначе
				Возврат;
			КонецЕсли;
		КонецЕсли;
		ЗаполнитьТЧСоставомГруппы();
	Иначе
		Вопрос("Пере заполнением таличной части необходимо сначала указать группу для заполнения!", РежимДиалогаВопрос.ОК);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
		Объект.Учреждение = Константы.удуОсновноеУчреждение.Получить();
		Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
			ЭтаФорма.Элементы.Учреждение.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьСведенияОСоставеГруппы();	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ОбновитьСведенияОСоставеГруппы();
	
	Если Вопрос("Заполнить табличную часть документа составом выбранной группы?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ЗаполнитьТЧСоставомГруппы();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Если Объект.ТабличнаяЧастьПосещениеГруппы.Количество() > 0 Тогда
		Если Вопрос("При изменении группы табличная часть будет очищена! Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Объект.ТабличнаяЧастьПосещениеГруппы.Очистить();
		Иначе
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ВоспитательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.Группа) Тогда
		ФормаВыбораВоспитателя = ПолучитьФорму("ОбщаяФорма.удуФормаВыбораВоспитателя");
		ФормаВыбораВоспитателя.ПараметрГруппа = Объект.Группа;
		ФормаВыбораВоспитателя.ВладелецФормы = ЭтаФорма;
		ФормаВыбораВоспитателя.ОткрытьМодально();				
	Иначе
		Вопрос("Перед выбором воспитателя необходимо сначала выбрать группу!", РежимДиалогаВопрос.ОК);
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.удуСотрудникиОрганизаций") Тогда
		Объект.Воспитатель = ВыбранноеЗначение;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПосещениеГруппыПризнакПрисутствияПриИзменении(Элемент)
	// Вставить содержимое обработчика.	
	Если Элементы.ТабличнаяЧастьПосещениеГруппы.ТекущиеДанные.ПризнакПрисутствия Тогда
		Элементы.ТабличнаяЧастьПосещениеГруппы.ТекущиеДанные.ПричинаПропускаЗанятия = "";		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Объект.ТабличнаяЧастьПосещениеГруппы.Очистить();
	Если ЗначениеЗаполнено(Объект.Группа) Тогда
		ЗаполнитьТЧСоставомГруппы();
	КонецЕсли;
КонецПроцедуры
