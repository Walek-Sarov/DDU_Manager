&НаКлиенте
Перем АдресВХранилище;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОбработатьПодбор() Экспорт
	
	Сотрудник=ПолучитьИзХранилища(АдресВХранилище);
	Если ЗначениеЗаполнено(Сотрудник) тогда
		СтрокиРаботников = Объект.РаботникиОрганизации.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник));
		Если СтрокиРаботников.Количество() > 0 Тогда
			Предупреждение("В данном документе по одному сотруднику можно вводить только одну строку!");
			Возврат;
		КонецЕсли;
		СтрокаТЧ=Объект.РаботникиОрганизации.Добавить();
		СтрокаТЧ.Сотрудник=Сотрудник;
		ЗаполнитьСтрокиДопЗначениями(СтрокаТЧ.ПолучитьИдентификатор());
	КонецЕсли;

КонецПроцедуры




////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура УстановитьЗаголовокФормыДокументаСервер()
	
	 удуОбщегоНазначенияСервер.УстановитьЗаголовокФормыДокумента(, Объект, ЭтаФорма);
	
 КонецПроцедуры

&НаСервере
Функция ПоместитьВХранилище(ДанныеДляХранилища=Неопределено)
	
	ДанныеДляХранилища=?(ДанныеДляХранилища=Неопределено,Справочники.удуСотрудникиОрганизаций.ПустаяСсылка(),ДанныеДляХранилища);
	Возврат ПоместитьВоВременноеХранилище(ДанныеДляХранилища, УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Функция ПолучитьИзХранилища(АдресВХранилище)
	
	Возврат ПолучитьИзВременногоХранилища(АдресВХранилище);
		
КонецФункции

&НаСервере
Процедура ЗаполнитьСтрокиДопЗначениями(Индекс=Неопределено)

	Если Индекс=Неопределено тогда
		Для Каждого СтрокаТЧ из Объект.РаботникиОрганизации цикл
			ЗаполнитьСтрокиДопЗначениями(СтрокаТЧ.ПолучитьИдентификатор());
		КонецЦикла;
	Иначе 
		СтрокаТЧ=Объект.РаботникиОрганизации.НайтиПоИдентификатору(Индекс);
	СтрокаТЧ.ФизЛицо=СтрокаТЧ.Сотрудник.ФизЛицо;
	Если не ЗначениеЗаполнено(СтрокаТЧ.ПричинаОтсутствия) тогда
		 СтрокаТЧ.ПричинаОтсутствия=НовоеСостояниеРаботникаОрганизации();
	КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииСервер()
	
	удуОбщегоНазначенияСервер.ПроверитьНомерДокумента(Объект, мТекущаяДатаДокумента);
	
КонецПроцедуры

&НаСервере
Функция НовоеСостояниеРаботникаОрганизации()
	
	Возврат Перечисления.удуСостоянияРаботникаОрганизации.Заболевание;

КонецФункции

&НаСервере
Процедура ОбработкаВыбораСервер(ВыбранноеЗначение)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		Команда = "";
		Если ВыбранноеЗначение.Свойство("Команда",Команда) и Команда = "ЗаполнитьСписокРаботников" Тогда
			СписокРаботников=ПолучитьИзХранилища(ВыбранноеЗначение.АдресДанных);
			Объект.РаботникиОрганизации.Загрузить(СписокРаботников);
			ЗаполнитьСтрокиДопЗначениями();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВидДоговора()
	
	Возврат Перечисления.удуВидыДоговоровСФизЛицами.ТрудовойДоговор;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		удуДокументыКадровогоУчета.ЗаполнитьШапкуДокумента(Объект);
	КонецЕсли;
	
	
	// Список причин отсутствия
	СписокПричинОтсутствия = удуДокументыКадровогоУчета.ПолучитьСписокПрочихСостоянийРаботника();
	Элементы.РаботникиОрганизацииПричинаОтсутствия.СписокВыбора.ЗагрузитьЗначения(СписокПричинОтсутствия.ВыгрузитьЗначения());
	Элементы.РаботникиОрганизацииПричинаОтсутствия.ВысотаСпискаВыбора = СписокПричинОтсутствия.Количество();
	Элементы.РаботникиОрганизацииПричинаОтсутствия.ШиринаСпискаВыбора = 45;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьЗаголовокФормыДокументаСервер();
	мТекущаяДатаДокумента	= Объект.Дата;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ОбработкаВыбораСервер(ВыбранноеЗначение);
	Модифицированность=Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьЗаголовокФормыДокументаСервер();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ


&НаКлиенте
Процедура ЗаполнитьСпискомСотрудников(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Предупреждение("Не указана организация, отобрать список сотрудников невозможно!");
		Возврат;
	КонецЕсли;
	
	Если Объект.РаботникиОрганизации.Количество() > 0 Тогда
		ТекстВопроса = "Перед заполнением табличные части будут очищены. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;

	КонецЕсли;
	
	
	Структура=Новый Структура;
	Структура.Вставить("ДатаАктуальности",Объект.Дата);
    Структура.Вставить("Организация",Объект.Организация);	
	
	
	
	АдресВХранилище = ПоместитьВХранилище(Структура);
	ПараметрыФормы = Новый Структура("АдресДанныхНачальногоЗаполнения", АдресВХранилище);
	ФормаОтбора = ПолучитьФорму("Обработка.удуФормированиеСпискаРаботников.Форма.ФормаНастройки",ПараметрыФормы,ЭтаФорма);
	ФормаОтбора.ОткрытьМодально();

КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	АдресВХранилище = ПоместитьВХранилище();
	ПараметрыПодбора = Новый Структура("ЭтоПодбор,АдресПодбора,ДатаСреза,НеПоказыватьУволенных,ВидДоговора", Истина, АдресВХранилище,Объект.Дата,Истина,ПолучитьВидДоговора());
	
	ОткрытьФорму("Справочник.удуСотрудникиОрганизаций.Форма.ФормаСписка",ПараметрыПодбора ,ЭтаФорма);
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ДатаПриИзмененииСервер();
	мТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Объект.Номер="";
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ РаботникиОрганизации

&НаКлиенте
Процедура РаботникиОрганизацииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ПричинаОтсутствия = НовоеСостояниеРаботникаОрганизации();
	КонецЕсли;

КонецПроцедуры




////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ РаботникиОрганизации

&НаКлиенте
Процедура РаботникиОрганизацииСотрудникПриИзменении(Элемент)
	
	ЗаполнитьСтрокиДопЗначениями(Элементы.РаботникиОрганизации.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииСотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыПодбора = Новый Структура("ДляВыбора,ДатаСреза,НеПоказыватьУволенных,ВидДоговора", Истина,Объект.Дата,Истина,ПолучитьВидДоговора());
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.удуСотрудникиОрганизаций.Форма.ФормаСписка",ПараметрыПодбора ,Элемент);

КонецПроцедуры






























