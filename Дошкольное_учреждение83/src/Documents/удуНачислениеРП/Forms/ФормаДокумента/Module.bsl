
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		удуДокументыКадровогоУчета.ЗаполнитьШапкуДокумента(Объект);	
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
		Объект.Учреждение = Константы.удуОсновноеУчреждение.Получить();
		Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
			ЭтаФорма.Элементы.Учреждение.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;
	МесяцСтрока = удуДокументыКадровогоУчета.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
КонецПроцедуры



&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	
	ПериодРегистрацииПриИзмененииСервер();
	МесяцСтрока = удуДокументыКадровогоУчетаКлиент.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	удуДокументыКадровогоУчетаКлиент.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, Объект.ПериодРегистрации, ЭтаФорма);
	МесяцСтрока = удуДокументыКадровогоУчетаКлиент.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Объект.ПериодРегистрации = ДобавитьМесяц(Объект.ПериодРегистрации, Направление);
	МесяцСтрока = удуДокументыКадровогоУчетаКлиент.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
		
	ПериодРегистрацииАвтоПодборСервер(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ПериодРегистрацииОкончаниеВводаТекстаСервер(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры



&НаКлиенте
Процедура ЗаполнитьПоВсем(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
		Предупреждение("Заполните учреждение!");
		Возврат;
	КонецЕсли;
	
	Если Объект.СписокНачислений.Количество() Тогда
		Ответ = Вопрос("Перед заполнением табличнaя часть будет очищена. Заполнить?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Объект.СписокНачислений.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьПоВсемСервер();
	
КонецПроцедуры



&НаСервере
Процедура ПериодРегистрацииПриИзмененииСервер()
	
	удуДокументыКадровогоУчета.ДатаКакМесяцПодобратьДатуПоТексту(МесяцСтрока, Объект.ПериодРегистрации);
		
КонецПроцедуры

&НаСервере
Процедура ПериодРегистрацииАвтоПодборСервер(Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	удуДокументыКадровогоУчета.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПериодРегистрацииОкончаниеВводаТекстаСервер(Текст, Значение, СтандартнаяОбработка)
	
	удуДокументыКадровогоУчета.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоВсемСервер(Группа = Неопределено) 
	
	ТекстСообщенияОбОшибке = "";
	КалендарьЗаполнен = удуДокументыКадровогоУчета.РегламентированныйКалендарьЗаполнен(Объект.ПериодРегистрации,КонецМесяца(Объект.ПериодРегистрации),ТекстСообщенияОбОшибке);
	Если НЕ КалендарьЗаполнен Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Перед формированием документа заполните календарь за " + Формат(Объект.ПериодРегистрации,"ФД=ГГГГ") + " год!";
		Сообщение.Поле = "ПериодРегистрации";
		Сообщение.УстановитьДанные(Объект);
		Сообщение.Сообщить();		
		Возврат;
	КонецЕсли;
	
	Если Группа = Неопределено Тогда
		Группа = Справочники.удуГруппыУчреждения.ПустаяСсылка();
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	удуГрафикиРаботыПоВидамВремени.ГрафикРаботы,
	|	СУММА(удуГрафикиРаботыПоВидамВремени.ОсновноеЗначение) КАК РабочихДней
	|ПОМЕСТИТЬ ВТ_Графики
	|ИЗ
	|	РегистрСведений.удуГрафикиРаботыПоВидамВремени КАК удуГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	удуГрафикиРаботыПоВидамВремени.Месяц = &ПериодРегистрации
	|	И удуГрафикиРаботыПоВидамВремени.План
	|	И удуГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоДням)
	|	И удуГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &ПериодРегистрации И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	удуГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(удуСведенияОПосещаемостиДОУ.ПризнакПрисутствия) КАК ПрисутствовалДней,
	|	удуСведенияОПосещаемостиДОУ.Учреждение,
	|	удуСведенияОПосещаемостиДОУ.Группа,
	|	удуСведенияОПосещаемостиДОУ.Ребенок
	|ПОМЕСТИТЬ ВТ_Посещаемость
	|ИЗ
	|	РегистрСведений.удуСведенияОПосещаемостиДОУ КАК удуСведенияОПосещаемостиДОУ
	|ГДЕ
	|	удуСведенияОПосещаемостиДОУ.Активность
	|	И (удуСведенияОПосещаемостиДОУ.ПризнакПрисутствия
	|			ИЛИ НЕ удуСведенияОПосещаемостиДОУ.ПричинаПропускаЗанятия.Уважительная)
	|	И удуСведенияОПосещаемостиДОУ.Период МЕЖДУ &ПериодРегистрации И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)
	|	И (&Группа = ЗНАЧЕНИЕ(Справочник.УдуГруппыУчреждения.пустаяСсылка)
	|			ИЛИ &Группа = удуСведенияОПосещаемостиДОУ.Группа)
	|	И удуСведенияОПосещаемостиДОУ.Учреждение = &Учреждение
	|
	|СГРУППИРОВАТЬ ПО
	|	удуСведенияОПосещаемостиДОУ.Учреждение,
	|	удуСведенияОПосещаемостиДОУ.Группа,
	|	удуСведенияОПосещаемостиДОУ.Ребенок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	удуДоговорОЗачисленииРебенка.Ребенок,
	|	ВЫБОР
	|		КОГДА удуДоговорОЗачисленииРебенка.ВидСтавкиОплаты = ЗНАЧЕНИЕ(перечисление.удуВидыСтавокРодительскойПлаты.ПустаяСсылка)
	|				ИЛИ ЕСТЬNULL(ВТ_Графики.РабочихДней, 0) = 0
	|			ТОГДА 0
	|		КОГДА удуДоговорОЗачисленииРебенка.ВидСтавкиОплаты = ЗНАЧЕНИЕ(перечисление.удуВидыСтавокРодительскойПлаты.Месячная)
	|			ТОГДА удуДоговорОЗачисленииРебенка.ОплатаПоДоговору * (ЕСТЬNULL(ВТ_Посещаемость.ПрисутствовалДней, 0) / ЕСТЬNULL(ВТ_Графики.РабочихДней, 0))
	|		КОГДА удуДоговорОЗачисленииРебенка.ВидСтавкиОплаты = ЗНАЧЕНИЕ(перечисление.удуВидыСтавокРодительскойПлаты.Дневная)
	|			ТОГДА удуДоговорОЗачисленииРебенка.ОплатаПоДоговору * ЕСТЬNULL(ВТ_Посещаемость.ПрисутствовалДней, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	удуДоговорОЗачисленииРебенка.Группа,
	|	ЕСТЬNULL(ВТ_Посещаемость.ПрисутствовалДней, 0) КАК ПосещеноДней,
	|	удуДоговорОЗачисленииРебенка.Ссылка КАК Договор,
	|	ЕСТЬNULL(ВТ_Графики.РабочихДней, 0) КАК РабочихДней
	|ИЗ
	|	Документ.удуДоговорОЗачисленииРебенка КАК удуДоговорОЗачисленииРебенка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Посещаемость КАК ВТ_Посещаемость
	|		ПО (ВТ_Посещаемость.Учреждение = удуДоговорОЗачисленииРебенка.Учреждение)
	|			И (ВТ_Посещаемость.Группа = удуДоговорОЗачисленииРебенка.Группа)
	|			И (ВТ_Посещаемость.Ребенок = удуДоговорОЗачисленииРебенка.Ребенок)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графики КАК ВТ_Графики
	|		ПО удуДоговорОЗачисленииРебенка.Группа.ГрафикРаботы = ВТ_Графики.ГрафикРаботы
	|ГДЕ
	|	(&Группа = ЗНАЧЕНИЕ(Справочник.УдуГруппыУчреждения.пустаяСсылка)
	|			ИЛИ &Группа = удуДоговорОЗачисленииРебенка.Группа)
	|	И удуДоговорОЗачисленииРебенка.Учреждение = &Учреждение";
	Запрос.УстановитьПараметр("Учреждение", Объект.Учреждение);
	Запрос.УстановитьПараметр("ПериодРегистрации",Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("Группа",Группа);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Объект.СписокНачислений.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;
	Модифицированность = Истина;
	
КонецПроцедуры // ЗавершениеЗаполнитьПоВсем()

&НаКлиенте
Процедура ЗаполнитьПоГруппе(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
		Предупреждение("Заполните учреждение!");
		Возврат;
	КонецЕсли;
	
	Если Объект.СписокНачислений.Количество() Тогда
		Ответ = Вопрос("Перед заполнением табличнaя часть будет очищена. Заполнить?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Объект.СписокНачислений.Очистить();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Отбор=Новый Структура("Учреждение", Объект.Учреждение);
	ПараметрыВыбора=Новый Структура("Отбор, МножественныйВыбор", Отбор, Ложь);
	
	ОткрытьФорму("Справочник.удуГруппыУчреждения.ФормаВыбора", ПараметрыВыбора, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНачисленийРебенокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокНачислений.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Группа) Тогда
	    СтандартнаяОбработка = Ложь;
		СписокВыбора = ПолучитьСписокГруппы(ТекущиеДанные.Группа, Объект.ПериодРегистрации);
		ВыбЭлемент  = СписокВыбора.ВыбратьЭлемент("Выберите ребенка");
		Если ВыбЭлемент <> Неопределено Тогда
			ТекущиеДанные.Ребенок = ВыбЭлемент.Значение;
			ТекущиеДанные.Договор = ПолучитьДоговорРебенка(ТекущиеДанные.Ребенок, Объект.ПериодРегистрации);
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокГруппы(Группа, Месяц)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Вл.Ребенок
	|ИЗ
	|	(ВЫБРАТЬ
	|		удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок КАК Ребенок
	|	ИЗ
	|		РегистрСведений.удуСведенияОЗачисленииРебенкаВГруппу.СрезПоследних(&Период, Группа = &Группа) КАК удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних
	|	ГДЕ
	|		удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.СостояниеУчетаВГруппе = ЗНАЧЕНИЕ(Перечисление.удуСостояниеРебенкаНаУчетеВГруппе.ПринятВГруппу)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		удуСведенияОЗачисленииРебенкаВГруппу.Ребенок
	|	ИЗ
	|		РегистрСведений.удуСведенияОЗачисленииРебенкаВГруппу КАК удуСведенияОЗачисленииРебенкаВГруппу
	|	ГДЕ
	|		удуСведенияОЗачисленииРебенкаВГруппу.Период МЕЖДУ &Период И НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|		И удуСведенияОЗачисленииРебенкаВГруппу.Активность
	|		И удуСведенияОЗачисленииРебенкаВГруппу.Группа = &Группа
	|		И удуСведенияОЗачисленииРебенкаВГруппу.СостояниеУчетаВГруппе = ЗНАЧЕНИЕ(Перечисление.удуСостояниеРебенкаНаУчетеВГруппе.ПринятВГруппу)) КАК Вл";
	
	Запрос.УстановитьПараметр("Группа", Группа);
	Запрос.УстановитьПараметр("Период", Месяц);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Список = Новый СписокЗначений;
	Список.ЗагрузитьЗначения(Результат.ВыгрузитьКолонку("Ребенок"));
	
	Возврат Список;
	
КонецФункции // ПолучитьСписокГруппы()


&НаКлиенте
Процедура СписокНачисленийПосещеноДнейПриИзменении(Элемент)
	ПересчитатьСумму();
КонецПроцедуры


&НаКлиенте
Процедура ПересчитатьСумму()
	
	ТекущиеДанные = Элементы.СписокНачислений.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Договор) ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.ПосещеноДней) ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.РабочихДней) Тогда
		ТекущиеДанные.Сумма = 0;
	Иначе
		ТекущиеДанные.Сумма = ПересчитатьСуммуНаСервере(ТекущиеДанные.Договор, ТекущиеДанные.ПосещеноДней, ТекущиеДанные.РабочихДней );	
	КонецЕсли;	

КонецПроцедуры // ПересчитатьСумму()


&НаСервере
Функция ПересчитатьСуммуНаСервере(Договор, ПосещеноДней, РабочихДней)
	Сумма = 0;
	
	Запрос = Новый запрос("ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА удуДоговорОЗачисленииРебенка.ВидСтавкиОплаты = ЗНАЧЕНИЕ(перечисление.удуВидыСтавокРодительскойПлаты.ПустаяСсылка)
	|			ТОГДА 0
	|		КОГДА удуДоговорОЗачисленииРебенка.ВидСтавкиОплаты = ЗНАЧЕНИЕ(перечисление.удуВидыСтавокРодительскойПлаты.Месячная)
	|			ТОГДА удуДоговорОЗачисленииРебенка.ОплатаПоДоговору * (ЕСТЬNULL(&ПосещеноДней, 0) / ЕСТЬNULL(&РабочихДней, 0))
	|		КОГДА удуДоговорОЗачисленииРебенка.ВидСтавкиОплаты = ЗНАЧЕНИЕ(перечисление.удуВидыСтавокРодительскойПлаты.Дневная)
	|			ТОГДА удуДоговорОЗачисленииРебенка.ОплатаПоДоговору * ЕСТЬNULL(&ПосещеноДней, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	Документ.удуДоговорОЗачисленииРебенка КАК удуДоговорОЗачисленииРебенка
	|ГДЕ
	|	удуДоговорОЗачисленииРебенка.Ссылка = &Договор");
	Запрос.УстановитьПараметр("Договор",Договор);
	Запрос.УстановитьПараметр("РабочихДней",РабочихДней);
	Запрос.УстановитьПараметр("ПосещеноДней",ПосещеноДней);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Сумма = Выборка.Сумма;
	КонецЕсли;	
	
	Возврат Сумма;
	
КонецФункции // ПересчитатьСуммуНаСервере()

&НаСервере
Функция ПолучитьДоговорРебенка(Ребенок,Месяц)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	удуДоговорОЗачисленииРебенка.Ссылка
		|ИЗ
		|	Документ.удуДоговорОЗачисленииРебенка КАК удуДоговорОЗачисленииРебенка
		|ГДЕ
		|	удуДоговорОЗачисленииРебенка.Ребенок = &Ребенок";

	Запрос.УстановитьПараметр("Ребенок", Ребенок);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
    Договор = документы.удуДоговорОЗачисленииРебенка.ПустаяСсылка();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Договор = ВыборкаДетальныеЗаписи.ссылка;
	КонецЕсли;
	возврат Договор;
	
КонецФункции // ПолучитьДоговорРебенка()


&НаКлиенте
Процедура СписокНачисленийГруппаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокНачислений.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Группа) Тогда	
		ТекущиеДанные.РабочихДней = ЧислоРабочихДнейСервер(ТекущиеДанные.Группа, Объект.ПериодРегистрации);
	Иначе
		ТекущиеДанные.РабочихДней = 0;
	КонецЕсли;
	ПересчитатьСумму();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЧислоРабочихДнейСервер(Группа, ПериодРегистрации)
	
	Дней = 0;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	удуГрафикиРаботыПоВидамВремени.ГрафикРаботы,
	|	СУММА(удуГрафикиРаботыПоВидамВремени.ОсновноеЗначение) КАК РабочихДней
	|ИЗ
	|	РегистрСведений.удуГрафикиРаботыПоВидамВремени КАК удуГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	удуГрафикиРаботыПоВидамВремени.Месяц = &ПериодРегистрации
	|	И удуГрафикиРаботыПоВидамВремени.План
	|	И удуГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоДням)
	|	И удуГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &ПериодРегистрации И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)
	|	И удуГрафикиРаботыПоВидамВремени.ГрафикРаботы В
	|			(ВЫБРАТЬ
	|				удуГруппыУчреждения.ГрафикРаботы
	|			ИЗ
	|				Справочник.удуГруппыУчреждения КАК удуГруппыУчреждения
	|			ГДЕ
	|				удуГруппыУчреждения.Ссылка = &Группа)
	|
	|СГРУППИРОВАТЬ ПО
	|	удуГрафикиРаботыПоВидамВремени.ГрафикРаботы";
	Запрос.УстановитьПараметр("Группа",Группа);
	запрос.УстановитьПараметр("Периодрегистрации",ПериодРегистрации);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = результат.Выбрать();
		Выборка.Следующий();		
		Дней = Выборка.рабочихДней;
	КонецЕсли;
	
	Возврат Дней;

КонецФункции // ЧислоРабочихДнейСервер()

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	 ЗаполнитьПоВсемСервер(ВыбранноеЗначение);
КонецПроцедуры


