
//////////////////////////////////////////////////////////////////////////
//
//	ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() Тогда
		СозданКопированием = Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования);
		
		Если Не СозданКопированием Тогда
			Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
				Если Параметры.ЗначенияЗаполнения.Свойство("Учреждение") Тогда
					Объект.Учреждение = Параметры.ЗначенияЗаполнения.Учреждение;
				Иначе
					Объект.Учреждение = Константы.удуОсновноеУчреждение.Получить();
				КонецЕсли;
			КонецЕсли;
		
			Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
				Если Параметры.ЗначенияЗаполнения.Свойство("ГруппаДетскогоУчреждения") Тогда
					Объект.ГруппаДетскогоУчреждения = Параметры.ЗначенияЗаполнения.ГруппаДетскогоУчреждения;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
   		Объект.ПериодРегистрации = НачалоМесяца(Объект.Дата);
	Иначе
		ЗаполнитьТаблицу();
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
		Объект.Учреждение = Константы.удуОсновноеУчреждение.Получить();
		Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
			ЭтаФорма.Элементы.Учреждение.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Параметры.Ключ.Пустая() Тогда
		Объект.ПериодРегистрации 	= НачалоМесяца(Объект.Дата);
		КоличествоДнейМесяца();		
	КонецЕсли;
	МесяцСтрока = удуДокументыКадровогоУчетаКлиент.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);	
	УстановитьПредупреждение();
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////
//
//	ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура УчреждениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Табель.Количество() > 0 Тогда
		Если НЕ ПредупредитьОбОчистке() Тогда
			СтандартнаяОбработка = ЛОЖЬ;
			Возврат;
		Иначе
			Табель.Очистить();
			Объект.Невыходы.Очистить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УчреждениеОчистка(Элемент, СтандартнаяОбработка)
	Если Табель.Количество() > 0 Тогда
		Если НЕ ПредупредитьОбОчистке() Тогда
			СтандартнаяОбработка = ЛОЖЬ;
			Возврат;
		Иначе
			Табель.Очистить();
			Объект.Невыходы.Очистить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УчреждениеПриИзменении(Элемент)
	
	УчреждениеПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаДетскогоУчрежденияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Табель.Количество() > 0 Тогда
		Если НЕ ПредупредитьОбОчистке() Тогда
			СтандартнаяОбработка = ЛОЖЬ;
			Возврат;
		Иначе
			Табель.Очистить();
			Объект.Невыходы.Очистить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаДетскогоУчрежденияОчистка(Элемент, СтандартнаяОбработка)
	Если Табель.Количество() > 0 Тогда
		Если НЕ ПредупредитьОбОчистке() Тогда
			СтандартнаяОбработка = ЛОЖЬ;
			Возврат;
		Иначе
			Табель.Очистить();
			Объект.Невыходы.Очистить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаДетскогоУчрежденияПриИзменении(Элемент)
	
	ГруппаДетскогоУчрежденияПриИзмененииСервер();
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////
//
//	ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура КоличествоДнейМесяца()
	График = Объект.ГруппаДетскогоУчреждения.ГрафикРаботы;
	
	ПараметрыДокумента = Новый Структура("График, ПериодРегистрации", График, Объект.ПериодРегистрации, );
	
	ДниМесяца = Документы.удуТабельУчетаПосещаемостиДетей.ДниМесяца(ПараметрыДокумента);
	
	Объект.КоличествоДнейВМесяце = ДниМесяца.ДнейВМесяце;
	Объект.КоличествоРабочихДней = ДниМесяца.РабочихДней;
	
	ВидыДней.Добавить();
	
	Для К = 1 По 31 Цикл
		Если К > Объект.КоличествоДнейВМесяце Тогда
			Элементы.Табель.ПодчиненныеЭлементы["ТабельДень"+К].Видимость = ЛОЖЬ;
		Иначе
			Элементы.Табель.ПодчиненныеЭлементы["ТабельДень"+К].Видимость = ИСТИНА;
			
			ВидыДней[0]["ВидДня"+К] = ДниМесяца.ВидыДней[К-1].ВидДня;
			
			Если ВидыДней[0]["ВидДня"+К] = Перечисления.удуВидыДнейПроизводственногоКалендаря.Рабочий
				ИЛИ ВидыДней[0]["ВидДня"+К] = Перечисления.удуВидыДнейПроизводственногоКалендаря.Предпраздничный Тогда
				Элементы["ТабельДень"+К].Доступность = ИСТИНА;
				
				Элементы["ТабельДень"+К].ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.удуПричиныПропускаЗанятий");
				Элементы["ТабельДень"+К].УстановитьДействие("ПриИзменении","Подключаемый_ТабельДеньПриИзменении");
				Элементы["ТабельДень"+К].ВыбиратьТип = Ложь;
				Элементы["ТабельДень"+К].РежимВыбораИзСписка = ИСТИНА;
				Элементы["ТабельДень"+К].СписокВыбора.Очистить();
				Элементы["ТабельДень"+К].СписокВыбора.Добавить("Б", "Пропуск по болезни");
				Элементы["ТабельДень"+К].СписокВыбора.Добавить("Н", "Невыход");
				Элементы["ТабельДень"+К].СписокВыбора.Добавить("", "");
			Иначе
				Элементы["ТабельДень"+К].Доступность = ЛОЖЬ;
			КонецЕсли;
			Элементы["ТабельДень"+К].ЦветТекстаЗаголовка = ЦветаСтиля.ЦветТекстаПоля;
			Элементы["ТабельДень"+К].ЦветТекста = ЦветаСтиля.ЦветТекстаПоля;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПредупреждение()
	
	Если Табель.Количество() > 0 Тогда
		Элементы.Учреждение.ОтображениеПредупрежденияПриРедактировании 					= ОтображениеПредупрежденияПриРедактировании.Отображать;
		Элементы.ГруппаДетскогоУчреждения.ОтображениеПредупрежденияПриРедактировании 	= ОтображениеПредупрежденияПриРедактировании.Отображать;
		Элементы.Дата.ОтображениеПредупрежденияПриРедактировании 						= ОтображениеПредупрежденияПриРедактировании.Отображать;
	Иначе
		Элементы.Учреждение.ОтображениеПредупрежденияПриРедактировании 					= ОтображениеПредупрежденияПриРедактировании.НеОтображать;
		Элементы.ГруппаДетскогоУчреждения.ОтображениеПредупрежденияПриРедактировании 	= ОтображениеПредупрежденияПриРедактировании.НеОтображать;	
		Элементы.Дата.ОтображениеПредупрежденияПриРедактировании 						= ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ГруппаДетскогоУчрежденияПриИзмененииСервер()
	КоличествоДнейМесяца();
КонецПроцедуры

&НаСервере
Процедура УчреждениеПриИзмененииСервер()
	
	Объект.ГруппаДетскогоУчреждения = Справочники.удуГруппыУчреждения.ПустаяСсылка();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуДнейМесяца()
	
	ТекстЗапроса = " ВЫБРАТЬ ";
	
	Для К = 1 По Объект.КоличествоДнейВМесяце Цикл
		ТекстЗапроса = ТекстЗапроса + "
		|	МАКСИМУМ(ВЫБОР
		|		КОГДА ДЕНЬ(Календарь.Дата) = " + К + "
		|			ТОГДА ВЫБОР
		|					КОГДА ОсновноеЗначение > 0
		|						ТОГДА Значение(Справочник.удуПричиныПропускаЗанятий.ПустаяСсылка)
		|					ИНАЧЕ ""В""
		|				КОНЕЦ
		|	КОНЕЦ) КАК День" + К;
		
		Если К <> Объект.КоличествоДнейВМесяце Тогда
			ТекстЗапроса = ТекстЗапроса + ",";
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ИЗ
	|	РегистрСведений.удуГрафикиРаботыПоВидамВремени КАК Календарь
	|ГДЕ
	|	Календарь.Дата МЕЖДУ &ПериодРегистрации И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)
	|	И Календарь.ГрафикРаботы = &ГрафикРаботы
	|	И Календарь.Месяц = &ПериодРегистрации
	|	И Календарь.План
	|	И Календарь.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоДням)";
	
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ПериодРегистрации", (Объект.ПериодРегистрации));
	Запрос.УстановитьПараметр("ГрафикРаботы", Объект.ГруппаДетскогоУчреждения.ГрафикРаботы);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьТаблицуНевыходов()
	СтрокаДни = "";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Док.Ребенок,
	|	Док.Ребенок.Наименование КАК ИмяРебенка,";
	
	Для К = 1 По Объект.КоличествоДнейВМесяце  Цикл
		ТекстЗапроса = ТекстЗапроса + "
		|	МАКСИМУМ(ВЫБОР
		|		КОГДА ДЕНЬ(Док.ДатаНевыхода) = " + К + "
		|			ТОГДА ПричиныНепосещения Иначе Значение(Справочник.удуПричиныПропускаЗанятий.ПустаяСсылка)
		|	КОНЕЦ) КАК День" + К;
		
		СтрокаДни = СтрокаДни + "День" + К;
		Если К <> Объект.КоличествоДнейВМесяце  Тогда
			ТекстЗапроса = ТекстЗапроса + ",";
			СтрокаДни = СтрокаДни + ",";
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ИЗ
	|	Документ.удуТабельУчетаПосещаемостиДетей.Невыходы КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	СГРУППИРОВАТЬ ПО
	|	Док.Ребенок,
	|	Док.Ребенок.Наименование
	|УПОРЯДОЧИТЬ ПО
	|	ИмяРебенка";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицу()
	
	ТекстОшибки = "";
	Если НЕ удуДокументыКадровогоУчета.РегламентированныйКалендарьЗаполнен(Объект.ПериодРегистрации, 
		КонецМесяца(Объект.ПериодРегистрации),
		ТекстОшибки) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстОшибки;
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.ГруппаДетскогоУчреждения.ГрафикРаботы) Или Не ЗначениеЗаполнено(Объект.КоличествоДнейВМесяце) Тогда
		ТекстСообщения = Нстр("ru='Для указанной группы не заполнен график, заполнение невозможно!'");		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Поле = "ГруппаДетскогоУчреждения";		
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
		
		
	КоличествоДнейМесяца();
	
	ТаблицаДней = ПолучитьТаблицуДнейМесяца();
	ТаблицаДетей = СформироватьТаблицуДетей();
																									
	ТаблицаНевыходов = ПолучитьТаблицуНевыходов();																								
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДетей.Ребенок
	|ПОМЕСТИТЬ 
	|	ВТ_ТаблицаДетей
	|ИЗ
	|	&ТаблицаДетей КАК ТаблицаДетей;
	|	
	|ВЫБРАТЬ
	|	ТаблицаДней.*
	|ПОМЕСТИТЬ 
	|	ВТ_ТаблицаДней
	|ИЗ
	|	&ТаблицаДней КАК ТаблицаДней;
	| 
	|ВЫБРАТЬ
	|	ТаблицаНевыходов.*
	|ПОМЕСТИТЬ
	|	ВТ_ТаблицаНевыходов
	|ИЗ
	|	&ТаблицаНевыходов КАК ТаблицаНевыходов;";
	
	Если Объект.Невыходы.Количество() > 0 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ВТ_ТаблицаДетей.Ребенок.Наименование КАК ИмяРебенка,
		|	ВТ_ТаблицаДетей.Ребенок,
		|	ВТ_ТаблицаДней.*
		|ПОМЕСТИТЬ
		|	ВТ_Месяц
		|ИЗ
		|	ВТ_ТаблицаДетей,
		|	ВТ_ТаблицаДней;
		|
		|ВЫБРАТЬ
		|	ВТ_Месяц.Ребенок,
		|	ВТ_Месяц.ИмяРебенка,";
		
		Для К = 1 По Объект.КоличествоДнейВМесяце Цикл
			ТекстЗапроса = ТекстЗапроса + "
			|	ВЫБОР 
			|	КОГДА ВТ_ТаблицаДней.День" + К + " = ""В"" ТОГДА ""В""             
			|	КОГДА ВТ_ТаблицаНевыходов.День" + К + " = Значение(Справочник.удуПричиныПропускаЗанятий.ПропускПоБолезни) Тогда ""Б""
			|	КОГДА ВТ_ТаблицаНевыходов.День" + К + " <> Значение(Справочник.удуПричиныПропускаЗанятий.ПустаяСсылка) Тогда ""Н""
			| 	ИНАЧЕ """"
			|	КОНЕЦ КАК День" + К;
			Если К <> Объект.КоличествоДнейВМесяце  Тогда
				ТекстЗапроса = ТекстЗапроса + ",";			
			КонецЕсли;
		КонецЦикла;
		
		ТекстЗапроса = ТекстЗапроса + "
		|ИЗ
		|	ВТ_Месяц
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ВТ_ТаблицаНевыходов
		|ПО
		|	ВТ_Месяц.Ребенок = ВТ_ТаблицаНевыходов.Ребенок
		
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ВТ_ТаблицаДней
		|ПО
		|	ИСТИНА
		
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_Месяц.ИмяРебенка;
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ВЫБРАТЬ
		|	ВТ_ТаблицаДетей.Ребенок.Наименование КАК ИмяРебенка,
		|	ВТ_ТаблицаДетей.Ребенок,
		|	ВТ_ТаблицаДней.*
		|ИЗ
		|	ВТ_ТаблицаДетей,
		|	ВТ_ТаблицаДней
		|УПОРЯДОЧИТЬ ПО
		|	ИмяРебенка;";
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);				
	Запрос.УстановитьПараметр("ТаблицаДней", ТаблицаДней);
	Запрос.УстановитьПараметр("ТаблицаДетей", ТаблицаДетей);
	Запрос.УстановитьПараметр("ТаблицаНевыходов", ТаблицаНевыходов);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Табель.Загрузить(Результат);
	
КонецПроцедуры

&НаКлиенте
Функция ПредупредитьОбОчистке()
	Ответ = Вопрос("Табель будет очищен. Продолжить?", РежимДиалогаВопрос.ДаНет, , , "Подтверждение");
	
	Возврат Ответ = КодВозвратаДиалога.Да;
КонецФункции

&НаКлиенте
Процедура ПервыйРабочийДень(ИндексДня)
	Если ВидыДней[0]["ВидДня"+ИндексДня] = ПредопределенноеЗначение("Перечисление.удуВидыДнейПроизводственногоКалендаря.Рабочий") Или
		ВидыДней[0]["ВидДня"+ИндексДня] = ПредопределенноеЗначение("Перечисление.удуВидыДнейПроизводственногоКалендаря.Предпраздничный") Тогда	
		Возврат;
	КонецЕсли;
	
	Пока ИндексДня <= Объект.КоличествоДнейВМесяце Цикл
		Если ВидыДней[0]["ВидДня"+ИндексДня] = ПредопределенноеЗначение("Перечисление.удуВидыДнейПроизводственногоКалендаря.Рабочий") Или
			ВидыДней[0]["ВидДня"+ИндексДня] = ПредопределенноеЗначение("Перечисление.удуВидыДнейПроизводственногоКалендаря.Предпраздничный") Тогда			
			Прервать;
		Иначе
			ИндексДня = ИндексДня + 1;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТабель(Команда)
	Сообщение = Новый СообщениеПользователю;
	Отказ = ЛОЖЬ;
	
	Если НЕ ЗначениеЗаполнено(Объект.Учреждение) Тогда
		ТекстСообщения =  НСтр("ru = 'Не указано учреждение, заполнение невозможно!'"); 		
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Поле = "Учреждение";		
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ГруппаДетскогоУчреждения) Тогда
		ТекстСообщения = Нстр("ru='Не указана группа, заполнение невозможно!'");		
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Поле = "ГруппаДетскогоУчреждения";		
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если Табель.Количество() > 0 И Вопрос(НСтр("ru='Табель будет очищен. Продолжить?'"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Отказ = ИСТИНА;
	КонецЕсли;		
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Табель.Очистить();
	Объект.Невыходы.Очистить();	
	ЗаполнитьТаблицу();	
	Модифицированность = ИСТИНА;
	
КонецПроцедуры

&НаСервере
Функция СформироватьТаблицуДетей()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложЗап.Ребенок
		|ИЗ
		|	(ВЫБРАТЬ
		|		удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок КАК Ребенок
		|	ИЗ
		|		РегистрСведений.удуСведенияОЗачисленииРебенкаВГруппу.СрезПоследних(
		|				&ПериодРегистрации,
		|				Учреждение = &Учреждение
		|					И Группа = &Группа) КАК удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних
		|	ГДЕ
		|		удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.СостояниеУчетаВГруппе = ЗНАЧЕНИЕ(Перечисление.удуСостояниеРебенкаНаУчетеВГруппе.ПринятВГруппу)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		удуСведенияОЗачисленииРебенкаВГруппу.Ребенок
		|	ИЗ
		|		РегистрСведений.удуСведенияОЗачисленииРебенкаВГруппу КАК удуСведенияОЗачисленииРебенкаВГруппу
		|	ГДЕ
		|		удуСведенияОЗачисленииРебенкаВГруппу.Учреждение = &Учреждение
		|		И удуСведенияОЗачисленииРебенкаВГруппу.Группа = &Группа
		|		И удуСведенияОЗачисленииРебенкаВГруппу.Активность
		|		И удуСведенияОЗачисленииРебенкаВГруппу.СостояниеУчетаВГруппе = ЗНАЧЕНИЕ(Перечисление.удуСостояниеРебенкаНаУчетеВГруппе.ПринятВГруппу)
		|		И удуСведенияОЗачисленииРебенкаВГруппу.Период МЕЖДУ &ПериодРегистрации И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)) КАК ВложЗап";

	Запрос.УстановитьПараметр("Группа", Объект.ГруппаДетскогоУчреждения);
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("Учреждение", Объект.Учреждение);

	Результат = Запрос.Выполнить();

	Возврат Результат.Выгрузить();
	
КонецФункции // СформироватьТаблицуДетей()


&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	
	ПериодРегистрацииПриИзмененииСервер();
	МесяцСтрока = удуДокументыКадровогоУчетаКлиент.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	КоличествоДнейМесяца();
	Объект.Невыходы.Очистить();
	Табель.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	удуДокументыКадровогоУчетаКлиент.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, Объект.ПериодРегистрации, ЭтаФорма);
	МесяцСтрока = удуДокументыКадровогоУчетаКлиент.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	КоличествоДнейМесяца();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Объект.ПериодРегистрации = ДобавитьМесяц(Объект.ПериодРегистрации, Направление);
	МесяцСтрока = удуДокументыКадровогоУчетаКлиент.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	КоличествоДнейМесяца();		
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
		
	ПериодРегистрацииАвтоПодборСервер(Текст, ДанныеВыбора, СтандартнаяОбработка);
	КоличествоДнейМесяца();		
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ПериодРегистрацииОкончаниеВводаТекстаСервер(Текст, ДанныеВыбора, СтандартнаяОбработка);
	КоличествоДнейМесяца();		
КонецПроцедуры



&НаСервере
Процедура ПериодРегистрацииПриИзмененииСервер()
	
	удуДокументыКадровогоУчета.ДатаКакМесяцПодобратьДатуПоТексту(МесяцСтрока, Объект.ПериодРегистрации);
	
КонецПроцедуры

&НаСервере
Процедура ПериодРегистрацииАвтоПодборСервер(Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	удуДокументыКадровогоУчета.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПериодРегистрацииОкончаниеВводаТекстаСервер(Текст, Значение, СтандартнаяОбработка)
	
	удуДокументыКадровогоУчета.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ТабельДеньПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Табель.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяКолонка = Элементы.Табель.ТекущийЭлемент;
	Если ТекущаяКолонка = Неопределено Или ТекущаяКолонка.Имя = "ТабельПричиныНепосещения" Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяКолонка.Имя = "ТабельРебенок" Тогда
		ТекущаяКолонка = Элементы.ТабельДень1;
	КонецЕсли;
	
	ИндексДня = Число(ТекущаяКолонка.Заголовок);
	
	ПервыйРабочийДень(ИндексДня);
	
	ТекДата = Дата(Год(Объект.ПериодРегистрации), Месяц(Объект.ПериодРегистрации), ИндексДня);
	ТекРебенок = Элементы.Табель.ТекущиеДанные.Ребенок;
	
	
	ТекНевыход = Элементы.Табель.Данныестроки(ТекущаяСтрока)["День" +ИндексДня];
	
	Если ТекНевыход = "Н" Тогда
		ТекНевыход = ПредопределенноеЗначение("Справочник.удуПричиныПропускаЗанятий.Невыход");
	ИначеЕсли ТекНевыход = "Б" Тогда
		ТекНевыход = ПредопределенноеЗначение("Справочник.удуПричиныПропускаЗанятий.ПропускПоБолезни");	
	КонецЕсли;
	
	Отбор = Новый Структура("Ребенок, ДатаНевыхода");
	Отбор.Ребенок = ТекРебенок;
	
	Отбор.ДатаНевыхода = ТекДата;
		
	Строки = Объект.Невыходы.НайтиСтроки(Отбор);
	Если ТекНевыход = "" Тогда
		Если Строки.Количество() > 0 Тогда
			Объект.Невыходы.Удалить(Строки[0]);
		КонецЕсли;		
		Модифицированность = Истина;
		Возврат;
	КонецЕсли;
	
		
	Если Строки.Количество() > 0 Тогда
		Строка = Строки[0];
	Иначе
		Строка = Объект.Невыходы.Добавить();
		Строка.Ребенок = ТекРебенок;
		Строка.ДатаНевыхода = ТекДата;
	КонецЕсли;
		
	Строка.ПричиныНепосещения = ТекНевыход;
	Модифицированность = Истина;
	
	Если ИндексДня < Объект.КоличествоДнейВМесяце Тогда
		Элементы.Табель.ТекущийЭлемент = Элементы["ТабельДень"+(ИндексДня+1)];
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Элементы.ПериодРегистрации.ТолькоПросмотр = Объект.Проведен;
КонецПроцедуры

&НаКлиенте
Процедура ВоспитательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.ГруппаДетскогоУчреждения) Тогда
		ФормаВыбораВоспитателя = ПолучитьФорму("ОбщаяФорма.удуФормаВыбораВоспитателя");
		ФормаВыбораВоспитателя.ПараметрГруппа = Объект.ГруппаДетскогоУчреждения;
		ФормаВыбораВоспитателя.ВладелецФормы = ЭтаФорма;
		ФормаВыбораВоспитателя.ОткрытьМодально();				
	Иначе
		Вопрос("Перед выбором воспитателя необходимо сначала выбрать группу!", РежимДиалогаВопрос.ОК);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.удуСотрудникиОрганизаций") Тогда
		Объект.Воспитатель = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры
