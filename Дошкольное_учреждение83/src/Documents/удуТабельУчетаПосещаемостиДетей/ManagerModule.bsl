
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Формирует печатные формы объектов
//
// Параметры
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОбъектыПечати    - СписокЗначений   - Соответствие между объектами и именами печатных
//						областей, куда распечатан объект
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм,"ПФ_MXL_Форма0504608") Тогда		
		ТабДок = ПечатьТабеля(МассивОбъектов, "ПФ_MXL_Форма0504608");
		Заголовок = "Табель учета посещаемости детей (ф.0504608)";
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"ПФ_MXL_Форма0504608",
		Заголовок,ТабДок);
		ТабДок.Защита = Ложь;
	КонецЕсли;
	
КонецПроцедуры // Печать()

Функция ПечатьТабеля(МассивОбъектов, ОбъектыПечати)
	
	Ссылка = МассивОбъектов[0];
	
	ТабДокумент 					= Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТабельУчетаПосещаемостиДетей";
	Макет 							= ПолучитьМакет("ПФ_MXL_Форма0504608");
	
	ДанныеДляПечати = ПодготовитьДанныеДляПечати(МассивОбъектов[0]);
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(ДанныеДляПечати.ДанныеШапка);
	ТабДокумент.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Строка");
	Таблица = ДанныеДляПечати.ДанныеСтрока;
	Для Каждого Стр Из Таблица Цикл
		Область.Параметры.Заполнить(Стр);	
		ТабДокумент.Вывести(Область);
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("Итог");
	Для Счетчик = 1 ПО 31 Цикл
		Область.Параметры["День"+Счетчик] = Таблица.Итог("День"+Счетчик+"ИТОГ");	
	КонецЦикла;
	Область.Параметры.ПропущеноВсего = Таблица.Итог("ПропущеноВсего");
	Область.Параметры.ПропущеноУчитываемых = Таблица.Итог("ПропущеноУчитываемых");
	Область.Параметры.ДниКОплате = Таблица.Итог("ДниКОплате");
	
	ТабДокумент.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Подписи");
	Область.Параметры.Заполнить(ДанныеДляПечати.ДанныеПодписи);
	ТабДокумент.Вывести(Область);
	
	Возврат ТабДокумент;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ДниМесяца(ПараметрыДокумента) Экспорт
	ДниМесяца = Новый Структура;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("График", ПараметрыДокумента.График);
	Запрос.УстановитьПараметр("ПериодРегистрации",ПараметрыДокумента.ПериодРегистрации);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	удуГрафикиРаботыПоВидамВремени.Дата,
	|	ВЫБОР
	|		КОГДА удуГрафикиРаботыПоВидамВремени.ОсновноеЗначение = 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.удуВидыДнейПроизводственногоКалендаря.Воскресенье)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.удуВидыДнейПроизводственногоКалендаря.Рабочий)
	|	КОНЕЦ КАК ВидДня
	|ИЗ
	|	РегистрСведений.удуГрафикиРаботыПоВидамВремени КАК удуГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	удуГрафикиРаботыПоВидамВремени.ГрафикРаботы = &График
	|	И удуГрафикиРаботыПоВидамВремени.Месяц = &ПериодРегистрации
	|	И удуГрафикиРаботыПоВидамВремени.План
	|	И удуГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоДням)
	|	И удуГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &ПериодРегистрации И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК Количество
	|ИЗ
	|	РегистрСведений.удуГрафикиРаботыПоВидамВремени КАК удуГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	удуГрафикиРаботыПоВидамВремени.ГрафикРаботы = &График
	|	И удуГрафикиРаботыПоВидамВремени.Месяц = &ПериодРегистрации
	|	И удуГрафикиРаботыПоВидамВремени.План
	|	И удуГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоДням)
	|	И удуГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &ПериодРегистрации И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)
	|	И удуГрафикиРаботыПоВидамВремени.ОсновноеЗначение > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*)
	|ИЗ
	|	РегистрСведений.удуГрафикиРаботыПоВидамВремени КАК удуГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	удуГрафикиРаботыПоВидамВремени.ГрафикРаботы = &График
	|	И удуГрафикиРаботыПоВидамВремени.Месяц = &ПериодРегистрации
	|	И удуГрафикиРаботыПоВидамВремени.План
	|	И удуГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоДням)
	|	И удуГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &ПериодРегистрации И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)";
	
	
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если Результат.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДниМесяца.Вставить("ДнейВМесяце", Результат[1].Выгрузить()[1].Количество);
	ДниМесяца.Вставить("РабочихДней", Результат[1].Выгрузить()[0].Количество);
	ДниМесяца.Вставить("ВидыДней", Результат[0].Выгрузить());
	
	Возврат ДниМесяца;
	
КонецФункции

Функция ПодготовитьДанныеДляПечати(Ссылка)
	ДанныеДляПечати = Новый Структура("ДанныеШапка, ДанныеСтрока, ДанныеИтог, ДанныеПодписи");
	
	// Шапка
	ДанныеШапка = Новый Структура;
	ДанныеШапка.Вставить("Дата", Ссылка.ПериодРегистрации);
	ДанныеШапка.Вставить("ДатаДокумента", Ссылка.Дата);
	ДанныеШапка.Вставить("Учреждение", Ссылка.Учреждение.ПолноеНаименование);
	ДанныеШапка.Вставить("Группа", Ссылка.ГруппаДетскогоУчреждения);
	ДанныеШапка.Вставить("ОКПО", Ссылка.Учреждение.ОКПО);
	ДанныеШапка.Вставить("ВидРасчета", "");
	ДанныеШапка.Вставить("РежимРаботы", ?(ЗначениеЗаполнено(Ссылка.ГруппаДетскогоУчреждения.ГрафикРаботы), Ссылка.ГруппаДетскогоУчреждения.ГрафикРаботы, ""));
	
	ДанныеДляПечати.ДанныеШапка = ДанныеШапка;
	
	ТаблицаТЧ = ЗаполнитьТаблицу(Ссылка);
	
	ДанныеДляПечати.ДанныеСтрока = ТаблицаТЧ;
	
	// Подписи
	СтруктураПараметров = Новый Структура("ОтветственныеЛица");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	удуОтветственныеЛицаУчрежденияСрезПоследних.ФизЛицо
	|ИЗ
	|	РегистрСведений.удуОтветственныеЛицаУчреждения.СрезПоследних(&Период, Учреждение=&Учреждение И ОтветственноеЛицо = &ОтветственноеЛицо) КАК удуОтветственныеЛицаУчрежденияСрезПоследних";
	Запрос.УстановитьПараметр("Учреждение", Ссылка.Учреждение);
	Запрос.УстановитьПараметр("Период", Ссылка.ПериодРегистрации);
	Запрос.УстановитьПараметр("ОтветственноеЛицо", Перечисления.ОтветственныеЛицаОрганизаций.РуководительОрганизации);
	Руководитель = "";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Руководитель = Выборка.ФизЛицо;
	КонецЕсли;
	
	Воспитатель = ?(ЗначениеЗаполнено(Ссылка.Воспитатель), 
											Ссылка.Воспитатель, 
											?(Ссылка.ГруппаДетскогоУчреждения.ВоспитательныйПерсонал.Количество(),
											Ссылка.ГруппаДетскогоУчреждения.ВоспитательныйПерсонал[0].РаботникУчреждения,
											Неопределено));
	
	ДанныеПодписи = Новый Структура;
	ДанныеПодписи.Вставить("Руководитель", Руководитель);
	ДанныеПодписи.Вставить("Воспитатель", Воспитатель);
	ДанныеПодписи.Вставить("ДатаДокумента", Ссылка.Дата);
	
	ДанныеДляПечати.ДанныеПодписи = ДанныеПодписи;
	
	Возврат ДанныеДляПечати;
КонецФункции

Функция ЗаполнитьТаблицу(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Календарь.Дата,
	|	Календарь.ОсновноеЗначение
	|ПОМЕСТИТЬ ВТ_РабочиеДни
	|ИЗ
	|	РегистрСведений.удуГрафикиРаботыПоВидамВремени КАК Календарь
	|ГДЕ
	|	Календарь.Дата МЕЖДУ &ПериодРегистрации И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)
	|	И Календарь.ГрафикРаботы = &График
	|	И Календарь.Месяц = &ПериодРегистрации
	|	И Календарь.План
	|	И Календарь.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоДням)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставГруппОбученияСрезПоследних.Ребенок КАК Ребенок,
	|	НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ИСТИНА КАК Актуальность
	|ПОМЕСТИТЬ ВТ_ПериодыИзмененийСостава
	|ИЗ
	|	РегистрСведений.удуСведенияОЗачисленииРебенкаВГруппу.СрезПоследних(НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ), Группа = &Группа) КАК СоставГруппОбученияСрезПоследних
	|ГДЕ
	|	СоставГруппОбученияСрезПоследних.СостояниеУчетаВГруппе = ЗНАЧЕНИЕ(Перечисление.удуСостояниеРебенкаНаУчетеВГруппе.ПринятВГруппу)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоставГруппОбучения.Ребенок,
	|	СоставГруппОбучения.Период,
	|	ВЫБОР
	|		КОГДА СоставГруппОбучения.СостояниеУчетаВГруппе = ЗНАЧЕНИЕ(Перечисление.удуСостояниеРебенкаНаУчетеВГруппе.ПринятВГруппу)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	РегистрСведений.удуСведенияОЗачисленииРебенкаВГруппу КАК СоставГруппОбучения
	|ГДЕ
	|	СоставГруппОбучения.Период МЕЖДУ НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ) И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)
	|	И СоставГруппОбучения.Группа = &Группа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВлЗап.НачалоПериода,
	|	КОНЕЦПЕРИОДА(ВлЗап.КонецПериода, ДЕНЬ) КАК КонецПериода,
	|	ВТ_ПериодыИзмененийСостава.Ребенок
	|ПОМЕСТИТЬ ВТ_ПериодыЗачисленияДетей
	|ИЗ
	|	ВТ_ПериодыИзмененийСостава КАК ВТ_ПериодыИзмененийСостава
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВТ_ПериодыИзмененийСостава.Период КАК НачалоПериода,
	|			МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(ВТ_ПериодыИзмененийСостава1.Период, ДЕНЬ, -1), НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ), ДЕНЬ))) КАК КонецПериода,
	|			ВТ_ПериодыИзмененийСостава.Ребенок КАК Ребенок
	|		ИЗ
	|			ВТ_ПериодыИзмененийСостава КАК ВТ_ПериодыИзмененийСостава
	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыИзмененийСостава КАК ВТ_ПериодыИзмененийСостава1
	|				ПО ВТ_ПериодыИзмененийСостава.Период < ВТ_ПериодыИзмененийСостава1.Период
	|					И ВТ_ПериодыИзмененийСостава.Ребенок = ВТ_ПериодыИзмененийСостава1.Ребенок
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВТ_ПериодыИзмененийСостава.Период,
	|			ВТ_ПериодыИзмененийСостава.Ребенок) КАК ВлЗап
	|		ПО ВТ_ПериодыИзмененийСостава.Период = ВлЗап.НачалоПериода
	|			И ВТ_ПериодыИзмененийСостава.Ребенок = ВлЗап.Ребенок
	|ГДЕ
	|	ВТ_ПериодыИзмененийСостава.Актуальность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	удуСведенияОПосещаемостиДОУ.Учреждение,
	|	удуСведенияОПосещаемостиДОУ.Группа,
	|	удуСведенияОПосещаемостиДОУ.Ребенок,
	|	удуСведенияОПосещаемостиДОУ.ПризнакПрисутствия,
	|	удуСведенияОПосещаемостиДОУ.ПричинаПропускаЗанятия,
	|	удуСведенияОПосещаемостиДОУ.Период
	|ПОМЕСТИТЬ ВТ_ТаблицаДетей
	|ИЗ
	|	РегистрСведений.удуСведенияОПосещаемостиДОУ КАК удуСведенияОПосещаемостиДОУ
	|ГДЕ
	|	удуСведенияОПосещаемостиДОУ.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Дата,
	|	ВложенныйЗапрос.ОсновноеЗначение,
	|	ВложенныйЗапрос.Ребенок,
	|	ВложенныйЗапрос.Группа,
	|	ВложенныйЗапрос.Учреждение,
	|	ЕСТЬNULL(ВТ_ТаблицаДетей.ПризнакПрисутствия, ЛОЖЬ) КАК ПризнакПрисутствия,
	|	ЕСТЬNULL(ВТ_ТаблицаДетей.ПричинаПропускаЗанятия, ЗНАЧЕНИЕ(Справочник.удуПричиныПропускаЗанятий.ПустаяСсылка)) КАК ПричинаПропускаЗанятия,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ТаблицаДетей.ПризнакПрисутствия, ЛОЖЬ) = ИСТИНА
	|				ИЛИ ЕСТЬNULL(ВТ_ТаблицаДетей.ПричинаПропускаЗанятия, ЗНАЧЕНИЕ(Справочник.удуПричиныПропускаЗанятий.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.удуПричиныПропускаЗанятий.ПустаяСсылка)
	|					И НЕ ВТ_ТаблицаДетей.ПричинаПропускаЗанятия.Уважительная
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДниКОплате,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ОсновноеЗначение = 1
	|				И НЕ ВТ_ТаблицаДетей.ПризнакПрисутствия
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПропущеноВсего,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ОсновноеЗначение = 1
	|				И НЕ ВТ_ТаблицаДетей.ПризнакПрисутствия
	|				И НЕ ВТ_ТаблицаДетей.ПричинаПропускаЗанятия.Уважительная
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПропущеноУчитываемых,
	|	ВЫБОР
	|		КОГДА ВТ_ПериодыЗачисленияДетей.Ребенок ЕСТЬ NULL 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НеЗачислен
	|ПОМЕСТИТЬ ВТ_Таблица
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_РабочиеДни.Дата КАК Дата,
	|		ВТ_РабочиеДни.ОсновноеЗначение КАК ОсновноеЗначение,
	|		ВложенныйЗапрос.Ребенок КАК Ребенок,
	|		ВложенныйЗапрос.Группа КАК Группа,
	|		ВложенныйЗапрос.Учреждение КАК Учреждение
	|	ИЗ
	|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ВТ_ТаблицаДетей.Ребенок КАК Ребенок,
	|			ВТ_ТаблицаДетей.Группа КАК Группа,
	|			ВТ_ТаблицаДетей.Учреждение КАК Учреждение
	|		ИЗ
	|			ВТ_ТаблицаДетей КАК ВТ_ТаблицаДетей) КАК ВложенныйЗапрос
	|			ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РабочиеДни КАК ВТ_РабочиеДни
	|			ПО (ИСТИНА)) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаДетей КАК ВТ_ТаблицаДетей
	|		ПО ВложенныйЗапрос.Ребенок = ВТ_ТаблицаДетей.Ребенок
	|			И ВложенныйЗапрос.Группа = ВТ_ТаблицаДетей.Группа
	|			И ВложенныйЗапрос.Учреждение = ВТ_ТаблицаДетей.Учреждение
	|			И ВложенныйЗапрос.Дата = ВТ_ТаблицаДетей.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыЗачисленияДетей КАК ВТ_ПериодыЗачисленияДетей
	|		ПО ВложенныйЗапрос.Ребенок = ВТ_ПериодыЗачисленияДетей.Ребенок
	|			И (ВложенныйЗапрос.Дата МЕЖДУ ВТ_ПериодыЗачисленияДетей.НачалоПериода И ВТ_ПериодыЗачисленияДетей.КонецПериода)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложЗап.Группа,
	|	ВложЗап.Ребенок,
	|	ВложЗап.Учреждение,
	|	ЕСТЬNULL(удуСведенияОЗачисленииРебенкаВГруппу.ОснованиеЗачисления.ОплатаПоДоговору, 0) КАК Ставка
	|ПОМЕСТИТЬ ВТ_Ставки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.Группа КАК Группа,
	|		ВложенныйЗапрос.Ребенок КАК Ребенок,
	|		ВложенныйЗапрос.Учреждение КАК Учреждение,
	|		МАКСИМУМ(удуСведенияОЗачисленииРебенкаВГруппу.Регистратор) КАК Регистратор
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ВТ_ТаблицаДетей.Группа КАК Группа,
	|			ВТ_ТаблицаДетей.Ребенок КАК Ребенок,
	|			ВТ_ТаблицаДетей.Учреждение КАК Учреждение,
	|			МИНИМУМ(ВТ_ТаблицаДетей.Период) КАК Период
	|		ИЗ
	|			ВТ_ТаблицаДетей КАК ВТ_ТаблицаДетей
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВТ_ТаблицаДетей.Группа,
	|			ВТ_ТаблицаДетей.Ребенок,
	|			ВТ_ТаблицаДетей.Учреждение) КАК ВложенныйЗапрос
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуСведенияОЗачисленииРебенкаВГруппу КАК удуСведенияОЗачисленииРебенкаВГруппу
	|			ПО ВложенныйЗапрос.Группа = удуСведенияОЗачисленииРебенкаВГруппу.Группа
	|				И ВложенныйЗапрос.Ребенок = удуСведенияОЗачисленииРебенкаВГруппу.Ребенок
	|				И ВложенныйЗапрос.Учреждение = удуСведенияОЗачисленииРебенкаВГруппу.Учреждение
	|				И ВложенныйЗапрос.Период >= удуСведенияОЗачисленииРебенкаВГруппу.Период
	|	ГДЕ
	|		удуСведенияОЗачисленииРебенкаВГруппу.СостояниеУчетаВГруппе = ЗНАЧЕНИЕ(Перечисление.удуСостояниеРебенкаНаУчетеВГруппе.ПринятВГруппу)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Группа,
	|		ВложенныйЗапрос.Ребенок,
	|		ВложенныйЗапрос.Учреждение) КАК ВложЗап
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуСведенияОЗачисленииРебенкаВГруппу КАК удуСведенияОЗачисленииРебенкаВГруппу
	|		ПО ВложЗап.Учреждение = удуСведенияОЗачисленииРебенкаВГруппу.Учреждение
	|			И ВложЗап.Группа = удуСведенияОЗачисленииРебенкаВГруппу.Группа
	|			И ВложЗап.Ребенок = удуСведенияОЗачисленииРебенкаВГруппу.Ребенок
	|			И ВложЗап.Регистратор = удуСведенияОЗачисленииРебенкаВГруппу.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Таблица.Ребенок,
	|	ВТ_Таблица.Группа,
	|	ВТ_Таблица.Учреждение,
	|	СУММА(ВТ_Таблица.ДниКОплате) КАК ДниКОплате,
	|	СУММА(ВТ_Таблица.ПропущеноВсего) КАК ПропущеноВсего,
	|	СУММА(ВТ_Таблица.ПропущеноУчитываемых) КАК ПропущеноУчитываемых,
	|	МИНИМУМ(ЕСТЬNULL(ВТ_Ставки.Ставка, 0)) КАК Ставка //ТекстДни
	|ИЗ
	|	ВТ_Таблица КАК ВТ_Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Ставки КАК ВТ_Ставки
	|		ПО ВТ_Таблица.Ребенок = ВТ_Ставки.Ребенок
	|			И ВТ_Таблица.Учреждение = ВТ_Ставки.Учреждение
	|			И ВТ_Таблица.Группа = ВТ_Ставки.Группа
	|ГДЕ
	|	ВТ_Ставки.Ребенок ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Таблица.Ребенок,
	|	ВТ_Таблица.Группа,
	|	ВТ_Таблица.Учреждение";
	
	ТекстДни = "";
	Для Счетчик = 1 ПО 31 Цикл			
		ТекстДни = ТекстДни + "		
		|	,МАКСИМУМ(ВЫБОР
		|			КОГДА ДЕНЬ(ВТ_Таблица.Дата) = "+Счетчик +"
		|				ТОГДА ВЫБОР
		|						КОГДА ВТ_Таблица.НеЗачислен = 1 ТОГДА ""-""
		|						КОГДА ВТ_Таблица.ОсновноеЗначение = 0
		|							ТОГДА ""В""
		|						КОГДА ВТ_Таблица.ПричинаПропускаЗанятия = ЗНАЧЕНИЕ(Справочник.удуПричиныПропускаЗанятий.ПропускПоБолезни)
		|							ТОГДА ""Б""
		|						КОГДА НЕ ВТ_Таблица.ПризнакПрисутствия
		|							ТОГДА ""Н""
		|						ИНАЧЕ """"
		|					КОНЕЦ
		|			ИНАЧЕ """"
		|		КОНЕЦ) КАК День"+Счетчик +"	
		|	,МАКСИМУМ(ВЫБОР
		|			КОГДА ДЕНЬ(ВТ_Таблица.Дата) = "+Счетчик +"
		|				ТОГДА ВЫБОР
		|						КОГДА ВТ_Таблица.ОсновноеЗначение = 0 ИЛИ ВТ_Таблица.НеЗачислен = 1
		|							ТОГДА 0
		|						КОГДА НЕ ВТ_Таблица.ПризнакПрисутствия
		|							ТОГДА 1
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК День"+Счетчик+"ИТОГ";		
	КонецЦикла;
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"//ТекстДни",ТекстДни);	
	Запрос.УстановитьПараметр("График",Ссылка.ГруппаДетскогоУчреждения.ГрафикРаботы);
	Запрос.УстановитьПараметр("Группа",Ссылка.ГруппаДетскогоУчреждения);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ПериодРегистрации",Ссылка.ПериодРегистрации);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции
