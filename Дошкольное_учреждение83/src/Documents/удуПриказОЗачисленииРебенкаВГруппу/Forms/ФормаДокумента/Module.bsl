&НаСервере
Функция ПолучитьЗаголовокКомплектации(Комплектация)
	Возврат "Создан автоматически на основании комплектации №" + СокрЛП(Комплектация.Номер) + " от " + Формат(Комплектация.Дата, "ДЛФ=D");
КонецФункции

&НаСервере
Функция ПолучитьРебенкаИзДоговора(ПереданныйДоговор)
	Если ЗначениеЗаполнено(ПереданныйДоговор.Ребенок) Тогда
		Возврат ПереданныйДоговор.Ребенок;
	Иначе
		Возврат Справочники.удуДети.ПустаяСсылка();
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ЗаполнитьИмеющимисяДоговорамиНаСервере()
	ОбъектРеквизит = РеквизитФормыВЗначение("Объект");
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	удуДоговорОЗачисленииРебенка.Ссылка,
	               |	удуДоговорОЗачисленииРебенка.Ребенок
	               |ИЗ
	               |	Документ.удуДоговорОЗачисленииРебенка КАК удуДоговорОЗачисленииРебенка
	               |ГДЕ
	               |	(НЕ удуДоговорОЗачисленииРебенка.ПометкаУдаления)
	               |	И (НЕ удуДоговорОЗачисленииРебенка.ПроизошлоЗачисление)
	               |	И удуДоговорОЗачисленииРебенка.Группа = &Группа";
				   
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Группа", ОбъектРеквизит.Группа);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаРезультат Из РезультатЗапроса Цикл
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Ребенок", СтрокаРезультат.Ссылка.Ребенок);
		МассивНайденныхСтрок = ОбъектРеквизит.ТабличнаяЧастьЗачисление.НайтиСтроки(СтруктураПоиска);
		Если МассивНайденныхСтрок.Количество() = 0 Тогда
			НоваяСтрокаВоспитанники = ОбъектРеквизит.ТабличнаяЧастьЗачисление.Добавить();
			НоваяСтрокаВоспитанники.ОснованиеЗачисления = СтрокаРезультат.Ссылка;
			НоваяСтрокаВоспитанники.Ребенок = СтрокаРезультат.Ссылка.Ребенок;
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ОбъектРеквизит, "Объект");
КонецПроцедуры

&НаСервере
Процедура ОбновитьСведенияОСоставеГруппы()
	// Отбор по учреждению
	сэРезультатВыполнения = удуОбработкаПросмотрИнформации.ПолучитьсоставГруппы(Объект.Группа, ТекущаяДата());
	ЗначениеВРеквизитФормы(сэРезультатВыполнения, "СоставВыбраннойГруппы");
	
	Если Объект.Группа.БезОграниченияВместительности Тогда
		Элементы.НадписьСведенияОГруппе.Заголовок = "Количество детей в выбранной группе: " + Строка(сэРезультатВыполнения.Количество()) + ". Вместительность группы не ограничена.";
	Иначе
		Элементы.НадписьСведенияОГруппе.Заголовок = "Количество детей в выбранной группе: " + Строка(сэРезультатВыполнения.Количество()) + ". Вместительность группы: " + Строка(Объект.Группа.Вместительность);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
		Объект.Учреждение = Константы.удуОсновноеУчреждение.Получить();
		Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
			ЭтаФорма.Элементы.Учреждение.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаФактическогоЗачисления) Тогда
		Объект.ДатаФактическогоЗачисления = ТекущаяДата();
	КонецЕсли;
	
	ОбновитьСведенияОСоставеГруппы();
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКандидатами(Команда)
	// Вставить содержимое обработчика.
	Если Объект.ТабличнаяЧастьЗачисление.Количество() > 0 Тогда
		Если Вопрос("Перед заполнением табличная часть будет очищена, Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Объект.ТабличнаяЧастьЗачисление.Очистить();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Группа) Тогда
		ЗаполнитьИмеющимисяДоговорамиНаСервере();	
	Иначе
		Вопрос("Перед заполнением табличной части обязательно укажите группу!", РежимДиалогаВопрос.ОК);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ОбновитьСведенияОСоставеГруппы();
КонецПроцедуры


&НаКлиенте
Процедура НадписьСведенияОГруппеНажатие(Элемент)
	// Вставить содержимое обработчика.
	Если СоставВыбраннойГруппы.Количество() > 0 Тогда 
		ФормаПросмотра = ПолучитьФорму("ОбщаяФорма.удуФормаПросмотраСоставаГруппы");	
		ФормаПросмотра.ВладелецФормы = ЭтаФорма;
		Для Каждого СтрокаСоставГруппы Из СоставВыбраннойГруппы Цикл
			НоваяСтрокаФормыПросмотра = ФормаПросмотра.ТабличнаяЧастьДети.Добавить();
			НоваяСтрокаФормыПросмотра.Ребенок = СтрокаСоставГруппы.Ребенок;
			НоваяСтрокаФормыПросмотра.Пол = СтрокаСоставГруппы.Пол;
			НоваяСтрокаФормыПросмотра.ДатаРождения = СтрокаСоставГруппы.ДатаРождения;
		КонецЦикла;
		ФормаПросмотра.ОткрытьМодально();		
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ГруппаНомерДата.ТолькоПросмотр = Объект.Проведен;
	Элементы.ТабличнаяЧастьЗачисление.ТолькоПросмотр = Объект.Проведен;
	Элементы.Группа.ТолькоПросмотр = Объект.Проведен;
	Элементы.ОтключитьКонтрольВместимости.ТолькоПросмотр = Объект.Проведен;
	Если ЗначениеЗаполнено(Объект.ДокументКомплектация) Тогда
		Элементы.НадписьСведенияОКомплектации.Видимость = Истина;	
		Элементы.НадписьСведенияОКомплектации.Заголовок = ПолучитьЗаголовокКомплектации(Объект.ДокументКомплектация);
	Иначе
		Элементы.НадписьСведенияОКомплектации.Видимость = Ложь;	
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ТабличнаяЧастьЗачислениеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	// Вставить содержимое обработчика.
	Если Копирование Тогда
		Вопрос("В табличную часть документа ""Приказ о зачислении"" сведения о детях нельзя вводить копированием!", РежимДиалогаВопрос.ОК);
		Отказ = истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Группа) Тогда
		Вопрос("Перед заполнением табличной части обязательно укажите группу!", РежимДиалогаВопрос.ОК);
		Отказ = истина;		
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ТабличнаяЧастьЗачислениеОснованиеЗачисленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.Группа) Тогда
		ФормаВыбораДоговора = ПолучитьФорму("ОбщаяФорма.удуФормаВыбораДоговора");
		ФормаВыбораДоговора.ПараметрГруппа = Объект.Группа;
		ФормаВыбораДоговора.ВладелецФормы = ЭтаФорма;
		ФормаВыбораДоговора.ОткрытьМодально();				
	Иначе
		Вопрос("Перед заполнением табличной части обязательно укажите группу!", РежимДиалогаВопрос.ОК);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.удуДоговорОЗачисленииРебенка") Тогда		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ОснованиеЗачисления", ВыбранноеЗначение);
		МассивНайденныхСтрок = Объект.ТабличнаяЧастьЗачисление.НайтиСтроки(СтруктураПоиска);
		Если МассивНайденныхСтрок.Количество() = 0 Тогда
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Ребенок", ПолучитьРебенкаИзДоговора(ВыбранноеЗначение));
			МассивНайденныхСтрок = Объект.ТабличнаяЧастьЗачисление.НайтиСтроки(СтруктураПоиска);
			Если МассивНайденныхСтрок.Количество() = 0 Тогда			
				Элементы.ТабличнаяЧастьЗачисление.ТекущиеДанные.ОснованиеЗачисления = ВыбранноеЗначение;
				Элементы.ТабличнаяЧастьЗачисление.ТекущиеДанные.Ребенок = ПолучитьРебенкаИзДоговора(ВыбранноеЗначение);
			Иначе
				Вопрос("В табличной части уже указан ребенок, договор на зачисление которого вы выбираете", РежимДиалогаВопрос.ОК);
			КонецЕсли;
		Иначе
			Вопрос("Выбранный договор на зачисление ребенка уже указан в документе", РежимДиалогаВопрос.ОК);
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура НадписьСведенияОКомплектацииНажатие(Элемент)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(Объект.ДокументКомплектация) Тогда
		ПередаваемыеПараметры = Новый Структура("Ключ", Объект.ДокументКомплектация);
		ОткрытьФормуМодально("Документ.удуКомплектованиеГруппы.Форма.ФормаДокумента", ПередаваемыеПараметры, ЭтаФорма);		
	КонецЕсли;	
КонецПроцедуры
                 