////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры, функции

Функция СформироватьЗапросПоНезаполненнымСотрудникам(ЗапросАвтоЗаполнения)
	
	// Запрос для вывода сообщения о незаполненных сотрудниках
	ЗапросАвтоЗаполнения.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПРЕДСТАВЛЕНИЕ(РегистрТабеля.Сотрудник) КАК ПредставлениеСотрудника,
	|	РегистрТабеля.Регистратор КАК ДокументОснование,
	|	ПРЕДСТАВЛЕНИЕ(РегистрТабеля.Регистратор) КАК ПредставлениеДокумента,
	|	РегистрТабеля.Сотрудник,
	|	РегистрТабеля.Регистратор КАК ВведенныйДокумент
	|ИЗ
	|	РегистрНакопления.удуРабочееВремяРаботниковОрганизаций КАК РегистрТабеля
	|ГДЕ
	|	РегистрТабеля.Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТСписокРаботников.Ссылка
	|			ИЗ
	|				ВТСписокРаботников)
	|	И РегистрТабеля.Регистратор <> &ДокументСсылка
	|	И (РегистрТабеля.Регистратор ССЫЛКА Документ.удуТабельУчетаРабочегоВремениОрганизации)
	|	И (РегистрТабеля.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|			ИЛИ РегистрТабеля.ВЦеломЗаПериод
	|				И РегистрТабеля.Период = &Месяц)";
	
	Возврат ЗапросАвтоЗаполнения.Выполнить();
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция предназначена для автозаполнения документа
// если заполнен параметр сотрудники, то в табличную часть будут добавлены
// строки по данным сотрудникам.
Функция Автозаполнение(Объект, Сотрудник = Неопределено, ТекущаяСтрокаТабличнойЧасти = Неопределено) Экспорт
	
	МассивПриставок = Новый Массив(4);
	МассивПриставок[0] = "Первый";
	МассивПриставок[1] = "Второй";
	МассивПриставок[2] = "Третий";
	МассивПриставок[3] = "Четвертый";
	
	ТекстЗапросаДляОтладки = "";
	
	ЗапросАвтоЗаполнения = Новый Запрос;
		Если Сотрудник = Неопределено Тогда
			ЗапросАвтоЗаполнения.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	РаботникиОрганизаций.Сотрудник КАК Ссылка,
			|	РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо
			|ПОМЕСТИТЬ ВТСписокРаботников
			|ИЗ
			|	РегистрСведений.удуРаботникиОрганизаций.СрезПоследних(&НачалоМесяца, Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизаций
			|ГДЕ
			|	(РаботникиОрганизаций.ПодразделениеОрганизации В ИЕРАРХИИ (&Подразделение)
			|			ИЛИ &Подразделение = ЗНАЧЕНИЕ(Справочник.удуПодразделенияУчереждения.ПустаяСсылка))
			|	И РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.удуПричиныИзмененияСостояния.Увольнение)
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	РаботникиОрганизаций.Сотрудник,
			|	РаботникиОрганизаций.Сотрудник.Физлицо
			|ИЗ
			|	РегистрСведений.удуРаботникиОрганизаций КАК РаботникиОрганизаций
			|ГДЕ
			|	РаботникиОрганизаций.Период > &НачалоМесяца
			|	И РаботникиОрганизаций.Период <= &КонецМесяца
			|	И РаботникиОрганизаций.Организация = &ГоловнаяОрганизация
			|	И (РаботникиОрганизаций.ПодразделениеОрганизации В ИЕРАРХИИ (&Подразделение)
			|			ИЛИ &Подразделение = ЗНАЧЕНИЕ(Справочник.удуПодразделенияУчереждения.ПустаяСсылка))
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка"; 
			
			ЗапросАвтоЗаполнения.УстановитьПараметр("ВключатьВРезультатПустыеЗаписи", Ложь);
		Иначе
			ЗапросАвтоЗаполнения.Текст = 
			"ВЫБРАТЬ
			|	СотрудникиОрганизаций.Ссылка КАК Ссылка,
			|	СотрудникиОрганизаций.Физлицо
			|ПОМЕСТИТЬ ВТСписокРаботников
			|ИЗ
			|	Справочник.удуСотрудникиОрганизаций КАК СотрудникиОрганизаций
			|ГДЕ
			|	СотрудникиОрганизаций.Ссылка В(&Сотрудник)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка";
			ЗапросАвтоЗаполнения.УстановитьПараметр("Сотрудник", Сотрудник);
			ЗапросАвтоЗаполнения.УстановитьПараметр("ВключатьВРезультатПустыеЗаписи", Истина);
		КонецЕсли;
			
	ЗапросАвтоЗаполнения.УстановитьПараметр("ГоловнаяОрганизация", Объект.Организация);
	ЗапросАвтоЗаполнения.УстановитьПараметр("Подразделение", Объект.ПодразделениеОрганизации);
	ЗапросАвтоЗаполнения.УстановитьПараметр("НачалоМесяца", Объект.ДатаНачалаПериода);
	ЗапросАвтоЗаполнения.УстановитьПараметр("КонецМесяца", Объект.ДатаОкончанияПериода);
	ЗапросАвтоЗаполнения.УстановитьПараметр("Месяц", Объект.ПериодРегистрации);
	
	ЗапросАвтоЗаполнения.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ТекстЗапросаДляОтладки = ТекстЗапросаДляОтладки + ЗапросАвтоЗаполнения.Текст + " ; " + Символы.ПС;
	ЗапросАвтоЗаполнения.Выполнить();
	
	ЗапросАвтоЗаполнения.УстановитьПараметр("ДокументСсылка", ?(ЗначениеЗаполнено(Объект.Ссылка),Объект.Ссылка,Неопределено));
	
	ВидыВремениУчитываемыеВВыходные = Новый Массив(2);
	ВидыВремениУчитываемыеВВыходные[0] = Перечисления.удуВидыВремени.ОтработанноеСверхНормы;
	ВидыВремениУчитываемыеВВыходные[1] = Перечисления.удуВидыВремени.ЦелодневноеНеотработанное;
	ЗапросАвтоЗаполнения.УстановитьПараметр("ВидыВремениУчитываемыеВВыходные", ВидыВремениУчитываемыеВВыходные);
	ЗапросАвтоЗаполнения.УстановитьПараметр("ПустойГрафик", Справочники.удуГрафикиРаботы.ПустаяСсылка());
	
	ГодПериода = Формат(Год(Объект.ПериодРегистрации), "ЧГ=4");
	МесяцПериода = Месяц(Объект.ПериодРегистрации);
	ТекстЗапроса = "ВЫБРАТЬ
	|	ДатаТабеля
	|	
	|ПОМЕСТИТЬ ВТДатыТабеля 
	|	ИЗ (
	|	ВЫБРАТЬ
	|	ДАТАВРЕМЯ(" + ГодПериода + ", " + МесяцПериода + " , " + День(Объект.ДатаНачалаПериода) + ") КАК ДатаТабеля
	|	";           
	Для НомерДня = День(Объект.ДатаНачалаПериода) + 1 По День(Объект.ДатаОкончанияПериода) Цикл
		ТекстЗапроса = ТекстЗапроса + 
		"ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|  ДАТАВРЕМЯ(" + ГодПериода + ", " + МесяцПериода + " ," + НомерДня + ")
		|	";
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + ") КАК ДатыТабеля";
	ЗапросАвтоЗаполнения.Текст = ТекстЗапроса;
	
	ЗапросАвтоЗаполнения.Выполнить();
	
	ЗапросАвтоЗаполнения.Текст = 
	"ВЫБРАТЬ
	|	ПлановыеНачисленияРаботниковОрганизаций.Период,
	|	ПлановыеНачисленияРаботниковОрганизаций.Сотрудник,
	|	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета,
	|	ПлановыеНачисленияРаботниковОрганизаций.Действие
	|ПОМЕСТИТЬ ВТПлановыеНачисленияРаботниковОрганизаций
	|ИЗ
	|	РегистрСведений.удуПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ПлановыеНачисленияРаботниковОрганизаций.Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТСписокРаботников.Ссылка
	|			ИЗ
	|				ВТСписокРаботников)
	|	И ПлановыеНачисленияРаботниковОрганизаций.Период <= КОНЕЦПЕРИОДА(&Месяц, МЕСЯЦ)
	|	И ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.ВидВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыВремени.ОтработанноеВПределахНормы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановыеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК КлассификаторВидаВремени,
	|	ПлановыеНачисления.ВидРасчета,
	|	ДатыПолученияВР.ДатаТабеля,
	|	ДатыПолученияВР.Сотрудник
	|ПОМЕСТИТЬ ВТПлановыеНачисленияСотрудников
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДатыТабеля.ДатаТабеля КАК ДатаТабеля,
	|		МАКСИМУМ(ПлановыеНачисления.Период) КАК Период,
	|		ПлановыеНачисления.Сотрудник КАК Сотрудник
	|	ИЗ
	|		ВТДатыТабеля КАК ДатыТабеля
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	|			ПО (ПлановыеНачисления.Период <= ДатыТабеля.ДатаТабеля)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДатыТабеля.ДатаТабеля,
	|		ПлановыеНачисления.Сотрудник) КАК ДатыПолученияВР
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	|		ПО (ПлановыеНачисления.Период = ДатыПолученияВР.Период)
	|			И (ПлановыеНачисления.Сотрудник = ДатыПолученияВР.Сотрудник)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыТабеля.ДатаТабеля КАК ДатаТабеля,
	|	ПлановыеНачисления.Сотрудник КАК Сотрудник,
	|	NULL КАК ГрафикРаботы,
	|	ПлановыеНачисления.ВидРасчета КАК ВидРасчета,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ВидРасчетаИзмерение ЕСТЬ NULL 
	|			ТОГДА NULL
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоДням)
	|	КОНЕЦ КАК ВидУчетаВремени,
	|	ПлановыеНачисления.ВидРасчетаИзмерение.ВидВремени КАК ВидВремени,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ВидРасчетаИзмерение ЕСТЬ NULL 
	|			ТОГДА NULL
	|		ИНАЧЕ &НачалоМесяца
	|	КОНЕЦ КАК ПериодДействияНачало,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ВидРасчетаИзмерение ЕСТЬ NULL 
	|			ТОГДА NULL
	|		ИНАЧЕ &КонецМесяца
	|	КОНЕЦ КАК ПериодДействияКонец,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ВидРасчетаИзмерение ЕСТЬ NULL 
	|			ТОГДА NULL
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВремяЗаДень,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ВидРасчетаИзмерение ЕСТЬ NULL 
	|			ТОГДА NULL
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЧасовОтклонение
	|ПОМЕСТИТЬ ВТОсновныеНачисления
	|ИЗ
	|	ВТДатыТабеля КАК ДатыТабеля
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСписокРаботников КАК СотрудникиОрганизаций
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СотрудникиОрганизаций.Ссылка КАК Сотрудник,
	|			ПлановыеНачисления.Период КАК Период,
	|			ПлановыеНачисления.ВидРасчетаИзмерение КАК ВидРасчетаИзмерение,
	|			ПлановыеНачисления.ВидРасчета КАК ВидРасчета,
	|			ПлановыеНачисления.Действие КАК Действие,
	|			ЕСТЬNULL(ОкончаниеПлановыхНачислений.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ПериодЗавершения
	|		ИЗ
	|			ВТСписокРаботников КАК СотрудникиОрганизаций
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	|				ПО (ПлановыеНачисления.Сотрудник = СотрудникиОрганизаций.Ссылка)
	|					И (ПлановыеНачисления.ВидРасчетаИзмерение = ЗНАЧЕНИЕ(ПланВидовРасчета.удуОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты))
	|					И (ВЫБОР
	|						КОГДА ПлановыеНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.удуВидыДействияСНачислением.Прекратить)
	|							ТОГДА &НачалоМесяца <= ПлановыеНачисления.Период
	|						ИНАЧЕ &КонецМесяца >= ПлановыеНачисления.Период
	|					КОНЕЦ)
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуПлановыеНачисленияРаботниковОрганизаций КАК ОкончаниеПлановыхНачислений
	|				ПО (ОкончаниеПлановыхНачислений.Период <= &КонецМесяца)
	|					И (ОкончаниеПлановыхНачислений.Сотрудник = СотрудникиОрганизаций.Ссылка)
	|					И (ОкончаниеПлановыхНачислений.ВидРасчетаИзмерение = ЗНАЧЕНИЕ(ПланВидовРасчета.удуОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты))
	|					И (ОкончаниеПлановыхНачислений.Действие = ЗНАЧЕНИЕ(Перечисление.удуВидыДействияСНачислением.Прекратить))
	|					И (ОкончаниеПлановыхНачислений.Период МЕЖДУ ПлановыеНачисления.Период И ДАТАВРЕМЯ(1, 1, 1))) КАК ПлановыеНачисления
	|		ПО (ПлановыеНачисления.Сотрудник = СотрудникиОрганизаций.Ссылка)
	|			И (ВЫБОР
	|				КОГДА ПлановыеНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.удуВидыДействияСНачислением.Прекратить)
	|					ТОГДА ДатыТабеля.ДатаТабеля < ПлановыеНачисления.Период
	|				КОГДА ПлановыеНачисления.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ДатыТабеля.ДатаТабеля >= ПлановыеНачисления.Период
	|				ИНАЧЕ ДатыТабеля.ДатаТабеля МЕЖДУ ПлановыеНачисления.Период И ДОБАВИТЬКДАТЕ(ПлановыеНачисления.ПериодЗавершения, ДЕНЬ, -1)
	|			КОНЕЦ)
	|ГДЕ
	|	(НЕ ПлановыеНачисления.Сотрудник ЕСТЬ NULL )
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаТабеля,
	|	ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостояниеРаботников.Сотрудник КАК Сотрудник,
	|	СостояниеРаботников.Период КАК Период,
	|	СостояниеРаботников.Состояние,
	|	СостояниеРаботников.ПериодЗавершения,
	|	СостояниеРаботников.СостояниеЗавершения,
	|	СостояниеРаботников.ПервичныйДокумент
	|ПОМЕСТИТЬ ВТСостояниеРаботниковСрез
	|ИЗ
	|	РегистрСведений.удуСостояниеРаботниковОрганизаций.СрезПоследних(
	|			&НачалоМесяца,
	|			Сотрудник В
	|				(ВЫБРАТЬ
	|					ВТСписокРаботников.Ссылка КАК Сотрудник
	|				ИЗ
	|					ВТСписокРаботников)) КАК СостояниеРаботников
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостояниеРаботников.Сотрудник КАК Сотрудник,
	|	&НачалоМесяца КАК Период,
	|	ВЫБОР
	|		КОГДА СостояниеРаботников.ПериодЗавершения <= &НачалоМесяца
	|				И СостояниеРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА СостояниеРаботников.СостояниеЗавершения
	|		ИНАЧЕ СостояниеРаботников.Состояние
	|	КОНЕЦ КАК Состояние,
	|	СостояниеРаботников.ПервичныйДокумент
	|ПОМЕСТИТЬ ВТСостояниеРаботников
	|ИЗ
	|	ВТСостояниеРаботниковСрез КАК СостояниеРаботников
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СостояниеРаботников.Сотрудник,
	|	СостояниеРаботников.ПериодЗавершения,
	|	СостояниеРаботников.СостояниеЗавершения,
	|	СостояниеРаботников.ПервичныйДокумент
	|ИЗ
	|	ВТСостояниеРаботниковСрез КАК СостояниеРаботников
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуСостояниеРаботниковОрганизаций КАК СостояниеРаботниковПроверка
	|		ПО (СостояниеРаботниковПроверка.Сотрудник = СостояниеРаботников.Сотрудник)
	|			И (СостояниеРаботниковПроверка.Период <= СостояниеРаботников.ПериодЗавершения)
	|			И (СостояниеРаботниковПроверка.Период > СостояниеРаботников.Период)
	|ГДЕ
	|	СостояниеРаботников.ПериодЗавершения >= &НачалоМесяца
	|	И СостояниеРаботников.ПериодЗавершения <= &КонецМесяца
	|	И СостояниеРаботниковПроверка.Сотрудник ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СостояниеРаботников.Сотрудник,
	|	СостояниеРаботников.Период,
	|	СостояниеРаботников.Состояние,
	|	СостояниеРаботников.ПервичныйДокумент
	|ИЗ
	|	РегистрСведений.удуСостояниеРаботниковОрганизаций КАК СостояниеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокРаботников КАК ВТСотрудники
	|		ПО СостояниеРаботников.Сотрудник = ВТСотрудники.Ссылка
	|ГДЕ
	|	СостояниеРаботников.Период > &НачалоМесяца
	|	И СостояниеРаботников.Период <= &КонецМесяца
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СостояниеРаботников.Сотрудник,
	|	СостояниеРаботников.ПериодЗавершения,
	|	СостояниеРаботников.СостояниеЗавершения,
	|	СостояниеРаботников.ПервичныйДокумент
	|ИЗ
	|	РегистрСведений.удуСостояниеРаботниковОрганизаций КАК СостояниеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокРаботников КАК ВТСотрудники
	|		ПО СостояниеРаботников.Сотрудник = ВТСотрудники.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуСостояниеРаботниковОрганизаций КАК ПроверкаПерекрытияПериодовСостоянияРаботников
	|		ПО (ПроверкаПерекрытияПериодовСостоянияРаботников.Сотрудник = СостояниеРаботников.Сотрудник)
	|			И ((НЕ(ПроверкаПерекрытияПериодовСостоянияРаботников.Регистратор = СостояниеРаботников.Регистратор
	|					И ПроверкаПерекрытияПериодовСостоянияРаботников.НомерСтроки = СостояниеРаботников.НомерСтроки)))
	|			И (ПроверкаПерекрытияПериодовСостоянияРаботников.Период = СостояниеРаботников.ПериодЗавершения)
	|ГДЕ
	|	СостояниеРаботников.Период > &НачалоМесяца
	|	И СостояниеРаботников.Период <= &КонецМесяца
	|	И СостояниеРаботников.ПериодЗавершения <= &КонецМесяца
	|	И СостояниеРаботников.ПериодЗавершения > &НачалоМесяца
	|	И ПроверкаПерекрытияПериодовСостоянияРаботников.Сотрудник ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Основной.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА Основной.Состояние В (ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.Заболевание), ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.ТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.ПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.ПоУходуЗаВзрослым), ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.Карантин), ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.Протезирование), ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.ПособиеПриДолечивании))
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.Болезнь)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.Командировка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.Командировка)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.ОтпускЕжегодный)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.ОсновнойОтпуск)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.ОтпускУчебный)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.ОтпускНаОбучение)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.ОтпускУчебныйНеоплачиваемый)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.ОтпускНаОбучениеНеоплачиваемый)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.ОтпускБезСохраненияЗарплаты)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоРазрешениюРаботодателя)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.ОтпускПоБеременностиИРодам)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.ОтсутствуетПоНевыясненнойПричине)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.НеявкиПоНевыясненнымПричинам)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.ВынужденныйПрогул)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.ВынужденныйПрогул)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.ГосударственныеОбязанности)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.ГосударственныеОбязанности)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.Прогулы)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.Прогулы)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.ДополнительныеВыходныеДниОплачиваемые)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.ДополнительныеВыходныеДниОплачиваемые)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.Простой)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.Простой)
	|	КОНЕЦ КАК ВидВремени,
	|	Основной.Период КАК ПериодНачало,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(Вспомогательный.Период) ЕСТЬ NULL 
	|			ТОГДА &КонецМесяца
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(МИНИМУМ(Вспомогательный.Период), СЕКУНДА, -1)
	|	КОНЕЦ КАК ПериодКонец,
	|	ДопОтпускаРаботников.ДатаНачалаДоп КАК ДатаНачалаДополнительногоОтпуска,
	|	ДопОтпускаРаботников.ВидДополнительногоОтпуска
	|ПОМЕСТИТЬ ВТСостояниеСотрудниковБезДополнительныхОтпусков
	|ИЗ
	|	ВТСостояниеРаботников КАК Основной
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСостояниеРаботников КАК Вспомогательный
	|		ПО (Вспомогательный.Сотрудник = Основной.Сотрудник)
	|			И (Вспомогательный.Период > Основной.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.удуОтпускаОрганизаций.РаботникиОрганизации КАК ДопОтпускаРаботников
	|		ПО (ДопОтпускаРаботников.Сотрудник = Основной.Сотрудник)
	|			И (ДопОтпускаРаботников.ВидДополнительногоОтпуска <> ЗНАЧЕНИЕ(ПланВидовРасчета.удуОсновныеНачисленияОрганизаций.ПустаяСсылка))
	|			И (ДопОтпускаРаботников.Ссылка = Основной.ПервичныйДокумент)
	|ГДЕ
	|	Основной.Состояние <> ЗНАЧЕНИЕ(Перечисление.удуСостоянияРаботникаОрганизации.Работает)
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.Сотрудник,
	|	Основной.Состояние,
	|	Основной.Период,
	|	ДопОтпускаРаботников.ДатаНачалаДоп,
	|	ДопОтпускаРаботников.ВидДополнительногоОтпуска
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ПериодНачало
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостояниеСотрудниковБезДополнительныхОтпусков.Сотрудник,
	|	СостояниеСотрудниковБезДополнительныхОтпусков.ВидВремени,
	|	СостояниеСотрудниковБезДополнительныхОтпусков.ПериодНачало,
	|	ВЫБОР
	|		КОГДА СостояниеСотрудниковБезДополнительныхОтпусков.ВидДополнительногоОтпуска ЕСТЬ NULL 
	|			ТОГДА СостояниеСотрудниковБезДополнительныхОтпусков.ПериодКонец
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(СостояниеСотрудниковБезДополнительныхОтпусков.ДатаНачалаДополнительногоОтпуска, СЕКУНДА, -1)
	|	КОНЕЦ КАК ПериодКонец
	|ПОМЕСТИТЬ ВТСостояниеСотрудников
	|ИЗ
	|	ВТСостояниеСотрудниковБезДополнительныхОтпусков КАК СостояниеСотрудниковБезДополнительныхОтпусков
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СостояниеСотрудниковБезДополнительныхОтпусков.Сотрудник,
	|	СостояниеСотрудниковБезДополнительныхОтпусков.ВидДополнительногоОтпуска.ОбозначениеВТабелеУчетаРабочегоВремени,
	|	СостояниеСотрудниковБезДополнительныхОтпусков.ДатаНачалаДополнительногоОтпуска,
	|	СостояниеСотрудниковБезДополнительныхОтпусков.ПериодКонец
	|ИЗ
	|	ВТСостояниеСотрудниковБезДополнительныхОтпусков КАК СостояниеСотрудниковБезДополнительныхОтпусков
	|ГДЕ
	|	(НЕ СостояниеСотрудниковБезДополнительныхОтпусков.ВидДополнительногоОтпуска ЕСТЬ NULL )
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы КАК ГрафикРаботы,
	|	ГрафикиРаботыПоВидамВремени.Месяц КАК Месяц,
	|	ГрафикиРаботыПоВидамВремени.Дата КАК Дата,
	|	ГрафикиРаботыПоВидамВремени.План КАК План,
	|	ГрафикиРаботыПоВидамВремени.ВидУчетаВремени КАК ВидУчетаВремени,
	|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначение,
	|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение,
	|	ГрафикиРаботыПоВидамВремени.Документ
	|ПОМЕСТИТЬ ВТГрафикиРаботыПоВидамВремени
	|ИЗ
	|	(ВЫБРАТЬ
	|		РаботникиОрганизацийСрезПоследних.ГрафикРаботы КАК ГрафикРаботы
	|	ИЗ
	|		РегистрСведений.удуРаботникиОрганизаций.СрезПоследних(
	|				&НачалоМесяца,
	|				Сотрудник В
	|					(ВЫБРАТЬ
	|						ВТСписокРаботников.Ссылка
	|					ИЗ
	|						ВТСписокРаботников)) КАК РаботникиОрганизацийСрезПоследних
	|	ГДЕ
	|		РаботникиОрганизацийСрезПоследних.ГрафикРаботы <> ЗНАЧЕНИЕ(Справочник.удуГрафикиРаботы.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РаботникиОрганизаций.ГрафикРаботы
	|	ИЗ
	|		РегистрСведений.удуРаботникиОрганизаций КАК РаботникиОрганизаций
	|	ГДЕ
	|		РаботникиОрганизаций.Сотрудник В
	|				(ВЫБРАТЬ
	|					ВТСписокРаботников.Ссылка
	|				ИЗ
	|					ВТСписокРаботников)
	|		И РаботникиОрганизаций.Период > &НачалоМесяца
	|		И РаботникиОрганизаций.Период <= &КонецМесяца
	|		И РаботникиОрганизаций.ГрафикРаботы <> ЗНАЧЕНИЕ(Справочник.удуГрафикиРаботы.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВыбранныеСотрудники.Ссылка
	|	ИЗ
	|		ВТСписокРаботников КАК ВыбранныеСотрудники) КАК ГрафикиРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО (ГрафикиРаботыПоВидамВремени.ГрафикРаботы = ГрафикиРаботы.ГрафикРаботы)
	|			И (ГрафикиРаботыПоВидамВремени.Документ <> &ДокументСсылка)
	|			И (ГрафикиРаботыПоВидамВремени.Месяц = &Месяц)
	|			И (ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца)
	|			И ((НЕ ГрафикиРаботыПоВидамВремени.ГрафикРаботы ЕСТЬ NULL ))
	|ГДЕ
	|	(НЕ ГрафикиРаботыПоВидамВремени.ГрафикРаботы ЕСТЬ NULL )
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГрафикРаботы,
	|	Месяц,
	|	Дата,
	|	План,
	|	ВидУчетаВремени";
	ТекстЗапросаДляОтладки = ТекстЗапросаДляОтладки + ЗапросАвтоЗаполнения.Текст + " ; " + Символы.ПС;
	ЗапросАвтоЗаполнения.Выполнить();
	
	Если НЕ Объект.ПодразделениеОрганизации.Пустая() Тогда
		ЗапросАвтоЗаполнения.УстановитьПараметр("ПодразделениеОрганизации", Объект.ПодразделениеОрганизации);
		ЗапросАвтоЗаполнения.Текст = 
		"ВЫБРАТЬ
		|	РаботникиОрганизаций.Период  КАК Период,
		|	РаботникиОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	РаботникиОрганизаций.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТКадровыеПеремещенияРаботниковОрганизаций
		|ИЗ
		|	РегистрСведений.удуРаботникиОрганизаций.СрезПоследних(&НачалоМесяца, ) КАК РаботникиОрганизаций
		|ГДЕ
		|	РаботникиОрганизаций.Сотрудник В
		|			(ВЫБРАТЬ
		|				ВТСписокРаботников.Ссылка
		|			ИЗ
		|				ВТСписокРаботников)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	РаботникиОрганизаций.Период,
		|	РаботникиОрганизаций.ПодразделениеОрганизации,
		|	РаботникиОрганизаций.Сотрудник
		|ИЗ
		|	РегистрСведений.удуРаботникиОрганизаций КАК РаботникиОрганизаций
		|ГДЕ
		|	РаботникиОрганизаций.Сотрудник В
		|			(ВЫБРАТЬ
		|				ВТСписокРаботников.Ссылка
		|			ИЗ
		|				ВТСписокРаботников)
		|	И РаботникиОрганизаций.Период МЕЖДУ &НачалоМесяца И &КонецМесяца 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Период,
		|	ПодразделениеОрганизации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДатыПеремещенийРаботников.Сотрудник КАК Сотрудник,
		|	ДатыПеремещенийРаботников.ДатаТабеля КАК ДатаТабеля
		|ПОМЕСТИТЬ ВТПодразделенияСотрудников
		|ИЗ
		|	(ВЫБРАТЬ
		|		КадровыеПеремещенияРаботников.Сотрудник КАК Сотрудник,
		|		ДатыТабеля.ДатаТабеля КАК ДатаТабеля,
		|		МАКСИМУМ(КадровыеПеремещенияРаботников.Период) КАК ДатаПеремещения
		|	ИЗ
		|		ВТДатыТабеля КАК ДатыТабеля
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеПеремещенияРаботниковОрганизаций КАК КадровыеПеремещенияРаботников
		|			ПО ДатыТабеля.ДатаТабеля >= КадровыеПеремещенияРаботников.Период
		|	
		|	СГРУППИРОВАТЬ ПО
		|		КадровыеПеремещенияРаботников.Сотрудник,
		|		ДатыТабеля.ДатаТабеля) КАК ДатыПеремещенийРаботников
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеПеремещенияРаботниковОрганизаций КАК ПодразделенияРаботников
		|		ПО ДатыПеремещенийРаботников.ДатаПеремещения = ПодразделенияРаботников.Период
		|			И ДатыПеремещенийРаботников.Сотрудник = ПодразделенияРаботников.Сотрудник
		|ГДЕ
		|	ПодразделенияРаботников.ПодразделениеОрганизации В ИЕРАРХИИ(&ПодразделениеОрганизации)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаТабеля";
		ТекстЗапросаДляОтладки = ТекстЗапросаДляОтладки + ЗапросАвтоЗаполнения.Текст + " ; " + Символы.ПС;
		ЗапросАвтоЗаполнения.Выполнить();
	КонецЕсли;
		
	ЗапросАвтоЗаполненияТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТОсновныеНачисления.ДатаТабеля,
	|	ВТОсновныеНачисления.Сотрудник,
	|	ВТОсновныеНачисления.ГрафикРаботы,
	|	ВТОсновныеНачисления.ВидРасчета,
	|	ВТОсновныеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ОбозначениеВТабелеУчетаРабочегоВремени,
	|	ВТОсновныеНачисления.ВидВремени,
	|	ВТОсновныеНачисления.ПериодДействияНачало,
	|	ВТОсновныеНачисления.ПериодДействияКонец,
	|	ВТОсновныеНачисления.ВремяЗаДень,
	|	ВТОсновныеНачисления.ВидУчетаВремени,
	|	ВТОсновныеНачисления.ЧасовОтклонение
	|ПОМЕСТИТЬ ВТОтредактированныеНачисления
	|ИЗ
	|	ВТОсновныеНачисления КАК ВТОсновныеНачисления
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВТОсновныеНачисления.ДатаТабеля,
	|	ВТОсновныеНачисления.Сотрудник,
	|	ЕСТЬNULL(ГрафикиРаботы.ГрафикРаботы, РаботникиОрганизаций.ГрафикРаботы),
	|	""ПланируемаяЯвка"",
	|	NULL,
	|	NULL,
	|	ВТОсновныеНачисления.ПериодДействияНачало,
	|	ВТОсновныеНачисления.ПериодДействияКонец,
	|	0,
	|	ВТОсновныеНачисления.ВидУчетаВремени,
	|	СУММА(ВЫБОР
	|			КОГДА ВТОсновныеНачисления.ВидВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыВремени.ЧасовоеНеотработанное)
	|				ТОГДА ВТОсновныеНачисления.ВремяЗаДень
	|			ИНАЧЕ 0
	|		КОНЕЦ)
	|ИЗ
	|	ВТОсновныеНачисления КАК ВТОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсновныеНачисления КАК Явки
	|		ПО (Явки.ДатаТабеля = ВТОсновныеНачисления.ДатаТабеля)
	|			И (Явки.Сотрудник = ВТОсновныеНачисления.Сотрудник)
	|			И (Явки.ГрафикРаботы = ВТОсновныеНачисления.ГрафикРаботы
	|				ИЛИ Явки.ГрафикРаботы = ВТОсновныеНачисления.Сотрудник)
	|			И (Явки.ВидВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыВремени.ОтработанноеВПределахНормы))
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДатыПериода.ДатаТабеля КАК Дата,
	|			РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|			МАКСИМУМ(РаботникиОрганизаций.Период) КАК ДатаИзменения
	|		ИЗ
	|			ВТДатыТабеля КАК ДатыПериода
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуРаботникиОрганизаций КАК РаботникиОрганизаций
	|				ПО (РаботникиОрганизаций.Сотрудник В
	|						(ВЫБРАТЬ
	|							ВТСписокРаботников.Ссылка
	|						ИЗ
	|							ВТСписокРаботников))
	|					И (РаботникиОрганизаций.Период <= ДатыПериода.ДатаТабеля)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			РаботникиОрганизаций.Сотрудник,
	|			ДатыПериода.ДатаТабеля) КАК ДниСотрудников
	|		ПО (ДниСотрудников.Сотрудник = ВТОсновныеНачисления.Сотрудник)
	|			И (ДниСотрудников.Дата = ВТОсновныеНачисления.ДатаТабеля)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуРаботникиОрганизаций КАК РаботникиОрганизаций
	|		ПО (РаботникиОрганизаций.Сотрудник = ДниСотрудников.Сотрудник)
	|			И (РаботникиОрганизаций.Период = ДниСотрудников.ДатаИзменения)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикиРаботыПоВидамВремени КАК ГрафикиРаботы
	|		ПО (ГрафикиРаботы.ГрафикРаботы = ВТОсновныеНачисления.ГрафикРаботы)
	|			И (ГрафикиРаботы.Дата = ВТОсновныеНачисления.ДатаТабеля)
	|			И (ГрафикиРаботы.ВидУчетаВремени = ВТОсновныеНачисления.ВидУчетаВремени)
	|ГДЕ
	|	Явки.Сотрудник ЕСТЬ NULL 
	|	И ВТОсновныеНачисления.ВидВремени В (ЗНАЧЕНИЕ(Перечисление.удуВидыВремени.ОтработанноеСверхНормы), ЗНАЧЕНИЕ(Перечисление.удуВидыВремени.ЧасовоеНеотработанное))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОсновныеНачисления.ДатаТабеля,
	|	ВТОсновныеНачисления.Сотрудник,
	|	ЕСТЬNULL(ГрафикиРаботы.ГрафикРаботы, РаботникиОрганизаций.ГрафикРаботы),
	|	ВТОсновныеНачисления.ПериодДействияНачало,
	|	ВТОсновныеНачисления.ПериодДействияКонец,
	|	ВТОсновныеНачисления.ВидУчетаВремени;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Сотрудники.Ссылка КАК Сотрудник,
	|	ДниСотрудников.Дата,
	|	ДЕНЬ(ДниСотрудников.Дата) КАК День,
	|	ДниСотрудников.ВидВремени КАК БукваВидаВремени,
	|	ЕСТЬNULL(ДниСотрудников.ОсновноеЗначение, 0) КАК ОсновноеЗначение,
	|	ВЫБОР
	|		КОГДА ДниСотрудников.ВидВремени = ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.РаботаВечерниеЧасы)
	|			ТОГДА 2
	|		КОГДА ДниСотрудников.ВидВремени = ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы)
	|			ТОГДА 3
	|		КОГДА ДниСотрудников.ВидВремени = ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.Работа)
	|				ИЛИ ДниСотрудников.РабочееВремя
	|			ТОГДА 1
	|		ИНАЧЕ 4
	|	КОНЕЦ КАК ПорядокСортировки
	|ИЗ
	|	ВТСписокРаботников КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДниСотрудников.Сотрудник КАК Сотрудник,
	|			ДниСотрудников.Дата КАК Дата,
	|			ВЫБОР
	|				КОГДА ДневныеНеявки.ВидРасчета ЕСТЬ НЕ NULL 
	|						И ДневныеНеявки.ВидРасчета <> ""ПланируемаяЯвка""
	|						И (ОбщиеГрафики.ОсновноеЗначение > 0
	|							ИЛИ ДневныеНеявки.ВидРасчета.ВидВремени В (&ВидыВремениУчитываемыеВВыходные)
	|								И (НЕ ДневныеНеявки.ВидРасчета.ОбозначениеВТабелеУчетаРабочеговремени В (ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.РаботаВечерниеЧасы), ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы))))
	|					ТОГДА ДневныеНеявки.ВидРасчета.ОбозначениеВТабелеУчетаРабочеговремени
	|				КОГДА НЕ ВТСостояниеСотрудников.ВидВремени ЕСТЬ NULL ТОГДА
	|					ВЫБОР 
	|						КОГДА ОбщиеГрафики.ВидУчетаВремени В  (ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоВечернимЧасам), ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоНочнымЧасам))
	|							ТОГДА NULL
	|						ИНАЧЕ ВТСостояниеСотрудников.ВидВремени
	|					КОНЕЦ
	|				КОГДА ОбщиеГрафики.ОсновноеЗначение > 0
	|					ТОГДА ВЫБОР
	|							КОГДА ОбщиеГрафики.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоЧасам)
	|								ТОГДА ЕСТЬNULL(ПлановыеНачисленияСотрудников.КлассификаторВидаВремени, ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.Работа))
	|							КОГДА ОбщиеГрафики.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоВечернимЧасам)
	|								ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.РаботаВечерниеЧасы)
	|							КОГДА ОбщиеГрафики.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоНочнымЧасам)
	|								ТОГДА ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы)
	|						КОНЕЦ
	|				КОГДА ОбщиеГрафики.ОсновноеЗначение = 0
	|					И ОбщиеГрафики.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоЧасам)
	|					И ЕСТЬNULL(ДневныеНеявки.ВидРасчета, """") <> ""ПланируемаяЯвка""
	|					ТОГДА  ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.ВыходныеДни)
	|			КОНЕЦ КАК ВидВремени,
	|			ВЫБОР
	|				КОГДА ДневныеНеявки.ВидРасчета ЕСТЬ НЕ NULL 
	|						И ДневныеНеявки.ВидРасчета <> ""ПланируемаяЯвка""
	|						И (ОбщиеГрафики.ОсновноеЗначение > 0
	|							ИЛИ ДневныеНеявки.ВидРасчета.ВидВремени В (&ВидыВремениУчитываемыеВВыходные)
	|								И (НЕ ДневныеНеявки.ВидРасчета.ОбозначениеВТабелеУчетаРабочеговремени В (ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.РаботаВечерниеЧасы), ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы))))
	|					ТОГДА ДневныеНеявки.ВидРасчета.ОбозначениеВТабелеУчетаРабочеговремени.РабочееВремя
	|				КОГДА НЕ ВТСостояниеСотрудников.ВидВремени ЕСТЬ NULL ТОГДА
	|					ВТСостояниеСотрудников.ВидВремени.РабочееВремя
	|				КОГДА ОбщиеГрафики.ОсновноеЗначение > 0
	|					ТОГДА ВЫБОР
	|							КОГДА ОбщиеГрафики.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоЧасам)
	|								ТОГДА ЕСТЬNULL(ПлановыеНачисленияСотрудников.КлассификаторВидаВремени.РабочееВремя, ИСТИНА)
	|							КОГДА ОбщиеГрафики.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоВечернимЧасам)
	|								ТОГДА ИСТИНА
	|							КОГДА ОбщиеГрафики.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоНочнымЧасам)
	|								ТОГДА ИСТИНА
	|						КОНЕЦ
	|				КОГДА ОбщиеГрафики.ОсновноеЗначение = 0
	|					И ОбщиеГрафики.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоЧасам)
	|					ТОГДА  ЛОЖЬ
	|			КОНЕЦ КАК РабочееВремя,
	|			ВЫБОР
	|				КОГДА (НЕ ДневныеНеявки.ВремяЗаДень ЕСТЬ NULL )
	|						И ДневныеНеявки.ВидРасчета <> ""ПланируемаяЯвка""
	|						И (ДневныеНеявки.ВремяЗаДень > 0)
	|					ТОГДА ДневныеНеявки.ВремяЗаДень
	|				КОГДА (НЕ ДневныеНеявки.ВидРасчета ЕСТЬ NULL )
	|						И ДневныеНеявки.ВидРасчета <> ""ПланируемаяЯвка""
	|						И (ОбщиеГрафики.ОсновноеЗначение > 0
	|							ИЛИ ДневныеНеявки.ВидРасчета.ВидВремени В (&ВидыВремениУчитываемыеВВыходные)
	|								И (НЕ ДневныеНеявки.ВидРасчета.ОбозначениеВТабелеУчетаРабочеговремени В (ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.РаботаВечерниеЧасы), ЗНАЧЕНИЕ(Справочник.удуКлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы))))
	|					ТОГДА ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) - ДневныеНеявки.ЧасовОтклонение
	|				КОГДА ДневныеНеявки.ВидРасчета = ""ПланируемаяЯвка""
	|					ТОГДА ОбщиеГрафики.ОсновноеЗначение - ДневныеНеявки.ЧасовОтклонение
	|				КОГДА ОбщиеГрафики.ОсновноеЗначение > 0
	|					ТОГДА ОбщиеГрафики.ОсновноеЗначение
	|				КОГДА ОбщиеГрафики.ОсновноеЗначение = 0
	|					И ОбщиеГрафики.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоЧасам)
	|					ТОГДА  8
	|			КОНЕЦ КАК ОсновноеЗначение
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ДатыПериода.ДатаТабеля КАК Дата,
	|				РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|				МАКСИМУМ(РаботникиОрганизаций.Период) КАК ДатаИзменения
	|			ИЗ
	|				ВТДатыТабеля КАК ДатыПериода
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуРаботникиОрганизаций КАК РаботникиОрганизаций
	|					ПО (РаботникиОрганизаций.Сотрудник В
	|							(ВЫБРАТЬ
	|								ВТСписокРаботников.Ссылка
	|							ИЗ
	|								ВТСписокРаботников))
	|						И (РаботникиОрганизаций.Период <= ДатыПериода.ДатаТабеля)
	|			
	|			СГРУППИРОВАТЬ ПО
	|				РаботникиОрганизаций.Сотрудник,
	|				ДатыПериода.ДатаТабеля) КАК ДниСотрудников
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуРаботникиОрганизаций КАК РаботникиОрганизаций
	|				ПО ДниСотрудников.Сотрудник = РаботникиОрганизаций.Сотрудник
	|					И ДниСотрудников.ДатаИзменения = РаботникиОрганизаций.Период
	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикиРаботыПоВидамВремени КАК ВведенныеТабеля
	|				ПО ДниСотрудников.Сотрудник = ВведенныеТабеля.ГрафикРаботы
	|					И ((НЕ ВведенныеТабеля.План))
	|					И ДниСотрудников.Дата = ВведенныеТабеля.Дата
	|					И (ВведенныеТабеля.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоЧасам))
	|					И (ВведенныеТабеля.Документ ССЫЛКА Документ.удуТабельУчетаРабочегоВремениОрганизации)
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.удуРабочееВремяРаботниковОрганизаций КАК СводныеТабеля
	|				ПО ДниСотрудников.Сотрудник = СводныеТабеля.Сотрудник
	|					И (СводныеТабеля.Регистратор ССЫЛКА Документ.удуТабельУчетаРабочегоВремениОрганизации)
	|					И (СводныеТабеля.ВЦеломЗаПериод)
	|					И (СводныеТабеля.Регистратор <> &ДокументСсылка)
	|					И (СводныеТабеля.Период = &Месяц)
	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТОтредактированныеНачисления КАК ДневныеНеявки
	|				ПО ДниСотрудников.Сотрудник = ДневныеНеявки.Сотрудник
	|					И ДниСотрудников.Дата = ДневныеНеявки.ДатаТабеля
	|
	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТСостояниеСотрудников
	|				ПО ВТСостояниеСотрудников.Сотрудник = ДниСотрудников.Сотрудник
	|					И ДниСотрудников.Дата МЕЖДУ ВТСостояниеСотрудников.ПериодНачало И ВТСостояниеСотрудников.ПериодКонец
	|
	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикиРаботыПоВидамВремени КАК ОбщиеГрафики
	|				ПО (ОбщиеГрафики.ГрафикРаботы = РаботникиОрганизаций.ГрафикРаботы)
	|					И (ОбщиеГрафики.План)
	|					И ДниСотрудников.Дата = ОбщиеГрафики.Дата
	|					И (ОбщиеГрафики.ВидУчетаВремени В (ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоВечернимЧасам), ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоНочнымЧасам), ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоЧасам)))
	|					И (ДневныеНеявки.ВидРасчета ЕСТЬ NULL 
	|						ИЛИ ДневныеНеявки.ВидРасчета = ""ПланируемаяЯвка""
	|						ИЛИ ОбщиеГрафики.ВидУчетаВремени = ДневныеНеявки.ВидУчетаВремени
	|						ИЛИ ОбщиеГрафики.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоЧасам)
	|							И ДневныеНеявки.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоДням))
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуРаботникиОрганизаций КАК РаботникиОрганизацийУвольнения
	|				ПО ДниСотрудников.Сотрудник = РаботникиОрганизацийУвольнения.Сотрудник
	|					И (РаботникиОрганизацийУвольнения.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.удуПричиныИзмененияСостояния.Увольнение))" +
	?(Объект.ПодразделениеОрганизации.Пустая(), "", "	ЛЕВОЕ СОЕДИНЕНИЕ ВТПодразделенияСотрудников КАК ПодразделенияСотрудников
	|	ПО
	|	ПодразделенияСотрудников.Сотрудник = ДниСотрудников.Сотрудник
	|	И ПодразделенияСотрудников.ДатаТабеля = ДниСотрудников.Дата ") +
	"				ЛЕВОЕ СОЕДИНЕНИЕ ВТПлановыеНачисленияСотрудников КАК ПлановыеНачисленияСотрудников
	|				ПО ДниСотрудников.Сотрудник = ПлановыеНачисленияСотрудников.Сотрудник
	|					И ДниСотрудников.Дата = ПлановыеНачисленияСотрудников.ДатаТабеля
	|		ГДЕ
	|			(РаботникиОрганизацийУвольнения.Период ЕСТЬ NULL 
	|					ИЛИ РаботникиОрганизацийУвольнения.Период > ДниСотрудников.Дата)" +
	?(Объект.ПодразделениеОрганизации.Пустая(), "", "	И НЕ ПодразделенияСотрудников.Сотрудник ЕСТЬ NULL") +
	"			И РаботникиОрганизаций.ГрафикРаботы <> ЗНАЧЕНИЕ(Справочник.удуГрафикиРаботы.ПустаяСсылка)
	|			И СводныеТабеля.НомерСтроки ЕСТЬ NULL 
	|			И ВведенныеТабеля.ГрафикРаботы ЕСТЬ NULL 
	|			И (НЕ((ОбщиеГрафики.ВидУчетаВремени В (ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоВечернимЧасам), ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоНочнымЧасам))
	|							И ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) = 0)))
	|			И (ДневныеНеявки.ВидРасчета ЕСТЬ НЕ NULL 
	|					ИЛИ ДневныеНеявки.ВидРасчета ЕСТЬ NULL 
	|						И ВЫБОР
	|			КОГДА ВТСостояниеСотрудников.ВидВремени ЕСТЬ NULL ТОГДА
	|				ОбщиеГрафики.ОсновноеЗначение > 0
	|				ИЛИ
	|				(ОбщиеГрафики.ОсновноеЗначение = 0
	|				И ОбщиеГрафики.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.удуВидыУчетаВремени.ПоЧасам))
	|			ИНАЧЕ ИСТИНА КОНЕЦ
	|		)) КАК ДниСотрудников
	|		ПО (ДниСотрудников.ВидВремени ЕСТЬ НЕ NULL )
	|			И Сотрудники.Ссылка = ДниСотрудников.Сотрудник
	|			И ДниСотрудников.ОсновноеЗначение >= 0 
	|ГДЕ
	|	(&ВключатьВРезультатПустыеЗаписи
	|			ИЛИ ДниСотрудников.ВидВремени ЕСТЬ НЕ NULL )
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник.Наименование,
	|	Сотрудник,
	|	День,
	|	ПорядокСортировки";
	
	ЗапросАвтоЗаполнения.Текст = ЗапросАвтоЗаполненияТекст;
	ТекстЗапросаДляОтладки = ТекстЗапросаДляОтладки + ЗапросАвтоЗаполнения.Текст;
	РезультатЗапроса = ЗапросАвтоЗаполнения.Выполнить();
	
	Если Сотрудник = Неопределено Тогда
		Объект.ОтработанноеВремя.Очистить();
		Объект.ОтработанноеВремяВЦеломЗаПериод.Очистить();
	КонецЕсли;
	
	КлассификаторПустаяСсылка = Справочники.удуКлассификаторИспользованияРабочегоВремени.ПустаяСсылка();
	Выборка = РезультатЗапроса.Выбрать();
	СтрокаТекущегоУровняСообщений = "";
	Если Выборка.Количество() > 0 Тогда
		МассивСтрок=Новый Массив;	
		
		Если Объект.СпособВводаДанных = Перечисления.удуСпособыВводаДанныхОВремени.ПоДням Тогда
						
			ВведенныеТабеляПоДнямПоСотруднику = Новый Соответствие;
			Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
				
				ВведенныеТабеляПоДнямПоСотруднику.Очистить();
				МассивСтрок.Очистить();
				Если ТекущаяСтрокаТабличнойЧасти = Неопределено Тогда
					СтрокаРасшифровкиПоДнямУОбъекта = Объект.ОтработанноеВремя.Добавить();
					МассивСтрок.Добавить(СтрокаРасшифровкиПоДнямУОбъекта);
					ТЗ=Объект.ОтработанноеВремя.Выгрузить(МассивСтрок);
					СтрокаРасшифровкиПоДням=ТЗ[0];
				Иначе
					СтрокаРасшифровкиПоДнямУОбъекта = ТекущаяСтрокаТабличнойЧасти;
					МассивСтрок.Добавить(СтрокаРасшифровкиПоДнямУОбъекта);
					ТЗ=Объект.ОтработанноеВремя.Выгрузить(МассивСтрок);
					СтрокаРасшифровкиПоДням=ТЗ[0];
					Для ИндексДня = 1 По 31 Цикл
						СтрокаРасшифровкиПоДням.Установить(ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти("ПервыйВидВремени" + Строка(ИндексДня))) ,КлассификаторПустаяСсылка);
						СтрокаРасшифровкиПоДням.Установить(ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти("ВторойВидВремени" + Строка(ИндексДня))) , КлассификаторПустаяСсылка);
						СтрокаРасшифровкиПоДням.Установить(ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти("ТретийВидВремени" + Строка(ИндексДня))) ,КлассификаторПустаяСсылка);
						СтрокаРасшифровкиПоДням.Установить(ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти("ЧетвертыйВидВремени" + Строка(ИндексДня))) ,КлассификаторПустаяСсылка);
						СтрокаРасшифровкиПоДням.Установить(ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти("ПервыйЧасов" + Строка(ИндексДня))), 0);
						СтрокаРасшифровкиПоДням.Установить(ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти("ВторойЧасов" + Строка(ИндексДня))), 0);
						СтрокаРасшифровкиПоДням.Установить(ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти("ТретийЧасов" + Строка(ИндексДня))), 0);
						СтрокаРасшифровкиПоДням.Установить(ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти("ЧетвертыйЧасов" + Строка(ИндексДня))), 0);
					КонецЦикла;
				КонецЕсли;
				СтрокаРасшифровкиПоДням.Сотрудник = Выборка.Сотрудник;
				Если Выборка.День <> NULL Тогда
					
					Пока Выборка.СледующийПоЗначениюПоля("День") Цикл
						
						ИндексЯчейкиВТаблице = Выборка.День;
						ИндексМассиваПриставок = 0;
						Пока Выборка.Следующий() Цикл 
							
							Если ИндексМассиваПриставок > 3 Тогда
								// На данный момент мы можем вводить только 4 вида времени в один день/
								Прервать;
							КонецЕсли;
							НазваниеЯчейкиВБазе = МассивПриставок[ИндексМассиваПриставок]+"ВидВремени"+Строка(ИндексЯчейкиВТаблице);
							СтрокаРасшифровкиПоДням.Установить(ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти(НазваниеЯчейкиВБазе)) , Выборка.БукваВидаВремени);
							НазваниеЯчейкиВБазе = МассивПриставок[ИндексМассиваПриставок]+"Часов"+Строка(ИндексЯчейкиВТаблице);
							СтрокаРасшифровкиПоДням.Установить(ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти(НазваниеЯчейкиВБазе)) , Выборка.ОсновноеЗначение);
							
							ИндексМассиваПриставок = ИндексМассиваПриставок + 1;
							
							
							
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровкиПоДнямУОбъекта,СтрокаРасшифровкиПоДням);
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;	
	
	РезультатЗапросаЗадвоение = СформироватьЗапросПоНезаполненнымСотрудникам(ЗапросАвтоЗаполнения);
	Выборка=РезультатЗапросаЗадвоение.Выбрать();
	СообщениеПользователю=Новый СообщениеПользователю;
	
	УжеВведенныеСотрудники= РезультатЗапросаЗадвоение.Выгрузить().ВыгрузитьКолонку("Сотрудник"); 
	
	
	Если Выборка.Количество() > 0 Тогда
		
		КоличествоВыведенныхДокументов = 0;
		СообщениеПользователю.Текст = "На следующих сотрудников уже введены документы учета отработанного времени в этом периоде:";
		
		Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
			
			Если КоличествоВыведенныхДокументов >= 4 Тогда
				СообщениеПользователю.Текст = СообщениеПользователю.Текст+Символы.ВК+"и другие.";
				Прервать;
			КонецЕсли;
			
			СообщениеПользователю.Текст = СообщениеПользователю.Текст+Символы.ВК+Выборка.ПредставлениеСотрудника;
			
			Пока Выборка.Следующий() Цикл
				Если КоличествоВыведенныхДокументов >= 4 Тогда
					СообщениеПользователю.Текст = СообщениеПользователю.Текст+Символы.ВК+"и другие.";
					Прервать;
				КонецЕсли;
				КоличествоВыведенныхДокументов = КоличествоВыведенныхДокументов + 1;
				
			КонецЦикла;
			
		КонецЦикла;
		
		СообщениеПользователю.УстановитьДанные(Объект);
		СообщениеПользователю.Сообщить();
		
		
	КонецЕсли;
	
	Возврат УжеВведенныеСотрудники;
	
КонецФункции // Автозаполнение()

Процедура ДополнитьЗапросПоУникальностиЗаписи(Запрос) Экспорт
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РабочееВремяРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	|	РабочееВремяРаботниковОрганизаций.Регистратор КАК Регистратор,
	|	РабочееВремяРаботниковОрганизаций.НомерСтроки КАК НомерСтроки,
	|	ДЕНЬ(РабочееВремяРаботниковОрганизаций.Период) КАК ИндексДня
	|ПОМЕСТИТЬ ВТРабочееВремяРаботниковОрганизаций
	|ИЗ
	|	РегистрНакопления.удуРабочееВремяРаботниковОрганизаций КАК РабочееВремяРаботниковОрганизаций
	|ГДЕ
	|	РабочееВремяРаботниковОрганизаций.Регистратор <> &ДокументСсылка
	|	И (РабочееВремяРаботниковОрганизаций.ВЦеломЗаПериод
	|				И РабочееВремяРаботниковОрганизаций.Период = &Месяц
	|			ИЛИ (НЕ РабочееВремяРаботниковОрганизаций.ВЦеломЗаПериод)
	|				И (РабочееВремяРаботниковОрганизаций.Период МЕЖДУ &НачалоМесяца И &КонецМесяца))
	|	И РабочееВремяРаботниковОрганизаций.Сотрудник В(&СписокСотрудников)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ИндексДня,
	|	НомерСтроки,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы КАК ГрафикРаботы,
	|	ДЕНЬ(ГрафикиРаботыПоВидамВремени.Дата) КАК ИндексДня,
	|	ГрафикиРаботыПоВидамВремени.Документ КАК Документ
	|ПОМЕСТИТЬ ВТГрафикиРаботыПоВидамВремени
	|ИЗ
	|	РегистрСведений.удуГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	ГрафикиРаботыПоВидамВремени.Месяц = &Месяц
	|	И ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ГрафикиРаботыПоВидамВремени.Документ <> &ДокументСсылка
	|	И (НЕ ГрафикиРаботыПоВидамВремени.План)
	|	И ГрафикиРаботыПоВидамВремени.ГрафикРаботы В(&СписокСотрудников)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГрафикРаботы,
	|	ИндексДня,
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(РабочееВремяРаботниковОрганизаций.Регистратор, ГрафикиРаботыПоВидамВремени.Документ)) КАК ДокументПредставление,
	|	ЕСТЬNULL(СотрудникиТабеля.СотрудникНаименование, ГрафикиРаботыПоВидамВремени.ГрафикРаботы.Наименование) КАК СотрудникНаименование
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		СотрудникиТабеля.ИндексДня КАК ИндексДня,
	|		СотрудникиТабеля.Сотрудник.Наименование КАК СотрудникНаименование,
	|		СотрудникиТабеля.Сотрудник КАК Сотрудник
	|	ИЗ
	|		ВТДанныеТабеляПоДням КАК СотрудникиТабеля) КАК СотрудникиТабеля
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРабочееВремяРаботниковОрганизаций КАК РабочееВремяРаботниковОрганизаций
	|		ПО СотрудникиТабеля.Сотрудник = РабочееВремяРаботниковОрганизаций.Сотрудник
	|			И СотрудникиТабеля.ИндексДня = РабочееВремяРаботниковОрганизаций.ИндексДня
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО СотрудникиТабеля.Сотрудник = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|			И СотрудникиТабеля.ИндексДня = ГрафикиРаботыПоВидамВремени.ИндексДня
	|ГДЕ
	|	(РабочееВремяРаботниковОрганизаций.НомерСтроки ЕСТЬ НЕ NULL 
	|			ИЛИ ГрафикиРаботыПоВидамВремени.ГрафикРаботы ЕСТЬ НЕ NULL )
	|	И (РабочееВремяРаботниковОрганизаций.Регистратор ЕСТЬ НЕ NULL 
	|			ИЛИ ГрафикиРаботыПоВидамВремени.Документ ЕСТЬ НЕ NULL )";
	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Функция формирует табличный документ с печатной формой,
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция СформироватьПечатнуюФормуТ13(МассивОбъектов, ОбъектыПечати,ИмяМакета)
	
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	
	Если ИмяМакета = "Т13" Тогда
		
		ЭтотОбъект=МассивОбъектов; 
		Если Не ЭтотОбъект.Проведен Тогда
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст="Документ можно распечатать только после его проведения!";
			СообщениеПользователю.Сообщить();
			Возврат ТабДокумент;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументСсылка", ЭтотОбъект.Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтработанноеВремя.Сотрудник
		|ИЗ
		|	Документ.удуТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ОтработанноеВремя
		|ГДЕ
		|	ОтработанноеВремя.Ссылка = &ДокументСсылка
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтработанноеВремяВЦеломЗаПериод.Сотрудник
		|ИЗ
		|	Документ.удуТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ОтработанноеВремяВЦеломЗаПериод
		|ГДЕ
		|	ОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка";
		
		СписокСотрудников = Новый СписокЗначений;
		СписокСотрудников.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник"));
		
		
		
		ТабДокумент.ПолеСлева = 0;
		ТабДокумент.ПолеСправа = 0;
		ТабДокумент.ОтображатьСетку     = ложь;
		ТабДокумент.ОтображатьЗаголовки = ложь;
		ТабДокумент.АвтоМасштаб         = Истина;
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		Отчет = Отчеты.удуУнифицированнаяФормаТ13.Создать();
		Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
		удуУправлениеОтчетами.УстановитьОтбор(Отчет.КомпоновщикНастроек.Настройки, "Организация", ЭтотОбъект.Организация,ВидСравненияКомпоновкиДанных.Равно, "", Истина);
		Если ЗначениеЗаполнено(ЭтотОбъект.ПодразделениеОрганизации) тогда
			удуУправлениеОтчетами.УстановитьОтбор(Отчет.КомпоновщикНастроек.Настройки, "ПодразделениеОрганизации", ЭтотОбъект.ПодразделениеОрганизации,ВидСравненияКомпоновкиДанных.ВИерархии, "", Истина);
		КонецЕсли;
		
		Если СписокСотрудников.Количество() = 1 Тогда
			удуУправлениеОтчетами.УстановитьОтбор(Отчет.КомпоновщикНастроек.Настройки, "Сотрудник", СписокСотрудников[0].Значение,ВидСравненияКомпоновкиДанных.Равно, "", Истина);
		ИначеЕсли СписокСотрудников.Количество() > 1 Тогда
			удуУправлениеОтчетами.УстановитьОтбор(Отчет.КомпоновщикНастроек.Настройки, "Сотрудник", СписокСотрудников,ВидСравненияКомпоновкиДанных.ВСписке, "", Истина);
		КонецЕсли;
		
		удуУправлениеОтчетами.УстановитьПараметр(Отчет.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(ЭтотОбъект.ПериодРегистрации));
		удуУправлениеОтчетами.УстановитьПараметр(Отчет.КомпоновщикНастроек, "КонецПериода", КонецМесяца(ЭтотОбъект.ПериодРегистрации));
		удуУправлениеОтчетами.УстановитьПараметр(Отчет.КомпоновщикНастроек, "ДатаЗаполнения", ЭтотОбъект.Дата);
		удуУправлениеОтчетами.УстановитьПараметр(Отчет.КомпоновщикНастроек, "НомерДокумента", ЭтотОбъект.Номер);
		удуУправлениеОтчетами.УстановитьПараметр(Отчет.КомпоновщикНастроек, "ОтветственноеЛицо", ЭтотОбъект.Ответственный);
		удуУправлениеОтчетами.УстановитьПараметр(Отчет.КомпоновщикНастроек, "Режим", "Табель");
		Если ЗначениеЗаполнено(ЭтотОбъект.ПодразделениеОрганизации) тогда
			удуУправлениеОтчетами.УстановитьПараметр(Отчет.КомпоновщикНастроек, "ГруппироватьПодразделения", истина);
		Иначе
			удуУправлениеОтчетами.УстановитьПараметр(Отчет.КомпоновщикНастроек, "ГруппироватьПодразделения", ложь);
		КонецЕсли;
		
		
		ТекстОшибки = "";
		Отчеты.удуУнифицированнаяФормаТ13.СформироватьОтчет(Отчет,ТабДокумент,,Ложь,ТекстОшибки);
		Если ТекстОшибки <> "" Тогда
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст=ТекстОшибки;
			СообщениеПользователю.Сообщить();
			Возврат ТабДокумент;
		Иначе
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 1, ОбъектыПечати, ЭтотОбъект.Ссылка);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции // СформироватьПечатную()

// Процедура печати документа.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьТ13") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ПечатьТ13",
		"Форма Т-13",
		СформироватьПечатнуюФормуТ13(МассивОбъектов, ОбъектыПечати,"Т13")
		);
		
	КонецЕсли;
	
КонецПроцедуры // Печать()
