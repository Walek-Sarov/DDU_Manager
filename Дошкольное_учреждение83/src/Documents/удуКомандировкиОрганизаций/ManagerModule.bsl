////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Формирует запрос по документу и связанным регистрам сведений
//
// Параметры: 
//  Режим - строка, может принимать значения:
//			"ПоРеквизитамДокумента"
//			"ПоТабличнойЧастиДокумента"
//
// Возвращаемое значение:
//  Результат запроса с данными об организации или о работниках из табличной части
//
Функция СформироватьЗапросДляПечати(Режим,Док)

	Запрос = Новый Запрос;
    Если не ЗначениеЗаполнено(Док) тогда
		 Возврат Неопределено;
	КонецЕсли;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ТекущийДокумент", Док);
	Запрос.УстановитьПараметр("ДатаДокумента",	 Док.Дата);

	Если Режим = "ПоРеквизитамДокумента" Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтветственныеЛицаСрезПоследних.ФизЛицо.Наименование КАК НаименованиеФизлица,
		|	ОтветственныеЛицаСрезПоследних.Должность.Наименование КАК Должность,
		|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
		|	ОтветственныеЛицаСрезПоследних.ФизЛицо КАК Физлицо,
		|	ОтветственныеЛицаСрезПоследних.Учреждение КАК Организация
		|ПОМЕСТИТЬ ВТОтветственныеЛица
		|ИЗ
		|	РегистрСведений.удуОтветственныеЛицаУчреждения.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.РуководительОрганизации)) КАК ОтветственныеЛицаСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Физлицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
		|				ТОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "". ""
		|			ИНАЧЕ """"
		|		КОНЕЦ + ВЫБОР
		|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
		|				ТОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "". ""
		|			ИНАЧЕ """"
		|		КОНЕЦ + ФИОФизЛицСрезПоследних.Фамилия, ОтветственныеЛицаСрезПоследних.НаименованиеФизлица) КАК НаименованиеОтветственногоЛица,
		|	ОтветственныеЛицаСрезПоследних.Должность,
		|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
		|	ОтветственныеЛицаСрезПоследних.Физлицо,
		|	ОтветственныеЛицаСрезПоследних.Организация КАК Организация
		|ПОМЕСТИТЬ ВТДанныеОбОтветственномЛице
		|ИЗ
		|	ВТОтветственныеЛица КАК ОтветственныеЛицаСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуФИОФизЛиц.СрезПоследних(
		|				&ДатаДокумента,
		|				ФизЛицо В
		|					(ВЫБРАТЬ
		|						Ответственные.Физлицо
		|					ИЗ
		|						ВТОтветственныеЛица КАК Ответственные)) КАК ФИОФизЛицСрезПоследних
		|		ПО ОтветственныеЛицаСрезПоследних.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КомандировкиОрганизаций.Номер КАК НомерДок,
		|	КомандировкиОрганизаций.Дата КАК ДатаДок,
		|	КомандировкиОрганизаций.Организация.ОКПО КАК КодПоОКПО,
		|	ВЫРАЗИТЬ(КомандировкиОрганизаций.Организация.ПолноеНаименование КАК СТРОКА(300)) КАК НазваниеОрганизации,
		|	ВТДанныеОбОтветственномЛице.Должность КАК ДолжностьРуководителя,
		|	ВТДанныеОбОтветственномЛице.НаименованиеОтветственногоЛица КАК ФИОРуководителя,
		|	КомандировкиОрганизаций.Организация.Префикс,
		|	КомандировкиОрганизаций.Ссылка КАК Ссылка,
		|	КомандировкиОрганизаций.СтранаНазначения,
		|	КомандировкиОрганизаций.ОрганизацияНазначения,
		|	КомандировкиОрганизаций.ОснованиеКомандировки
		|ИЗ
		|	Документ.удуКомандировкиОрганизаций КАК КомандировкиОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбОтветственномЛице КАК ВТДанныеОбОтветственномЛице
		|		ПО КомандировкиОрганизаций.Организация = ВТДанныеОбОтветственномЛице.Организация
		|ГДЕ
		|	КомандировкиОрганизаций.Ссылка = &ТекущийДокумент";
		
	ИначеЕсли Режим = "ПоТабличнойЧастиДокумента" Тогда

		Запрос.Текст =
		"ВЫБРАТЬ
		|	КомандировкиОрганизацииРаботники.НомерСтроки,
		|	КомандировкиОрганизацииРаботники.Сотрудник.Физлицо КАК Физлицо,
		|	КомандировкиОрганизацииРаботники.Сотрудник КАК Сотрудник,
		|	КомандировкиОрганизацииРаботники.ФизЛицо.Пол КАК ФизЛицоПол,
		|	КомандировкиОрганизацииРаботники.ДатаНачала,
		|	КомандировкиОрганизацииРаботники.ДатаОкончания,
		|	КомандировкиОрганизацииРаботники.ОсвобождатьСтавку,
		|	КомандировкиОрганизацииРаботники.Цель,
		|	КомандировкиОрганизацииРаботники.ИсточникФинансирования,
		|	КомандировкиОрганизацииРаботники.ВремяНахожденияВПути,
		|	КомандировкиОрганизацииРаботники.Сотрудник.Код КАК ТабельныйНомер
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	Документ.удуКомандировкиОрганизаций.РаботникиОрганизации КАК КомандировкиОрганизацииРаботники
		|ГДЕ
		|	КомандировкиОрганизацииРаботники.Ссылка = &ТекущийДокумент
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КомандировкиОрганизацииРаботники.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество, КомандировкиОрганизацииРаботники.Сотрудник.Наименование) КАК Работник,
		|	ЕСТЬNULL(ПаспортныеДанныеФизЛицСрезПоследних.ВидДокумента.Наименование + "", серия "" + ПаспортныеДанныеФизЛицСрезПоследних.Серия + "", №"" + ПаспортныеДанныеФизЛицСрезПоследних.Номер, """") КАК РеквизитыПаспорта,
		|	КомандировкиОрганизацииРаботники.НомерСтроки КАК НомерСтроки,
		|	КомандировкиОрганизацииРаботники.ФизЛицоПол,
		|	КомандировкиОрганизацииРаботники.ДатаНачала,
		|	КомандировкиОрганизацииРаботники.ДатаОкончания,
		|	КомандировкиОрганизацииРаботники.ВремяНахожденияВПути,
		|	КомандировкиОрганизацииРаботники.Цель,
		|	Работники.ПодразделениеОрганизации КАК ПодразделениеРаботника,
		|	Работники.Должность КАК Должность,
		|	КомандировкиОрганизацииРаботники.ИсточникФинансирования,
		|	КомандировкиОрганизацииРаботники.ТабельныйНомер
		|ИЗ
		|	ВТСотрудники КАК КомандировкиОрганизацииРаботники
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СписокДат.Сотрудник КАК Сотрудник,
		|			Работники.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизации,
		|			Работники.Должность.Наименование КАК Должность
		|		ИЗ
		|			(ВЫБРАТЬ
		|				РаботникиВнутри.Сотрудник КАК Сотрудник,
		|				МАКСИМУМ(РаботникиВнутри.Период) КАК ДатаПоследнегоИзменения
		|			ИЗ
		|				РегистрСведений.удуРаботникиОрганизаций КАК РаботникиВнутри
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудники КАК КомандировкиОрганизаций
		|					ПО РаботникиВнутри.Период <= КомандировкиОрганизаций.ДатаНачала
		|						И РаботникиВнутри.Сотрудник = КомандировкиОрганизаций.Сотрудник
		|			
		|			СГРУППИРОВАТЬ ПО
		|				РаботникиВнутри.Сотрудник) КАК СписокДат
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуРаботникиОрганизаций КАК Работники
		|				ПО СписокДат.ДатаПоследнегоИзменения = Работники.Период
		|					И СписокДат.Сотрудник = Работники.Сотрудник) КАК Работники
		|		ПО КомандировкиОрганизацииРаботники.Сотрудник = Работники.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуФИОФизЛиц.СрезПоследних(
		|				&ДатаДокумента,
		|				ФизЛицо В
		|					(ВЫБРАТЬ
		|						Сотрудники.Физлицо
		|					ИЗ
		|						ВТСотрудники КАК Сотрудники)) КАК ФИОФизЛиц
		|		ПО КомандировкиОрганизацииРаботники.Сотрудник.Физлицо = ФИОФизЛиц.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(
		|				&ДатаДокумента,
		|				ФизЛицо В
		|					(ВЫБРАТЬ
		|						Сотрудники.Физлицо
		|					ИЗ
		|						ВТСотрудники КАК Сотрудники)) КАК ПаспортныеДанныеФизЛицСрезПоследних
		|		ПО КомандировкиОрганизацииРаботники.Сотрудник.Физлицо = ПаспортныеДанныеФизЛицСрезПоследних.ФизЛицо
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Иначе
		Возврат Неопределено
	КонецЕсли;

	Возврат Запрос.Выполнить();


КонецФункции // СформироватьЗапросДляПечати()

// Функция формирует табличный документ с печатной формой,
	//
	// Возвращаемое значение:
	//  Табличный документ - печатная форма
	//
Функция СформироватьПечатнуюФормуТ9а(МассивОбъектов, ОбъектыПечати,ИмяМакета)
	
	мДлинаСуток = 86400;
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КомандировкиОрганизации_Т9а";

	ПервыйДокумент = Истина;
	ВыведеноСтрокВДокумент = 0;
	 
	Для Каждого  ДокументДляПечати из МассивОбъектов цикл
	
	// получаем данные для печати
	ВыборкаДляШапкиИПодвала = СформироватьЗапросДляПечати("ПоРеквизитамДокумента",ДокументДляПечати).Выбрать();
	ВыборкаРаботники= СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента",ДокументДляПечати).Выбрать();
	
	// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически.
	Макет = УправлениеПечатью.ПолучитьМакет(ИмяМакета);
	
	Если Не ПервыйДокумент Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ПервыйДокумент    = Ложь;
	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
			
	// запоминаем области макета
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
	ОбластьМакетаБоковойЗаголовок	= Макет.ПолучитьОбласть("ЗаголовокРаботников"); // "боковик" формы
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");// Подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Работник"); // строка работника
	
	// выводим данные о руководителях организации
	Если ВыборкаДляШапкиИПодвала.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапкиИПодвала); // Шапка документа.
		ОбластьМакетаШапка.Параметры.НазваниеОрганизации	= СокрЛП(ОбластьМакетаШапка.Параметры.НазваниеОрганизации);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапкиИПодвала); // Для подвала.
		ОбластьМакета.Параметры.Заполнить(ВыборкаДляШапкиИПодвала); // область работника
	КонецЕсли;

	// Начинаем формировать выходной документ
	ТабДокумент.Вывести(ОбластьМакетаШапка); // Шапка документа.
    ТабДокумент.Вывести(ОбластьМакетаБоковойЗаголовок); // "боковик" формы
	
	ВыведеноСтрок = 0; 
	// выводим строки по работникам
	Пока ВыборкаРаботники.Следующий() Цикл
		
		// Каждый приказ на отдельной странице.
		Если ВыведеноСтрок = 3 Тогда
            	// выводим предварительно подготовленный Подвал документа.
			ТабДокумент.Область(20 + ВыведеноСтрокВДокумент,4,20 + ВыведеноСтрокВДокумент,9).Объединить();
			ТабДокумент.Область(21 + ВыведеноСтрокВДокумент,4,21 + ВыведеноСтрокВДокумент,9).Объединить();
			ТабДокумент.Вывести(ОбластьМакетаПодвал);
			ВыведеноСтрокВДокумент = ТабДокумент.ВысотаТаблицы;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			// начинаем новую страницу
			ВыведеноСтрок = 0;
			ТабДокумент.Вывести(ОбластьМакетаШапка); // Шапка документа.
			ТабДокумент.Вывести(ОбластьМакетаБоковойЗаголовок); // "боковик" формы
		КонецЕсли;

		
		
		// Данные по работнику.
		ОбластьМакета.Параметры.Заполнить(ВыборкаРаботники);
		
		РезультатСклонения = "";
		Если удуОбщегоНазначенияСервер.Просклонять(ВыборкаРаботники.Работник, 4, РезультатСклонения, ВыборкаРаботники.ФизЛицоПол) Тогда
			ОбластьМакета.Параметры.Работник	= РезультатСклонения
		КонецЕсли;
				
		// Уберем из табельного номера префикс.
		ОбластьМакета.Параметры.ТабельныйНомер = ВыборкаРаботники.ТабельныйНомер;
		
		ОбластьМакета.Параметры.Продолжительность = ?(ЗначениеЗаполнено(ВыборкаРаботники.ДатаОкончания),Цел((ВыборкаРаботники.ДатаОкончания - ВыборкаРаботники.ДатаНачала + 1) / мДлинаСуток) + 1, "");
		
		
		ТабДокумент.Присоединить(ОбластьМакета);
		ВыведеноСтрок = ВыведеноСтрок + 1;
		
	КонецЦикла;

	ОбластьМакета = Макет.ПолучитьОбласть("Работник"); // область работника
	Для Сч = ВыведеноСтрок + 1 По 3 Цикл
		ТабДокумент.Присоединить(ОбластьМакета);
	КонецЦикла;
	ТабДокумент.Область(20 + ВыведеноСтрокВДокумент,4,20 + ВыведеноСтрокВДокумент,9).Объединить();
	ТабДокумент.Область(21 + ВыведеноСтрокВДокумент,4,21 + ВыведеноСтрокВДокумент,9).Объединить();
	
	// выводим предварительно подготовленный Подвал документа.
	ТабДокумент.Вывести(ОбластьМакетаПодвал);
    ВыведеноСтрокВДокумент = ТабДокумент.ВысотаТаблицы;

	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДляШапкиИПодвала.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции 

// Функция формирует табличный документ с печатной формой накладной,
	// разработанной методистами
	//
	// Возвращаемое значение:
	//  Табличный документ - печатная форма накладной
	//
Функция СформироватьПечатнуюФормуТ9(МассивОбъектов, ОбъектыПечати,ИмяМакета)
	
	мДлинаСуток = 86400;
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КомандировкиОрганизации_Т9";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;

	ПервыйДокумент = Истина;
	
	Для Каждого  ДокументДляПечати из МассивОбъектов цикл
	// получаем данные для печати
	ВыборкаДляШапки = СформироватьЗапросДляПечати("ПоРеквизитамДокумента",ДокументДляПечати).Выбрать();
	ВыборкаРаботники= СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента",ДокументДляПечати).Выбрать();
			
		// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически.
		Макет = УправлениеПечатью.ПолучитьМакет(ИмяМакета);
				
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент    = Ложь;
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	// запоминаем области макета
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал"); // Подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Работник"); // строка работника

	// выводим данные о руководителях организации
	Если ВыборкаДляШапки.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапки); // Шапка документа.
		ОбластьМакетаШапка.Параметры.НазваниеОрганизации	= СокрЛП(ОбластьМакетаШапка.Параметры.НазваниеОрганизации);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапки); // Для подвала.
		НомерДокДляПечати	= ВыборкаДляШапки.НомерДок;
				
		ОбластьМакетаПодвал.Параметры.ДатаДок = удуФормированиеПечатныхФорм.ПустаяДатаВПечатнойФорме();
		
	КонецЕсли;
	
	НомерФормы = 0;
	ПечататьПостфикс = ВыборкаРаботники.Количество() > 1;
	// Начинаем формировать выходной документ
	Пока ВыборкаРаботники.Следующий() Цикл
		
		// Каждый приказ на отдельной странице.
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Если ПечататьПостфикс Тогда
			НомерФормы = НомерФормы + 1;
			ОбластьМакетаШапка.Параметры.НомерДок = НомерДокДляПечати + "/" + НомерФормы;
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		// Данные по работнику.
		ОбластьМакета.Параметры.Заполнить(ВыборкаРаботники);
		
		РезультатСклонения = "";
		Если удуОбщегоНазначенияСервер.Просклонять(ВыборкаРаботники.Работник, 4, РезультатСклонения, ВыборкаРаботники.ФизЛицоПол) Тогда
			ОбластьМакета.Параметры.Работник	= РезультатСклонения
		КонецЕсли;
		
		ОбластьМакета.Параметры.Продолжительность = ?(ЗначениеЗаполнено(ВыборкаРаботники.ДатаОкончания),Цел((ВыборкаРаботники.ДатаОкончания - ВыборкаРаботники.ДатаНачала + 1) / мДлинаСуток) + 1,"");
		
		// Уберем из табельного номера префикс.
		ОбластьМакета.Параметры.ТабельныйНомер = ВыборкаРаботники.ТабельныйНомер;

		ТабДокумент.Вывести(ОбластьМакета);

		// Подвал документа.
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		
	КонецЦикла;

	// если не было ни одного работника - выводим пустой бланк
	Если ТабДокумент.ВысотаТаблицы = 0 Тогда
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
	КонецЕсли;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДляШапки.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции 

// Функция формирует табличный документ с печатной формой "Т-10",
//
// Возвращаемое значение:
//	Табличный документ - печатная форма
//
Функция СформироватьПечатнуюФормуТ10(МассивОбъектов, ОбъектыПечати,ИмяМакета)
	
	мДлинаСуток = 86400;
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КомандировкиОрганизации_Т10";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;

	ПервыйДокумент = Истина;
	 
	Для Каждого  ДокументДляПечати из МассивОбъектов цикл
	
	// получаем данные для печати
	ВыборкаДляШапкиИПодвала = СформироватьЗапросДляПечати("ПоРеквизитамДокумента",ДокументДляПечати).Выбрать();
	ВыборкаРаботники= СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента",ДокументДляПечати).Выбрать();
	
	// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически.
	Макет = УправлениеПечатью.ПолучитьМакет(ИмяМакета);
	
	Если Не ПервыйДокумент Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ПервыйДокумент    = Ложь;
	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
			
	// запоминаем области макета
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");// Подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Работник"); // строка работника
	ОборотШапка			= Макет.ПолучитьОбласть("ШапкаОтметок");	// оборот удостоверения - отметки от прибытии-выбытии
	ОборотОтметки		= Макет.ПолучитьОбласть("Отметки");
	
	// выводим данные о руководителях организации
	Если ВыборкаДляШапкиИПодвала.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапкиИПодвала); // Шапка документа.
		ОбластьМакетаШапка.Параметры.НазваниеОрганизации	= СокрЛП(ОбластьМакетаШапка.Параметры.НазваниеОрганизации);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапкиИПодвала); // Для подвала.
		ОбластьМакета.Параметры.Заполнить(ВыборкаДляШапкиИПодвала); // область работника
		НомерДокДляПечати	= ВыборкаДляШапкиИПодвала.НомерДок;
	КонецЕсли;

	НомерФормы = 0;
	ПечататьПостфикс = ВыборкаРаботники.Количество() > 1;
	// Начинаем формировать выходной документ	
	Пока ВыборкаРаботники.Следующий() Цикл
		
		// Каждый приказ на отдельной странице.
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

        // Шапка документа.
		Если ПечататьПостфикс Тогда
			НомерФормы = НомерФормы + 1;
			ОбластьМакетаШапка.Параметры.НомерДок = НомерДокДляПечати + "/" + НомерФормы
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		// Данные по работнику.
		ОбластьМакета.Параметры.Заполнить(ВыборкаРаботники);
						
		// Уберем из табельного номера префикс.
		ОбластьМакета.Параметры.ТабельныйНомер = ВыборкаРаботники.ТабельныйНомер;
		
		// в этой форме продолжительность командировки указывается без времени в пути
		ОбластьМакета.Параметры.Продолжительность = ?(ЗначениеЗаполнено(ВыборкаРаботники.ДатаОкончания),Цел((ВыборкаРаботники.ДатаОкончания - ВыборкаРаботники.ДатаНачала + 1) / мДлинаСуток) + 1 - ВыборкаРаботники.ВремяНахожденияВПути,"");
		ТабДокумент.Вывести(ОбластьМакета);

		
		// Подвал документа.
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		// выводим оборот удостоверения
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДокумент.Вывести(ОборотШапка);
		ТабДокумент.Вывести(ОборотОтметки);
		ТабДокумент.Вывести(ОборотОтметки);
		ТабДокумент.Вывести(ОборотОтметки);
		ТабДокумент.Вывести(ОборотОтметки);
		
	КонецЦикла;

	// если не было ни одного работника - выводим пустой бланк
	Если ТабДокумент.ВысотаТаблицы = 0 Тогда
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		// выводим оборот удостоверения
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДокумент.Вывести(ОборотШапка);
		ТабДокумент.Вывести(ОборотОтметки);
		ТабДокумент.Вывести(ОборотОтметки);
		ТабДокумент.Вывести(ОборотОтметки);
		ТабДокумент.Вывести(ОборотОтметки);
	КонецЕсли;

	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДляШапкиИПодвала.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции 

// Функция формирует табличный документ с печатной формой "Т-10а",
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция СформироватьПечатнуюФормуТ10а(МассивОбъектов, ОбъектыПечати,ИмяМакета)
	
	мДлинаСуток = 86400;
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КомандировкиОрганизации_Т10а";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	ПервыйДокумент = Истина;
	
	Для Каждого  ДокументДляПечати из МассивОбъектов цикл
	// получаем данные для печати
	ВыборкаДляШапки = СформироватьЗапросДляПечати("ПоРеквизитамДокумента",ДокументДляПечати).Выбрать();
	ВыборкаРаботники= СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента",ДокументДляПечати).Выбрать();
			
		// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически.
		Макет = УправлениеПечатью.ПолучитьМакет(ИмяМакета);
				
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент    = Ложь;
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	// запоминаем области макета
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал"); // Подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Работник"); // строка работника

	// выводим данные о руководителях организации
	Если ВыборкаДляШапки.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапки); // Шапка документа.
		ОбластьМакетаШапка.Параметры.НазваниеОрганизации	= СокрЛП(ОбластьМакетаШапка.Параметры.НазваниеОрганизации);
		ОбластьМакета.Параметры.Заполнить(ВыборкаДляШапки);			// область работника
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапки); // Для подвала.
		НомерДокДляПечати	= ВыборкаДляШапки.НомерДок;
	КонецЕсли;
	
	НомерФормы = 0;
	ПечататьПостфикс = ВыборкаРаботники.Количество() > 1;
	// Начинаем формировать выходной документ
	Пока ВыборкаРаботники.Следующий() Цикл
		
		// Каждый приказ на отдельной странице.
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Если ПечататьПостфикс Тогда
			НомерФормы = НомерФормы + 1;
			ОбластьМакетаШапка.Параметры.НомерДок = НомерДокДляПечати + "/" + НомерФормы;
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		// Данные по работнику.
		ОбластьМакета.Параметры.Заполнить(ВыборкаРаботники);
		
				
		ОбластьМакета.Параметры.Продолжительность = ?(ЗначениеЗаполнено(ВыборкаРаботники.ДатаОкончания),Цел((ВыборкаРаботники.ДатаОкончания - ВыборкаРаботники.ДатаНачала + 1) / мДлинаСуток) + 1,"");
		ОбластьМакета.Параметры.ПродолжительностьЧистая = ?(ЗначениеЗаполнено(ВыборкаРаботники.ДатаОкончания),Цел((ВыборкаРаботники.ДатаОкончания - ВыборкаРаботники.ДатаНачала + 1) / мДлинаСуток) + 1 - ВыборкаРаботники.ВремяНахожденияВПути,"");
		
		// Уберем из табельного номера префикс.
		ОбластьМакета.Параметры.ТабельныйНомер = ВыборкаРаботники.ТабельныйНомер;

		ТабДокумент.Вывести(ОбластьМакета);

		// Подвал документа.
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		
	КонецЦикла;

	// если не было ни одного работника - выводим пустой бланк
	Если ТабДокумент.ВысотаТаблицы = 0 Тогда
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
	КонецЕсли;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДляШапки.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции 





 // Процедура печати документа.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьТ9а") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьТ9а",
			"Форма Т-9а",
			СформироватьПечатнуюФормуТ9а(МассивОбъектов, ОбъектыПечати,"Документ.удуКомандировкиОрганизаций.ПФ_MXL_Т9а_от_5_1_2004")
		);
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьТ9") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьТ9",
			"Форма Т-9",
			СформироватьПечатнуюФормуТ9(МассивОбъектов, ОбъектыПечати,"Документ.удуКомандировкиОрганизаций.ПФ_MXL_Т9_от_5_1_2004")
		);
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьТ10а") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьТ10а",
			"Форма Т-10а",
			СформироватьПечатнуюФормуТ10а(МассивОбъектов, ОбъектыПечати,"Документ.удуКомандировкиОрганизаций.ПФ_MXL_Т10а_от_5_1_2004")
		);
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьТ10") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьТ10",
			"Форма Т-10",
			СформироватьПечатнуюФормуТ10(МассивОбъектов, ОбъектыПечати,"Документ.удуКомандировкиОрганизаций.ПФ_MXL_Т10_от_5_1_2004")
		);
		
	КонецЕсли;

	
	
	
	
	
	
	
	
	
	
	
КонецПроцедуры // Печать()
