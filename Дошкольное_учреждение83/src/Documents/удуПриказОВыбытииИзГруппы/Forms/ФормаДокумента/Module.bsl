&НаСервере
Процедура ОбработатьПолученныеСведенияНаСервере(ПереданныйПараметр)
	ПолученнаяТаблица = ДанныеФормыВЗначение(ПереданныйПараметр, Тип("ТаблицаЗначений"));
	
	ОбъектРеквизит = РеквизитФормыВЗначение("Объект");
	
	Для Каждого ПолученнаяСтрока Из ПолученнаяТаблица Цикл
		Если ПолученнаяСтрока.Обрабатывать Тогда
			НоваяСтрокаВоспитанника = ОбъектРеквизит.ТабличнаяЧастьВоспитанники.Добавить();
			НоваяСтрокаВоспитанника.Ребенок = ПолученнаяСтрока.Ребенок;
			НоваяСтрокаВоспитанника.ОснованиеЗачисленияВГруппу = ПолученнаяСтрока.ОснованиеЗачисления;
			НоваяСтрокаВоспитанника.ПричинаВыбытия = Объект.ПричинаВыбытияПоУмолчанию;
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ОбъектРеквизит, "Объект");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПричинуВыбытияНаСервере()
	ОбъектРеквизит = РеквизитФормыВЗначение("Объект");
	
	Для Каждого СтрокаВоспитанник Из ОбъектРеквизит.ТабличнаяЧастьВоспитанники Цикл
		СтрокаВоспитанник.ПричинаВыбытия = Объект.ПричинаВыбытияПоУмолчанию;
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(ОбъектРеквизит, "Объект");
КонецПроцедуры

&НаСервере
Процедура ОбновитьСведенияОСоставеГруппы()
	// Отбор по учреждению
	сэРезультатВыполнения = удуОбработкаПросмотрИнформации.ПолучитьсоставГруппы(Объект.ГруппаВыбытия, ТекущаяДата());		
	ЗначениеВРеквизитФормы(сэРезультатВыполнения, "СоставВыбраннойГруппы");
	
	Если Объект.ГруппаВыбытия.БезОграниченияВместительности Тогда
		Элементы.НадписьСведенияОГруппе.Заголовок = "Количество детей в выбранной группе: " + Строка(сэРезультатВыполнения.Количество()) + ". Вместительность группы не ограничена.";
	Иначе
		Элементы.НадписьСведенияОГруппе.Заголовок = "Количество детей в выбранной группе: " + Строка(сэРезультатВыполнения.Количество()) + ". Вместительность группы: " + Строка(Объект.ГруппаВыбытия.Вместительность);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура КомандаЗаполнитьПричинуВыбытия(Команда)
	// Вставить содержимое обработчика.
	Если Объект.ТабличнаяЧастьВоспитанники.Количество() > 0 Тогда
		Если Вопрос("Заполнить причину выбытия значением по умолчанию?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			ЗаполнитьПричинуВыбытияНаСервере();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьТабличнуюЧасть(Команда)
	// Вставить содержимое обработчика.
	Если Не ЗначениеЗаполнено(Объект.ГруппаВыбытия) Тогда
		Вопрос("Перед заполнением табличной части сначала укажите группу", РежимДиалогаВопрос.ОК);
		Возврат;
	КонецЕсли;
	
	Если Объект.ТабличнаяЧастьВоспитанники.Количество() > 0 Тогда
		Если Вопрос("Перед заполнением табличная часть будет очищена! Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Объект.ТабличнаяЧастьВоспитанники.Очистить();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ФормаЗаполнения = ПолучитьФорму("Документ.удуПриказОВыбытииИзГруппы.Форма.ФормаЗаполненияДетьми");	
	ФормаЗаполнения.ВладелецФормы = ЭтаФорма;
	ФормаЗаполнения.ПараметрГруппа = Объект.ГруппаВыбытия;
	ФормаЗаполнения.ПараметрДата = Объект.ДатаФактическогоВыбытия;
	ФормаЗаполнения.ОткрытьМодально();	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаВыбытияПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ОбновитьСведенияОСоставеГруппы();
КонецПроцедуры

&НаКлиенте
Процедура НадписьСведенияОГруппеНажатие(Элемент)
	// Вставить содержимое обработчика.
	Если СоставВыбраннойГруппы.Количество() > 0 Тогда 
		ФормаПросмотра = ПолучитьФорму("ОбщаяФорма.удуФормаПросмотраСоставаГруппы");
		ФормаПросмотра.ВладелецФормы = ЭтаФорма;
		Для Каждого СтрокаСоставГруппы Из СоставВыбраннойГруппы Цикл
			НоваяСтрокаФормыПросмотра = ФормаПросмотра.ТабличнаяЧастьДети.Добавить();
			НоваяСтрокаФормыПросмотра.Ребенок = СтрокаСоставГруппы.Ребенок;
			НоваяСтрокаФормыПросмотра.Пол = СтрокаСоставГруппы.Пол;
			НоваяСтрокаФормыПросмотра.ДатаРождения = СтрокаСоставГруппы.ДатаРождения;
		КонецЦикла;
		ФормаПросмотра.ОткрытьМодально();		
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
		Объект.Учреждение = Константы.удуОсновноеУчреждение.Получить();
		Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
			ЭтаФорма.Элементы.Учреждение.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаФактическогоВыбытия) Тогда
		Объект.ДатаФактическогоВыбытия = ТекущаяДата();
	КонецЕсли;
	
	ОбновитьСведенияОСоставеГруппы();
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДанныеФормыКоллекция") Тогда
		ОбработатьПолученныеСведенияНаСервере(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ГруппаНомерДата.ТолькоПросмотр = Объект.Проведен;
	Элементы.ТабличнаяЧастьВоспитанники.ТолькоПросмотр = Объект.Проведен;
	Элементы.ГруппаВыбытия.ТолькоПросмотр = Объект.Проведен;
	Элементы.ПричинаВыбытияПоУмолчанию.ТолькоПросмотр = Объект.Проведен;	
	Элементы.КнопкаЗаполнитьПричинуВыбытия.Доступность = Не Объект.Проведен;	
	Элементы.КнопкаЗаполнитьТабличнуюЧасть.Доступность = Не Объект.Проведен;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьВоспитанникиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Если Поле.Имя = "ТабличнаяЧастьВоспитанникиРебенок" Тогда
		СтандартнаяОбработка = Ложь;
		ПередаваемыеПараметры = Новый Структура("Ключ", Элемент.ТекущиеДанные.Ребенок);
		ОткрытьФормуМодально("Справочник.удуДети.Форма.ФормаЭлемента", ПередаваемыеПараметры, ЭтаФорма);
	ИначеЕсли (Поле.Имя = "ТабличнаяЧастьВоспитанникиОснованиеЗачисленияВГруппу") Тогда
		СтандартнаяОбработка = Ложь;
		ПередаваемыеПараметры = Новый Структура("Ключ", Элемент.ТекущиеДанные.ОснованиеЗачисленияВГруппу);
		Если ТипЗнч(Элемент.ТекущиеДанные.ОснованиеЗачисленияВГруппу) = Тип("ДокументСсылка.удуПриказОЗачисленииРебенкаВГруппу") Тогда
			ОткрытьФормуМодально("Документ.удуПриказОЗачисленииРебенкаВГруппу.Форма.ФормаДокумента", ПередаваемыеПараметры, ЭтаФорма);		
		ИначеЕсли ТипЗнч(Элемент.ТекущиеДанные.ОснованиеЗачисленияВГруппу) = Тип("ДокументСсылка.удуПриказОПереводеВДругуюГруппу") Тогда
			ОткрытьФормуМодально("Документ.удуПриказОПереводеВДругуюГруппу.Форма.ФормаДокумента", ПередаваемыеПараметры, ЭтаФорма);		
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры
