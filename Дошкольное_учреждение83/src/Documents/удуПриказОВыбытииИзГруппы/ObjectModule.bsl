
Процедура ОбработкаПроведения(Отказ, РежимПроведения)	
	// проверим корректность заполнения табличной части
	Для Каждого СтрокаВоспитанник Из ТабличнаяЧастьВоспитанники Цикл
		Если Не ЗначениеЗаполнено(СтрокаВоспитанник.Ребенок) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'В строке №" + Строка(СтрокаВоспитанник.НомерСтроки) + " не указан ребенок'");			
			Сообщение.Поле = НСтр("ru = 'ТабличнаяЧастьВоспитанники[" + Строка(СтрокаВоспитанник.НомерСтроки) + "].Ребенок'");
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();			
			Отказ = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаВоспитанник.ПричинаВыбытия) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'В строке №" + Строка(СтрокаВоспитанник.НомерСтроки) + " не указана причина выбытия'");			
			Сообщение.Поле = НСтр("ru = 'ТабличнаяЧастьВоспитанники[" + Строка(СтрокаВоспитанник.НомерСтроки) + "].ПричинаВыбытия'");
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();			
			Отказ = Истина;
		КонецЕсли;		
	КонецЦикла;
	
	// формируем движения по регистру
	Если Не Отказ Тогда
		Движения.удуСведенияОЗачисленииРебенкаВГруппу.Записывать = Истина;
		Для Каждого ТекСтрокаВоспитанник Из ТабличнаяЧастьВоспитанники Цикл
			// регистр удуСведенияОЗачисленииРебенкаВГруппу 
			Движение = Движения.удуСведенияОЗачисленииРебенкаВГруппу.Добавить();
			Движение.Период = ДатаФактическогоВыбытия;
			Движение.Учреждение = Учреждение;
			Движение.Ребенок = ТекСтрокаВоспитанник.Ребенок;
			Движение.Группа = ГруппаВыбытия;
			Движение.ОснованиеЗачисления = ТекСтрокаВоспитанник.ОснованиеЗачисленияВГруппу;
			Движение.ПричинаВыбытияИзГруппы = ТекСтрокаВоспитанник.ПричинаВыбытия;
			Движение.СостояниеУчетаВГруппе = Перечисления.удуСостояниеРебенкаНаУчетеВГруппе.ИсключенИзГруппы;
			
			// если был осуществлен выпуск из группы, сменим статус ребенка
			Если ТекСтрокаВоспитанник.ПричинаВыбытия = Справочники.удуПричиныВыбытияИзГруппы.ВыпускИзДОУ Тогда
				РебенокОбъект = ТекСтрокаВоспитанник.Ребенок.ПолучитьОбъект();
				РебенокОбъект.СтатусРебенка = Перечисления.удуСтатусРебенкаВДОУ.Выпускник;
				РебенокОбъект.Записать();
			КонецЕсли;			
			
			// Изменяем признак отработки договора зачисления
			ДоговорОбъект = ТекСтрокаВоспитанник.ОснованиеЗачисленияВГруппу.ПолучитьОбъект();
			ДоговорОбъект.ПроизошлоОтчисление = Истина;
			ДоговорОбъект.Записать(РежимЗаписиДокумента.Запись);			
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	// Вставить содержимое обработчика.
	Для Каждого ТекСтрокаВоспитанник Из ТабличнаяЧастьВоспитанники Цикл
		// если был осуществлен выпуск из группы, сменим статус ребенка
		Если ТекСтрокаВоспитанник.ПричинаВыбытия = Справочники.удуПричиныВыбытияИзГруппы.ВыпускИзДОУ Тогда
			РебенокОбъект = ТекСтрокаВоспитанник.Ребенок.ПолучитьОбъект();
			РебенокОбъект.СтатусРебенка = Перечисления.удуСтатусРебенкаВДОУ.Воспитанник;
			РебенокОбъект.Записать();
		КонецЕсли;			
		
		// Изменяем признак отработки договора зачисления
		ДоговорОбъект = ТекСтрокаВоспитанник.ОснованиеЗачисленияВГруппу.ПолучитьОбъект();
		ДоговорОбъект.ПроизошлоОтчисление = Ложь;
		ДоговорОбъект.Записать(РежимЗаписиДокумента.Запись);		
	КонецЦикла;
КонецПроцедуры
