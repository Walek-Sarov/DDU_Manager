////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Формирует запрос по документу
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросДляПечати(Режим,Док)

	Запрос = Новый Запрос;
	Если не ЗначениеЗаполнено(Док) тогда
		 Возврат Неопределено;
	КонецЕсли;
	 
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",	Док);
	Запрос.УстановитьПараметр("ДатаДокумента",	Док.Дата);
	
	Если Режим = "ПоРеквизитамДокумента" Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтветственныеЛицаСрезПоследних.ФизЛицо.Наименование КАК НаименованиеФизлица,
		|	ОтветственныеЛицаСрезПоследних.Должность.Наименование КАК Должность,
		|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
		|	ОтветственныеЛицаСрезПоследних.ФизЛицо КАК Физлицо,
		|	ОтветственныеЛицаСрезПоследних.Учреждение КАК Организация
		|ПОМЕСТИТЬ ВТОтветственныеЛица
		|ИЗ
		|	РегистрСведений.удуОтветственныеЛицаУчреждения.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.РуководительОрганизации)) КАК ОтветственныеЛицаСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Физлицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
		|				ТОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "". ""
		|			ИНАЧЕ """"
		|		КОНЕЦ + ВЫБОР
		|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
		|				ТОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "". ""
		|			ИНАЧЕ """"
		|		КОНЕЦ + ФИОФизЛицСрезПоследних.Фамилия, ОтветственныеЛицаСрезПоследних.НаименованиеФизлица) КАК НаименованиеОтветственногоЛица,
		|	ОтветственныеЛицаСрезПоследних.Должность,
		|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
		|	ОтветственныеЛицаСрезПоследних.Физлицо,
		|	ОтветственныеЛицаСрезПоследних.Организация КАК Организация
		|ПОМЕСТИТЬ ВТДанныеОбОтветственномЛице
		|ИЗ
		|	ВТОтветственныеЛица КАК ОтветственныеЛицаСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуФИОФизЛиц.СрезПоследних(
		|				&ДатаДокумента,
		|				ФизЛицо В
		|					(ВЫБРАТЬ
		|						Ответственные.Физлицо
		|					ИЗ
		|						ВТОтветственныеЛица КАК Ответственные)) КАК ФИОФизЛицСрезПоследних
		|		ПО ОтветственныеЛицаСрезПоследних.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КадровоеПеремещениеОрганизаций.Номер КАК НомерДок,
		|	КадровоеПеремещениеОрганизаций.Дата КАК ДатаДок,
		|	КадровоеПеремещениеОрганизаций.Организация.ОКПО КАК КодПоОКПО,
		|	ВЫРАЗИТЬ(КадровоеПеремещениеОрганизаций.Организация.ПолноеНаименование КАК СТРОКА(300)) КАК НазваниеОрганизации,
		|	ВТДанныеОбОтветственномЛице.Должность КАК ДолжностьРуководителя,
		|	ВТДанныеОбОтветственномЛице.НаименованиеОтветственногоЛица КАК ФИОРуководителя,
		|	КадровоеПеремещениеОрганизаций.Организация.Префикс,
		|	КадровоеПеремещениеОрганизаций.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.удуКадровоеПеремещениеОрганизаций КАК КадровоеПеремещениеОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбОтветственномЛице КАК ВТДанныеОбОтветственномЛице
		|		ПО КадровоеПеремещениеОрганизаций.Организация = ВТДанныеОбОтветственномЛице.Организация
		|ГДЕ
		|	КадровоеПеремещениеОрганизаций.Ссылка = &ДокументСсылка";
		
	ИначеЕсли Режим = "ПоТабличнойЧастиДокумента" Тогда
		
		Запрос.УстановитьПараметр("ОсновноеМестоРаботы", Перечисления.удуВидыЗанятостиВОрганизации.ОсновноеМестоРаботы);
		СписокПоказателей = Новый СписокЗначений;
		СписокПоказателей.Добавить(Справочники.удуПоказателиСхемМотивации.ТарифнаяСтавкаДневная);
		СписокПоказателей.Добавить(Справочники.удуПоказателиСхемМотивации.ТарифнаяСтавкаМесячная);
		СписокПоказателей.Добавить(Справочники.удуПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая);
		Запрос.УстановитьПараметр("ТарифнаяСтавкаОклад", СписокПоказателей);

		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.НомерСтроки,
		|	ОсновныеНачисления.Ссылка,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ВидРасчета,
		|	ОсновныеНачисления.Показатель1 КАК Показатель1
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ
		|	Документ.удуКадровоеПеремещениеОрганизаций.ОсновныеНачисления КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.Ссылка = &ДокументСсылка
		|	И ОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисления.НомерСтроки,
		|	ОсновныеНачисления.Ссылка,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ВидРасчета,
		|	ОсновныеНачисления.Показатель1 КАК Показатель1
		|ПОМЕСТИТЬ ВТНадбавки
		|ИЗ
		|	Документ.удуКадровоеПеремещениеОрганизаций.ОсновныеНачисления КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.Ссылка = &ДокументСсылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РаботникиОрганизации.НомерСтроки,
		|	РаботникиОрганизации.Ссылка,
		|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
		|	РаботникиОрганизации.Сотрудник.Физлицо КАК Физлицо,
		|	РаботникиОрганизации.Сотрудник.Код КАК ТабельныйНомер,
		|	РаботникиОрганизации.Сотрудник.Наименование,
		|	РаботникиОрганизации.Сотрудник.ДатаДоговора,
		|	РаботникиОрганизации.Сотрудник.НомерДоговора,
		|	РаботникиОрганизации.ДатаНачала,
		|	РаботникиОрганизации.ДатаОкончания,
		|	РаботникиОрганизации.ПодразделениеОрганизации,
		|	РаботникиОрганизации.Должность,
		|	РаботникиОрганизации.ЗанимаемыхСтавок,
		|	РаботникиОрганизации.ГрафикРаботы,
		|	РаботникиОрганизации.ОснованиеПеремещения
		|ПОМЕСТИТЬ ВТРаботники
		|ИЗ
		|	Документ.удуКадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК РаботникиОрганизации
		|ГДЕ
		|	РаботникиОрганизации.Ссылка = &ДокументСсылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество
		|ПОМЕСТИТЬ ВТФИОФизЛиц
		|ИЗ
		|	РегистрСведений.удуФИОФизЛиц.СрезПоследних(
		|			&ДатаДокумента,
		|			ФизЛицо В
		|				(ВЫБРАТЬ
		|					ВТРаботники.Физлицо
		|				ИЗ
		|					ВТРаботники)) КАК ФИОФизЛицСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокДат.Сотрудник КАК Сотрудник,
		|	РаботникиОрганизации.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизацииНаименование,
		|	РаботникиОрганизации.Должность.Наименование КАК ДолжностьНаименование
		|ПОМЕСТИТЬ ВТДанныеРаботников
		|ИЗ
		|	(ВЫБРАТЬ
		|		Док.Сотрудник КАК Сотрудник,
		|		МАКСИМУМ(РаботникиВнутри.Период) КАК ДатаПоследнегоИзменения
		|	ИЗ
		|		ВТРаботники КАК Док
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.удуРаботникиОрганизаций КАК РаботникиВнутри
		|			ПО Док.Сотрудник = РаботникиВнутри.Сотрудник
		|				И Док.ДатаНачала > РаботникиВнутри.Период
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Док.Сотрудник) КАК СписокДат
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуРаботникиОрганизаций КАК РаботникиОрганизации
		|		ПО СписокДат.ДатаПоследнегоИзменения = РаботникиОрганизации.Период
		|			И СписокДат.Сотрудник = РаботникиОрганизации.Сотрудник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Док.НомерСтроки КАК НомерСтроки,
		|	Док.ДатаНачала,
		|	Док.ДатаОкончания,
		|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, Док.СотрудникНаименование) КАК Работник,
		|	Док.Физлицо.Пол КАК ФизлицоПол,
		|	Док.ТабельныйНомер КАК ТабельныйНомер,
		|	ЕСТЬNULL(Док.СотрудникДатаДоговора, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ТрудовойДоговорДата,
		|	ЕСТЬNULL(Док.СотрудникНомерДоговора, """") КАК ТрудовойДоговорНомер,
		|	Док.ОснованиеПеремещения КАК ОснованиеПеремещения,
		|	Док.ПодразделениеОрганизации.Наименование КАК НовоеПодразделение,
		|	Док.Должность.Наименование КАК НоваяДолжность,
		|	Работники.ПодразделениеОрганизацииНаименование КАК ПрежнееПодразделение,
		|	Работники.ДолжностьНаименование КАК ПрежняяДолжность,
		|	ЕСТЬNULL(Начисления.Показатель1, 0) КАК ОкладТарифнаяСтавка,
		|	ВТНадбавки.Показатель1 КАК РазмерНадбавки,
		|	ВТНадбавки.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	""руб."" КАК ВалютаНадбавки,
		|	""коп."" КАК КопейкиНадбавки
		|ИЗ
		|	ВТРаботники КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИОФизЛиц КАК ФИОФизЛицСрезПоследних
		|		ПО Док.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеРаботников КАК Работники
		|		ПО Док.Сотрудник = Работники.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
		|		ПО Док.Сотрудник = Начисления.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуНадбавкиПоШтатномуРасписаниюОрганизаций.СрезПоследних(&ДатаДокумента, ) КАК НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних
		|		ПО Док.ПодразделениеОрганизации = НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.ПодразделениеОрганизации
		|			И Док.Должность = НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Должность
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНадбавки КАК ВТНадбавки
		|		ПО Док.Сотрудник = ВТНадбавки.Сотрудник
		|			И (ВТНадбавки.ВидРасчета = НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.ВидНадбавки)
		|			И (НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.ПодразделениеОрганизации = Док.ПодразделениеОрганизации)
		|			И (НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Должность = Док.Должность)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|ИТОГИ ПО
		|	НомерСтроки";

	Иначе
		Возврат Неопределено;
	КонецЕсли;

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросДляПечати()

// Функция формирует табличный документ с печатной формой,
	//
	// Возвращаемое значение:
	//  Табличный документ - печатная форма
	//
Функция СформироватьПечатнуюФормуТ5а(МассивОбъектов, ОбъектыПечати,ИмяМакета)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_удуКадровоеПеремещениеОрганизаций_Т5а";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	ПервыйДокумент = Истина;
	
	Для Каждого  ДокументДляПечати из МассивОбъектов цикл
	
	// получаем данные для печати
	ВыборкаДляШапки = СформироватьЗапросДляПечати("ПоРеквизитамДокумента",ДокументДляПечати).Выбрать();
	ВыборкаРаботники= СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента",ДокументДляПечати).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически.
	Макет = УправлениеПечатью.ПолучитьМакет(ИмяМакета);
	
	Если Не ПервыйДокумент Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ПервыйДокумент    = Ложь;
	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
			
	// Подсчитываем количество страниц документа - для корректного разбиения на страницы.
	ВсегоСтрокДокумента = ВыборкаРаботники.выбрать().Количество();

	// запоминаем области макета
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
	ПовторятьПриПечатиСтроки = Макет.ПолучитьОбласть("ПовторятьПриПечати"); // повторяющаяся шапка страницы
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");// Подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаРаботник"); // строка работника

	// массив с двумя строками - для разбиения на страницы
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьМакета);
	
	// выводим данные о руководителях организации
	Если ВыборкаДляШапки.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапки); // Шапка документа.
		ОбластьМакетаШапка.Параметры.НазваниеОрганизации	= СокрЛП(ОбластьМакетаШапка.Параметры.НазваниеОрганизации);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапки); // Для подвала.
	КонецЕсли;

	// Начинаем формировать выходной документ
	ТабДокумент.Вывести(ОбластьМакетаШапка); // Шапка документа.

	ВыведеноСтрок = 0;
	// выводим строки по работникам
	Пока ВыборкаРаботники.Следующий() Цикл

		ВложеннаяВыборка = ВыборкаРаботники.Выбрать(); 
		ВложеннаяВыборка.Следующий();
		
		// Данные по работнику.
		ОбластьМакета.Параметры.Заполнить(ВложеннаяВыборка);
		
		РезультатСклонения = "";
		Если удуОбщегоНазначенияСервер.Просклонять(ВложеннаяВыборка.Работник, 4, РезультатСклонения, ВложеннаяВыборка.ФизЛицоПол) Тогда
			ОбластьМакета.Параметры.Работник	= РезультатСклонения
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВложеннаяВыборка.ОкладТарифнаяСтавка) Тогда
			ОбластьМакета.Параметры.ОкладТарифнаяСтавка = "" + Формат(ВложеннаяВыборка.ОкладТарифнаяСтавка,"ЧЦ=15; ЧДЦ=2; ЧН=' '");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВложеннаяВыборка.РазмерНадбавки) Тогда
			
			ТекстЯчейки = ОбластьМакета.Параметры.ОкладТарифнаяСтавка;
			ТекстЯчейки = "" + ТекстЯчейки + "," + Символы.ПС + ВложеннаяВыборка.РазмерНадбавки;
			
			Если ВложеннаяВыборка.СпособРасчета = Перечисления.удуСпособыРасчетаОплатыТруда.Процентом Тогда
				ТекстЯчейки = ТекстЯчейки + "(%)"
			Иначе	
				ТекстЯчейки = ТекстЯчейки + ?(ЗначениеЗаполнено(ВложеннаяВыборка.ВалютаНадбавки)," (" + ВложеннаяВыборка.ВалютаНадбавки+")","");
			КонецЕсли;
			
			ОбластьМакета.Параметры.ОкладТарифнаяСтавка = ТекстЯчейки;
		КонецЕсли;	

		
		
		
		// Уберем из табельного номера префикс.
		ОбластьМакета.Параметры.ТабельныйНомер = ВложеннаяВыборка.ТабельныйНомер;
		
		// разбиение на страницы
		ВыведеноСтрок = ВыведеноСтрок + 1;
		
		// Проверим, уместится ли строка на странице или надо открывать новую страницу.
		ВывестиПодвалЛиста = Не удуОбщегоНазначенияСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		Если Не ВывестиПодвалЛиста и ВыведеноСтрок = ВсегоСтрокДокумента Тогда
			ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
			ВывестиПодвалЛиста = Не удуОбщегоНазначенияСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		КонецЕсли;
		Если ВывестиПодвалЛиста Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ПовторятьПриПечатиСтроки);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		Если ЗначениеЗаполнено(ВложеннаяВыборка.ОснованиеПеремещения) Тогда
			ВысотаДока = ТабДокумент.ВысотаТаблицы;
			ОбластьДокумента = ТабДокумент.Область(ВысотаДока,14,ВысотаДока,17);
			ОбластьДокумента.Объединить();
			ОбластьДокумента.Текст = ВложеннаяВыборка.ОснованиеПеремещения;
		КонецЕсли;

	КонецЦикла;

	// если не было ни одного работника - выводим пустой бланк
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьМакета);
	ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
	Для Сч = 1 По ОбластьМакета.Параметры.Количество() Цикл
		ОбластьМакета.Параметры.Установить(Сч - 1,""); 
	КонецЦикла;
	ОбластьМакета.Параметры.Работник = " " + Символы.ПС + " ";
	Пока удуОбщегоНазначенияСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти, Ложь) Цикл
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

	// выводим предварительно подготовленный Подвал документа.
	ТабДокумент.Вывести(ОбластьМакетаПодвал);

	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДляШапки.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // СформироватьПечатнуюФормуАвансовогоОтчета()

// Функция формирует табличный документ с печатной формой накладной,
	// разработанной методистами
	//
	// Возвращаемое значение:
	//  Табличный документ - печатная форма накладной
	//
Функция СформироватьПечатнуюФормуТ5(МассивОбъектов, ОбъектыПечати,ИмяМакета)
	
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_удуКадровоеПеремещениеОрганизаций_Т5";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	ПервыйДокумент = Истина;
	
	Для Каждого  ДокументДляПечати из МассивОбъектов цикл
	// получаем данные для печати
	ВыборкаДляШапки = СформироватьЗапросДляПечати("ПоРеквизитамДокумента",ДокументДляПечати).Выбрать();
	ВыборкаРаботники= СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента",ДокументДляПечати).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
		// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически.
		Макет = УправлениеПечатью.ПолучитьМакет(ИмяМакета);
				
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент    = Ложь;
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	// запоминаем области макета
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал"); // Подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Работник"); // строка работника

	// выводим данные о руководителях организации
	Если ВыборкаДляШапки.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапки); // Шапка документа.
		ОбластьМакетаШапка.Параметры.НазваниеОрганизации	= СокрЛП(ОбластьМакетаШапка.Параметры.НазваниеОрганизации);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапки); // Для подвала.
		НомерДокДляПечати	= ВыборкаДляШапки.НомерДок;
		
		ОбластьМакетаПодвал.Параметры.ДатаДок = удуФормированиеПечатныхФорм.ПустаяДатаВПечатнойФорме();
		
	КонецЕсли;
	
	НомерФормы = 0;
	ПечататьПостфикс = ВыборкаРаботники.Количество() > 1;
	// Начинаем формировать выходной документ
	Пока ВыборкаРаботники.Следующий() Цикл

		ВложеннаяВыборка = ВыборкаРаботники.Выбрать(); 
		ВложеннаяВыборка.Следующий();
		
		// Каждый приказ на отдельной странице.
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Если ПечататьПостфикс Тогда
			НомерФормы = НомерФормы + 1;
			ОбластьМакетаШапка.Параметры.НомерДок = НомерДокДляПечати + "/" + НомерФормы;
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		// Данные по работнику.
		ОбластьМакета.Параметры.Заполнить(ВложеннаяВыборка);
		
		РезультатСклонения = "";
		Если удуОбщегоНазначенияСервер.Просклонять(ВложеннаяВыборка.Работник, 4, РезультатСклонения, ВложеннаяВыборка.ФизЛицоПол) Тогда
			ОбластьМакета.Параметры.Работник	= РезультатСклонения
		КонецЕсли;
		
		ПредставлениеДатыДоговора                       = Формат(ВложеннаяВыборка.ТрудовойДоговорДата, "ДЛФ=DD");
		ОбластьМакета.Параметры.ТрудовойДоговорЧисло    = ?(ЗначениеЗаполнено(ВложеннаяВыборка.ТрудовойДоговорДата), СокрЛП(Лев(ПредставлениеДатыДоговора,2)), "      ");
		ОбластьМакета.Параметры.ТрудовойДоговорМесяцГод = ?(ЗначениеЗаполнено(ВложеннаяВыборка.ТрудовойДоговорДата), СокрЛП(Прав(ПредставлениеДатыДоговора, СтрДлина(ПредставлениеДатыДоговора)-2)), "                     г.");
		
		Если ЗначениеЗаполнено(ВложеннаяВыборка.ДатаОкончания) Тогда
			ОбластьМакета.Параметры.ВидПеревода = "временно";
						
		Иначе
			ОбластьМакета.Параметры.ВидПеревода = "постоянно";
		КонецЕсли;
		
		
		Если ЗначениеЗаполнено(ВложеннаяВыборка.ОкладТарифнаяСтавка) Тогда
			
			ОбластьМакета.Параметры.ОкладЦелаяЧасть = "" + Цел(ВложеннаяВыборка.ОкладТарифнаяСтавка);
			
			ДробнаяЧасть = ВложеннаяВыборка.ОкладТарифнаяСтавка - Цел(ВложеннаяВыборка.ОкладТарифнаяСтавка);
			ОбластьМакета.Параметры.ОкладДробнаяЧасть = ?(ДробнаяЧасть = 0, "00", ДробнаяЧасть*100); 
		Иначе
			ОбластьМакета.Параметры.ОкладЦелаяЧасть = ""; 
			ОбластьМакета.Параметры.ОкладДробнаяЧасть = ""; 
		КонецЕсли;

		ОбластьМакета.Параметры.НадбавкаЦелаяЧасть   = "";
		ОбластьМакета.Параметры.НадбавкаДробнаяЧасть = "";
		ОбластьМакета.Параметры.ВалютаНадбавки = "руб.";
		ОбластьМакета.Параметры.КопейкиНадбавки = "коп.";

		
		Если ЗначениеЗаполнено(ВложеннаяВыборка.РазмерНадбавки) Тогда
			
			Если ВложеннаяВыборка.СпособРасчета = Перечисления.удуСпособыРасчетаОплатыТруда.Процентом Тогда
					ОбластьМакета.Параметры.ВалютаНадбавки = "";
					ОбластьМакета.Параметры.КопейкиНадбавки = "";
				ОбластьМакета.Параметры.НадбавкаЦелаяЧасть = "" + ВложеннаяВыборка.РазмерНадбавки + "(%)"
			Иначе
				ОбластьМакета.Параметры.НадбавкаЦелаяЧасть = Цел(ВложеннаяВыборка.РазмерНадбавки);
				ДробнаяЧасть = ВложеннаяВыборка.РазмерНадбавки - Цел(ВложеннаяВыборка.РазмерНадбавки);
				ОбластьМакета.Параметры.НадбавкаДробнаяЧасть = ?(ДробнаяЧасть = 0, "00", ДробнаяЧасть*100); 
			КонецЕсли;
			
		КонецЕсли;

		// Уберем из табельного номера префикс.
		ОбластьМакета.Параметры.ТабельныйНомер = ВложеннаяВыборка.ТабельныйНомер;

		ТабДокумент.Вывести(ОбластьМакета);

		// Подвал документа.
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		
	КонецЦикла;

	// если не было ни одного работника - выводим пустой бланк
	Если ТабДокумент.ВысотаТаблицы = 0 Тогда
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		ОбластьМакета.Параметры.ТрудовойДоговорЧисло = "     ";
		ОбластьМакета.Параметры.ТрудовойДоговорМесяцГод = "                 г.";
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
	КонецЕсли;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДляШапки.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // СформироватьПечатнуюФормуАвансовогоОтчета()





 // Процедура печати документа.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьТ5а") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьТ5а",
			"Форма Т-5а",
			СформироватьПечатнуюФормуТ5а(МассивОбъектов, ОбъектыПечати,"Документ.удуКадровоеПеремещениеОрганизаций.ПФ_MXL_Т5а_от_5_1_2004")
		);
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьТ5") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьТ5",
			"Форма Т-5",
			СформироватьПечатнуюФормуТ5(МассивОбъектов, ОбъектыПечати,"Документ.удуКадровоеПеремещениеОрганизаций.ПФ_MXL_Т5_от_5_1_2004")
		);
		
	КонецЕсли;
	
КонецПроцедуры // Печать()
