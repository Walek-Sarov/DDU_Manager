&НаСервере
Процедура УстановитьБыстрыйОтборВСписке(ВидОтбора)
	Если ВидОтбора = "Отображать все заявки на зачисление" Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьОтборУСписка(Список.Отбор, Новый ПолеКомпоновкиДанных("Ссылка"));
		
	ИначеЕсли ВидОтбора = "Отображать заявки, принятые на рассмотрение" Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		               |	удуЗаявкаНаЗачислениеРебенкаВДОУ.Ссылка
		               |ИЗ
		               |	Документ.удуЗаявкаНаЗачислениеРебенкаВДОУ КАК удуЗаявкаНаЗачислениеРебенкаВДОУ
		               |ГДЕ
		               |	(НЕ удуЗаявкаНаЗачислениеРебенкаВДОУ.ПризнакЗачисления)
		               |	И (НЕ удуЗаявкаНаЗачислениеРебенкаВДОУ.ПризнакОтказаВЗачислении)";
					   
		Запрос = Новый Запрос(ТекстЗапроса);
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		
		СписокЗаявокДляОтбора = Новый СписокЗначений;
		Для Каждого СтрокаРеузльтата Из РезультатЗапроса Цикл
			СписокЗаявокДляОтбора.Добавить(СтрокаРеузльтата.Ссылка);
		КонецЦикла;
					   
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаВСписке(Список.Отбор, Новый ПолеКомпоновкиДанных("Ссылка"), СписокЗаявокДляОтбора);
		
	ИначеЕсли ВидОтбора = "Отображать заявки, по которым произошло зачисление" Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		               |	удуЗаявкаНаЗачислениеРебенкаВДОУ.Ссылка
		               |ИЗ
		               |	Документ.удуЗаявкаНаЗачислениеРебенкаВДОУ КАК удуЗаявкаНаЗачислениеРебенкаВДОУ
		               |ГДЕ
		               |	удуЗаявкаНаЗачислениеРебенкаВДОУ.ПризнакЗачисления";
					   
		Запрос = Новый Запрос(ТекстЗапроса);
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		
		СписокЗаявокДляОтбора = Новый СписокЗначений;
		Для Каждого СтрокаРеузльтата Из РезультатЗапроса Цикл
			СписокЗаявокДляОтбора.Добавить(СтрокаРеузльтата.Ссылка);
		КонецЦикла;
					   
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаВСписке(Список.Отбор, Новый ПолеКомпоновкиДанных("Ссылка"), СписокЗаявокДляОтбора);		
		
	ИначеЕсли ВидОтбора = "Отображать заявки, снятые с рассмотрения" Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		               |	удуЗаявкаНаЗачислениеРебенкаВДОУ.Ссылка
		               |ИЗ
		               |	Документ.удуЗаявкаНаЗачислениеРебенкаВДОУ КАК удуЗаявкаНаЗачислениеРебенкаВДОУ
		               |ГДЕ
		               |	удуЗаявкаНаЗачислениеРебенкаВДОУ.ПризнакОтказаВЗачислении";
					   
		Запрос = Новый Запрос(ТекстЗапроса);
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		
		СписокЗаявокДляОтбора = Новый СписокЗначений;
		Для Каждого СтрокаРеузльтата Из РезультатЗапроса Цикл
			СписокЗаявокДляОтбора.Добавить(СтрокаРеузльтата.Ссылка);
		КонецЦикла;
					   
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаВСписке(Список.Отбор, Новый ПолеКомпоновкиДанных("Ссылка"), СписокЗаявокДляОтбора);		
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьПризнакОтказаВЗаявке(ПереданнаяЗаявка)
	Возврат ПереданнаяЗаявка.ПризнакОтказаВЗачислении;
КонецФункции

&НаСервере
Процедура ЗаполнитьНовыйОбъектНаСервере(ПереданнаяЗаявка)
	НовыйДоговор = Документы.удуДоговорОЗачисленииРебенка.СоздатьДокумент();
	НовыйДоговор.ЗаполнитьПоДокументуОснованию(ПереданнаяЗаявка);
	
	ЗначениеВРеквизитФормы(НовыйДоговор, "РеквизитДокументДоговор");
КонецПроцедуры

&НаСервере
Функция ПолучитьСведенияОДоговоре(ПереданнаяЗаявка)
	ТекстЗапроса = "ВЫБРАТЬ
	               |	удуДоговорОЗачисленииРебенка.Ссылка
	               |ИЗ
	               |	Документ.удуДоговорОЗачисленииРебенка КАК удуДоговорОЗачисленииРебенка
	               |ГДЕ
	               |	(НЕ удуДоговорОЗачисленииРебенка.ПометкаУдаления)
	               |	И удуДоговорОЗачисленииРебенка.ЗаявкаОснование = &ЗаявкаОснование
	               |	И (НЕ удуДоговорОЗачисленииРебенка.ПризнакФормированияБезЗаявки)";
				   
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ЗаявкаОснование", ПереданнаяЗаявка);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат.Количество();
	
КонецФункции	

&НаКлиенте
Процедура КомандаСоздатьНаОсновании(Команда)
	// Вставить содержимое обработчика.
	Если ПолучитьСведенияОДоговоре(Элементы.Список.ТекущаяСтрока) > 0 Тогда
		Вопрос("По выбранной заявке уже сформирован договор о зчислении ребенка в группу", РежимДиалогаВопрос.ОК);
	ИначеЕсли ПолучитьПризнакОтказаВЗаявке(Элементы.Список.ТекущаяСтрока) Тогда
		Вопрос("По выбранной заявке было отказано в зачислении ребенка в группу", РежимДиалогаВопрос.ОК);
	Иначе 
		ФормаНовогоДоговора = ПолучитьФорму("Документ.удуДоговорОЗачисленииРебенка.Форма.ФормаДокумента",,ЭтаФорма);
		ДокументОснование = Элементы.Список.ТекущаяСтрока;				
		ЗаполнитьНовыйОбъектНаСервере(ДокументОснование);				
		ФормаНовогоДоговора.Объект.Группа = РеквизитДокументДоговор.Группа;
		ФормаНовогоДоговора.Объект.Ребенок = РеквизитДокументДоговор.Ребенок;
		ФормаНовогоДоговора.Объект.Родитель = РеквизитДокументДоговор.Родитель;
		ФормаНовогоДоговора.Объект.Учреждение = РеквизитДокументДоговор.Учреждение;
		ФормаНовогоДоговора.Объект.ПризнакФормированияБезЗаявки = РеквизитДокументДоговор.ПризнакФормированияБезЗаявки;
		ФормаНовогоДоговора.Объект.ЗаявкаОснование = РеквизитДокументДоговор.ЗаявкаОснование;	
		
		ФормаНовогоДоговора.Открыть();		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПечатьСпискаЗаявок(Команда)
	// Вставить содержимое обработчика.
	ФормаОтчета = ПолучитьФорму("Отчет.удуОтчетПоЗаявкамНаЗачислениеВГруппу.Форма.ФормаОтчета",,ЭтаФорма);
	ФормаОтчета.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура СписокДляБыстрогоОтбораПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	УстановитьБыстрыйОтборВСписке(ЗначениеБыстрогоОтбораПоСостояниюЗаявки);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗначениеБыстрогоОтбораПоСостояниюЗаявки = "Отображать все заявки на зачисление, в т.ч. снятые с рассмотрения";
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

