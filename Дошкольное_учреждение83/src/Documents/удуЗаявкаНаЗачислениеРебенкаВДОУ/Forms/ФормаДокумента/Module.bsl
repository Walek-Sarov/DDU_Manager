&НаСервере
Процедура  ПолучитьСписокБратьевСестер(ПараметрРебенок)
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВложенныйЗапросДети.Ребенок,
	               |	ВложенныйЗапросДоговоры.Ссылка КАК ДоговорНаЗачисление,
	               |	ВложенныйЗапросЗаявки.Ссылка КАК ЗаявкаНаЗачисление
	               |ИЗ
	               |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |		СведенияОДетяхРодителейСрезПоследних.Ребенок КАК Ребенок
	               |	ИЗ
	               |		РегистрСведений.удуСоставСемьиРебенка.СрезПоследних КАК СведенияОРодителяхСрезПоследних
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуСоставСемьиРебенка.СрезПоследних КАК СведенияОДетяхРодителейСрезПоследних
	               |			ПО СведенияОРодителяхСрезПоследних.ЧленСемьи = СведенияОДетяхРодителейСрезПоследних.ЧленСемьи
	               |	ГДЕ
	               |		СведенияОРодителяхСрезПоследних.Ребенок = &Ребенок
	               |		И СведенияОДетяхРодителейСрезПоследних.Ребенок <> &Ребенок) КАК ВложенныйЗапросДети
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			удуДоговорОЗачисленииРебенка.Ссылка КАК Ссылка,
	               |			удуДоговорОЗачисленииРебенка.Ребенок КАК Ребенок
	               |		ИЗ
	               |			Документ.удуДоговорОЗачисленииРебенка КАК удуДоговорОЗачисленииРебенка
	               |		ГДЕ
	               |			(НЕ удуДоговорОЗачисленииРебенка.ПроизошлоОтчисление)) КАК ВложенныйЗапросДоговоры
	               |		ПО ВложенныйЗапросДети.Ребенок = ВложенныйЗапросДоговоры.Ребенок
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			удуЗаявкаНаЗачислениеРебенкаВДОУ.Ссылка КАК Ссылка,
	               |			удуЗаявкаНаЗачислениеРебенкаВДОУ.Ребенок КАК Ребенок
	               |		ИЗ
	               |			Документ.удуЗаявкаНаЗачислениеРебенкаВДОУ КАК удуЗаявкаНаЗачислениеРебенкаВДОУ
	               |		ГДЕ
	               |			(НЕ удуЗаявкаНаЗачислениеРебенкаВДОУ.ПризнакОтказаВЗачислении)) КАК ВложенныйЗапросЗаявки
	               |		ПО ВложенныйЗапросДети.Ребенок = ВложенныйЗапросЗаявки.Ребенок
	               |ГДЕ
	               |	(НЕ(ВложенныйЗапросДоговоры.Ссылка = &ПустойДоговор
	               |				И ВложенныйЗапросЗаявки.Ссылка = &ПустаяЗаявка))";
				   
	Запрос = Новый Запрос(ТекстЗапроса);	
	Запрос.УстановитьПараметр("Ребенок", ПараметрРебенок);
	Запрос.УстановитьПараметр("ПустойДоговор", Документы.удуДоговорОЗачисленииРебенка.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяЗаявка", Документы.удуЗаявкаНаЗачислениеРебенкаВДОУ.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ЗначениеВРеквизитФормы(РезультатЗапроса, "сэТаблицаБратьевИСестер");
КонецПроцедуры

&НаСервере
Процедура ПолучитьСведенияОДоговоре()
	ТекстЗапроса = "ВЫБРАТЬ 
	               |	удуДоговорОЗачисленииРебенка.Ссылка КАК Договор,
	               |	удуПриказОЗачисленииРебенкаВГруппу.Ссылка КАК ПриказОЗачислении
	               |ИЗ
	               |	Документ.удуДоговорОЗачисленииРебенка КАК удуДоговорОЗачисленииРебенка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.удуПриказОЗачисленииРебенкаВГруппу КАК удуПриказОЗачисленииРебенкаВГруппу
	               |		ПО удуДоговорОЗачисленииРебенка.Ссылка = удуПриказОЗачисленииРебенкаВГруппу.ТабличнаяЧастьЗачисление.ОснованиеЗачисления
	               |ГДЕ
	               |	(НЕ удуДоговорОЗачисленииРебенка.ПометкаУдаления)
	               |	И удуДоговорОЗачисленииРебенка.ЗаявкаОснование = &ЗаявкаОснование
	               |	И (НЕ удуДоговорОЗачисленииРебенка.ПризнакФормированияБезЗаявки)
	               |	И ВЫБОР
	               |			КОГДА удуПриказОЗачисленииРебенкаВГруппу.Ссылка <> &ПустойПриказ
	               |				ТОГДА удуПриказОЗачисленииРебенкаВГруппу.Проведен
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ";
				   
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ЗаявкаОснование", Объект.Ссылка);
	Запрос.УстановитьПараметр("ПустойПриказ", Документы.удуПриказОЗачисленииРебенкаВГруппу.ПустаяСсылка());
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() > 0 Тогда
		СформированныйДоговор = Результат.Получить(Результат.Количество() - 1).Договор;		
		СформированныйПриказОЗачислении = Результат.Получить(Результат.Количество() - 1).ПриказОЗачислении;		
	Иначе
		СформированныйДоговор = Документы.удуДоговорОЗачисленииРебенка.ПустаяСсылка();
		СформированныйПриказОЗачислении = Документы.удуПриказОЗачисленииРебенкаВГруппу.ПустаяСсылка();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьСведенияОСоставеГруппы()
	// Отбор по учреждению
	сэРезультатВыполнения = удуОбработкаПросмотрИнформации.ПолучитьсоставГруппы(Объект.ГруппаЖелаемая, ТекущаяДата());		
	ЗначениеВРеквизитФормы(сэРезультатВыполнения, "СоставВыбраннойГруппы");
	
	Если Объект.ГруппаЖелаемая.БезОграниченияВместительности Тогда
		Элементы.НадписьСведенияОГруппе.Заголовок = "Количество детей в выбранной группе: " + Строка(сэРезультатВыполнения.Количество()) + ". Вместительность группы не ограничена.";
	Иначе
		Элементы.НадписьСведенияОГруппе.Заголовок = "Количество детей в выбранной группе: " + Строка(сэРезультатВыполнения.Количество()) + ". Вместительность группы: " + Строка(Объект.ГруппаЖелаемая.Вместительность);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыборПериодаЯвки(Команда)
	// Вставить содержимое обработчика.
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	
	Диалог.Период.ДатаНачала    = Объект.НачальнаяДатаЯвкиРодителя;
	Диалог.Период.ДатаОкончания = Объект.КонечнаяДатаЯвкиРодителя;
	
	Если Диалог.Редактировать() Тогда		
		Объект.НачальнаяДатаЯвкиРодителя = Диалог.Период.ДатаНачала;
		Объект.КонечнаяДатаЯвкиРодителя = Диалог.Период.ДатаОкончания;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ГруппаНезачислен.Доступность = НЕ Объект.ПризнакЗачисления;
	
	Если Элементы.ГруппаНезачислен.Доступность Тогда
		Элементы.ДатаОтказаВЗачислении.Доступность = Объект.ПризнакОтказаВЗачислении;
		Элементы.ПричинаОтказаВЗачислении.Доступность = Объект.ПризнакОтказаВЗачислении;
		Элементы.ФИОЛицаСнявшегоЗаявку.Доступность = Объект.ПризнакОтказаВЗачислении;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПризнакОтказаВЗачисленииПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Элементы.ДатаОтказаВЗачислении.Доступность = Объект.ПризнакОтказаВЗачислении;
	Элементы.ПричинаОтказаВЗачислении.Доступность = Объект.ПризнакОтказаВЗачислении;
	Элементы.ФИОЛицаСнявшегоЗаявку.Доступность = Объект.ПризнакОтказаВЗачислении;	
КонецПроцедуры

&НаКлиенте
Процедура РодительПодавшийЗаявкуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.Ребенок) Тогда
		ФормаВыбораРодителя = ПолучитьФорму("ОбщаяФорма.удуФормаВыбораРодителя");
		ФормаВыбораРодителя.ПараметрРебенок = Объект.Ребенок;
		ФормаВыбораРодителя.ВладелецФормы = ЭтаФорма;
		ФормаВыбораРодителя.ОткрытьМодально();				
	Иначе
		Вопрос("Перед выбором родителя необходимо выбрать ребенка!", РежимДиалогаВопрос.ОК);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.удуРодители") Тогда
		Если ЭтаФорма.ТекущийЭлемент.Имя = "РодительПодавшийЗаявку" Тогда
			Объект.РодительПодавшийЗаявку = ВыбранноеЗначение;
		ИначеЕсли ЭтаФорма.ТекущийЭлемент.Имя = "РодительДляНаправления" Тогда
			Объект.РодительДляНаправления = ВыбранноеЗначение;
		ИначеЕсли ЭтаФорма.ТекущийЭлемент.Имя = "РодительДляУведомления" Тогда
			Объект.РодительДляУведомления = ВыбранноеЗначение;
		КонецЕсли;
			
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
		Объект.Учреждение = Константы.удуОсновноеУчреждение.Получить();
		Если Не ЗначениеЗаполнено(Объект.Учреждение) Тогда
			ЭтаФорма.Элементы.Учреждение.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;	
	
	ОбновитьСведенияОСоставеГруппы();		
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		ПолучитьСведенияОДоговоре();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СформированныйДоговор) Тогда
		Элементы.НадписьСведенияОДоговоре.Заголовок = "По заявке заключен договор с родителями: " + СокрЛП(СформированныйДоговор);
	Иначе
		Элементы.НадписьСведенияОДоговоре.Заголовок = "По заявке не осуществлено заключение договора с родителями";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ГруппаПоФактуЗачисления) Тогда
		Элементы.НадписьСведенияОГруппеЗачислено.Заголовок = "По заявке произошло зачисление ребенка в группу: " + СокрЛП(Объект.ГруппаПоФактуЗачисления.Наименование);
	Иначе
		Элементы.НадписьСведенияОГруппеЗачислено.Заголовок = "По заявке не осуществлено зачисление ребенка в группу";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СформированныйПриказОЗачислении) Тогда
		Элементы.НадписьСведенияОПриказе.Заголовок = "По заявке сформирован приказ: " + СокрЛП(СформированныйПриказОЗачислении);
	Иначе
		Элементы.НадписьСведенияОПриказе.Заголовок = "По заявке не сформирован приказ о зачислении ребенка";
	КонецЕсли;
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура НадписьСведенияОГруппеНажатие(Элемент)
	// Вставить содержимое обработчика.
	Если СоставВыбраннойГруппы.Количество() > 0 Тогда 
		ФормаПросмотра = ПолучитьФорму("ОбщаяФорма.удуФормаПросмотраСоставаГруппы");
		ФормаПросмотра.ВладелецФормы = ЭтаФорма;
		Для Каждого СтрокаСоставГруппы Из СоставВыбраннойГруппы Цикл
			НоваяСтрокаФормыПросмотра = ФормаПросмотра.ТабличнаяЧастьДети.Добавить();
			НоваяСтрокаФормыПросмотра.Ребенок = СтрокаСоставГруппы.Ребенок;
			НоваяСтрокаФормыПросмотра.Пол = СтрокаСоставГруппы.Пол;
			НоваяСтрокаФормыПросмотра.ДатаРождения = СтрокаСоставГруппы.ДатаРождения;
		КонецЦикла;
		ФормаПросмотра.ОткрытьМодально();		
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура ГруппаЖелаемаяПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ОбновитьСведенияОСоставеГруппы();	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПланируемогоПоступленияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ТекущийГод = Год(ТекущаяДата());
	
	СтандартнаяОбработка = Ложь;
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(Формат(ТекущийГод - 1, "ЧГ=0") + "/" + Формат(ТекущийГод, "ЧГ=0"));
	СписокВыбора.Добавить(Формат(ТекущийГод, "ЧГ=0") + "/" + Формат(ТекущийГод + 1, "ЧГ=0"));
	СписокВыбора.Добавить(Формат(ТекущийГод + 1, "ЧГ=0") + "/" + Формат(ТекущийГод + 2, "ЧГ=0"));
	СписокВыбора.Добавить(Формат(ТекущийГод + 2, "ЧГ=0") + "/" + Формат(ТекущийГод + 3, "ЧГ=0"));
	СписокВыбора.Добавить(Формат(ТекущийГод + 3, "ЧГ=0") + "/" + Формат(ТекущийГод + 4, "ЧГ=0"));
	
	НайденноеЗначение = СписокВыбора.НайтиПоЗначению(Элемент.ВыделенныйТекст);
	Если НайденноеЗначение <> Неопределено Тогда
		ВыбранноеЗначение = ВыбратьИзСписка(СписокВыбора, Элемент, НайденноеЗначение);
	Иначе
		ВыбранноеЗначение = ВыбратьИзСписка(СписокВыбора, Элемент);
	КонецЕсли;
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		Объект.ДатаПланируемогоПоступления = ВыбранноеЗначение.Значение;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура РодительДляУведомленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.Ребенок) Тогда
		ФормаВыбораРодителя = ПолучитьФорму("ОбщаяФорма.удуФормаВыбораРодителя");
		ФормаВыбораРодителя.ПараметрРебенок = Объект.Ребенок;
		ФормаВыбораРодителя.ВладелецФормы = ЭтаФорма;
		ФормаВыбораРодителя.ОткрытьМодально();				
	Иначе
		Вопрос("Перед выбором родителя необходимо выбрать ребенка!", РежимДиалогаВопрос.ОК);
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура РодительДляНаправленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.Ребенок) Тогда
		ФормаВыбораРодителя = ПолучитьФорму("ОбщаяФорма.удуФормаВыбораРодителя");
		ФормаВыбораРодителя.ПараметрРебенок = Объект.Ребенок;
		ФормаВыбораРодителя.ВладелецФормы = ЭтаФорма;
		ФормаВыбораРодителя.ОткрытьМодально();				
	Иначе
		Вопрос("Перед выбором родителя необходимо выбрать ребенка!", РежимДиалогаВопрос.ОК);
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура НадписьСведенияОДоговореНажатие(Элемент)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(СформированныйДоговор) Тогда
		ПередаваемыеПараметры = Новый Структура("Ключ", СформированныйДоговор);
		ОткрытьФормуМодально("Документ.удуДоговорОЗачисленииРебенка.Форма.ФормаДокумента", ПередаваемыеПараметры, ЭтаФорма);		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НадписьСведенияОГруппеЗачисленоНажатие(Элемент)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(Объект.ГруппаПоФактуЗачисления) Тогда
		ПередаваемыеПараметры = Новый Структура("Ключ", Объект.ГруппаПоФактуЗачисления);
		ОткрытьФормуМодально("Справочник.удуГруппыУчреждения.Форма.ФормаЭлемента", ПередаваемыеПараметры, ЭтаФорма);		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСведенияОПриказеНажатие(Элемент)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(СформированныйПриказОЗачислении) Тогда
		ПередаваемыеПараметры = Новый Структура("Ключ", СформированныйПриказОЗачислении);
		ОткрытьФормуМодально("Документ.удуПриказОЗачисленииРебенкаВГруппу.Форма.ФормаДокумента", ПередаваемыеПараметры, ЭтаФорма);		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.Дата = ТекущийОбъект.ДатаРегистрацииВОчередь;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПолучитьСписокБратьевСестер(Объект.Ребенок);
	Если (сэТаблицаБратьевИСестер.Количество() > 0) И (Объект.ЛьготыПоЗаявке.Количество() = 0) Тогда
		ТекстВопроса = "У ребенка: " + Строка(Объект.Ребенок) + ", есть родственники, подавшие заявки (числящиеся) в данном МДОУ" + Символы.ПС;
		Для Каждого СтрокаТаблицыБратьевСестер Из сэТаблицаБратьевИСестер Цикл
			ТекстВопроса = ТекстВопроса + Строка(СтрокаТаблицыБратьевСестер.Ребенок) + Символы.ПС;
		КонецЦикла;
		ТекстВопроса = ТекстВопроса + "Но при этом в заявке не указана внеочередная льгота. Продолжить?";
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура РебенокПриИзменении(Элемент)
	
	ПолучитьСписокБратьевСестер(Объект.Ребенок);
	Если сэТаблицаБратьевИСестер.Количество() > 0 Тогда
		ТекстВопроса = "У ребенка: " + Строка(Объект.Ребенок) + ", есть родственники, подавшие заявки (числящиеся) в данном МДОУ" + Символы.ПС;
		Для Каждого СтрокаТаблицыБратьевСестер Из сэТаблицаБратьевИСестер Цикл
			ТекстВопроса = ТекстВопроса + Строка(СтрокаТаблицыБратьевСестер.Ребенок) + Символы.ПС;
		КонецЦикла;
		ТекстВопроса = ТекстВопроса + "В заявке необходимо указать внеочередную льготу при зачислении!";
		Предупреждение(ТекстВопроса);
	КонецЕсли;
	
КонецПроцедуры
