////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Формирует запрос по документу
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросДляПечати(Док)

	Запрос = Новый Запрос;
	Если не ЗначениеЗаполнено(Док) тогда
		 Возврат Неопределено;
	КонецЕсли;
	 
	// Установим параметры запроса
    Запрос.УстановитьПараметр("Ссылка",				Док.Ссылка);
    Запрос.УстановитьПараметр("ФизЛицо",			Док.Сотрудник.ФизЛицо);
    Запрос.УстановитьПараметр("Дата",				Док.Дата);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДоговорНаВыполнениеРаботСФизЛицом.Номер,
	|	ДоговорНаВыполнениеРаботСФизЛицом.Дата,
	|	ВЫРАЗИТЬ(ДоговорНаВыполнениеРаботСФизЛицом.Организация.ПолноеНаименование КАК СТРОКА(300)) КАК НазваниеОрганизации,
	|	ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала,
	|	ДоговорНаВыполнениеРаботСФизЛицом.ДатаОкончания,
	|	ДоговорНаВыполнениеРаботСФизЛицом.ХарактерОплаты КАК ЧастотаВыплат,
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Наименование) КАК РаботникНаименование,
	|	ДоговорНаВыполнениеРаботСФизЛицом.СуммаЗаРаботу,
	|	""Российский рубль"" КАК ВалютаДокумента,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ВидДокумента.Наименование КАК ДокументВид,
	|	ПаспортныеДанныеФизЛицСрезПоследних.Серия КАК ДокументСерия,
	|	ПаспортныеДанныеФизЛицСрезПоследних.Номер КАК ДокументНомер,
	|	ДоговорНаВыполнениеРаботСФизЛицом.Организация.ЮридическийАдрес КАК АдресОрганизации,
	|	ЕСТЬNULL(ДоговорНаВыполнениеРаботСФизЛицом.Организация.ОсновнойБанковскийСчет.НомерСчета, ""__________________"") КАК НомерСчета,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДоговорНаВыполнениеРаботСФизЛицом.Организация.ОсновнойБанковскийСчет.ВидСчета, """") = Значение(Перечисление.удуВидыСчетовУчреждений.Лицевой)
	|			ТОГДА ЕСТЬNULL(ДоговорНаВыполнениеРаботСФизЛицом.Организация.ОсновнойБанковскийСчет.БанкКазначейства.Наименование, ""_______________________________________________________________________________________"")
	|		ИНАЧЕ ЕСТЬNULL(ДоговорНаВыполнениеРаботСФизЛицом.Организация.ОсновнойБанковскийСчет.Банк.Наименование, ""_______________________________________________________________________________________"")
	|	КОНЕЦ КАК Банк
	|ИЗ
	|	Документ.удуДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&Дата, ФизЛицо = &ФизЛицо) КАК ПаспортныеДанныеФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДоговорНаВыполнениеРаботСФизЛицом.Ссылка = &Ссылка";
		
	
	Запрос.Текст = ТекстЗапроса;
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросДляПечати()

// Функция формирует табличный документ с печатной формой,
	//
	// Возвращаемое значение:
	//  Табличный документ - печатная форма
	//
Функция СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати,ИмяМакета)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_удуДоговорНаВыполнениеРаботСФизЛицом_ДоговорПодряда";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;

	ПервыйДокумент = Истина;
	Макет = УправлениеПечатью.ПолучитьМакет(ИмяМакета);
	
	Для Каждого  ДокументДляПечати из МассивОбъектов цикл
	
	// получаем данные для печати
	Выборка = СформироватьЗапросДляПечати(ДокументДляПечати).Выбрать();
	
	Если Не ПервыйДокумент Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ПервыйДокумент    = Ложь;
	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
			

	// запоминаем области макета
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
	
    Если Выборка.Следующий() Тогда
			ОбластьМакетаШапка.Параметры.Заполнить(Выборка);
			
			Если ЗначениеЗаполнено(Выборка.АдресОрганизации) Тогда
				ПараметрыЮридическогоАдреса = ЗначениеИзСтрокиВнутр(Выборка.АдресОрганизации);		
				ПредставлениеЮридическогоАдреса = ПараметрыЮридическогоАдреса[0].Значение;
				ОбластьМакетаШапка.Параметры.АдресОрганизации=ПредставлениеЮридическогоАдреса;
			КонецЕсли;
            
			ОбластьМакетаШапка.Параметры.ДатаНачала    = Формат(Выборка.ДатаНачала, "ДФ=dd.MM.yyyy");
			ОбластьМакетаШапка.Параметры.ДатаОкончания = Формат(Выборка.ДатаОкончания, "ДФ=dd.MM.yyyy");
	КонецЕсли;
		ОбластьМакетаШапка.Параметры.ЧастотаВыплат = Нрег(ОбластьМакетаШапка.Параметры.ЧастотаВыплат);
		ОбластьМакетаШапка.Параметры.НазваниеОрганизации = СокрЛП(ОбластьМакетаШапка.Параметры.НазваниеОрганизации);
	
	ТабДокумент.Вывести(ОбластьМакетаШапка);

	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ДокументДляПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // СформироватьПечатнуюФормуАвансовогоОтчета()



 // Процедура печати документа.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Печать") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"Печать",
			"Договор подряда",
			СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати,"Документ.удуДоговорНаВыполнениеРаботСФизЛицом.ПФ_MXL_Договор")
		);
		
	КонецЕсли;
		
КонецПроцедуры // Печать()
