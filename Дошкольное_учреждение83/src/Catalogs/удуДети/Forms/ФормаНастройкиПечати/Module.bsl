&НаСервере
Функция СформироватьПечатнуюФормуСпискаДетей()
	ТекстЗапроса = "ВЫБРАТЬ
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Группа КАК Группа,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок.Ссылка КАК РебенокСсылка,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок.Наименование КАК Наименование,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок.Пол КАК Пол,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок.Национальность КАК Национальность,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок.РоднойЯзык КАК РоднойЯзык,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок.ДатаРождения КАК ДатаРождения,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок.СерияСвидетельства КАК СерияСвидетельства,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок.НомерСвидетельства КАК НомерСвидетельства,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок.ДатаВыдачиСвидетельства КАК ДатаВыдачиСвидетельства,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок.СоциальноеПоложение КАК СоциальноеПоложение,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок.ЖилищныеУсловия КАК ЖилищныеУсловия,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок.МатериальноеПоложение КАК МатериальноеПоложение,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Регистратор.Ссылка КАК Регистратор,
	               |	ВЫБОР
	               |		КОГДА удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Регистратор.Ссылка ССЫЛКА Документ.удуПриказОЗачисленииРебенкаВГруппу
	               |			ТОГДА ""Приказ о зачислении №""
	               |		ИНАЧЕ ""Приказ о переводе № ""
	               |	КОНЕЦ КАК РегистраторВид,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Регистратор.Дата,
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Регистратор.Номер,
	               |	удуМатьРебенкаСрезПоследних.ЧленСемьи КАК Мать,
	               |	удуОтецРебенкаСрезПоследних.ЧленСемьи КАК Отец,
	               |	удуСведенияОМестеРаботыМатериСрезПоследних.МестоРаботы КАК МестоРаботыМатери,
	               |	удуСведенияОМестеРаботыМатериСрезПоследних.ЗанимаемаяДолжность КАК ЗанимаемаяДолжностьМатери,
	               |	удуСведенияОМестеРаботыОтцаСрезПоследних.МестоРаботы КАК МестоРаботыОтца,
	               |	удуСведенияОМестеРаботыОтцаСрезПоследних.ЗанимаемаяДолжность КАК ЗанимаемаяДолжностьОтца
	               |ИЗ
	               |	РегистрСведений.удуСведенияОЗачисленииРебенкаВГруппу.СрезПоследних(&ДатаОтчета, ) КАК удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуСоставСемьиРебенка.СрезПоследних(&ДатаОтчета, СтепеньРодства = &Мать) КАК удуМатьРебенкаСрезПоследних
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуСведенияОМестеРаботы.СрезПоследних(&ДатаОтчета, ) КАК удуСведенияОМестеРаботыМатериСрезПоследних
	               |			ПО удуМатьРебенкаСрезПоследних.ЧленСемьи = удуСведенияОМестеРаботыМатериСрезПоследних.Работник
	               |		ПО удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок = удуМатьРебенкаСрезПоследних.Ребенок
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуСоставСемьиРебенка.СрезПоследних(&ДатаОтчета, СтепеньРодства = &Отец) КАК удуОтецРебенкаСрезПоследних
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуСведенияОМестеРаботы.СрезПоследних(&ДатаОтчета, ) КАК удуСведенияОМестеРаботыОтцаСрезПоследних
	               |			ПО удуОтецРебенкаСрезПоследних.ЧленСемьи = удуСведенияОМестеРаботыОтцаСрезПоследних.Работник
	               |		ПО удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.Ребенок = удуОтецРебенкаСрезПоследних.Ребенок
	               |ГДЕ
	               |	удуСведенияОЗачисленииРебенкаВГруппуСрезПоследних.СостояниеУчетаВГруппе = &СостояниеУчетаВГруппе
	               |ИТОГИ
	               |	КОЛИЧЕСТВО(РебенокСсылка)
	               |ПО
	               |	Группа
	               |АВТОУПОРЯДОЧИВАНИЕ";				   
				   
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДатаОтчета", КонецДня(ДатаПечатиСписка));	
	Запрос.УстановитьПараметр("СостояниеУчетаВГруппе", Перечисления.удуСостояниеРебенкаНаУчетеВГруппе.ПринятВГруппу);
	Запрос.УстановитьПараметр("Мать", Справочники.удуСтепениРодства.Мать);	
	Запрос.УстановитьПараметр("Отец", Справочники.удуСтепениРодства.Отец);	
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);	
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = Справочники.удуДети.ПолучитьМакет("Макет");
	
	СекцияШапка = Макет.ПолучитьОбласть("Шапка|Наименование");	
	СекцияШапка.Параметры.ДатаФормирования = Формат(ДатаПечатиСписка, "ДЛФ=D");
	ТабличныйДокумент.Вывести(СекцияШапка);
	
	// динамически формируем шапку отчета
	Для Каждого СтрокаНастройкиОтчета Из СписокПечатаемыхРеквизитов Цикл
		Если СтрокаНастройкиОтчета.Использование Тогда
			Если СтрокаНастройкиОтчета.НаименованиеРеквизита <> "Наименование" Тогда
				СекцияШапкаРеквизит = Макет.ПолучитьОбласть("Шапка|" + СокрЛП(СтрокаНастройкиОтчета.НаименованиеРеквизита));
				ТабличныйДокумент.Присоединить(СекцияШапкаРеквизит);
			КонецЕсли;
		КонецЕсли;                          
	КонецЦикла;	
	
	ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
	Для Каждого СтрокаГруппа Из РезультатЗапроса.Строки Цикл
		СекцияГруппа = Макет.ПолучитьОбласть("СтрокаГруппа");
		СекцияГруппа.Параметры.ГруппаНаименование = СокрЛП(СтрокаГруппа.Группа.Наименование) + 
		?(СтрокаГруппа.Группа.КомпенсирующаяНаправленность, " (компенсирующей направленности)", "") + " (вместительность: " + 
		?(СтрокаГруппа.Группа.БезОграниченияВместительности, "<не ограничена>", Строка(СтрокаГруппа.Группа.Вместительность)) + ")";
		СекцияГруппа.Параметры.Группа = СтрокаГруппа.Группа;
		
		ТабличныйДокумент.Вывести(СекцияГруппа, 1, "Группа", Ложь);
		
		НПП = 0;
		Для Каждого СтрокаРебенок Из СтрокаГруппа.Строки Цикл
			НПП = НПП + 1;
			СекцияРебенок = Макет.ПолучитьОбласть("СтрокаРебенок|Наименование");
			СекцияРебенок.Параметры.НПП = НПП;
			СекцияРебенок.Параметры.Заполнить(СтрокаРебенок);
			ТабличныйДокумент.Вывести(СекцияРебенок, 2, "Ребенок", Ложь);
			
			// динамически формируем строки отчета
			Для Каждого СтрокаНастройкиОтчета Из СписокПечатаемыхРеквизитов Цикл
				Если СтрокаНастройкиОтчета.Использование Тогда					
					Если СтрокаНастройкиОтчета.НаименованиеРеквизита = "АдресМестаРождения" Тогда
						СекцияСтрокаРеквизит = Макет.ПолучитьОбласть("СтрокаРебенок|АдресМестаРождения");
						НайденнаяСтрокаМестаРождения = СтрокаРебенок.РебенокСсылка.КонтактнаяИнформация.Найти(Справочники.ВидыКонтактнойИнформации.АдресМестаРожденияРебенка);
						Если НайденнаяСтрокаМестаРождения <> Неопределено Тогда
							СекцияСтрокаРеквизит.Параметры.ПараметрАдресРождения = СокрЛП(НайденнаяСтрокаМестаРождения.Представление);
						Иначе
							СекцияСтрокаРеквизит.Параметры.ПараметрАдресРождения = "";
						КонецЕсли;
						ТабличныйДокумент.Присоединить(СекцияСтрокаРеквизит);
					ИначеЕсли СтрокаНастройкиОтчета.НаименованиеРеквизита = "АдресМестаПроживания" Тогда
						СекцияСтрокаРеквизит = Макет.ПолучитьОбласть("СтрокаРебенок|АдресМестаПроживания");
						НайденнаяСтрокаМестаПроживания = СтрокаРебенок.РебенокСсылка.КонтактнаяИнформация.Найти(Справочники.ВидыКонтактнойИнформации.АдресМестаПроживанияРебенка);
						Если НайденнаяСтрокаМестаПроживания <> Неопределено Тогда
							СекцияСтрокаРеквизит.Параметры.ПараметрАдресПроживания = СокрЛП(НайденнаяСтрокаМестаПроживания.Представление);
						Иначе
							СекцияСтрокаРеквизит.Параметры.ПараметрАдресПроживания = "";
						КонецЕсли;
						ТабличныйДокумент.Присоединить(СекцияСтрокаРеквизит);					
					ИначеЕсли СтрокаНастройкиОтчета.НаименованиеРеквизита = "Регистратор" Тогда // сведения о документах зачисления в группу
						СекцияСтрокаРеквизит = Макет.ПолучитьОбласть("СтрокаРебенок|Регистратор");
						СекцияСтрокаРеквизит.Параметры.РегистраторВид = СтрокаРебенок.РегистраторВид + удуФормированиеПечатныхФорм.ПолучитьНомерНаПечать(СтрокаРебенок.РегистраторНомер);
						СекцияСтрокаРеквизит.Параметры.РегистраторДата = СтрокаРебенок.РегистраторДата;
						СекцияСтрокаРеквизит.Параметры.РегистраторСсылка = СтрокаРебенок.Регистратор;
						ТабличныйДокумент.Присоединить(СекцияСтрокаРеквизит, 2, "Ребенок", Ложь);
					ИначеЕсли СтрокаНастройкиОтчета.НаименованиеРеквизита = "Мать" Тогда // сведенния о матери ребенка
						СекцияСтрокаРеквизит = Макет.ПолучитьОбласть("СтрокаРебенок|Мать");
						Если ЗначениеЗаполнено(СтрокаРебенок.Мать) Тогда 
							СекцияСтрокаРеквизит.Параметры.СведенияОМатери = СокрЛП(СтрокаРебенок.Мать.Наименование) + Символы.ПС + 
							"Место работы: " + ?(ЗначениеЗаполнено(СтрокаРебенок.МестоРаботыМатери), СокрЛП(СтрокаРебенок.МестоРаботыМатери) + " (" + СокрЛП(СтрокаРебенок.ЗанимаемаяДолжностьМатери) + ")", "<нет сведений>");
							СекцияСтрокаРеквизит.Параметры.Мать = СтрокаРебенок.Мать;
						Иначе
							СекцияСтрокаРеквизит.Параметры.СведенияОМатери = "нет сведений";
						КонецЕсли;
						ТабличныйДокумент.Присоединить(СекцияСтрокаРеквизит, 2, "Ребенок", Ложь);
					ИначеЕсли СтрокаНастройкиОтчета.НаименованиеРеквизита = "Отец" Тогда // сведения об отце ребенка
						СекцияСтрокаРеквизит = Макет.ПолучитьОбласть("СтрокаРебенок|Отец");
						Если ЗначениеЗаполнено(СтрокаРебенок.Отец) Тогда 
							СекцияСтрокаРеквизит.Параметры.СведенияОбОтце = СокрЛП(СтрокаРебенок.Отец.Наименование) + Символы.ПС + 
							"Место работы: " + ?(ЗначениеЗаполнено(СтрокаРебенок.МестоРаботыОтца), СокрЛП(СтрокаРебенок.МестоРаботыОтца) + " (" + СокрЛП(СтрокаРебенок.ЗанимаемаяДолжностьОтца) + ")", "<нет сведений>");
							СекцияСтрокаРеквизит.Параметры.Отец = СтрокаРебенок.Отец;
						Иначе
							СекцияСтрокаРеквизит.Параметры.СведенияОбОтце = "нет сведений";
						КонецЕсли;
						ТабличныйДокумент.Присоединить(СекцияСтрокаРеквизит, 2, "Ребенок", Ложь);							
					Иначе
						СекцияСтрокаРеквизит = Макет.ПолучитьОбласть("СтрокаРебенок|" + СокрЛП(СтрокаНастройкиОтчета.НаименованиеРеквизита));
						СекцияСтрокаРеквизит.Параметры.Заполнить(СтрокаРебенок);
						ТабличныйДокумент.Присоединить(СекцияСтрокаРеквизит, 2, "Ребенок", Ложь);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;		
		КонецЦикла;	
	КонецЦикла;
	
	ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	// Заполним список печатаемых реквизитов	
	Для Каждого РеквизитСправочникаДети Из Справочники.удуДети.ПустаяСсылка().Метаданные().Реквизиты Цикл
		Если СокрЛП(РеквизитСправочникаДети.Имя) = "СтатусРебенка" Тогда
			Продолжить;
		КонецЕсли;
		Если СокрЛП(РеквизитСправочникаДети.Имя) = "Фамилия" Тогда
			Продолжить;
		КонецЕсли;
		Если СокрЛП(РеквизитСправочникаДети.Имя) = "Имя" Тогда
			Продолжить;
		КонецЕсли;
		Если СокрЛП(РеквизитСправочникаДети.Имя) = "Отчество" Тогда
			Продолжить;
		КонецЕсли;
		Если СокрЛП(РеквизитСправочникаДети.Имя) = "ФотографияРебенка" Тогда
			Продолжить;
		КонецЕсли;		
		Если СокрЛП(РеквизитСправочникаДети.Имя) = "СерияСвидетельства" Тогда
			Продолжить;
		КонецЕсли;
		Если СокрЛП(РеквизитСправочникаДети.Имя) = "НомерСвидетельства" Тогда
			Продолжить;
		КонецЕсли;
		Если СокрЛП(РеквизитСправочникаДети.Имя) = "ДатаВыдачиСвидетельства" Тогда
			Продолжить;
		КонецЕсли;
		Если СокрЛП(РеквизитСправочникаДети.Имя) = "ОрганВыдачиСвидетельства" Тогда
			Продолжить;
		КонецЕсли;
		Если СокрЛП(РеквизитСправочникаДети.Имя) = "ДополнительныеСоциальныеСведения" Тогда
			Продолжить;
		КонецЕсли;
		Если (СокрЛП(РеквизитСправочникаДети.Имя) = "Национальность") И (НЕ Константы.удуИспользоватьПерсональныеДанные.Получить()) Тогда
			Продолжить;
		КонецЕсли;				
		Если (СокрЛП(РеквизитСправочникаДети.Имя) = "СоциальноеПоложение") И (НЕ Константы.удуИспользоватьПерсональныеДанные.Получить()) Тогда
			Продолжить;
		КонецЕсли;				
		Если (СокрЛП(РеквизитСправочникаДети.Имя) = "МатериальноеПоложение") И (НЕ Константы.удуИспользоватьПерсональныеДанные.Получить()) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаСписка = СписокПечатаемыхРеквизитов.Добавить();
		НоваяСтрокаСписка.Использование = Истина;
		НоваяСтрокаСписка.НаименованиеРеквизита = СокрЛП(РеквизитСправочникаДети.Имя);
		НоваяСтрокаСписка.СинонимРеквизита = СокрЛП(РеквизитСправочникаДети.Синоним);		
	КонецЦикла;	
	
	НоваяСтрокаСписка = СписокПечатаемыхРеквизитов.Добавить();
	НоваяСтрокаСписка.Использование = Истина;
	НоваяСтрокаСписка.НаименованиеРеквизита = "СвидетельствоОРождении";	
	НоваяСтрокаСписка.СинонимРеквизита = "Сведения свидетельства о рождении";	
	
	НоваяСтрокаСписка = СписокПечатаемыхРеквизитов.Добавить();
	НоваяСтрокаСписка.Использование = Истина;
	НоваяСтрокаСписка.НаименованиеРеквизита = "Регистратор";	
	НоваяСтрокаСписка.СинонимРеквизита = "Сведения о зачислении/переводе в группу";	
	
	НоваяСтрокаСписка = СписокПечатаемыхРеквизитов.Добавить();
	НоваяСтрокаСписка.Использование = Истина;
	НоваяСтрокаСписка.НаименованиеРеквизита = "Мать";	
	НоваяСтрокаСписка.СинонимРеквизита = "Сведения о матери ребенка";	
	
	НоваяСтрокаСписка = СписокПечатаемыхРеквизитов.Добавить();
	НоваяСтрокаСписка.Использование = Истина;
	НоваяСтрокаСписка.НаименованиеРеквизита = "Отец";	
	НоваяСтрокаСписка.СинонимРеквизита = "Сведения об отце ребенка";	
	
	ДатаПечатиСписка = ТекущаяДата();
КонецПроцедуры

&НаКлиенте
Процедура КомандаПечатьСписка(Команда)
	// Вставить содержимое обработчика.
	ТабличныйДокумент = СформироватьПечатнуюФормуСпискаДетей();
	
	ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
	ТабличныйДокумент.ОтображатьСетку = Ложь;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	ТабличныйДокумент.Показать();	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтметитьВсе(Команда)
	// Вставить содержимое обработчика.
	Для Каждого СтрокаРеквизита Из СписокПечатаемыхРеквизитов Цикл
		СтрокаРеквизита.Использование = Истина;
	КонецЦикла;		
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьВсе(Команда)
	// Вставить содержимое обработчика.
	Для Каждого СтрокаРеквизита Из СписокПечатаемыхРеквизитов Цикл
		СтрокаРеквизита.Использование = Ложь;
	КонецЦикла;		
КонецПроцедуры
