
//////////////////////////////////////////////////////////////////////////////// 
// ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

&НаКлиенте
Процедура СформироватьПримерНомера()
	
	ОписаниеОшибки = "";
	Если Не Нумерация.СформироватьПримерНомера(Объект.ФорматНомера, Пример, ОписаниеОшибки) Тогда 
		Предупреждение("Ошибка в формате номера: " + ОписаниеОшибки);
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПеренестиСлужебноеПоле()
	
	ТекущаяСтрока = Элементы.СлужебныеПоля.ТекущаяСтрока;
	ЗначениеПоля  = СлужебныеПоля.Получить(ТекущаяСтрока).Значение;
	Объект.ФорматНомера  = Объект.ФорматНомера + ЗначениеПоля;
	
	СформироватьПримерНомера();
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры	

&НаСервере
Функция ИзменениеПараметровНумерации()
	
	НаборЗаписей = РегистрыСведений.Нумерация.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Нумератор.Установить(Объект.Ссылка);
	НаборЗаписей.Прочитать();
	
	Возврат ЗначениеЗаполнено(Объект.Ссылка) 
		И (Объект.ФорматНомера <> Объект.Ссылка.ФорматНомера 
	   Или Объект.Периодичность <> Объект.Ссылка.Периодичность
	   Или Объект.НезависимаяНумерацияПоОрганизациям <> Объект.Ссылка.НезависимаяНумерацияПоОрганизациям)
		И НаборЗаписей.Количество() > 0;
	
КонецФункции	

&НаСервере
Функция ВключениеНумерацииПоОрганизациям()
	
	НаборЗаписей = РегистрыСведений.Нумерация.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Нумератор.Установить(Объект.Ссылка);
	НаборЗаписей.Отбор.Организация.Установить(Справочники.Организации.ПустаяСсылка());
	НаборЗаписей.Прочитать();
	
	Возврат ЗначениеЗаполнено(Объект.Ссылка) 
		И Объект.НезависимаяНумерацияПоОрганизациям 
		И (Не Объект.Ссылка.НезависимаяНумерацияПоОрганизациям)
		И НаборЗаписей.Количество() > 0;		
 	
КонецФункции	

&НаСервере
Процедура ЗаполнитьОрганизациюВРегистре(ИмяРегистра, Организация)
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Нумератор.Установить(Объект.Ссылка);
	НаборЗаписей.Прочитать();
	Для Каждого Запись Из НаборЗаписей Цикл
		Если Не ЗначениеЗаполнено(Запись.Организация) Тогда 
			Запись.Организация = Организация;
		КонецЕсли;	
	КонецЦикла;	
	НаборЗаписей.Записать();	
	
КонецПроцедуры	

&НаСервере
Функция МассивОрганизаций()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции	


//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
// 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СлужебныеПоля.Добавить("[Номер]",	"Номер");
	СлужебныеПоля.Добавить("[День]",	"День месяца");
	СлужебныеПоля.Добавить("[Месяц]",	"Номер месяца");
	СлужебныеПоля.Добавить("[Квартал]",	"Номер квартала");
	СлужебныеПоля.Добавить("[Год2]",	"Год (2 знака)");
	СлужебныеПоля.Добавить("[Год4]",	"Год (4 знака)");
	// Дошкольное учреждение
			
	Если Делопроизводство.ИспользоватьВидыВходящихДокументов() 
	 Или Делопроизводство.ИспользоватьВидыИсходящихДокументов()  
	 Или Делопроизводство.ИспользоватьВидыВнутреннихДокументов() Тогда
		СлужебныеПоля.Добавить("[ИндексВидаДок]", "Индекс вида документа");
	КонецЕсли;	
	
	СлужебныеПоля.Добавить("[ИндексПодр]", 		"Индекс подразделения");
	СлужебныеПоля.Добавить("[ИндексКорресп]", 	"Индекс корреспондента");
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда 
		СлужебныеПоля.Добавить("[ИндексОрг]", "Индекс организации");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьПримерНомера();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ИзменениеПараметровНумерации() Тогда 
		ТекстВопроса = НСтр("ru = 'Для данного нумератора имеются сформированные номера.
			|Вы действительно хотите изменить параметры нумерации?'");
		
		Результат = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Если Результат <> КодВозвратаДиалога.Да Тогда 
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если ВключениеНумерацииПоОрганизациям() Тогда 
			
			Организации = МассивОрганизаций();
			Если Организации.Количество() = 1 Тогда 
				Организация = Организации[0];
				
			Иначе	
				СписокОрганизаций = Новый СписокЗначений;
				СписокОрганизаций.ЗагрузитьЗначения(Организации);
				
				ВыбранноеЗначение = СписокОрганизаций.ВыбратьЭлемент(
				НСтр("ru = 'Укажите организацию, к которой отнести существующие номера'"));
				
				Если ВыбранноеЗначение = Неопределено Тогда 
					Отказ = Истина;
					Возврат;	
				КонецЕсли;		
				Организация = ВыбранноеЗначение.Значение;
				
			КонецЕсли;
			
			ЗаполнитьОрганизациюВРегистре("Нумерация", Организация);
			
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
// 

&НаКлиенте
Процедура ФорматНомераПриИзменении(Элемент)
	
	СформироватьПримерНомера();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСлужебноеПоле(Команда)
	
	ПеренестиСлужебноеПоле();
	
КонецПроцедуры

&НаКлиенте
Процедура СлужебныеПоляВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПеренестиСлужебноеПоле();
	
КонецПроцедуры



