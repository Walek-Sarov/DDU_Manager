////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОтборПоОтчетам = ВариантыОтчетовВызовСервераПовтИсп.ОтчетыТекущегоПользователя();
	
	// Инициализация параметров запроса динамического списка
	Список.Параметры.УстановитьЗначениеПараметра("СписокОтчетов", ОтборПоОтчетам.ВыгрузитьЗначения());
	Список.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", Пользователи.ТекущийПользователь());
	Если Параметры.Свойство("ОтборПоТипу") Тогда
		Список.Параметры.УстановитьЗначениеПараметра("СписокТипов", Параметры.ОтборПоТипу.ВыгрузитьЗначения());
	Иначе
		Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "И ВариантыОтчетов.ТипВариантаОтчета В(&СписокТипов)", "");
	КонецЕсли;
	
	ДеревоРазделовЗаполнить();
	
	ЭлементыДерева = ДеревоРазделов.ПолучитьЭлементы();
	Если ЭлементыДерева.Количество() > 0 Тогда
		ТекущаяСтрокаДерева = ЭлементыДерева[0];
		Элементы.ДеревоРазделов.ТекущаяСтрока = ТекущаяСтрокаДерева.ПолучитьИдентификатор();
		Список.Параметры.УстановитьЗначениеПараметра("Подсистема", ТекущаяСтрокаДерева.ПолныйПутьКПодсистеме);
	Иначе
		Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "(&Подсистема = """"", "ИСТИНА");
		Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "ИЛИ ВариантыОтчетов.Подсистемы.Подсистема ПОДОБНО &Подсистема + ""%"")", "");
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ДеревоРазделов

&НаКлиенте
Процедура ДеревоРазделовПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ДеревоРазделовОбработчикАктивизацииСтроки", 0.2, Истина);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ДеревоРазделовЗаполнить()
	УстановитьПривилегированныйРежим(Истина);
	
	ДеревоЗначений = Новый ДеревоЗначений;
	ДеревоЗначений.Колонки.Добавить("ПолныйПутьКПодсистеме", Новый ОписаниеТипов("Строка"));
	ДеревоЗначений.Колонки.Добавить("Подсистема");
	ДеревоЗначений.Колонки.Добавить("Имя",                   Новый ОписаниеТипов("Строка"));
	ДеревоЗначений.Колонки.Добавить("Представление",         Новый ОписаниеТипов("Строка"));
	ДеревоЗначений.Колонки.Добавить("Картинка",              Новый ОписаниеТипов("Картинка"));
	
	ВиртуальныеПодсистемы = ВариантыОтчетовПереопределяемый.ОписаниеВиртуальныхПодсистем();
	
	// Запрос по подсистемам доступных вариантов
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(Подсистемы.Подсистема КАК СТРОКА(1000)) КАК Подсистема
	|ИЗ
	|	Справочник.ВариантыОтчетов.Подсистемы КАК Подсистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтчетов.ИсключенияБыстрогоДоступа КАК Исключения
	|		ПО Подсистемы.Ссылка = Исключения.Ссылка
	|			И (Исключения.Пользователь = &ТекущийПользователь)
	|ГДЕ
	|	Подсистемы.Ссылка.КлючОбъекта В(&СписокОтчетов)
	|	И Подсистемы.Ссылка.ТипВариантаОтчета В(&СписокТипов)
	|	И ВЫБОР
	|			КОГДА Исключения.Пользователь ЕСТЬ NULL 
	|				ТОГДА Подсистемы.Ссылка.БыстрыйДоступ = ИСТИНА
	|			ИНАЧЕ Подсистемы.Ссылка.БыстрыйДоступ = ЛОЖЬ
	|		КОНЕЦ";
	
	Для Каждого ПараметрКД Из Список.Параметры.Элементы Цикл
		Запрос.УстановитьПараметр(Строка(ПараметрКД.Параметр), ПараметрКД.Значение);
	КонецЦикла;
	
	Если НЕ Параметры.Свойство("ОтборПоТипу") Тогда
		Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "И Подсистемы.Ссылка.ТипВариантаОтчета В(&СписокТипов)", "");
	КонецЕсли;
	
	Разделитель = "\";
	
	// Доступные подсистемы
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Подсистема = "" Тогда
			Продолжить;
		КонецЕсли;
		
		// Разбор полного пути к подсистеме в массив
		ТекущийРодитель = 0;
		ПолныйПутьКПодсистеме = "";
		
		МассивПодсистем = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Выборка.Подсистема, Разделитель);
		Для Каждого ИмяПодсистемы Из МассивПодсистем Цикл
			Если ИмяПодсистемы = "" Тогда
				Продолжить;
			КонецЕсли;
			
			ПолныйПутьКПодсистеме = ?(ПолныйПутьКПодсистеме = "", "", ПолныйПутьКПодсистеме + Разделитель) + ИмяПодсистемы;
			
			НаборСтрокРодителя = ?(ТекущийРодитель = 0, ДеревоЗначений.Строки, ТекущийРодитель.Строки);
			
			СтрокаДерева = НаборСтрокРодителя.Найти(ПолныйПутьКПодсистеме, "ПолныйПутьКПодсистеме", Ложь);
			Если СтрокаДерева = Неопределено Тогда
				// Добавление строки дерева
				СтрокаДерева = НаборСтрокРодителя.Добавить();
				СтрокаДерева.ПолныйПутьКПодсистеме = ПолныйПутьКПодсистеме;
				СтрокаДерева.Имя                   = ИмяПодсистемы;
				
				// Получение представления
				ПредставлениеУстановлено = Ложь;
				
				// Через метаданные
				Если НЕ ПредставлениеУстановлено Тогда
					ПодсистемаРодителя = ?(ТекущийРодитель = 0, Метаданные, ТекущийРодитель.Подсистема);
					Если ПодсистемаРодителя <> Неопределено Тогда
						МетаданныеПодсистемы = ПодсистемаРодителя.Подсистемы.Найти(ИмяПодсистемы);
						Если МетаданныеПодсистемы <> Неопределено Тогда
							СтрокаДерева.Подсистема    = МетаданныеПодсистемы;
							СтрокаДерева.Представление = МетаданныеПодсистемы.Представление();
							ПредставлениеУстановлено   = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				// Через виртуальные подсистемы
				Если НЕ ПредставлениеУстановлено Тогда
					ВиртуальнаяПодсистема = ВиртуальныеПодсистемы.НайтиПоЗначению(ПолныйПутьКПодсистеме);
					Если ВиртуальнаяПодсистема <> Неопределено Тогда
						СтрокаДерева.Представление = ВиртуальнаяПодсистема.Представление;
						ПредставлениеУстановлено   = Истина;
					КонецЕсли;
				КонецЕсли;
				
				// Как есть
				Если НЕ ПредставлениеУстановлено Тогда
					СтрокаДерева.Представление = ИмяПодсистемы;
				КонецЕсли;
			КонецЕсли;
			
			ТекущийРодитель = СтрокаДерева;
		КонецЦикла;
		
	КонецЦикла;
	
	КорневаяСтрокаДерева = ДеревоЗначений.Строки.Добавить();
	КорневаяСтрокаДерева.Представление = НСтр("ru = 'Все отчеты'");
	
	ЗначениеВРеквизитФормы(ДеревоЗначений, "ДеревоРазделов");
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРазделовОбработчикАктивизацииСтроки()
	ДанныеСтроки = Элементы.ДеревоРазделов.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Параметр = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Подсистема"));
	Если Параметр.Значение <> ДанныеСтроки.ПолныйПутьКПодсистеме Тогда
		Параметр.Значение = ДанныеСтроки.ПолныйПутьКПодсистеме;
	КонецЕсли;
КонецПроцедуры

