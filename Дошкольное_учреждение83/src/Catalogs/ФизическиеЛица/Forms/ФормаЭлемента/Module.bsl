////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Функция  ЗаполнитьНачальныеДанные(Знач ИсходныеДанные,ТипЗначенияСтрока)
	
	   ТипЗначения=Тип(ТипЗначенияСтрока);
	   НаборЗаписей = ДанныеФормыВЗначение(ИсходныеДанные, ТипЗначения);
	   ТЗИсточник=НаборЗаписей.Выгрузить();
	   СтруктураДанных=Новый Структура;
 	   
	   Для Каждого Колонка из ТЗИсточник.Колонки цикл
		   Если ТЗИсточник.Количество()=0 тогда
			   Если Колонка.Имя="ФизЛицо" тогда
				   ЗначениеДанных=?(ЗначениеЗаполнено(Объект.Ссылка),Объект.Ссылка,Неопределено);
			   иначе
				   ЗначениеДанных=Неопределено;
			   КонецЕсли;
		   Иначе    
			   ЗначениеДанных=ТЗИсточник[0].Получить(ТЗИсточник.Колонки.Индекс(Колонка));
		   КонецЕсли;
		   СтруктураДанных.Вставить(Колонка.Имя,ЗначениеДанных);
	   КонецЦикла;
	   
	   Адрес=ПоместитьВоВременноеХранилище(СтруктураДанных,ЭтаФорма.УникальныйИдентификатор);
	   Возврат  Адрес;
	
КонецФункции

&НаСервере
Процедура  ОбновитьЭлемент(ВидЭлемента)

      удуФизическиеЛица.ОбновитьПредставлениеЭлемента(ВидЭлемента, ЭтаФорма);
	  
КонецПроцедуры

&НаСервере
Процедура ПроверитьИНН()

   удуФизическиеЛица.ПроверитьИННОформитьПолеВвода(Объект.ИНН, Элементы.ИНН, истина);


КонецПроцедуры

&НаСервере
Процедура ПроверитьСтраховойНомерПФР()

   удуФизическиеЛица.ПроверитьСтраховойНомерПФРФизлицаОформитьПолеВвода(Объект.СтраховойНомерПФР, Элементы.СтраховойНомерПФР);


КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюПроверитьСервер(ОшибкаВИНН, ОшибкаВСтраховомНомере)
	
	Если ЗначениеЗаполнено(Объект.ИНН) Тогда
		ОшибкаВИНН = НЕ удуФизическиеЛица.ИННСоответствуетТребованиям(Объект.ИНН, Истина);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтрЗаменить(Лев(Объект.СтраховойНомерПФР,11),"-","")) Тогда
		ОшибкаВСтраховомНомере = Не удуФизическиеЛица.СтраховойНомерПФРСоответствуетТребованиям(Объект.СтраховойНомерПФР)	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция  ПолучитьМассивФИОСервер(ФИО)
	
	Возврат удуФизическиеЛица.ПолучитьМассивФИО(ФИО);
	
КонецФункции

&НаСервере
Функция  ПолучитьПолСервер(ОтчествоРаботника)
	
	Возврат удуФизическиеЛица.ПолучитьПол(ОтчествоРаботника);
	
КонецФункции

&НаСервере
Функция  ПроверкаТаблицыСтажейСервер(Отказ,ТекстСообщенияНеЗаданВидСтажа,ТекстСообщенияНеЗаданаДатаОтсчета)
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВидСтажа", Справочники.удуВидыСтажа.ПустаяСсылка());
	СтрокиСОшибками = Объект.Стажи.НайтиСтроки(Отбор);
	КоличествоОшибок = СтрокиСОшибками.Количество();
	
	Если КоличествоОшибок > 0 Тогда
		ТекстСообщенияНеЗаданВидСтажа = "не указан Вид стажа в " + ?(КоличествоОшибок = 1 , "строке", "строках");
		НомераСтрок = " ";
		Для каждого СтрокаСтажа Из СтрокиСОшибками Цикл
			НомераСтрок = НомераСтрок + СтрокаСтажа.НомерСтроки + ",";
		КонецЦикла;
		НомераСтрок = Лев(НомераСтрок, СтрДлина(НомераСтрок) - 1);
		ТекстСообщенияНеЗаданВидСтажа = ТекстСообщенияНеЗаданВидСтажа + ":" + НомераСтрок;
		Отказ = Истина;
	КонецЕсли;
	
	// проверим заполнение даты отсчета, ошибка когда:
	// Дата отсчета меньше даты рождения и дата рождения заполнена
	// Дата рождения не заполнена, дата отсчета меньше 1900 года
	
	ЗаполненаДатаРождения = ЗначениеЗаполнено(Объект.ДатаРождения);
	ДатаПроверки = ?(ЗаполненаДатаРождения, Объект.ДатаРождения, '19000101');
	НомераСтрокПустаяДата = " "; // строки в которых ошибка
	НомераСтрокПлохаяДата = " "; // строки в которых ошибка
	КоличествоОшибок = 0;
	Для каждого СтрокаСтажа Из Объект.Стажи Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаСтажа.ДатаОтсчета) Тогда
			НомераСтрокПустаяДата = НомераСтрокПустаяДата + СтрокаСтажа.НомерСтроки + ",";
			КоличествоОшибок = КоличествоОшибок + 1;
		ИначеЕсли СтрокаСтажа.ДатаОтсчета <= ДатаПроверки Тогда
			НомераСтрокПлохаяДата = НомераСтрокПлохаяДата + СтрокаСтажа.НомерСтроки + ",";
			КоличествоОшибок = КоличествоОшибок + 1;
		КонецЕсли;	
		
	КонецЦикла;
	
	
	
	Если КоличествоОшибок > 0 Тогда
		
		Если Не ПустаяСтрока(НомераСтрокПустаяДата) Тогда
			НомераСтрокПустаяДата = Лев(НомераСтрокПустаяДата, СтрДлина(НомераСтрокПустаяДата) - 1);
			ТекстСообщенияНеЗаданаДатаОтсчета = " в " + ?(КоличествоОшибок = 1 , "строке ", "строках ")
			+ НомераСтрокПустаяДата
			+ "не указана Дата отсчета";
		КонецЕсли;	
		
		Если Не ПустаяСтрока(НомераСтрокПлохаяДата) Тогда
			Если Не ПустаяСтрока(ТекстСообщенияНеЗаданаДатаОтсчета) Тогда
				ТекстСообщенияНеЗаданаДатаОтсчета = ТекстСообщенияНеЗаданаДатаОтсчета + Символы.ПС;	
			КонецЕсли;	
			НомераСтрокПлохаяДата = Лев(НомераСтрокПлохаяДата, СтрДлина(НомераСтрокПлохаяДата) - 1);
			ТекстСообщенияНеЗаданаДатаОтсчета = " в " + ?(КоличествоОшибок = 1 , "строке: ", "строках: ")
			+ НомераСтрокПлохаяДата + " "
			+ ?(ЗаполненаДатаРождения, "Дата отсчета стажа должна быть позднее даты рождения - " + Формат(ДатаПроверки, "ДФ=dd.MM.yyyy") + ".", "Дата отсчета стажа должна быть позднее даты 01.01.1900 года.");
		КонецЕсли;
		
		Отказ = Истина;
		
	КонецЕсли;

	
КонецФункции

&НаСервере
Процедура СформироватьФИО()
	
	Объект.Наименование = СокрЛП(Фамилия + " " + Имя + " " + Отчество);
	ФИОИзменено = Истина;
КонецПроцедуры




////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "КОНТАКТНАЯ ИНФОРМАЦИЯ"

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)	
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтаФорма, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтаФорма, Элемент, Модифицированность, СтандартнаяОбработка);
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Контактная информация"
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаКонтактнаяИнформация");
	
	Если ЗначениеЗаполнено(Параметры.АдресНачальныхПараметров) тогда
		 СтруктураПараметров=ПолучитьИзВременногоХранилища(Параметры.АдресНачальныхПараметров);
		 Объект.Наименование=СтруктураПараметров.Наименование;
		 Объект.ДатаРождения=СтруктураПараметров.ДатаРождения;
		 Объект.ИНН=СтруктураПараметров.ИНН;
		 Объект.КодИМНС=СтруктураПараметров.КодИМНС;
		 Объект.Пол=СтруктураПараметров.Пол;
		 Объект.СтраховойНомерПФР=СтруктураПараметров.СтраховойНомерПФР;
	КонецЕсли;
	
	
	// Обработчик подсистемы "Кадровый учет"
	удуФизическиеЛица.ПолучитьСвязанныеДанныеФизлица(ЭтаФорма.Объект.Ссылка, мНаборЗаписейГражданство,Тип("РегистрСведенийНаборЗаписей.удуГражданствоФизЛиц"));
	удуФизическиеЛица.ПолучитьСвязанныеДанныеФизлица(ЭтаФорма.Объект.Ссылка, мНаборЗаписейСемейноеПоложение,Тип("РегистрСведенийНаборЗаписей.удуСемейноеПоложениеФизЛиц"));
	удуФизическиеЛица.ПолучитьСвязанныеДанныеФизлица(ЭтаФорма.Объект.Ссылка, мНаборЗаписейДокументаУдостоверяющегоЛичность,Тип("РегистрСведенийНаборЗаписей.ПаспортныеДанныеФизЛиц"));
	удуФизическиеЛица.ПолучитьСвязанныеДанныеФизлица(ЭтаФорма.Объект.Ссылка, мНаборЗаписейФИО,Тип("РегистрСведенийНаборЗаписей.удуФИОФизЛиц"));

	удуФизическиеЛица.ФормаЭлементаПриОткрытии(ЭтаФорма);
	удуФизическиеЛица.ПроверитьИННОформитьПолеВвода(Объект.ИНН, Элементы.ИНН, Истина);
	удуФизическиеЛица.ПроверитьСтраховойНомерПФРФизлицаОформитьПолеВвода(Объект.СтраховойНомерПФР, Элементы.СтраховойНомерПФР);
	
	ФИО = Объект.Наименование;
	Если не ЗначениеЗаполнено(Объект.Ссылка) И ЗначениеЗаполнено(ФИО) и Не ЗначениеЗаполнено(ЭтаФорма.Фамилия) Тогда
		МассивФИО = удуФизическиеЛица.ПолучитьМассивФИО(ФИО);
		ЭтаФорма.Фамилия  = МассивФИО[0];
		ЭтаФорма.Имя      = МассивФИО[1];
		ЭтаФорма.Отчество = МассивФИО[2];
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для Каждого СтрокаТЧ из Объект.Стажи цикл
		СтрокаТЧ.Лет		= Цел(СтрокаТЧ.РазмерМесяцев / 12);
		СтрокаТЧ.Месяцев	= СтрокаТЧ.РазмерМесяцев - СтрокаТЧ.Лет * 12;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	

	ОшибкаВИНН = Ложь;	
	ОшибкаВСтраховомНомере = Ложь;
	ПередЗаписьюПроверитьСервер(ОшибкаВИНН, ОшибкаВСтраховомНомере);
	
	ТекстВопроса = "";
	Если ОшибкаВИНН и ОшибкаВСтраховомНомере Тогда
		ТекстВопроса = "ИНН и Страховой номер физического лица заданы неверно! Записать данные физического лица с ошибками?";
	ИначеЕсли ОшибкаВИНН Тогда
		ТекстВопроса = "ИНН физического лица задан неверно! Записать данные физического лица с ошибками?";
	ИначеЕсли ОшибкаВСтраховомНомере Тогда
		ТекстВопроса = "Страховой номер физического лица задан неверно! Записать данные физического лица с ошибками?";
	КонецЕсли;
	
	Если Не ПустаяСтрока(ТекстВопроса) Тогда
	    Отказ=(Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет) = КодВозвратаДиалога.Нет);
	КонецЕсли;

	Для Каждого СтрокаТЧ Из Объект.Стажи Цикл
		СтрокаТЧ.РазмерМесяцев	= СтрокаТЧ.Месяцев + СтрокаТЧ.Лет * 12;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик подсистемы "Контактная информация"
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	Если не Отказ тогда
		ТекстСообщенияНеЗаданВидСтажа="";
		ТекстСообщенияНеЗаданаДатаОтсчета="";
		ПроверкаТаблицыСтажейСервер(Отказ,ТекстСообщенияНеЗаданВидСтажа,ТекстСообщенияНеЗаданаДатаОтсчета);
		
		Если Отказ Тогда
			ТекстСообщенияЗаголовок = "Ошибки в таблице ""Стажи общего характера""";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияЗаголовок);
			Если Не ПустаяСтрока(ТекстСообщенияНеЗаданВидСтажа) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияНеЗаданВидСтажа);
			КонецЕсли;
			Если Не ПустаяСтрока(ТекстСообщенияНеЗаданаДатаОтсчета) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияНеЗаданаДатаОтсчета);
			КонецЕсли;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Данные не записаны!");
		КонецЕсли;
		
	КонецЕсли;
	
	
	
	
	
	

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ФИО = ЭтаФорма.Фамилия + " " + ЭтаФорма.Имя + " " + ЭтаФорма.Отчество;
	
	Если мНаборЗаписейДокументаУдостоверяющегоЛичность.Количество() > 0 Тогда
		ЗаписьДокументаУдостоверяющегоЛичность = Новый Структура("ВидДокумента,Серия,Номер,ДатаВыдачи,КодПодразделения");
		ЗаполнитьЗначенияСвойств(ЗаписьДокументаУдостоверяющегоЛичность,мНаборЗаписейДокументаУдостоверяющегоЛичность[0]);
		ТаблицаСообщений = удуФизическиеЛица.ПроверитьДублиФизлиц(ТекущийОбъект.Ссылка, ЗаписьДокументаУдостоверяющегоЛичность, ТекущийОбъект.ИНН, ТекущийОбъект.СтраховойНомерПФР, ФИО, ТекущийОбъект.ДатаРождения);
	Иначе
		ТаблицаСообщений = удуФизическиеЛица.ПроверитьДублиФизлиц(ТекущийОбъект.Ссылка, , ТекущийОбъект.ИНН, ТекущийОбъект.СтраховойНомерПФР, ФИО,ТекущийОбъект.ДатаРождения);
	КонецЕсли;
	
	// Покажем результаты проверки дублей физлиц
	Если ТаблицаСообщений.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Результат проверки дублей физлиц");
		Для каждого СтрокаТЗ Из ТаблицаСообщений Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаТЗ.ТекстСообщения);
		КонецЦикла;
	КонецЕсли;
	
	Если ГражданствоИзменено и мНаборЗаписейГражданство.Количество() > 0 И
		ЗначениеЗаполнено(мНаборЗаписейГражданство[0].Период) Тогда
		НаборЗаписейГражданство=ДанныеФормыВЗначение(мНаборЗаписейГражданство,Тип("РегистрСведенийНаборЗаписей.удуГражданствоФизЛиц"));
		НаборЗаписейГражданство[0].Физлицо = ТекущийОбъект.ссылка;
		
		НаборЗаписейГражданство.Отбор.Физлицо.Использование= Истина;
		НаборЗаписейГражданство.Отбор.Физлицо.Значение		= НаборЗаписейГражданство[0].Физлицо;
		НаборЗаписейГражданство.Отбор.Период.Использование	= Истина;
		НаборЗаписейГражданство.Отбор.Период.Значение		= НаборЗаписейГражданство[0].Период;
		НаборЗаписейГражданство.Записать(Истина);
		
		ЗначениеВДанныеФормы(НаборЗаписейГражданство,мНаборЗаписейГражданство);
		ГражданствоИзменено=Ложь;
	КонецЕсли;
	
	// запись в регистр семейное положение
	Если СемейноеПоложениеИзменено и мНаборЗаписейСемейноеПоложение.Количество() > 0 И
		 ЗначениеЗаполнено(мНаборЗаписейСемейноеПоложение[0].Период) Тогда
		 
		НаборЗаписейСемейноеПоложение=ДанныеФормыВЗначение(мНаборЗаписейСемейноеПоложение,Тип("РегистрСведенийНаборЗаписей.удуСемейноеПоложениеФизЛиц"));
		НаборЗаписейСемейноеПоложение[0].Физлицо = ТекущийОбъект.ссылка;
		
		НаборЗаписейСемейноеПоложение.Отбор.Физлицо.Использование= Истина;
		НаборЗаписейСемейноеПоложение.Отбор.Физлицо.Значение		= НаборЗаписейСемейноеПоложение[0].Физлицо;
		НаборЗаписейСемейноеПоложение.Отбор.Период.Использование	= Истина;
		НаборЗаписейСемейноеПоложение.Отбор.Период.Значение		= НаборЗаписейСемейноеПоложение[0].Период;
		НаборЗаписейСемейноеПоложение.Записать(Истина);
		
		ЗначениеВДанныеФормы(НаборЗаписейСемейноеПоложение,мНаборЗаписейСемейноеПоложение);
		СемейноеПоложениеИзменено=Ложь;
	КонецЕсли;

	// запись в регистр паспортных данных
	Если УдостоверениеИзменено и мНаборЗаписейДокументаУдостоверяющегоЛичность.Количество() > 0 И
		ЗначениеЗаполнено(мНаборЗаписейДокументаУдостоверяющегоЛичность[0].Период) Тогда
		 
		НаборЗаписейДокументаУдостоверяющегоЛичность=ДанныеФормыВЗначение(мНаборЗаписейДокументаУдостоверяющегоЛичность,Тип("РегистрСведенийНаборЗаписей.ПаспортныеДанныеФизЛиц"));
		НаборЗаписейДокументаУдостоверяющегоЛичность[0].Физлицо = ТекущийОбъект.ссылка;
		
		НаборЗаписейДокументаУдостоверяющегоЛичность.Отбор.Физлицо.Использование	= Истина;
		НаборЗаписейДокументаУдостоверяющегоЛичность.Отбор.Физлицо.Значение			= НаборЗаписейДокументаУдостоверяющегоЛичность[0].Физлицо;
		НаборЗаписейДокументаУдостоверяющегоЛичность.Отбор.Период.Использование		= Истина;
		НаборЗаписейДокументаУдостоверяющегоЛичность.Отбор.Период.Значение			= НаборЗаписейДокументаУдостоверяющегоЛичность[0].Период;
		НаборЗаписейДокументаУдостоверяющегоЛичность.Записать(Истина);
		
		ЗначениеВДанныеФормы(НаборЗаписейДокументаУдостоверяющегоЛичность,мНаборЗаписейДокументаУдостоверяющегоЛичность);
		УдостоверениеИзменено=Ложь;
	КонецЕсли;

	// запись в регистр ФИО физлиц
	Если мНаборЗаписейФИО.Количество() = 0 Тогда
		ЗаписьНабора = мНаборЗаписейФИО.Добавить();
		ЗаписьНабора.Период		= ?(ЗначениеЗаполнено(ЭтаФорма.Объект.ДатаРождения), ЭтаФорма.Объект.ДатаРождения,'19800101');
		ЗаписьНабора.Период		= '19800101';
		ЗаписьНабора.Фамилия	= ЭтаФорма.Фамилия;
		ЗаписьНабора.Имя		= ЭтаФорма.Имя;
		ЗаписьНабора.Отчество	= ЭтаФорма.Отчество;
		ФИОИзменено=Истина;
	КонецЕсли;
	
	Если ФИОИзменено и мНаборЗаписейФИО.Количество() > 0 И
		 ЗначениеЗаполнено(мНаборЗаписейФИО[0].Период) Тогда
		  
		НаборЗаписейФИО=ДанныеФормыВЗначение(мНаборЗаписейФИО,Тип("РегистрСведенийНаборЗаписей.удуФИОФизЛиц")); 
		НаборЗаписейФИО[0].Физлицо 	= ТекущийОбъект.ссылка;
		НаборЗаписейФИО[0].Фамилия 	= ЭтаФорма.Фамилия;
		НаборЗаписейФИО[0].Имя 		= ЭтаФорма.Имя;
		НаборЗаписейФИО[0].Отчество	= ЭтаФорма.Отчество;
		
		НаборЗаписейФИО.Отбор.Физлицо.Установить( ТекущийОбъект.ссылка);
		НаборЗаписейФИО.Отбор.Период.Установить(НаборЗаписейФИО[0].Период);
		НаборЗаписейФИО.Записать(Истина);
		
		ЗначениеВДанныеФормы(НаборЗаписейФИО,мНаборЗаписейФИО);
		ФИОИзменено=Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзмененоФизическоеЛицо", Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЭтаФорма.Заголовок = "Личные данные физического лица: " + ТекущийОбъект.Наименование;
	удуФизическиеЛица.СинхронизироватьНаименованияСотрудников(ТекущийОбъект.Ссылка);

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ГражданствоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	АдресНачальныхДанных=ЗаполнитьНачальныеДанные(мНаборЗаписейГражданство,"РегистрСведенийНаборЗаписей.удуГражданствоФизЛиц");
	ФормаВвода	= ПолучитьФорму("Справочник.ФизическиеЛица.Форма.ФормаЗаписиГражданство",Новый Структура("АдресНачальныхДанных",АдресНачальныхДанных),ЭтаФорма);	
	ПереданноеЗначение=ФормаВвода.ОткрытьМодально();
	Если не ПереданноеЗначение=Неопределено тогда
	     ГражданствоИзменено=Истина;
		 Если мНаборЗаписейГражданство.Количество()=0 тогда
			  мНаборЗаписейГражданство.Добавить();
		 КонецЕсли;
		 ЗаполнитьЗначенияСвойств(мНаборЗаписейГражданство[0],ПереданноеЗначение);
		 ОбновитьЭлемент("Гражданство");
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура КодИМНСПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ИНН) Тогда
		Объект.ИНН = Объект.КодИМНС
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
	ИНН = Объект.ИНН;
	
	ПроверитьИНН();
	
	Если НЕ ЗначениеЗаполнено(Объект.КодИМНС) Тогда
		Объект.КодИМНС = Лев(Объект.ИНН,4);
	КонецЕсли;

	
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойНомерПФРПриИзменении(Элемент)
	
	ПроверитьСтраховойНомерПФР();
	
КонецПроцедуры

&НаКлиенте
Процедура СемейноеПоложениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	АдресНачальныхДанных=ЗаполнитьНачальныеДанные(мНаборЗаписейСемейноеПоложение,"РегистрСведенийНаборЗаписей.удуСемейноеПоложениеФизЛиц");
	ФормаВвода	= ПолучитьФорму("Справочник.ФизическиеЛица.Форма.ФормаЗаписиСемейноеПоложение",Новый Структура("АдресНачальныхДанных",АдресНачальныхДанных),ЭтаФорма);	
	ПереданноеЗначение=ФормаВвода.ОткрытьМодально();
	Если не ПереданноеЗначение=Неопределено тогда
	     СемейноеПоложениеИзменено=Истина;
		 Если мНаборЗаписейСемейноеПоложение.Количество()=0 тогда
			  мНаборЗаписейСемейноеПоложение.Добавить();
		 КонецЕсли;
		 ЗаполнитьЗначенияСвойств(мНаборЗаписейСемейноеПоложение[0],ПереданноеЗначение);
		 ОбновитьЭлемент("СемейноеПоложение");
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура УдостоверениеЛичностиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	АдресНачальныхДанных=ЗаполнитьНачальныеДанные(мНаборЗаписейДокументаУдостоверяющегоЛичность,"РегистрСведенийНаборЗаписей.ПаспортныеДанныеФизЛиц");
	ФормаВвода	= ПолучитьФорму("ОбщаяФорма.удуРедактированиеДокументаУдостоверяющегоЛичность",Новый Структура("АдресНачальныхДанных",АдресНачальныхДанных),ЭтаФорма);	
	ПереданноеЗначение=ФормаВвода.ОткрытьМодально();
	Если не ПереданноеЗначение=Неопределено тогда
	     УдостоверениеИзменено=Истина;
		 Если мНаборЗаписейДокументаУдостоверяющегоЛичность.Количество()=0 тогда
			  мНаборЗаписейДокументаУдостоверяющегоЛичность.Добавить();
		 КонецЕсли;
		 ЗаполнитьЗначенияСвойств(мНаборЗаписейДокументаУдостоверяющегоЛичность[0],ПереданноеЗначение);
		 ОбновитьЭлемент("УдостоверениеЛичности");
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура СменаФИО(Команда)
	
	
	СтандартнаяОбработка=Ложь;
	АдресНачальныхДанных=ЗаполнитьНачальныеДанные(мНаборЗаписейФИО,"РегистрСведенийНаборЗаписей.удуФИОФизЛиц");
	ФормаВвода = ПолучитьФорму("Справочник.ФизическиеЛица.Форма.ФормаЗаписиФИО",Новый Структура("АдресНачальныхДанных",АдресНачальныхДанных),ЭтаФорма);
	
	Если мНаборЗаписейФИО.Количество() = 0 Тогда
		ФормаВвода.Фамилия	= ЭтаФорма.Фамилия;
		ФормаВвода.Имя		= ЭтаФорма.Имя;
		ФормаВвода.Отчество= ЭтаФорма.Отчество;
		ФормаВвода.Период		= ?(ЗначениеЗаполнено(ЭтаФорма.Объект.ДатаРождения), ЭтаФорма.Объект.ДатаРождения,'19800101');
	КонецЕсли;
	
	ПереданноеЗначение=ФормаВвода.ОткрытьМодально();
	Если не ПереданноеЗначение=Неопределено тогда
	     ФИОИзменено=Истина;
		 Если мНаборЗаписейФИО.Количество()=0 тогда
			  мНаборЗаписейФИО.Добавить();
		 КонецЕсли;
		 ЗаполнитьЗначенияСвойств(мНаборЗаписейФИО[0],ПереданноеЗначение);
		 ОбновитьЭлемент("ФИО");
	КонецЕсли;	

	ПредлагаемНаименование = СокрЛП(ЭтаФорма.Фамилия) + " " + СокрЛП(ЭтаФорма.Имя) + " " + СокрЛП(ЭтаФорма.Отчество);
	Если ЭтаФорма.Объект.Наименование <> ПредлагаемНаименование Тогда
		ТекстВопроса = "Вы сменили ФИО физического лица. Изменить наименование на " + ПредлагаемНаименование + "?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		ЭтаФорма.Объект.Наименование = ПредлагаемНаименование;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	 ФИО = ЭтаФорма.Объект.Наименование;
	
	Если ПустаяСтрока(ЭтаФорма.Фамилия) Или не ЗначениеЗаполнено(ЭтаФорма.Объект.Ссылка) Тогда
		МассивФИО = ПолучитьМассивФИОСервер(ФИО);
		ЭтаФорма.Фамилия  = МассивФИО[0];
		ЭтаФорма.Имя      = МассивФИО[1];
		ЭтаФорма.Отчество = МассивФИО[2];
		ФИОИзменено = Истина;
		Если ЗначениеЗаполнено(ЭтаФорма.Отчество) И Не ЗначениеЗаполнено(ЭтаФорма.Объект.Пол) Тогда
			ЭтаФорма.Объект.Пол = ПолучитьПолСервер(ЭтаФорма.Отчество);
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Фамилия		= ЭтаФорма.Фамилия;
	Имя			= ЭтаФорма.Имя;
	Отчество	= ЭтаФорма.Отчество;
	
	Элемент.СписокВыбора.Очистить();
	Если ЗначениеЗаполнено(Фамилия) Тогда
		Элемент.СписокВыбора.Добавить(Фамилия);
		Если ЗначениеЗаполнено(Имя) Тогда
			Элемент.СписокВыбора.Добавить(СокрЛП(Фамилия) + " " + СокрЛП(Имя));
			Элемент.СписокВыбора.Добавить(СокрЛП(Фамилия) + " " + Лев(Имя,1) + ".");
			Если ЗначениеЗаполнено(Отчество) Тогда
				Элемент.СписокВыбора.Добавить(СокрЛП(Фамилия) + " " + СокрЛП(Имя) + " " + СокрЛП(Отчество));
				Элемент.СписокВыбора.Добавить(СокрЛП(Фамилия) + " " + Лев(Имя,1) + ". " + Лев(Отчество,1)+ ".");
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(Имя) Тогда
			Элемент.СписокВыбора.Добавить(Имя);
			Если ЗначениеЗаполнено(Отчество) Тогда
				Элемент.СписокВыбора.Добавить(СокрЛП(Имя) + " " + СокрЛП(Отчество));
				Элемент.СписокВыбора.Добавить(СокрЛП(Имя) + ". " + Лев(Отчество,1)+ ".");
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(Отчество) Тогда
				Элемент.СписокВыбора.Добавить(Отчество);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ФамилияПриИзменении(Элемент)
	
	СформироватьФИО();
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)
	
	СформироватьФИО();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчествоПриИзменении(Элемент)
	
	СформироватьФИО();
	
КонецПроцедуры















