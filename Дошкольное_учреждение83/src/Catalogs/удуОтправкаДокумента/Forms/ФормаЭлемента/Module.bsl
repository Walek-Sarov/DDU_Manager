
//////////////////////////////////////////////////////////////////////////////// 
// ПРОЦЕДУРЫ И ФУНКЦИИ 
// 
 
&НаСервере
Процедура ОбновитьСписокНеотправленных(Знач Кор)
	
	Запрос = Новый Запрос(
	 "ВЫБРАТЬ
	 |	удуНеотправленныеИсхДокументы.Документ
	 |ИЗ
	 |	РегистрСведений.удуНеотправленныеИсхДокументы КАК удуНеотправленныеИсхДокументы
	 |ГДЕ
	 |	удуНеотправленныеИсхДокументы.Документ = &Документ
	 |	И удуНеотправленныеИсхДокументы.Получатель = &Получатель
	 |	И удуНеотправленныеИсхДокументы.Адресат = &Адресат
	 |	И удуНеотправленныеИсхДокументы.ОтправкаДокумента =&ОтправкаДокумента"
	);
	Запрос.УстановитьПараметр("Документ",Кор.Основание);
	Запрос.УстановитьПараметр("Получатель",Кор.Получатель);
	Запрос.УстановитьПараметр("Адресат",Кор.Адресат);
	Запрос.УстановитьПараметр("ОтправкаДокумента",Справочники.удуОтправкаДокумента.ПустаяСсылка());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 0 Тогда
		Запись = РегистрыСведений.удуНеотправленныеИсхДокументы.СоздатьМенеджерЗаписи();
		Запись.Документ = Кор.Основание;
		Запись.Получатель = Кор.Получатель;
		Запись.Адресат = Кор.Адресат;
		Запись.ОтправкаДокумента = Справочники.удуОтправкаДокумента.ПустаяСсылка();
		Запись.Удалить();
	Иначе
		Запрос = Новый Запрос(
	 "ВЫБРАТЬ
	 |	удуНеотправленныеИсхДокументы.Документ
	 |ИЗ
	 |	РегистрСведений.удуНеотправленныеИсхДокументы КАК удуНеотправленныеИсхДокументы
	 |ГДЕ
	 |	удуНеотправленныеИсхДокументы.Документ = &Документ
	 |	И удуНеотправленныеИсхДокументы.Получатель = &Получатель
	 |	И удуНеотправленныеИсхДокументы.Адресат = &Адресат
	 |	И удуНеотправленныеИсхДокументы.ОтправкаДокумента =&ОтправкаДокумента"
	);
	Запрос.УстановитьПараметр("Документ",Кор.Основание);
	Запрос.УстановитьПараметр("Получатель",Кор.Получатель);
	Запрос.УстановитьПараметр("Адресат",Кор.Адресат);
	Запрос.УстановитьПараметр("ОтправкаДокумента",Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 0 Тогда
		Запись = РегистрыСведений.удуНеотправленныеИсхДокументы.СоздатьМенеджерЗаписи();
		Запись.Документ = Кор.Основание;
		Запись.Получатель = Кор.Получатель;
		Запись.Адресат = Кор.Адресат;
		Запись.ОтправкаДокумента = Объект.Ссылка;
		Запись.Удалить();
	КонецЕсли;

	КонецЕсли;
	
	
КонецПроцедуры // ОбновитьСписокНеотправленных()

&НаСервере
Процедура ЗаписатьОтправленныйДокумент(знач Кор)
	ЗаписьОтпр = РегистрыСведений.удуОтправленныеДокументы.СоздатьМенеджерЗаписи();
			
	ЗаписьОтпр.Документ = Кор.Основание;
	ЗаписьОтпр.Корреспондент = Кор.Получатель;
	ЗаписьОтпр.Адресат = Кор.Адресат;
		
	КонтактнаяИнформацияКорреспондента = Кор.Получатель.Контактнаяинформация;
	Для Каждого Элем Из КонтактнаяИнформацияКорреспондента Цикл
		Если Элем.Вид = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКорреспондента Тогда
			ПочтовыйАдрес = Элем.Представление;
		КонецЕсли;
		Если Элем.Вид = Справочники.ВидыКонтактнойИнформации.ЮридическийАдресКорреспондента Тогда
			ЮрАдрес = Элем.Представление;
		КонецЕсли;
		Если Элем.Вид = Справочники.ВидыКонтактнойИнформации.ФактическийАдресКорреспондента Тогда
			ФактическийАдрес = Элем.Представление;
		КонецЕсли;
	КонецЦикла;
	ЗаписьОтпр.ПочтовыйАдрес = ?(ЗначениеЗаполнено(ПочтовыйАдрес),ПочтовыйАдрес,ФактическийАдрес);
	ЗаписьОтпр.ПочтовыйАдрес = ?(ЗначениеЗаполнено(ЗаписьОтпр.ПочтовыйАдрес),ФактическийАдрес,ЮрАдрес);
		
	ЗаписьОтпр.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	ЗаписьОтпр.Дата = Кор.ДатаОтправки;
	ЗаписьОтпр.Отправлен = Кор.Отправлен;
	ЗаписьОтпр.Основание = Кор.Ссылка;
	ЗаписьОтпр.ВидДоставки = Кор.ВидДоставки;
	ЗаписьОтпр.Записать();
		
КонецПроцедуры //ЗаписатьОтправленныйДокумент()

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
Если НЕ ЗначениеЗаполнено(Объект.ДатаОтправки) Тогда
	НаборЗаписей = РегистрыСведений.удуНеотправленныеИсхДокументы.СоздатьНаборЗаписей();
	
	Для Каждого Кор Из Объект.Получатели Цикл
		Запрос = Новый Запрос(
	 "ВЫБРАТЬ
	 |	удуНеотправленныеИсхДокументы.Документ
	 |ИЗ
	 |	РегистрСведений.удуНеотправленныеИсхДокументы КАК удуНеотправленныеИсхДокументы
	 |ГДЕ
	 |	удуНеотправленныеИсхДокументы.Документ = &Документ
	 |	И удуНеотправленныеИсхДокументы.Получатель = &Получатель
	 |	И удуНеотправленныеИсхДокументы.Адресат = &Адресат
	 |	И удуНеотправленныеИсхДокументы.ОтправкаДокумента =&ОтправкаДокумента"
	);
	Запрос.УстановитьПараметр("Документ",Объект.Основание);
	Запрос.УстановитьПараметр("Получатель",Кор.Получатель);
	Запрос.УстановитьПараметр("Адресат",Кор.Адресат);
	Запрос.УстановитьПараметр("ОтправкаДокумента",Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Запись = НаборЗаписей.Добавить();
		Запись.Документ = Объект.Основание;
		Запись.Получатель = Кор.Получатель;
		Запись.Адресат = Кор.Адресат;
		Запись.ВидДоставки = Кор.ВидДоставки;
		Запись.ОтправкаДокумента = Объект.Ссылка;
	КонецЕсли;
	
		Запрос = Новый Запрос (
		"ВЫБРАТЬ
		|	удуОтправленныеДокументы.Документ
		|ИЗ
		|	РегистрСведений.удуОтправленныеДокументы КАК удуОтправленныеДокументы
		|ГДЕ
		|	удуОтправленныеДокументы.Документ = &Документ
		|	И удуОтправленныеДокументы.Корреспондент = &Корреспондент
		|	И удуОтправленныеДокументы.Адресат = &Адресат
		|	И удуОтправленныеДокументы.Основание = &Основание"
		);
		Запрос.УстановитьПараметр("Документ",Объект.Основание);
		Запрос.УстановитьПараметр("Корреспондент",Кор.Получатель);
		Запрос.УстановитьПараметр("Адресат",Кор.Адресат);
		Запрос.УстановитьПараметр("Основание",Объект.Ссылка);
		Результат = Запрос.Выполнить();
		
		Пар = Новый Структура();
		Пар.Вставить("Основание",Объект.Основание);
		Пар.Вставить("Получатель",Кор.Получатель);
		Пар.Вставить("Адресат",Кор.Адресат);
		Пар.Вставить("ВидДоставки",Кор.ВидДоставки);
		Пар.Вставить("Ссылка",Объект.Ссылка);
		Пар.Вставить("ДатаОтправки",Объект.ДатаОтправки);
		Пар.Вставить("Отправлен",Ложь);
			
		Если НЕ Результат.Пустой() Тогда
			ЗаписатьОтправленныйДокумент(Пар);
		КонецЕсли;
		ОбновитьСписокНеотправленных(Пар);
	КонецЦикла;
	НаборЗаписей.Записать(Ложь);
Иначе
	Для Каждого Кор Из Объект.Получатели Цикл
		Пар = Новый Структура();
			Пар.Вставить("Основание",Объект.Основание);
			Пар.Вставить("Получатель",Кор.Получатель);
			Пар.Вставить("Адресат",Кор.Адресат);
			Пар.Вставить("ВидДоставки",Кор.ВидДоставки);
			Пар.Вставить("Ссылка",Объект.Ссылка);
			Пар.Вставить("ДатаОтправки",Объект.ДатаОтправки);
			Пар.Вставить("Отправлен",Истина);
			ЗаписатьОтправленныйДокумент(Пар);
			ОбновитьСписокНеотправленных(Пар);
	КонецЦикла;
КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВидДоставкиПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ВидДоставки) Тогда
		Результат = Вопрос("Заменить вид доставки для всех документов на значение по умолчанию?",РежимДиалогаВопрос.ОКОтмена);
		Если Результат = КодВозвратаДиалога.ОК Тогда
			Для Каждого Элем Из Объект.Получатели Цикл
				Элем.ВидДоставки = ВидДоставки;
			КонецЦикла;
		КонецЕсли;	
	Иначе
		Вопрос("Значение вида доставки по умолчанию не задано",РежимДиалогаВопрос.ОК);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда 
		Закрыть();	
	КонецЕсли;
	
КонецПроцедуры


	

