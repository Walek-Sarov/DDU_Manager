
//////////////////////////////////////////////////////////////////////////////// 
// ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

&НаКлиенте
Процедура УстановитьВидимость()
	
	Если Объект.ВидКорреспондента = ВидыКорреспондентовФизЛицо Тогда
		Элементы.ГруппаЮрФизЛицо.ТекущаяСтраница = Элементы.ГруппаКакФизЛицо;
	ИначеЕсли Объект.ВидКорреспондента = ВидыКорреспондентовЮрЛицо Тогда
		Элементы.ГруппаЮрФизЛицо.ТекущаяСтраница = Элементы.ГруппаКакЮрЛицо;
	Иначе
		Элементы.ГруппаЮрФизЛицо.ТекущаяСтраница = Элементы.ГруппаКакРодитель;
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ИзменитьКонтактнуюИнформацию()
	
	массРеквизитов = Новый Массив;
	Для Каждого ДопРеквизит Из ЭтаФорма.__КИ_ОписаниеДополнительныхРеквизитов Цикл
		массРеквизитов.Добавить(ДопРеквизит.ИмяРеквизита);
	КонецЦикла;	
	массРеквизитов.Добавить("__КИ_ОписаниеДополнительныхРеквизитов");
	ЭтаФорма.ИзменитьРеквизиты(,массРеквизитов);
	
	Для Каждого ДопРеквизит Из массРеквизитов Цикл
		Элемент = ЭтаФорма.Элементы.Найти(ДопРеквизит);
		Если Элемент <> Неопределено Тогда 
			ЭтаФорма.Элементы.Удалить(Элемент);
		КонецЕсли;	
	КонецЦикла;	
		
	// УДУ
	Если Объект.ВидКорреспондента = ВидыКорреспондентовФизЛицо Тогда 
		УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект.ФизЛицо, "ГруппаКонтактнаяИнформация");
	ИначеЕсли Объект.ВидКорреспондента = ВидыКорреспондентовРодитель Тогда 
		УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект.удуРодитель, "ГруппаКонтактнаяИнформация");
	Иначе
		УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаКонтактнаяИнформация");
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ЗагрузитьКонтактнуюИнформацию(ОбъектКИ)
	
	Объект.КонтактнаяИнформация.Загрузить(ОбъектКИ.КонтактнаяИнформация.Выгрузить());
	ИзменитьКонтактнуюИнформацию();	
	
КонецПроцедуры	

&НаСервере
Процедура ОчиститьСубъекты()
	Объект.ФизЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
	Объект.удуРодитель = Справочники.удуРодители.ПустаяСсылка();
	Объект.КонтактнаяИнформация.Очистить();
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
// 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидыКорреспондентовФизЛицо = Перечисления.ВидыКорреспондентов.ФизЛицо;
	ВидыКорреспондентовЮрЛицо = Перечисления.ВидыКорреспондентов.ЮрЛицо;
	ВидыКорреспондентовРодитель = Перечисления.ВидыКорреспондентов.Родитель;
	
	ВидКорреспондента = Объект.ВидКорреспондента;
	
	// Обработчик механизма "Свойства"
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаДополнительныеРеквизиты");
	
	// УДУ
	Если Объект.ВидКорреспондента = ВидыКорреспондентовФизЛицо Тогда 
		Если ЗначениеЗаполнено(Объект.ФизЛицо) Тогда 
			Объект.КонтактнаяИнформация.Загрузить(Объект.ФизЛицо.КонтактнаяИнформация.Выгрузить());
		КонецЕсли;	
		УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект.ФизЛицо, "ГруппаКонтактнаяИнформация");
		
	ИначеЕсли Объект.ВидКорреспондента = ВидыКорреспондентовРодитель Тогда 
		Если ЗначениеЗаполнено(Объект.удуРодитель) Тогда 
			Объект.КонтактнаяИнформация.Загрузить(Объект.удуРодитель.КонтактнаяИнформация.Выгрузить());
		КонецЕсли;	
		УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект.удуРодитель, "ГруппаКонтактнаяИнформация");
		
	Иначе
		УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаКонтактнаяИнформация");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Обработчик механизма "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	
	Если (ИмяСобытия = "ИзмененоФизическоеЛицо") 
	   И (Параметр = Объект.ФизЛицо) 
	   И (Объект.ВидКорреспондента = ВидыКорреспондентовФизЛицо) Тогда 
	   
		ЗагрузитьКонтактнуюИнформацию(Объект.ФизЛицо);
		
	ИначеЕсли (ИмяСобытия = "ИзмененУдуРодитель") 
	   И (Параметр = Объект.удуРодитель) 
	   И (Объект.ВидКорреспондента = ВидыКорреспондентовРодитель) Тогда
		ЗагрузитьКонтактнуюИнформацию(Объект.удуРодитель);
	КонецЕсли;		
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик механизма "Свойства"
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// Обработчик подсистемы "Контактная информация"
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	
	Если (ТекущийОбъект.ВидКорреспондента = ВидыКорреспондентовФизЛицо) Тогда 
		Если ТекущийОбъект.ФизЛицо.Пустая() Тогда 
			ОбъектФизЛицо = Справочники.ФизическиеЛица.СоздатьЭлемент();
			ОбъектФизЛицо.Наименование = ТекущийОбъект.Наименование;
			ОбъектФизЛицо.КонтактнаяИнформация.Загрузить(ТекущийОбъект.КонтактнаяИнформация.Выгрузить());
			ОбъектФизЛицо.Записать();
			ТекущийОбъект.ФизЛицо = ОбъектФизЛицо.Ссылка;
		Иначе
			ОбъектФизЛицо = ТекущийОбъект.ФизЛицо.ПолучитьОбъект();
			ЗаблокироватьДанныеДляРедактирования(ОбъектФизЛицо.Ссылка);
			ОбъектФизЛицо.КонтактнаяИнформация.Загрузить(ТекущийОбъект.КонтактнаяИнформация.Выгрузить());
			ОбъектФизЛицо.Записать();
		КонецЕсли;
	ИначеЕсли (ТекущийОбъект.ВидКорреспондента = ВидыКорреспондентовРодитель) Тогда 
		Если Не ТекущийОбъект.удуРодитель.Пустая() Тогда
			ОбъектУдуРодитель = ТекущийОбъект.удуРодитель.ПолучитьОбъект();
			ЗаблокироватьДанныеДляРедактирования(ОбъектУдуРодитель.Ссылка);
			ОбъектУдуРодитель.КонтактнаяИнформация.Загрузить(ТекущийОбъект.КонтактнаяИнформация.Выгрузить());
			ОбъектУдуРодитель.Записать();
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Объект.ФизЛицо) Тогда 
		ФизЛицо = "Сведения о физическом лице " + Строка(Объект.ФизЛицо);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.удуРодитель) Тогда 
		ФизЛицо = "Сведения о родителе " + Строка(Объект.удуРодитель);
	КонецЕсли;
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
// 

&НаКлиенте
Процедура ВидКорреспондентаПриИзменении(Элемент)
	
	Если Объект.ВидКорреспондента <> ВидКорреспондента Тогда

		ОчиститьСубъекты();
		
		ИзменитьКонтактнуюИнформацию();
	
		УстановитьВидимость();
	
		// Обработчик механизма "Свойства"
		ОбновитьЭлементыДополнительныхРеквизитов();
		
		ВидКорреспондента = Объект.ВидКорреспондента;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура удуРодительПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.удуРодитель) Тогда
		ЗагрузитьКонтактнуюИнформацию(Объект.удуРодитель);
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.ПолноеНаименование) Тогда 
		Объект.ПолноеНаименование = Объект.Наименование;
	КонецЕсли;	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ МЕХАНИЗМА СВОЙСТВ

&НаКлиенте
Процедура РедактироватьСоставСвойствВыполнить()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "КОНТАКТНАЯ ИНФОРМАЦИЯ"

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)	
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтаФорма, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтаФорма, Элемент, Модифицированность, СтандартнаяОбработка);
	
КонецПроцедуры



