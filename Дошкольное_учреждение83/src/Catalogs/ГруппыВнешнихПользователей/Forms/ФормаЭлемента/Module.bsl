////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбработатьИнтерфейсРолей(
		"НастроитьИнтерфейсРолейПриСозданииФормы", ЗначениеЗаполнено(Объект.Ссылка));
	
	// Подготовка вспомогательных данных.
	ЗаполнитьСписокТиповОбъектовАвторизации();
	
	Если Объект.Ссылка = Справочники.ГруппыВнешнихПользователей.ПустаяСсылка()
	   И Объект.Родитель = Справочники.ГруппыВнешнихПользователей.ВсеВнешниеПользователи Тогда
		
		Объект.Родитель = Справочники.ГруппыВнешнихПользователей.ПустаяСсылка();
	КонецЕсли;
	
	ОпределитьДействияВФорме();
	
	// Установка постоянной доступности свойств.
	
	Элементы.Наименование.Видимость     = ЗначениеЗаполнено(ДействияВФорме.СвойстваЭлемента);
	Элементы.Родитель.Видимость         = ЗначениеЗаполнено(ДействияВФорме.СвойстваЭлемента);
	Элементы.Комментарий.Видимость      = ЗначениеЗаполнено(ДействияВФорме.СвойстваЭлемента);
	Элементы.Состав.Видимость           = ЗначениеЗаполнено(ДействияВФорме.СоставГруппы);
	Элементы.ОтображениеРолей.Видимость = ЗначениеЗаполнено(ДействияВФорме.Роли);
	
	ЭтоГруппаВсеВнешниеПользователи = 
		Объект.Ссылка = Справочники.ГруппыВнешнихПользователей.ВсеВнешниеПользователи;
	
	Если ЭтоГруппаВсеВнешниеПользователи Тогда
		Элементы.Наименование.ТолькоПросмотр = Истина;
		Элементы.Родитель.ТолькоПросмотр     = Истина;
		Элементы.Комментарий.ТолькоПросмотр  = Истина;
		Элементы.ВнешниеПользователиГруппы.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если ТолькоПросмотр
	 ИЛИ НЕ ЭтоГруппаВсеВнешниеПользователи
	     И ДействияВФорме.Роли             <> "Редактирование"
	     И ДействияВФорме.СоставГруппы     <> "Редактирование"
	     И ДействияВФорме.СвойстваЭлемента <> "Редактирование" Тогда
		
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если ДействияВФорме.СвойстваЭлемента <> "Редактирование" Тогда
		Элементы.Наименование.ТолькоПросмотр = Истина;
		Элементы.Родитель.ТолькоПросмотр     = Истина;
		Элементы.Комментарий.ТолькоПросмотр  = Истина;
	КонецЕсли;
	
	Если ДействияВФорме.СоставГруппы <> "Редактирование" Тогда
		Элементы.ВнешниеПользователиГруппы.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	ОбработатьИнтерфейсРолей(
		"УстановитьТолькоПросмотрРолей",
		    ПользователиПереопределяемый.ЗапретРедактированияРолей()
		ИЛИ ДействияВФорме.Роли <> "Редактирование");
	
	УстановитьДоступностьСвойств(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ГруппыВнешнихПользователей", Новый Структура, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОбработатьИнтерфейсРолей("НастроитьИнтерфейсРолейПриЗагрузкеНастроек", Настройки);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	Объект.ВсеОбъектыАвторизации = Ложь;
	
	УстановитьДоступностьСвойств(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РодительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ВыборРодителя");
	
	ОткрытьФорму("Справочник.ГруппыВнешнихПользователей.ФормаВыбора", ПараметрыФормы, Элементы.Родитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТипаОбъектовАвторизацииПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ПредставлениеТипаОбъектовАвторизации) Тогда
		УдалитьНеТипичныеВнешниеПользователи();
	Иначе
		Объект.ВсеОбъектыАвторизации  = Ложь;
		Объект.ТипОбъектовАвторизации = Неопределено;
	КонецЕсли;
	
	УстановитьДоступностьСвойств(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТипаОбъектовАвторизацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранныйЭлемент = ВыбратьИзСписка(
		ТипыОбъектовАвторизации,
		Элемент,
		ТипыОбъектовАвторизации.НайтиПоЗначению(Объект.ТипОбъектовАвторизации));
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		
		Модифицированность = Истина;
		Объект.ТипОбъектовАвторизации        = ВыбранныйЭлемент.Значение;
		ПредставлениеТипаОбъектовАвторизации = ВыбранныйЭлемент.Представление;
		
		ПредставлениеТипаОбъектовАвторизацииПриИзменении(Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеОбъектыАвторизацииПриИзменении(Элемент)
	
	Если Объект.ВсеОбъектыАвторизации Тогда
		Объект.Состав.Очистить();
	КонецЕсли;
	
	УстановитьДоступностьСвойств(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ Роли

////////////////////////////////////////////////////////////////////////////////
// Для работы интерфейса ролей

&НаКлиенте
Процедура РолиПометкаПриИзменении(Элемент)
	
	Если Элементы.Роли.ТекущиеДанные <> Неопределено Тогда
		ОбработатьИнтерфейсРолей("ОбновитьСоставРолей");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ Состав

&НаКлиенте
Процедура СоставОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для каждого Значение Из ВыбранноеЗначение Цикл
			ОбработкаВыбораВнешнегоПользователя(Значение);
		КонецЦикла;
	Иначе
		ОбработкаВыбораВнешнегоПользователя(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставВнешнийПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбратьПодобратьПользователей(Ложь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПодобратьВнешнихПользователей(Команда)

	ВыбратьПодобратьПользователей(Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Для работы интерфейса ролей

&НаКлиенте
Процедура ПоказатьТолькоВыбранныеРоли(Команда)
	
	ОбработатьИнтерфейсРолей("ТолькоВыбранныеРоли");
	ПользователиСлужебныйКлиент.РазвернутьПодсистемыРолей(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаРолейПоПодсистемам(Команда)
	
	ОбработатьИнтерфейсРолей("ГруппировкаПоПодсистемам");
	ПользователиСлужебныйКлиент.РазвернутьПодсистемыРолей(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьРоли(Команда)
	
	ОбработатьИнтерфейсРолей("ОбновитьСоставРолей", "ВключитьВсе");
	
	ПользователиСлужебныйКлиент.РазвернутьПодсистемыРолей(ЭтаФорма, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьРоли(Команда)
	
	ОбработатьИнтерфейсРолей("ОбновитьСоставРолей", "ИсключитьВсе");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ОпределитьДействияВФорме()
	
	ДействияВФорме = Новый Структура;
	
	// "", "Просмотр", "Редактирование".
	ДействияВФорме.Вставить("Роли", "");
	
	// "", "Просмотр", "Редактирование".
	ДействияВФорме.Вставить("СоставГруппы", "");
	
	// "", "Просмотр", "Редактирование".
	ДействияВФорме.Вставить("СвойстваЭлемента", "");
	
	Если Пользователи.ЭтоПолноправныйПользователь()
	 ИЛИ ПравоДоступа("Добавление", Метаданные.Справочники.Пользователи) Тогда
		// Администратор.
		ДействияВФорме.Роли             = "Редактирование";
		ДействияВФорме.СоставГруппы     = "Редактирование";
		ДействияВФорме.СвойстваЭлемента = "Редактирование";
		
	ИначеЕсли РольДоступна("ДобавлениеИзменениеВнешнихПользователей") Тогда
		// Менеджер внешних пользователей.
		ДействияВФорме.Роли             = "";
		ДействияВФорме.СоставГруппы     = "Редактирование";
		ДействияВФорме.СвойстваЭлемента = "Редактирование";
		
	Иначе
		// Читатель внешних пользователей.
		ДействияВФорме.Роли             = "";
		ДействияВФорме.СоставГруппы     = "Просмотр";
		ДействияВФорме.СвойстваЭлемента = "Просмотр";
	КонецЕсли;
	
	ПользователиПереопределяемый.ИзменитьДействияВФорме(Объект.Ссылка, ДействияВФорме);
	
	// Проверка имен действий в форме
	Если Найти(", Просмотр, Редактирование,", ", " + ДействияВФорме.Роли + ",") = 0 Тогда
		ДействияВФорме.Роли = "";
	ИначеЕсли ПользователиПереопределяемый.ЗапретРедактированияРолей() Тогда
		ДействияВФорме.Роли = "";
	КонецЕсли;
	Если Найти(", Просмотр, Редактирование,", ", " + ДействияВФорме.СоставГруппы + ",") = 0 Тогда
		ДействияВФорме.СвойстваПользователяИБ = "";
	КонецЕсли;
	Если Найти(", Просмотр, Редактирование,", ", " + ДействияВФорме.СвойстваЭлемента + ",") = 0 Тогда
		ДействияВФорме.СвойстваЭлемента = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьСвойств(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.Состав.ТолькоПросмотр = Форма.Объект.ВсеОбъектыАвторизации;
	
	ДоступностьКоманд =
		НЕ Форма.ТолькоПросмотр
		И НЕ Элементы.ВнешниеПользователиГруппы.ТолькоПросмотр
		И НЕ Элементы.Состав.ТолькоПросмотр
		И Элементы.Состав.Доступность;
		
	Элементы.СоставПодобрать.Доступность                = ДоступностьКоманд;
	Элементы.КонтекстноеМенюСоставПодобрать.Доступность = ДоступностьКоманд;
	Элементы.СоставДобавить.Доступность                 = ДоступностьКоманд;
	Элементы.КонтекстноеМенюСоставДобавить.Доступность  = ДоступностьКоманд;
	
	Элементы.ВсеОбъектыАвторизации.Доступность =
		ЗначениеЗаполнено(Форма.ПредставлениеТипаОбъектовАвторизации)
		И НЕ ЗначениеЗаполнено(Форма.Объект.Родитель);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокТиповОбъектовАвторизации()
	
	ТипыСсылокОбъектовАвторизации =
		Метаданные.Справочники.ВнешниеПользователи.Реквизиты.ОбъектАвторизации.Тип.Типы();
	
	Для каждого ТипСсылкиОбъектаАвторизации ИЗ ТипыСсылокОбъектовАвторизации Цикл
		МетаданныеТипа = Метаданные.НайтиПоТипу(ТипСсылкиОбъектаАвторизации);
		
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(ТипСсылкиОбъектаАвторизации);
		ОписаниеТипаСсылки = Новый ОписаниеТипов(МассивТипов);
		
		ТипыОбъектовАвторизации.Добавить(
			ОписаниеТипаСсылки.ПривестиЗначение(Неопределено), МетаданныеТипа.Синоним);
	КонецЦикла;
	
	НайденныйЭлемент = ТипыОбъектовАвторизации.НайтиПоЗначению(Объект.ТипОбъектовАвторизации);
	
	ПредставлениеТипаОбъектовАвторизации = ?(
		НайденныйЭлемент = Неопределено, "", НайденныйЭлемент.Представление);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьНеТипичныеВнешниеПользователи()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТипОбъектовАвторизации", ТипЗнч(Объект.ТипОбъектовАвторизации));
	Запрос.УстановитьПараметр(
		"ВыбранныеВнешниеПользователи",
		Объект.Состав.Выгрузить().ВыгрузитьКолонку("ВнешнийПользователь"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВнешниеПользователи.Ссылка
	|ИЗ
	|	Справочник.ВнешниеПользователи КАК ВнешниеПользователи
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ВнешниеПользователи.ОбъектАвторизации) <> &ТипОбъектовАвторизации
	|	И ВнешниеПользователи.Ссылка В(&ВыбранныеВнешниеПользователи)";
	
	НачатьТранзакцию();
	Попытка
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НайденныеСтроки = Объект.Состав.НайтиСтроки(
				Новый Структура("ВнешнийПользователь", Выборка.Ссылка));
			
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				Объект.Состав.Удалить(Объект.Состав.Индекс(НайденнаяСтрока));
			КонецЦикла;
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПодобратьПользователей(Подобрать)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ТекущаяСтрока", ?(
		Элементы.Состав.ТекущиеДанные = Неопределено,
		Неопределено,
		Элементы.Состав.ТекущиеДанные.ВнешнийПользователь));
	
	Если Подобрать Тогда
		ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	КонецЕсли;
	
	Если Объект.ТипОбъектовАвторизации <> Неопределено Тогда
		ПараметрыФормы.Вставить("ТипОбъектовАвторизации", Объект.ТипОбъектовАвторизации);
	КонецЕсли;
	
	ОткрытьФорму(
		"Справочник.ВнешниеПользователи.ФормаВыбора",
		ПараметрыФормы,
		?(Подобрать,
			Элементы.Состав,
			Элементы.СоставВнешнийПользователь));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораВнешнегоПользователя(ВыбранноеЗначение)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ВнешниеПользователи") Тогда
		
		Отбор = Новый Структура("ВнешнийПользователь", ВыбранноеЗначение);
		Если Объект.Состав.НайтиСтроки(Отбор).Количество() = 0 Тогда
			
			Объект.Состав.Добавить().ВнешнийПользователь = ВыбранноеЗначение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Для работы интерфейса ролей

&НаСервере
Процедура ОбработатьИнтерфейсРолей(Действие, ОсновнойПараметр = Неопределено)
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("ОсновнойПараметр",      ОсновнойПараметр);
	ПараметрыДействия.Вставить("Форма",                 ЭтаФорма);
	ПараметрыДействия.Вставить("КоллекцияРолей",        Объект.Роли);
	ПараметрыДействия.Вставить("ТипПользователя",       Перечисления.ТипыПользователей.ВнешнийПользователь);
	ПараметрыДействия.Вставить("СкрытьРольПолныеПрава", Истина);
	
	ПользователиСлужебный.ОбработатьИнтерфейсРолей(Действие, ПараметрыДействия);
	
КонецПроцедуры
