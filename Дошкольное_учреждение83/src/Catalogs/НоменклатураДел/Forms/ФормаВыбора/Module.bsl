
&НаКлиенте
Перем ПерваяАктивизация;

//////////////////////////////////////////////////////////////////////////////// 
// ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

&НаКлиенте
Процедура ОбработкаОжидания()
	
	Если Элементы.Разделы.ТекущаяСтрока <> Неопределено Тогда 
		Список.Параметры.УстановитьЗначениеПараметра("Раздел", Элементы.Разделы.ТекущаяСтрока);
	КонецЕсли;	
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
// 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ТекущаяСтрока") И ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда 
		РазделПриОткрытии = Параметры.ТекущаяСтрока.Раздел;
		ПоказыватьДелаЗа = Параметры.ТекущаяСтрока.Год;
		Организация = Параметры.ТекущаяСтрока.Организация;
	Иначе	
		РазделПриОткрытии = Справочники.РазделыНоменклатурыДел.ПустаяСсылка();
		
		Если ЗначениеЗаполнено(Параметры.Год) Тогда 
			ПоказыватьДелаЗа = Параметры.Год;
		Иначе
			ПоказыватьДелаЗа = Год(ТекущаяДата());
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.Организация) Тогда 
			Организация = Параметры.Организация;
		Иначе
			Организация = РаботаСОрганизациями.ПолучитьОрганизациюПоУмолчанию();
		КонецЕсли;
	КонецЕсли;
	
	// год
	Список.Параметры.УстановитьЗначениеПараметра("Год", ПоказыватьДелаЗа);
	Разделы.Параметры.УстановитьЗначениеПараметра("Год", ПоказыватьДелаЗа);
	
	// организация
	Если ЗначениеЗаполнено(Организация) Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаНаРавенство(Список.Отбор,
			Новый ПолеКомпоновкиДанных("Организация"), 
			Организация);
			
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаНаРавенство(Разделы.Отбор,
			Новый ПолеКомпоновкиДанных("Организация"), 
			Организация);	
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьОтборУСписка(Список.Отбор,
			Новый ПолеКомпоновкиДанных("Организация"));
			
		ОбщегоНазначенияКлиентСервер.УдалитьОтборУСписка(Разделы.Отбор,
			Новый ПолеКомпоновкиДанных("Организация"));	
	КонецЕсли;
	
	// раздел
	Элементы.Разделы.ТекущаяСтрока = РазделПриОткрытии;
	Список.Параметры.УстановитьЗначениеПараметра("Раздел", РазделПриОткрытии);
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
// 

&НаКлиенте
Процедура ПоказыватьДелаЗаПриИзменении(Элемент)
	
	Список.Параметры.УстановитьЗначениеПараметра("Год", ПоказыватьДелаЗа);
	Разделы.Параметры.УстановитьЗначениеПараметра("Год", ПоказыватьДелаЗа);
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыПриАктивизацииСтроки(Элемент)
	
	Если ПерваяАктивизация = Истина Или ПерваяАктивизация = Неопределено Тогда
		ПерваяАктивизация = Ложь;
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ОбработкаОжидания", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Организация) Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаНаРавенство(Список.Отбор,
			Новый ПолеКомпоновкиДанных("Организация"), 
			Организация);
			
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаНаРавенство(Разделы.Отбор,
			Новый ПолеКомпоновкиДанных("Организация"), 
			Организация);	
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьОтборУСписка(Список.Отбор,
			Новый ПолеКомпоновкиДанных("Организация"));
			
		ОбщегоНазначенияКлиентСервер.УдалитьОтборУСписка(Разделы.Отбор,
			Новый ПолеКомпоновкиДанных("Организация"));	
	КонецЕсли;
	
КонецПроцедуры
