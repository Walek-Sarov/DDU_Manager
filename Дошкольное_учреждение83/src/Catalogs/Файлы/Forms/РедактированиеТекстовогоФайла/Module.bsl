&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Файл = Параметры.Файл;
	ДанныеФайла = Параметры.ДанныеФайла;
	ИмяОткрываемогоФайла = Параметры.ИмяОткрываемогоФайла;
	
	КодФайла = Файл.Код;
	
	Если ДанныеФайла.РедактируетТекущийПользователь Тогда
		РежимРедактирования = Истина;
	КонецЕсли;	
	
	Если ДанныеФайла.Версия <> ДанныеФайла.ТекущаяВерсия Тогда
		РежимРедактирования = Ложь;
	КонецЕсли;	
	
	Элементы.Текст.ТолькоПросмотр = Не РежимРедактирования;
	Элементы.ПоказатьОтличия.Доступность = РежимРедактирования;
	Элементы.Редактировать.Доступность = Не РежимРедактирования;
	Элементы.ЗакончитьРедактирование.Доступность = РежимРедактирования;
	Элементы.ЗаписатьИЗакрыть.Доступность = РежимРедактирования;
	Элементы.Записать.Доступность = РежимРедактирования;
	
	Если ДанныеФайла.Версия <> ДанныеФайла.ТекущаяВерсия Тогда
		Элементы.Редактировать.Доступность = Ложь;
	КонецЕсли;	
	
	ЗаголовокСтрока = ФайловыеФункцииСлужебныйКлиентСервер.ПолучитьИмяСРасширением(ДанныеФайла.ПолноеНаименованиеВерсии, 
		ДанныеФайла.Расширение);
	Если Не РежимРедактирования Тогда
		ЗаголовокСтрока = ЗаголовокСтрока + НСтр("ru=' (только просмотр)'");
	КонецЕсли;
	Заголовок = ЗаголовокСтрока;
	
	Если ЗначениеЗаполнено(ДанныеФайла.Версия) Тогда
		КодировкаТекстаФайла = РаботаСФайламиВызовСервера.ПолучитьКодировкуВерсииФайла(ДанныеФайла.Версия);
		
		Если ЗначениеЗаполнено(КодировкаТекстаФайла) Тогда
			СписокКодировок = РаботаСФайламиКлиентСервер.ПолучитьСписокКодировок();
			ЭлементСписка = СписокКодировок.НайтиПоЗначению(КодировкаТекстаФайла);
			Если ЭлементСписка = Неопределено Тогда
				КодировкаПредставление = КодировкаТекстаФайла;
			Иначе	
				КодировкаПредставление = ЭлементСписка.Представление;
			КонецЕсли;
		Иначе	
			КодировкаПредставление = НСтр("ru='По умолчанию'");
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	КлючУникальности = КодФайла;
	
	КодировкаТекстаДляЧтения = КодировкаТекстаФайла;
	Если Не ЗначениеЗаполнено(КодировкаТекстаДляЧтения) Тогда
		КодировкаТекстаДляЧтения = Неопределено;
	КонецЕсли;	
	
	Текст.Прочитать(ИмяОткрываемогоФайла, КодировкаТекстаДляЧтения);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКак(Команда)
	
	// выбираем путь к файлу на диске
	ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ВыборФайла.МножественныйВыбор = Ложь;
	ИмяСРасширением = ФайловыеФункцииСлужебныйКлиентСервер.ПолучитьИмяСРасширением(ДанныеФайла.ПолноеНаименованиеВерсии, 
		ДанныеФайла.Расширение);
	ВыборФайла.ПолноеИмяФайла = ИмяСРасширением;
	Фильтр = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Все файлы (*.%1)|*.%1'"), ДанныеФайла.Расширение, ДанныеФайла.Расширение);
	ВыборФайла.Фильтр = Фильтр;
	
	Если ВыборФайла.Выбрать() Тогда
		
		ВыбранноеПолноеИмяФайла = ВыборФайла.ПолноеИмяФайла;
		
		КодировкаТекстаДляЗаписи = КодировкаТекстаФайла;
		Если Не ЗначениеЗаполнено(КодировкаТекстаДляЗаписи) Тогда
			КодировкаТекстаДляЗаписи = Неопределено;
		КонецЕсли;	
		
		Текст.Записать(ВыбранноеПолноеИмяФайла, КодировкаТекстаДляЗаписи);
		
		Состояние(НСтр("ru = 'Файл успешно сохранен'"), , ВыбранноеПолноеИмяФайла);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточку(Команда)
	
	ОткрытьЗначение(Файл);
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнийРедактор(Команда)
	
	ЗаписатьТекст();
	РаботаСФайламиКлиент.ВыполнитьЗапускПриложения(ИмяОткрываемогоФайла);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	
	КомандыРаботыСФайламиКлиент.Редактировать(Файл, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Файл" И Параметр.Событие = "ФайлРедактировался" И Источник = Файл Тогда
		РежимРедактирования = Истина;
		УстановитьДоступностьКоманд();
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_Файл" И Параметр.Событие = "ДанныеФайлаИзменены" И Источник = Файл Тогда
		
		ДанныеФайла = РаботаСФайламиВызовСервера.ПолучитьДанныеФайла(Файл);
		
		РежимРедактирования = Ложь;
		
		Если ДанныеФайла.РедактируетТекущийПользователь Тогда
			РежимРедактирования = Истина;
		КонецЕсли;	
		
		Если ДанныеФайла.Версия <> ДанныеФайла.ТекущаяВерсия Тогда
			РежимРедактирования = Ложь;
		КонецЕсли;	
		
		УстановитьДоступностьКоманд();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьТекст();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьТекст()
	
	Если Модифицированность Тогда
		
		КодировкаТекстаДляЗаписи = КодировкаТекстаФайла;
		Если Не ЗначениеЗаполнено(КодировкаТекстаДляЗаписи) Тогда
			КодировкаТекстаДляЗаписи = Неопределено;
		КонецЕсли;	
		
		Текст.Записать(ИмяОткрываемогоФайла, КодировкаТекстаДляЗаписи);
		Модифицированность = Ложь;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьРедактирование(Команда)
	
	ЗаписатьТекст();
    КомандыРаботыСФайламиКлиент.ЗакончитьРедактирование(Файл, УникальныйИдентификатор,
        Неопределено, Неопределено, Неопределено, Неопределено, 
        КодировкаТекстаФайла);
	РежимРедактирования = Ложь;
	УстановитьДоступностьКоманд();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		ИмяИРасширение = ФайловыеФункцииСлужебныйКлиентСервер.ПолучитьИмяСРасширением(ДанныеФайла.ПолноеНаименованиеВерсии, 
			ДанныеФайла.Расширение);
			
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru ='Файл ""%1"" был изменен.'"), ИмяИРасширение);
			
		ПараметрыФормы = Новый Структура("ТекстВопроса", ТекстВопроса);	
		КодВозврата = ОткрытьФормуМодально("Справочник.Файлы.Форма.ВопросПриВыходеИзТекстовогоРедактора", ПараметрыФормы);
		
		Если КодВозврата = "СохранитьИЗакончитьРедактирование" Тогда
			ЗаписатьТекст();
		    КомандыРаботыСФайламиКлиент.ЗакончитьРедактирование(Файл, УникальныйИдентификатор,
		        Неопределено, Неопределено, Неопределено, Неопределено, 
		        КодировкаТекстаФайла);
			Закрыть();
		ИначеЕсли КодВозврата = "СохранитьИзменения" Тогда
			ЗаписатьТекст();
			Закрыть();
		ИначеЕсли КодВозврата = "НеСохранять" Тогда
			Модифицированность = Ложь;
			Закрыть();
		ИначеЕсли КодВозврата = "Вернуться" Тогда
			Отказ = Истина;
		КонецЕсли;			
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтличия(Команда)
	
#Если Не ВебКлиент Тогда	
		
	СпособСравненияВерсийФайлов = ФайловыеФункцииСлужебныйКлиентСервер.ПерсональныеНастройкиРаботыСФайлами().СпособСравненияВерсийФайлов;
	
	Если СпособСравненияВерсийФайлов = Неопределено Тогда // первый вызов - еще не инициализирована настройка
		Результат = ОткрытьФормуМодально("Справочник.ВерсииФайлов.Форма.ФормаВыбораСпособаСравненияВерсий");
		
		Если Результат <> КодВозвратаДиалога.ОК Тогда
			Возврат;
		КонецЕсли;	
		
		СпособСравненияВерсийФайлов = ФайловыеФункцииСлужебныйКлиентСервер.ПерсональныеНастройкиРаботыСФайлами().СпособСравненияВерсийФайлов;					
	КонецЕсли;
	
	Если СпособСравненияВерсийФайлов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьТекст();
	
	ДанныеФайлаДляСохранения = РаботаСФайламиВызовСервера.ПолучитьДанныеФайлаДляСохранения(Файл, Неопределено, УникальныйИдентификатор);
	АдресФайла = ДанныеФайлаДляСохранения.НавигационнаяСсылкаТекущейВерсии;
	Если ДанныеФайла.ТекущаяВерсия <> ДанныеФайла.Версия Тогда
		АдресФайла = РаботаСФайламиВызовСервера.ПолучитьНавигационнуюСсылкуДляОткрытия(ДанныеФайла.Версия, УникальныйИдентификатор);
	КонецЕсли;
	
	ПутьКФайлу = ПолучитьИмяВременногоФайла(ДанныеФайла.Расширение);
	
	ПередаваемыеФайлы = Новый Массив;
	Описание = Новый ОписаниеПередаваемогоФайла(ПутьКФайлу, АдресФайла);
	ПередаваемыеФайлы.Добавить(Описание);
	
	// Сохраним Файл из БД на диск
	Если Не ПолучитьФайлы(ПередаваемыеФайлы,, ПутьКФайлу, Ложь) Тогда
		Возврат;
	КонецЕсли;
			
	РаботаСФайламиКлиент.СравнитьФайлы(ПутьКФайлу, ИмяОткрываемогоФайла, СпособСравненияВерсийФайлов);
		
#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКоманд()
	
	Элементы.Текст.ТолькоПросмотр = Не РежимРедактирования;
	Элементы.ПоказатьОтличия.Доступность = РежимРедактирования;
	Элементы.Редактировать.Доступность = Не РежимРедактирования;
	Элементы.ЗакончитьРедактирование.Доступность = РежимРедактирования;
	Элементы.ЗаписатьИЗакрыть.Доступность = РежимРедактирования;
	Элементы.Записать.Доступность = РежимРедактирования;
	
	ЗаголовокСтрока = ФайловыеФункцииСлужебныйКлиентСервер.ПолучитьИмяСРасширением(ДанныеФайла.ПолноеНаименованиеВерсии, 
		ДанныеФайла.Расширение);
	Если Не РежимРедактирования Тогда
		ЗаголовокСтрока = ЗаголовокСтрока + НСтр("ru=' (только просмотр)'");
	КонецЕсли;
	Заголовок = ЗаголовокСтрока;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьТекст()
	
	Текст.Прочитать(ИмяОткрываемогоФайла, КодировкаТекстаФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если Модифицированность Тогда
		ЗаписатьТекст();
	    КомандыРаботыСФайламиКлиент.ЗакончитьРедактирование(Файл, УникальныйИдентификатор,
	        Неопределено, Неопределено, Неопределено, Неопределено, 
	        КодировкаТекстаФайла);
		РежимРедактирования = Ложь;
		УстановитьДоступностьКоманд();
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКодировку(Команда)
	
	ПараметрыФормы = Новый Структура("ТекущаяКодировка", КодировкаТекстаФайла);
	КодВозврата = ОткрытьФормуМодально("Справочник.Файлы.Форма.ВыборКодировки", ПараметрыФормы);
	
	Если ТипЗнч(КодВозврата) = Тип("Структура") Тогда
		
		КодировкаТекстаФайла = КодВозврата.Значение;
		КодировкаПредставление = КодВозврата.Представление;
		
		ПрочитатьТекст();
		
		РаботаСФайламиВызовСервера.ЗаписатьКодировкуВерсииФайлаИИзвлеченныйТекст(ДанныеФайла.Версия, 
			КодировкаТекстаФайла, Текст.ПолучитьТекст());
			
	КонецЕсли;	
	
КонецПроцедуры

