////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Функция ПоместитьВХранилище(ЭлементДляХранилища) 
	Возврат ПоместитьВоВременноеХранилище(ЭлементДляХранилища, УникальныйИдентификатор);
КонецФункции

&НаСервере
Процедура ПодразделениеОрганизацииПриИзмененииСервер()
	
	удуФизическиеЛица.ОбработатьОтображениеВыбораИзСписковПоШтаномуРасписанию(ЭтаФорма);
	удуФизическиеЛица.ЗаполнитьРеквизитыПоШтатномуРасписанию(ЭтаФорма, ЭтаФорма.Объект);
	
КонецПроцедуры

&НаСервере
Функция ВыбратьИзШтатногоРасписанияОрганизации(ТипЭлемента)
		
	Возврат удуПроцедурыУправленияПерсоналом.ВыбратьИзШтатногоРасписанияОрганизации(ТипЭлемента, Объект.Организация, ?(ТипЭлемента = "Должность", Объект.ПодразделениеОрганизации, Объект.Должность));
	
КонецФункции


&НаСервере
Функция ПолучитьМассивФИОСервер(ФИО)
	
	Возврат удуФизическиеЛица.ПолучитьМассивФИО(ФИО);
	
КонецФункции

&НаСервере
Функция  ЗаполнитьНачальныеДанные(Знач ИсходныеДанные,ТипЗначенияСтрока)
	
	ТипЗначения=Тип(ТипЗначенияСтрока);
	НаборЗаписей = ДанныеФормыВЗначение(ИсходныеДанные, ТипЗначения);
	ТЗИсточник=НаборЗаписей.Выгрузить();
	СтруктураДанных=Новый Структура;
	
	Для Каждого Колонка из ТЗИсточник.Колонки цикл
		Если ТЗИсточник.Количество()=0 тогда
			Если Колонка.Имя="ФизЛицо" тогда
				ЗначениеДанных=?(ЗначениеЗаполнено(Объект.Ссылка),Объект.Ссылка,Неопределено);
			иначе
				ЗначениеДанных=Неопределено;
			КонецЕсли;
		Иначе    
			ЗначениеДанных=ТЗИсточник[0].Получить(ТЗИсточник.Колонки.Индекс(Колонка));
		КонецЕсли;
		СтруктураДанных.Вставить(Колонка.Имя,ЗначениеДанных);
	КонецЦикла;
	
	Адрес=ПоместитьВоВременноеХранилище(СтруктураДанных,ЭтаФорма.УникальныйИдентификатор);
	Возврат  Адрес;
	
КонецФункции

&НаСервере
Процедура ВыборФизлицаПриИзмененииСервер()
	
	// Сбрасываем ссылку на физлицо, если выбрали - создавать новое физлицо.
	Если Не ВыборФизлица И НЕ Объект.Физлицо.Пустая() Тогда
		Объект.Физлицо 		= Справочники.ФизическиеЛица.ПустаяСсылка();
		ЗначениеВДанныеФормы(Справочники.ФизическиеЛица.СоздатьЭлемент(),ФизлицоОбъект);
	ИначеЕсли ВыборФизлица И Объект.Физлицо.Пустая() Тогда
		ФизлицоОбъект.Наименование = "";
	КонецЕсли;
	
		
	УстановитьДоступностьРеквизитовФизлица();	
	Объект.Наименование = удуФизическиеЛица.УстановитьНаименованиеСотрудника(ФизЛицоОбъект.Наименование, Объект.ПостфиксНаименования);
	
	
	УстановитьЗаголовокОткрытьСправочникФизлиц();
	ЗначениеВДанныеФормы(РегистрыСведений.удуФИОФизЛиц.СоздатьНаборЗаписей(),мНаборЗаписейФИО);
	удуФизическиеЛица.ПрочитатьФИО(ЭтаФорма);
	удуФизическиеЛица.ПроверитьИННОформитьПолеВвода(ФизлицоОбъект.ИНН, Элементы.ФизлицоИННС);
	удуФизическиеЛица.ПроверитьСтраховойНомерПФРФизлицаОформитьПолеВвода(ФизлицоОбъект.СтраховойНомерПФР, Элементы.ФизлицоСтраховойНомерПФРС);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьИЗаголовокКнопкиИзмененияАктуальности()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Если Объект.Актуальность Тогда
			КоманднаяПанель.ПодчиненныеЭлементы.ФормаПоместитьИзвлечьВАрхив.Заголовок = "Поместить сотрудника в архив";
		Иначе
			КоманднаяПанель.ПодчиненныеЭлементы.ФормаПоместитьИзвлечьВАрхив.Заголовок = "Извлечь сотрудника из архива";
		КонецЕсли;
		КоманднаяПанель.ПодчиненныеЭлементы.ФормаПоместитьИзвлечьВАрхив.Видимость=Истина;
	Иначе
		КоманднаяПанель.ПодчиненныеЭлементы.ФормаПоместитьИзвлечьВАрхив.Видимость=Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ФормаЭлементаПриОткрытииСотрудника()
	
	
	
	// Запомним значения в переменных.
	мДатаДоговора = Объект.ДатаДоговора; // Для правильной автонумерации номера трудового договора.
		
	Если не ЗначениеЗаполнено(ЭтаФорма.Объект.Ссылка) Тогда
		
		УстановитьДоступностьРеквизитовФизлица();
		Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.СтраницаНовыйСотрудник;
		
		УстановитьЗаголовокОткрытьСправочникФизлиц();
		
		// Получим очередной код элемента.
		Объект.Код = Справочники.удуСотрудникиОрганизаций.ПолучитьОчереднойТабельныйНомер(Объект);
		
	Иначе
		
		Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.СтраницаСотрудник;
		мЕстьНачисления = удуФизическиеЛица.ЕстьНачисленияИлиПриемНаРаботу(Объект.ВидДоговора, Объект.Ссылка);
		Элементы.ОрганизацияС.ТолькоПросмотр  = мЕстьНачисления;
		Элементы.ВидДоговораС.ТолькоПросмотр  = мЕстьНачисления;
		Элементы.ВидЗанятостиС.ТолькоПросмотр = мЕстьНачисления;
		
		Элементы.РедактироватьФизлицоОтдельноС.Заголовок = "Более подробно о физическом лице " + ФизлицоОбъект.Наименование + "...";
		
		СформироватьПодменюВвестиДокумент();
		
		удуФизическиеЛица.ПроверитьИННОформитьПолеВвода(ФизлицоОбъект.ИНН, Элементы.ФизлицоИННС);
		удуФизическиеЛица.ПроверитьСтраховойНомерПФРФизлицаОформитьПолеВвода(ФизлицоОбъект.СтраховойНомерПФР, Элементы.ФизлицоСтраховойНомерПФРС);
		
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Элементы.Организация.ОтметкаНезаполненного     = Не ЗначениеЗаполнено(объект.Организация);
		Элементы.Организация.АвтоОтметкаНезаполненного = Истина;
		
	Иначе
		// Продублируем стратегию нумерации для поля Код1.
		Элементы.КодС.ТолькоПросмотр = Элементы.Код.ТолькоПросмотр;
		Если Элементы.КодС.ТолькоПросмотр Тогда
			Элементы.КодС.Подсказка = "Возможность редактирования Табельного № включается в меню ""Действия""";	
		Иначе
			Элементы.КодС.Подсказка = "";
		КонецЕсли;
		
		ТекущийЭлемент = Элементы.НаименованиеС;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьРеквизитовФизлица()
	
	ЭлементыФормы 	= ЭтаФорма.Элементы;
	ВыборФизлица	= (ЭтаФорма.ВыборФизлица=1);
	
	ЭлементыФормы.Физлицо.Видимость = ВыборФизлица;
	ЭлементыФормы.НаименованиеФизлица.Видимость = не ВыборФизлица;
	ЭлементыФормы.ФизлицоДатаРождения.ТолькоПросмотр = ВыборФизлица;
	ЭлементыФормы.ФизлицоПол.ТолькоПросмотр = ВыборФизлица;
	ЭлементыФормы.ФизлицоСтраховойНомерПФР.ТолькоПросмотр = ВыборФизлица;
	ЭлементыФормы.ФизлицоКодИМНС.ТолькоПросмотр = ВыборФизлица;
	ЭлементыФормы.ФизлицоИНН.ТолькоПросмотр = ВыборФизлица;
	
	Элементы.Фамилия.РедактированиеТекста=не ВыборФизлица;
	Элементы.Имя.РедактированиеТекста=не ВыборФизлица;
	Элементы.Отчество.РедактированиеТекста=не ВыборФизлица;
	
	ЦветКнопки=ЦветаСтиля.ЦветФонаКнопки;
	
	Если ВыборФизлица тогда
		Элементы.Фамилия.ЦветФона=ЦветаСтиля.ЦветФонаКнопки;
		Элементы.Имя.ЦветФона=ЦветаСтиля.ЦветФонаКнопки;
		Элементы.Отчество.ЦветФона=ЦветаСтиля.ЦветФонаКнопки;
	Иначе
		Цвет=Новый Цвет;
		Элементы.Фамилия.ЦветФона=Цвет;
		Элементы.Имя.ЦветФона=Цвет;
		Элементы.Отчество.ЦветФона=Цвет;
	КонецЕсли;

	
КонецПроцедуры // УстановитьДоступностьПоВИду()

&НаСервере
Процедура УстановитьЗаголовокОткрытьСправочникФизлиц()
	
	Если ВыборФизлица=1 Тогда
		Элементы.ОткрытьСправочникФизлиц.Заголовок = "Открыть справочник физических лиц для выбора...";
	Иначе
		Элементы.ОткрытьСправочникФизлиц.Заголовок = "Открыть справочник физических лиц...";
	КонецЕсли;	
	
КонецПроцедуры // УстановитьЗаголовокОткрытьСправочникФизлиц()

&НаСервере
Процедура УстановитьВидимостьЭУ()
	
	ЭтоТрудовойДоговор = (Объект.ВидДоговора = Перечисления.удуВидыДоговоровСФизЛицами.ТрудовойДоговор);
	ЭтоДоговорГПХ = (Объект.ВидДоговора = Перечисления.удуВидыДоговоровСФизЛицами.Подряда);
	
	Если Элементы.ГруппаСтраниц.ТекущаяСтраница.Имя = "СтраницаНовыйСотрудник" Тогда
		
		// Форма нового сотрудника.
		Элементы.Организация.ТолькоПросмотр  = Не (ЭтоТрудовойДоговор или ЭтоДоговорГПХ);	
		Элементы.ВидЗанятости.Видимость = ЭтоТрудовойДоговор;
		Элементы.ГруппаТрудовойДоговор.Видимость = ЭтоТрудовойДоговор;
		Элементы.ПерейтиКВводуТрудовогоДоговора.Видимость = ЭтоТрудовойДоговор;
	Иначе 
		
		Элементы.ГруппаКадровыеДанные.Видимость 	   = ЭтоТрудовойДоговор;
		Элементы.ГруппаТрудовойДоговорС.Видимость     = ЭтоТрудовойДоговор;
		Элементы.ГруппаСпискиДоговоров.Видимость 	   = ЭтоДоговорГПХ;
		
		Если Не мЕстьНачисления Тогда
			Элементы.ОрганизацияС.ТолькоПросмотр  = Не (ЭтоТрудовойДоговор или ЭтоДоговорГПХ);	
			Элементы.ВидЗанятостиС.Видимость = ЭтоТрудовойДоговор;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборыВСписках()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СотрудникПараметр=Объект.Ссылка;
	Иначе
		СотрудникПараметр=Справочники.удуСотрудникиОрганизаций.ПустаяСсылка();
	КонецЕсли;	
	
	УстановитьОтборВСписках(КадровыеДокументы, Новый Структура("Сотрудник,Организация",СотрудникПараметр,Объект.Организация));
	УстановитьОтборВСписках(МестоРаботы, Новый Структура("Сотрудник,Организация",СотрудникПараметр,Объект.Организация));
	УстановитьОтборВСписках(Начисления, Новый Структура("Сотрудник,Организация",СотрудникПараметр,Объект.Организация));
	УстановитьОтборВСписках(СписокДоговоров, Новый Структура("Сотрудник,Организация",СотрудникПараметр,Объект.Организация));		 	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьОтборВСписках(СписокДокументов, Параметры)
	
	удуОбщегоНазначенияСервер.УстановитьПараметрДинамическогоСписка(СписокДокументов,
	"Сотрудник",
	Параметры.Сотрудник);
	
	удуОбщегоНазначенияСервер.УстановитьПараметрДинамическогоСписка(СписокДокументов,
	"Организация",
	Параметры.Организация);
	
КонецПроцедуры

&НаСервере
Процедура ОтработатьВыбор(ВыбранноеЗначение)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ФизическиеЛица") И ВыборФизлица Тогда
		Если ФизЛицоОбъект.Ссылка <> ВыбранноеЗначение Тогда
			ЗначениеВДанныеФормы(ВыбранноеЗначение.Получитьобъект(),ФизЛицоОбъект);
			Объект.Физлицо=ВыбранноеЗначение;
			ФормаЭлементаОбработатьИзменениеФизлица();
			удуФизическиеЛица.ПроверитьИУстановитьВидЗанятости(,ЭтаФорма);
			удуФизическиеЛица.ПодобратьПостфиксНаименования(ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокВидимостьРедактироватьФизлицоОтдельно(ФизлицоОбъектНаименование="")
	
	ФизлицоОбъектНаименование		= ?(ПустаяСтрока(ФизлицоОбъектНаименование),ФизлицоОбъект.Наименование,ФизлицоОбъектНаименование);
	Элементы.РедактироватьФизлицоОтдельно.Заголовок = "Более подробно о физическом лице " + ФизлицоОбъектНаименование + "...";
	
КонецПроцедуры

&НаСервере
Процедура ФормаЭлементаОбработатьИзменениеФизлица()
	
	Объект.Наименование = удуФизическиеЛица.УстановитьНаименованиеСотрудника(ФизЛицоОбъект.Наименование, Объект.ПостфиксНаименования);
	удуФизическиеЛица.ПрочитатьФИО(ЭтаФорма);
	удуФизическиеЛица.ЗаполнитьНаборыПоФизлицу(ЭтаФорма);
	удуФизическиеЛица.ПроверитьИННОформитьПолеВвода(ФизлицоОбъект.ИНН, Элементы.ФизлицоИННС);
	удуФизическиеЛица.ПроверитьСтраховойНомерПФРФизлицаОформитьПолеВвода(ФизлицоОбъект.СтраховойНомерПФР, Элементы.ФизлицоСтраховойНомерПФРС);
	
КонецПроцедуры // ОбработатьИзменениеФизлица()

&НаСервере
Процедура ФизлицоПриИзмененииСервер()
	
	Если Не ЗначениеЗаполнено(Объект.Физлицо) ИЛИ Объект.Физлицо <> ФизлицоОбъект.Ссылка Тогда
		Если ЗначениеЗаполнено(Объект.Физлицо) тогда
			ЗначениеВДанныеФормы(Объект.Физлицо.Получитьобъект(),ФизЛицоОбъект);
		Иначе
			ЗначениеВДанныеФормы(Справочники.ФизическиеЛица.СоздатьЭлемент(),ФизЛицоОбъект);
		КонецЕсли;
		
		ФормаЭлементаОбработатьИзменениеФизлица();
		удуФизическиеЛица.ПроверитьИУстановитьВидЗанятости(,ЭтаФорма);
		удуФизическиеЛица.ПодобратьПостфиксНаименования(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция  ПолучитьНаименованиеСотрудника(НаименованиеСотрудника)
	
	Возврат удуФизическиеЛица.УстановитьНаименованиеСотрудника(НаименованиеСотрудника, Объект.ПостфиксНаименования);
	
КонецФункции



&НаСервере
Процедура НаименованиеФизлицаПриИзмененииСервер()
		
	ФИО = Объект.Наименование;
	Если ПустаяСтрока(Фамилия) ИЛИ не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		МассивФИО = удуФизическиеЛица.ПолучитьМассивФИО(ФИО);
		Фамилия  = МассивФИО[0];
		Имя      = МассивФИО[1];
		Отчество = МассивФИО[2];
		
		Если ЗначениеЗаполнено(Отчество) Тогда
			ФизлицоОбъект.Пол = удуФизическиеЛица.ПолучитьПол(Отчество);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ФизлицоСтраховойНомерПФРПриИзмененииСервер()
	
	удуФизическиеЛица.ПроверитьСтраховойНомерПФРФизлицаОформитьПолеВвода(ФизлицоОбъект.СтраховойНомерПФР, Элементы.ФизлицоСтраховойНомерПФР);
	
КонецПроцедуры

&НаСервере
Процедура ФизлицоСтраховойНомерПФР_С_ПриИзмененииСервер()
	
	удуФизическиеЛица.ПроверитьСтраховойНомерПФРФизлицаОформитьПолеВвода(ФизлицоОбъект.СтраховойНомерПФР, Элементы.ФизлицоСтраховойНомерПФРС);
	
КонецПроцедуры

&НаСервере
Процедура ФизлицоИННПриИзмененииСервер()
	
	
	удуФизическиеЛица.ПроверитьИННОформитьПолеВвода(ФизлицоОбъект.ИНН, Элементы.ФизлицоИНН);
	Если НЕ ЗначениеЗаполнено(ФизлицоОбъект.КодИМНС) Тогда
		ФизлицоОбъект.КодИМНС = Лев(ФизлицоОбъект.ИНН,4);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ФизлицоИНН_С_ПриИзмененииСервер()
	
	
	удуФизическиеЛица.ПроверитьИННОформитьПолеВвода(ФизлицоОбъект.ИНН, Элементы.ФизлицоИННС);
	Если НЕ ЗначениеЗаполнено(ФизлицоОбъект.КодИМНС) Тогда
		ФизлицоОбъект.КодИМНС = Лев(ФизлицоОбъект.ИНН,4);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НаименованиеНачалоВыбораИзСпискаСервер(НаименованиеЭлемента)
	
	ЭлементФормы=Элементы.Найти(НаименованиеЭлемента);
	
	ЭлементФормы.СписокВыбора.Очистить();
	НаименованиеБезПостфикса = ФизлицоОбъект.Наименование;
	ЭлементФормы.СписокВыбора.Добавить(НаименованиеБезПостфикса);
	
	Если Объект.ВидДоговора = Перечисления.удуВидыДоговоровСФизЛицами.ТрудовойДоговор Тогда
		Если Объект.ВидЗанятости = Перечисления.удуВидыЗанятостиВОрганизации.ВнутреннееСовместительство Тогда
			ЭлементФормы.СписокВыбора.Добавить(НаименованиеБезПостфикса + " (вн. совм.)");
		ИначеЕсли Объект.ВидЗанятости = Перечисления.удуВидыЗанятостиВОрганизации.ОсновноеМестоРаботы Тогда	
			ЭлементФормы.СписокВыбора.Добавить(НаименованиеБезПостфикса + " (осн.)");
		Иначе
			ЭлементФормы.СписокВыбора.Добавить(НаименованиеБезПостфикса + " (совм.)");			
		КонецЕсли; 
	ИначеЕсли Объект.ВидДоговора = Перечисления.удуВидыДоговоровСФизЛицами.Подряда Тогда
		ЭлементФормы.СписокВыбора.Добавить(НаименованиеБезПостфикса + " (дог. подр.)");
		ЭлементФормы.СписокВыбора.Добавить(НаименованиеБезПостфикса + " (дг.)");
	КонецЕсли;
	
	Если Не ПустаяСтрока(Объект.ПостфиксНаименования) и ЭлементФормы.СписокВыбора.НайтиПоЗначению(Объект.Наименование) = Неопределено Тогда
		ЭлементФормы.СписокВыбора.Добавить(Объект.Наименование);	
	КонецЕсли;	
	
	ЭлементФормы.СписокВыбора.Добавить("Произвольное","задать произвольное дополнение наименования (не более 15-и символов)");
	
КонецПроцедуры

&НаСервере
Процедура ВидДоговораПриИзмененииСервер()
	
	ОбработатьИзменениеВидаДоговора();
	УстановитьКнопкиПечати();
	удуФизическиеЛица.ПодобратьПостфиксНаименования(ЭтаФорма);
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СформироватьПодменюВвестиДокумент();
	КонецЕсли;
	// Получим новый номер трудового договора.
	Объект.НомерДоговора = Справочники.удуСотрудникиОрганизаций.ПолучитьНомерТрудовогоДоговора(Объект);
	
КонецПроцедуры

&НаСервере
// Процедура устанваливает видимость страниц панелей договоров.
Процедура ОбработатьИзменениеВидаДоговора()
	
	УстановитьВидимостьЭУ();
	УстановитьОтборыВСписках();
	
	Если Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.СтраницаНовыйСотрудник Тогда
		// Форма нового сотрудника.
		Если Объект.ВидДоговора = Перечисления.удуВидыДоговоровСФизЛицами.ТрудовойДоговор Тогда
			
			удуФизическиеЛица.ПроверитьИУстановитьВидЗанятости(Ложь, ЭтаФорма);
			
			Элементы.ВидЗанятости.Видимость = Истина;
			Элементы.ВидЗанятости.ОтметкаНезаполненного = Не ЗначениеЗаполнено(Объект.ВидЗанятости);
			Элементы.ВидЗанятости.АвтоОтметкаНезаполненного = Истина;
			
			Элементы.Организация.ТолькоПросмотр = Ложь;
			Если Объект.Организация.Пустая() Тогда
				Организация = Константы.удуОсновноеУчреждение.Получить();
				ОбработатьИзменениеОрганизации();
			КонецЕсли;
			Элементы.Организация.ОтметкаНезаполненного     = Не ЗначениеЗаполнено(Организация);
			Элементы.Организация.АвтоОтметкаНезаполненного = Истина;
			
			Элементы.ГруппаТрудовойДоговор.Видимость = Истина;
			
			Если Объект.ЗанимаемыхСтавок = 0 Тогда
				Объект.ЗанимаемыхСтавок = 1;
			КонецЕсли;	
			
		Иначе // Договор подряда.
			
			Объект.ВидЗанятости = Перечисления.удуВидыЗанятостиВОрганизации.ПустаяСсылка();
			Элементы.ВидЗанятости.Видимость = Ложь;
			Элементы.ВидЗанятости.АвтоОтметкаНезаполненного = Ложь;
			Элементы.ВидЗанятости.ОтметкаНезаполненного = Ложь;
			
			Элементы.Организация.ТолькоПросмотр = Ложь;
			Если Объект.Организация.Пустая() Тогда
				Организация = Константы.удуОсновноеУчреждение.Получить();
				ОбработатьИзменениеОрганизации();
			КонецЕсли;
			Элементы.Организация.ОтметкаНезаполненного     = Не ЗначениеЗаполнено(Объект.Организация);
			Элементы.Организация.АвтоОтметкаНезаполненного = Истина;
			Элементы.ПерейтиКВводуТрудовогоДоговора.Видимость = Ложь;
			Элементы.ГруппаТрудовойДоговор.Видимость = Ложь;
			
		КонецЕсли;
		
	Иначе // Форма сотрудника.
		
		Если Объект.ВидДоговора = Перечисления.удуВидыДоговоровСФизЛицами.ТрудовойДоговор Тогда
			
			Элементы.ВидЗанятостиС.Видимость = Истина;
			Элементы.ВидЗанятостиС.ОтметкаНезаполненного     = Не ЗначениеЗаполнено(Объект.ВидЗанятости);
			Элементы.ВидЗанятостиС.АвтоОтметкаНезаполненного = Истина;
			
			Элементы.ОрганизацияС.ТолькоПросмотр = Ложь;
			Элементы.ОрганизацияС.ОтметкаНезаполненного      = Не ЗначениеЗаполнено(Объект.Организация);
			Элементы.ОрганизацияС.АвтоОтметкаНезаполненного  = Истина;
			
			Если Объект.ЗанимаемыхСтавок = 0 Тогда
				Объект.ЗанимаемыхСтавок = 1;
			КонецЕсли;
			
		Иначе // Договор подряда.
			
			Объект.ВидЗанятости = Перечисления.удуВидыЗанятостиВОрганизации.ПустаяСсылка();
			Элементы.ВидЗанятостиС.Видимость = Ложь;
			Элементы.ВидЗанятостиС.АвтоОтметкаНезаполненного = Ложь;
			Элементы.ВидЗанятостиС.ОтметкаНезаполненного = Ложь;
			
			Элементы.ОрганизацияС.ТолькоПросмотр = Ложь;
			Элементы.ОрганизацияС.ОтметкаНезаполненного      = Не ЗначениеЗаполнено(Объект.Организация);
			Элементы.ОрганизацияС.АвтоОтметкаНезаполненного  = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Объект.Код = Справочники.удуСотрудникиОрганизаций.ПолучитьОчереднойТабельныйНомер(Объект);
	
КонецПроцедуры

&НаСервере	
Процедура ОбработатьИзменениеОрганизации()
	
	Объект.Код = Справочники.удуСотрудникиОрганизаций.ПолучитьОчереднойТабельныйНомер(Объект);
	
	Если Объект.ВидДоговора = Перечисления.удуВидыДоговоровСФизЛицами.ТрудовойДоговор Тогда
		
		удуФизическиеЛица.ПроверитьИУстановитьВидЗанятости(Ложь, ЭтаФорма);
		// Получим новый номер трудового договора.
		Объект.НомерДоговора = Справочники.удуСотрудникиОрганизаций.ПолучитьНомерТрудовогоДоговора(Объект);	
		
		// Обработаем возможность выбора из списка ПодразделенияОрганизации и Должности по штатному расписанию.
		удуФизическиеЛица.ОбработатьОтображениеВыбораИзСписковПоШтаномуРасписанию(ЭтаФорма);

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииСервер()
	
	ОбработатьИзменениеОрганизации();
	удуФизическиеЛица.ПодобратьПостфиксНаименования(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ВидЗанятостиПриИзмененииСервер()
	
	удуФизическиеЛица.ПроверитьИУстановитьВидЗанятости(Ложь, ЭтаФорма);
	удуФизическиеЛица.ПодобратьПостфиксНаименования(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ДатаДоговораПриИзмененииСервер()
	
	Справочники.удуСотрудникиОрганизаций.ПроверитьНомерТрудовогоДоговора(мДатаДоговора,Объект);
	мДатаДоговора = Объект.ДатаДоговора;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьФИОВРегистр()
	
	НаборЗаписейФИО=ДанныеФормыВЗначение(мНаборЗаписейФИО,Тип("РегистрСведенийНаборЗаписей.удуФИОФизЛиц")); 
	НаборЗаписейФИО[0].Физлицо 	= Объект.Физлицо;	
	НаборЗаписейФИО.Отбор.Физлицо.Установить(Объект.Физлицо);
	НаборЗаписейФИО.Отбор.Период.Установить(НаборЗаписейФИО[0].Период);
	НаборЗаписейФИО.Записать(Истина);

КонецПроцедуры

&НаСервере	
Процедура ПередЗаписьюСервер(Отказ)
	
	Если не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если ЭтаФорма.ВыборФизлица=0 Тогда
			// Попытка записать новое физлицо.
			Попытка
				ФизЛицо=ДанныеФормыВЗначение(ЭтаФорма.ФизлицоОбъект,Тип("СправочникОбъект.ФизическиеЛица"));
				ФизЛицо.Записать();
				мНовоеФизЛицо=Истина;
				
				Если мНаборЗаписейФИО.Количество() = 0 Тогда
					ЗаписьНабора = мНаборЗаписейФИО.Добавить();
					ЗаписьНабора.Период		= ?(ЗначениеЗаполнено(ФизлицоОбъект.ДатаРождения),ФизлицоОбъект.ДатаРождения,'19800101');
					ЗаписьНабора.Фамилия	= ЭтаФорма.Фамилия;
					ЗаписьНабора.Имя		= ЭтаФорма.Имя;
					ЗаписьНабора.Отчество	= ЭтаФорма.Отчество;
				КонецЕсли;
				
				ЗначениеВДанныеФормы(ФизЛицо,ЭтаФорма.ФизлицоОбъект);
				Объект.Физлицо = ФизЛицо.Ссылка;				
				ЗаписатьФИОВРегистр();
				
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(удуОбщегоНазначенияСервер.ПолучитьПричинуОшибки(ИнформацияОбОшибке()),СтатусСообщения.ОченьВажное);
				Отказ = Истина;
				Возврат;
			КонецПопытки;
		КонецЕсли;
	КонецЕсли; 	
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПодменюВвестиДокумент()
	
	    Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	удуРаботникиОрганизацийСрезПоследних.Период КАК Дата,
		             |	удуРаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния
		             |ИЗ
		             |	РегистрСведений.удуРаботникиОрганизаций.СрезПоследних(
		             |			,
		             |			Сотрудник = &Сотрудник
		             |				И Организация = &Организация
		             |				И ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.удуПричиныИзмененияСостояния.ПриемНаРаботу)) КАК удуРаботникиОрганизацийСрезПоследних
		             |
		             |ОБЪЕДИНИТЬ ВСЕ
		             |
		             |ВЫБРАТЬ
		             |	удуРаботникиОрганизацийСрезПоследних.Период,
		             |	удуРаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
		             |ИЗ
		             |	РегистрСведений.удуРаботникиОрганизаций.СрезПоследних(
		             |			,
		             |			Сотрудник = &Сотрудник
		             |				И Организация = &Организация
		             |				И ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.удуПричиныИзмененияСостояния.Увольнение)) КАК удуРаботникиОрганизацийСрезПоследних";
	
	
	    Запрос.УстановитьПараметр("Организация",Объект.Организация);
		Запрос.УстановитьПараметр("Сотрудник",Объект.Ссылка);
		Выборка=Запрос.Выполнить().Выбрать();
		ДатаПриема			= Дата(1,1,1);
		ДатаУвольнения		= Дата(1,1,1);
		Пока Выборка.Следующий() цикл
			Если Выборка.ПричинаИзмененияСостояния=Перечисления.удуПричиныИзмененияСостояния.ПриемНаРаботу тогда
			ДатаПриема			= Выборка.Дата;
			ИначеЕсли Выборка.ПричинаИзмененияСостояния=Перечисления.удуПричиныИзмененияСостояния.Увольнение тогда
			ДатаУвольнения		= Выборка.Дата;
			КонецЕсли;
		КонецЦикла;;
		
		
		ВидДоговора			= Объект.ВидДоговора;
		Сотрудник=Объект.Ссылка;
	
	Для Каждого КнопкаПодменю Из КоманднаяПанель.ПодчиненныеЭлементы.ПодменюСоздатьДокументы.ПодчиненныеЭлементы Цикл
		КнопкаПодменю.Видимость=Ложь;
	КонецЦикла;
	
	Если не ЗначениеЗаполнено(Сотрудник) Тогда
		Возврат;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(ВидДоговора) Тогда
		Возврат;
	КонецЕсли;
	
	
	
	Принят			= (ДатаПриема <> Дата(1,1,1));
	Уволен			= (ДатаУвольнения <> Дата(1,1,1));
	
	Если Уволен Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка прав доступа на выполнение действий будет осуществляться непосредственно при выборе действий.
	Если ВидДоговора = Перечисления.удуВидыДоговоровСФизЛицами.ТрудовойДоговор Тогда
		Если Не Принят Тогда
			КоманднаяПанель.ПодчиненныеЭлементы.ПодменюСоздатьДокументы.ПодчиненныеЭлементы.ФормаСоздатьПриемНаРаботу.Видимость=Истина;
		КонецЕсли;
		КоманднаяПанель.ПодчиненныеЭлементы.ПодменюСоздатьДокументы.ПодчиненныеЭлементы.ФормаСоздатьКадровоеПеремещение.Видимость=Истина;
		КоманднаяПанель.ПодчиненныеЭлементы.ПодменюСоздатьДокументы.ПодчиненныеЭлементы.ФормаСоздатьУвольнение.Видимость=Истина;		
	ИначеЕсли ВидДоговора = Перечисления.удуВидыДоговоровСФизЛицами.Подряда Тогда
		КоманднаяПанель.ПодчиненныеЭлементы.ПодменюСоздатьДокументы.ПодчиненныеЭлементы.ФормаСоздатьДоговорНаВыполнениеработ.Видимость=Истина;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьФизлицо()
	
	  ФизлицоДляУдаления=Объект.Физлицо.ПолучитьОбъект();
	  НаборЗаписей=РегистрыСведений.удуФИОФизЛиц.СоздатьНаборЗаписей();
	  НаборЗаписей.Отбор.ФизЛицо.Установить(Объект.Физлицо);
	  НаборЗаписей.Прочитать();
	  НаборЗаписей.Очистить();
	  НаборЗаписей.Записать();
	  ФизлицоДляУдаления.Удалить();
	
КонецПроцедуры

&НаСервере
Процедура  ОбновитьЭлемент(ВидЭлемента)

      удуФизическиеЛица.ОбновитьПредставлениеЭлемента(ВидЭлемента, ЭтаФорма);
	  
КонецПроцедуры

&НаСервере
Процедура СформироватьФИО()
	
	ФизЛицоОбъект.Наименование = СокрЛП(Фамилия + " " + Имя + " " + Отчество);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ВВОДА НА ОСНОВАНИИ

&НаСервере
Процедура РазблокироватьОбъект()

	СотрудникОбъект=ДанныеФормыВЗначение(Объект,Тип("СправочникОбъект.удуСотрудникиОрганизаций"));
	Если СотрудникОбъект.Заблокирован() Тогда
		СотрудникОбъект.Разблокировать();
	КонецЕсли;	
	ЗначениеВДанныеФормы(СотрудникОбъект,Объект);

КонецПроцедуры

&НаКлиенте
// Функция записывает элемент, спросив об этом у пользователя.
Функция ЗаписатьЭлементПередВыполнениемДействия(ТекстВопроса = "")
	
	Если Модифицированность Тогда
		Если Не ЗначениеЗаполнено(ТекстВопроса) Тогда
			ТекстВопроса = "Перед вводом на основании необходимо записать элемент. Записать элемент?";
		КонецЕсли;
		Ответ  = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Попытка
				Возврат Записать();
			Исключение
				Возврат Ложь;
			КонецПопытки;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли; 	
	
	Возврат Истина;
	
КонецФункции // ЗаписатьЭлементПередВыполнениемДействия()

&НаСервере
Функция СоздатьПриемНаРаботуСервер()
	
	РазблокироватьОбъект();
	ДокументОбъект = Документы.удуПриемНаРаботуВОрганизацию.СоздатьДокумент();
	ДокументОбъект.Заполнить(Объект.Ссылка);
	АдресВХранилище=ПоместитьВХранилище(ДокументОбъект);
	Возврат АдресВХранилище;
	
КонецФункции

&НаКлиенте
Процедура СоздатьПриемНаРаботу(Команда)
	
	Если ЗаписатьЭлементПередВыполнениемДействия() Тогда
		АдресВХранилище=СоздатьПриемНаРаботуСервер();
		ФормаДокумента = ПолучитьФорму("Документ.удуПриемНаРаботуВОрганизацию.Форма.ФормаДокумента",Новый Структура("АдресВХранилище",АдресВХранилище),ЭтаФорма);
		ФормаДокумента.Открыть();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СоздатьКадровоеПеремещениеСервер()
	
	РазблокироватьОбъект();
	ДокументОбъект = Документы.удуКадровоеПеремещениеОрганизаций.СоздатьДокумент();
	ДокументОбъект.Заполнить(Объект.Ссылка);
	АдресВХранилище=ПоместитьВХранилище(ДокументОбъект);
	Возврат АдресВХранилище;
	
КонецФункции

&НаКлиенте
Процедура СоздатьКадровоеПеремещение(Команда)
	
	Если ЗаписатьЭлементПередВыполнениемДействия() Тогда
		АдресВХранилище=СоздатьКадровоеПеремещениеСервер();
		ФормаДокумента = ПолучитьФорму("Документ.удуКадровоеПеремещениеОрганизаций.Форма.ФормаДокумента",Новый Структура("АдресВХранилище",АдресВХранилище),ЭтаФорма);
		ФормаДокумента.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьУвольнениеСервер()
	
	РазблокироватьОбъект();
	ДокументОбъект = Документы.удуУвольнениеИзОрганизаций.СоздатьДокумент();
	ДокументОбъект.Заполнить(Объект.Ссылка);
	АдресВХранилище=ПоместитьВХранилище(ДокументОбъект);
	Возврат АдресВХранилище;
	
КонецФункции

&НаКлиенте
Процедура СоздатьУвольнение(Команда)
	
	Если ЗаписатьЭлементПередВыполнениемДействия() Тогда
		АдресВХранилище=СоздатьУвольнениеСервер();
		ФормаДокумента = ПолучитьФорму("Документ.удуУвольнениеИзОрганизаций.Форма.ФормаДокумента",Новый Структура("АдресВХранилище",АдресВХранилище),ЭтаФорма);
		ФормаДокумента.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьДоговорНаВыполнениеработСервер()
	
	РазблокироватьОбъект();
	ДокументОбъект = Документы.удуДоговорНаВыполнениеРаботСФизЛицом.СоздатьДокумент();
	ДокументОбъект.Заполнить(Объект.Ссылка);
	АдресВХранилище=ПоместитьВХранилище(ДокументОбъект);
	Возврат АдресВХранилище;
	
КонецФункции

&НаКлиенте
Процедура ФормаСоздатьДоговорНаВыполнениеработ(Команда)
	
	Если ЗаписатьЭлементПередВыполнениемДействия() Тогда
		АдресВХранилище=СоздатьДоговорНаВыполнениеработСервер();
		ФормаДокумента = ПолучитьФорму("Документ.удуДоговорНаВыполнениеРаботСФизЛицом.Форма.ФормаДокумента",Новый Структура("АдресВХранилище",АдресВХранилище),ЭтаФорма);
		ФормаДокумента.Открыть();
	КонецЕсли;

КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

 &НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Если Не ЗначениеЗаполнено(Объект.ВидДоговора) ТОгда
			Объект.ВидДоговора  = Перечисления.удуВидыДоговоровСФизЛицами.ТрудовойДоговор;	
		КонецЕсли;	
		Если Объект.ВидДоговора  = Перечисления.удуВидыДоговоровСФизЛицами.ТрудовойДоговор Тогда
			Объект.ВидЗанятости = Перечисления.удуВидыЗанятостиВОрганизации.ОсновноеМестоРаботы;
			Объект.ЗанимаемыхСтавок = 1;
		КонецЕсли;
		
		Объект.Организация=Константы.удуОсновноеУчреждение.Получить();
		
		Если Не Объект.Физлицо.Пустая() Тогда
			// Если в форму передали физлицо.
			ВыборФизлица  = 1;
			ЗначениеВДанныеФормы(Объект.Физлицо.ПолучитьОбъект(),ФизлицоОбъект);
			Объект.Наименование = удуФизическиеЛица.УстановитьНаименованиеСотрудника(ФизлицоОбъект.Наименование, Объект.Ссылка.ПостфиксНаименования);
			удуФизическиеЛица.ПрочитатьФИО(ЭтаФорма);
			удуФизическиеЛица.ПроверитьИУстановитьВидЗанятости(Ложь, ЭтаФорма,ТаблицаСообщений);
		Иначе
			ЗначениеВДанныеФормы(Справочники.ФизическиеЛица.СоздатьЭлемент(),ФизЛицоОбъект);
			ВыборФизлица  = 0;
		КонецЕсли;
		
		// Заполним дату договора сегодняшней датой.
		ДатаДоговора = ТекущаяДата();
		НомерДоговора = Справочники.удуСотрудникиОрганизаций.ПолучитьНомерТрудовогоДоговора(Объект);
		Элементы.СтраницаСотрудник.Видимость=Ложь;
		
	Иначе // Открываем существующий элемент справочника.
		
		Попытка
			ЗначениеВДанныеФормы(Объект.Физлицо.ПолучитьОбъект(),ФизлицоОбъект);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(удуОбщегоНазначенияСервер.ПолучитьПричинуОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		удуФизическиеЛица.ПрочитатьФИО(ЭтаФорма);
		удуФизическиеЛица.ЗаполнитьНаборыПоФизлицу(ЭтаФорма);
		
		удуФизическиеЛица.ОбновитьПредставлениеЭлемента("Гражданство",ЭтаФорма);
		
		// Добавим команду изменения актуальности сотрудника.
		Если Объект.Актуальность Тогда
			Элементы.ФормаПоместитьИзвлечьВАрхив.Заголовок = "Поместить в архив";
		Иначе
			Элементы.ФормаПоместитьИзвлечьВАрхив.Заголовок = "Извлечь из архива";
		КонецЕсли;
		
		Элементы.СтраницаНовыйСотрудник.Видимость=Ложь;
		Модифицированность = Ложь;
	КонецЕсли;	
	
	// Обработчик механизма "Свойства".
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаДополнительныеРеквизиты");
	
	удуФизическиеЛица.ОбработатьОтображениеВыбораИзСписковПоШтаномуРасписанию(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	мДатаДоговора = Объект.ДатаДоговора;
	мНовоеФизЛицо=Ложь;
	МассивСтрокПоиска=ТаблицаСообщений.НайтиСтроки(Новый Структура("ТипСообщения","ВидЗанятости"));
	Если не МассивСтрокПоиска.количество()=0 тогда
		Если Вопрос(МассивСтрокПоиска[0].ТекстСообщения, РежимДиалогаВопрос.ДаНет, 20) = КодВозвратаДиалога.Да Тогда
			ЭтаФорма.Объект.ВидЗанятости = МассивСтрокПоиска[0].ЗначениеСообщения;
			ВидЗанятостиПриИзмененииСервер();
		КонецЕсли;	
	КонецЕсли;
	
	УстановитьОтборыВСписках();
	ФормаЭлементаПриОткрытииСотрудника();
	СформироватьПодменюВвестиДокумент();
	УстановитьВидимостьЭУ();
	ВидимостьИЗаголовокКнопкиИзмененияактуальности();
	
	Элементы.НадписьАктуальностьСотрудника.Видимость = НЕ Объект.Актуальность;
	Элементы.КартинкаАктуальностьСотрудника.Видимость = НЕ Объект.Актуальность;
	
	Если Объект.Ссылка.Пустая() тогда
		 Модифицированность=Истина;
	 Иначе 
		 УстановитьЗаголовокВидимостьРедактироватьФизлицоОтдельно();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ОтработатьВыбор(ВыбранноеЗначение);
	УстановитьЗаголовокВидимостьРедактироватьФизлицоОтдельно();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Отказ = Ложь;
	
	удуФизическиеЛица.ОчиститьНеИспользуемыеРеквизиты(ЭтаФорма);
	
	СписокНеЗаполненныхРеквизитов = Новый СписокЗначений;
	ОбнаруженыОшибки = Ложь;
	
	СрокаСообщенияОбОшибке = "";
	Если не ЗначениеЗаполнено(ЭтаФорма.Объект.Ссылка) Тогда // Для нового сотрудника проверим возможность записи.
		
		// Если создаем новое физлицо, проверим заполнение реквизитов.
		Если ЭтаФорма.ВыборФизлица=0 Тогда
			// Необходимо создать новое физлицо, проверим реквизиты.
			Если ПустаяСтрока(ЭтаФорма.ФизлицоОбъект.Наименование) Тогда
				СписокНеЗаполненныхРеквизитов.Добавить(" Имя");
				ОбнаруженыОшибки = Истина;	
			КонецЕсли; 	
		Иначе
			Если Не ЗначениеЗаполнено(ЭтаФорма.Объект.Физлицо) Тогда
				СрокаСообщенияОбОшибке = "Не выбрано физическое лицо!";
				ОбнаруженыОшибки = Истина;	
			КонецЕсли;
		КонецЕсли; 
		
	КонецЕсли;
	
	ВидДоговора 			= ЭтаФорма.Объект.ВидДоговора;
	ВидЗанятости 			= ЭтаФорма.Объект.ВидЗанятости;
	
	// Проверим заполнение организации, вида договра, вида занятости.
	Если Не ЗначениеЗаполнено(ВидДоговора) Тогда
		СписокНеЗаполненныхРеквизитов.Добавить(" Вид договора");
		ОбнаруженыОшибки = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭтаФорма.Объект.Организация)  Тогда
		СписокНеЗаполненныхРеквизитов.Добавить(" Организация");
		ОбнаруженыОшибки = Истина;
	КонецЕсли;
	
	Если ВидДоговора = Перечисления.удуВидыДоговоровСФизЛицами.ТрудовойДоговор и Не ЗначениеЗаполнено(ВидЗанятости) Тогда
		СписокНеЗаполненныхРеквизитов.Добавить(" Вид занятости");
		ОбнаруженыОшибки = Истина;
	КонецЕсли;
	
	Если ОбнаруженыОшибки Тогда
		Если Не ПустаяСтрока(СрокаСообщенияОбОшибке) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СрокаСообщенияОбОшибке, СтатусСообщения.Внимание);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Элемент не записан!", СтатусСообщения.Важное);
		КонецЕсли;
		Если СписокНеЗаполненныхРеквизитов.Количество()>0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнены реквизиты: " + СписокНеЗаполненныхРеквизитов, СтатусСообщения.Внимание);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Элемент не записан!", СтатусСообщения.Важное);
		КонецЕсли;
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Обработчик механизма "Свойства".
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПередЗаписьюСервер(Отказ);	
	мЭтоНовый=Объект.Ссылка.Пустая();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьЗаголовокВидимостьРедактироватьФизлицоОтдельно();
	
	Если мЭтоНовый Тогда
		
		Элементы.ВыборФизлица.Доступность = Ложь;
		Элементы.ОткрытьСправочникФизлиц.Доступность = Ложь;
		СформироватьПодменюВвестиДокумент();
		ВидимостьИЗаголовокКнопкиИзмененияАктуальности();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	
	Если Объект.Ссылка.Пустая() и ЗначениеЗаполнено(Объект.Физлицо)  и мНовоеФизЛицо тогда
		 УдалитьФизлицо();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОбъектФизлицо=ДанныеФормыВЗначение(ФизлицоОбъект,Тип("СправочникОбъект.ФизическиеЛица"));
	Ссылка				= Объект.Ссылка;
		
	// Запись не нового Сотрудника, проверим необходимось записи физлица.
	Если Не ЭтаФорма.мЭтоНовый и ОбъектФизлицо.Модифицированность() Тогда
		
		Попытка	
			ОбъектФизлицо.Заблокировать();
		Исключение
			ТекстСообщения = "Физическое лицо: " + ОбъектФизлицо + " - объект заблокирован.";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, СтатусСообщения.Важное);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Элемент не записан!", СтатусСообщения.Информация);
			
			Отказ = Истина;
			Возврат;
		КонецПопытки;
		
		ОбъектФизлицо.Записать();
		удуФизическиеЛица.СинхронизироватьНаименованияСотрудников(ОбъектФизлицо.Ссылка, Ссылка);
		
	КонецЕсли;
	
	// Запись в регистр ФИО физлиц.
	НаборЗаписейФИО = ДанныеФормыВЗначение(мНаборЗаписейФИО,Тип("РегистрСведенийНаборЗаписей.удуФИОФизЛиц"));
	
	Если НаборЗаписейФИО.Количество() = 0 Тогда
		ЗаписьНабора = НаборЗаписейФИО.Добавить();
		ЗаписьНабора.Период		= ?(ЗначениеЗаполнено(ОбъектФизлицо.ДатаРождения),ОбъектФизлицо.ДатаРождения,'19800101');
		ЗаписьНабора.Фамилия	= Фамилия;
		ЗаписьНабора.Имя		= Имя;
		ЗаписьНабора.Отчество	= Отчество;
	КонецЕсли;
	
		НаборЗаписейФИО[0].Физлицо = Объект.Физлицо;
		НаборЗаписейФИО.Отбор.Физлицо.Использование	= Истина;
		НаборЗаписейФИО.Отбор.Физлицо.Значение			= НаборЗаписейФИО[0].Физлицо;
		НаборЗаписейФИО.Отбор.Период.Использование		= Истина;
		НаборЗаписейФИО.Отбор.Период.Значение			= НаборЗаписейФИО[0].Период;
		НаборЗаписейФИО.Записать(Истина);

		ЗначениеВДанныеФормы(НаборЗаписейФИО,мНаборЗаписейФИО);
		
		
	ФИО = Фамилия + " " + Имя + " " + Отчество;
	ТаблицаСообщений1 = удуФизическиеЛица.ПроверитьДублиФизлиц(ОбъектФизлицо.Ссылка, , ОбъектФизлицо.ИНН, ОбъектФизлицо.СтраховойНомерПФР, ФИО, ОбъектФизлицо.ДатаРождения);
	
	// Покажем результаты проверки дублей физлиц.
	Если ТаблицаСообщений1.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Результат проверки дублей физлиц",СтатусСообщения.Информация);
		Для каждого СтрокаТЗ Из ТаблицаСообщений1 Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаТЗ.ТекстСообщения,СтатусСообщения.Важное);
		КонецЦикла;
	КонецЕсли;
	
	
	Если мНаборЗаписейГражданство.Количество() > 0 И ЗначениеЗаполнено(мНаборЗаписейГражданство[0].Период) Тогда

		Если ГражданствоИзменено Тогда
			НаборЗаписейГражданство = ДанныеФормыВЗначение(мНаборЗаписейГражданство,Тип("РегистрСведенийНаборЗаписей.удуГражданствоФизЛиц"));
			НаборЗаписейГражданство[0].Физлицо = Объект.Физлицо;
			НаборЗаписейГражданство.Отбор.Физлицо.Использование	= Истина;
			НаборЗаписейГражданство.Отбор.Физлицо.Значение			= НаборЗаписейГражданство[0].Физлицо;
			НаборЗаписейГражданство.Отбор.Период.Использование		= Истина;
			НаборЗаписейГражданство.Отбор.Период.Значение			= НаборЗаписейГражданство[0].Период;
			НаборЗаписейГражданство.Записать(Истина);
			ЗначениеВДанныеФормы(НаборЗаписейГражданство,мНаборЗаписейГражданство);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИзмененыДанныеФизЛица тогда
		ОбъектФизлицо.Записать();
		ИзмененыДанныеФизЛица=Ложь;
	КонецЕсли;
		ЗначениеВДанныеФормы(ОбъектФизлицо,ФизЛицоОбъект);
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Обработчик механизма "Свойства".
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;

КонецПроцедуры








////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

 &НаКлиенте
Процедура ПоместитьИзвлечьВАрхив(Команда)
	
	СписокКнопок=Новый СписокЗначений();
		
	Если Объект.Актуальность Тогда
		ЗаголовокВопроса	= "Перемещение сотрудника в архив";
		ТекстВопроса=
		"Поместить сотрудника: " + Объект.Наименование + " в архив.
		|
		|Сотрудник, помещенный в архив, не будет показываться в списке.";
		ТекстКнопки = "Поместить в архив";
	Иначе
		ЗаголовокВопроса	= "Извлечение сотрудника из архива";
		ТекстВопроса	=
		"Извлечь сотрудника: " + Объект.Наименование + " из архива. 
		|
		|После извлечения из архива сотрудник будет показываться в списке.";
		ТекстКнопки = "Извлечь из архива";
	КонецЕсли;
	
	СписокКнопок.Добавить(КодВозвратаДиалога.Да,ТекстКнопки);
    СписокКнопок.Добавить(КодВозвратаДиалога.Отмена,"Отмена");
	
	Если Вопрос(ТекстВопроса,СписокКнопок,,КодВозвратаДиалога.Да,ЗаголовокВопроса)=КодВозвратаДиалога.Да тогда
		 Объект.Актуальность = Не Объект.Актуальность;
		 Модифицированность=Истина;
	Иначе 
		Возврат;
	КонецЕсли;
		
	Если Объект.Актуальность Тогда
		КоманднаяПанель.ПодчиненныеЭлементы.ФормаПоместитьИзвлечьВАрхив.Заголовок = "Поместить в архив";
	Иначе
		КоманднаяПанель.ПодчиненныеЭлементы.ФормаПоместитьИзвлечьВАрхив.Заголовок = "Извлечь из архива";
	КонецЕсли;

	Элементы.НадписьАктуальностьСотрудника.Видимость = Не Объект.Актуальность;
	Элементы.КартинкаАктуальностьСотрудника.Видимость = Не Объект.Актуальность;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ МЕХАНИЗМА СВОЙСТВ

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

  &НаКлиенте
Процедура ОткрытьСправочникФизлицНажатие(Элемент)
	
	Если ЭтаФорма.ВыборФизлица Тогда
		ФормаВыбора = ПолучитьФорму("Справочник.ФизическиеЛица.Форма.ФормаВыбора",,ЭтаФорма);
	Иначе
		ФормаВыбора = ПолучитьФорму("Справочник.ФизическиеЛица.Форма.ФормаСписка",,ЭтаФорма);
	КонецЕсли;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

 &НаКлиенте
Процедура РедактироватьФизлицоОтдельноНажатие(Элемент)
	
	Если Объект.Ссылка.Пустая() и ПустаяСтрока(ФизЛицоОбъект.Наименование) тогда
		 Возврат;
	КонецЕсли;
	
	СтруктураПараметров=Новый Структура;
	Если Объект.Ссылка.Пустая() и ВыборФизлица=0 тогда
		СтруктураПараметров.Вставить("Ключ",ФизЛицоОбъект.Ссылка);
		Если ФизЛицоОбъект.Ссылка.Пустая() тогда
            СтруктураПараметровДоп=Новый Структура;
			СтруктураПараметровДоп.Вставить("Наименование",ФизЛицоОбъект.Наименование);
            СтруктураПараметровДоп.Вставить("ДатаРождения",ФизЛицоОбъект.ДатаРождения);
            СтруктураПараметровДоп.Вставить("ИНН",ФизЛицоОбъект.ИНН);
            СтруктураПараметровДоп.Вставить("КодИМНС",ФизЛицоОбъект.КодИМНС);
            СтруктураПараметровДоп.Вставить("Пол",ФизЛицоОбъект.Пол);
            СтруктураПараметровДоп.Вставить("СтраховойНомерПФР",ФизЛицоОбъект.СтраховойНомерПФР);
			АдресНачальныхПараметров=ПоместитьВоВременноеХранилище(СтруктураПараметровДоп,ЭтаФорма.УникальныйИдентификатор);
			СтруктураПараметров.Вставить("АдресНачальныхПараметров",АдресНачальныхПараметров);
		КонецЕсли;
	Иначе 
		СтруктураПараметров.Вставить("Ключ",Объект.Физлицо);
	КонецЕсли;
	
	
	Форма = ПолучитьФорму("Справочник.ФизическиеЛица.Форма.ФормаЭлемента",СтруктураПараметров, ЭтаФорма);
	Форма.ТолькоПросмотр = ЭтаФорма.ТолькоПросмотр;
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКВводуТрудовогоДоговораНажатие(Элемент)
	
	Элементы.ГруппаПодСтраниц.ТекущаяСтраница = Элементы.ГруппаТрудовойДоговор;
	
КонецПроцедуры

&НаКлиенте
Процедура СменаФИО(Команда)
	
	АдресНачальныхДанных=ЗаполнитьНачальныеДанные(мНаборЗаписейФИО,"РегистрСведенийНаборЗаписей.удуФИОФизЛиц");
	ФормаВвода = ПолучитьФорму("Справочник.ФизическиеЛица.Форма.ФормаЗаписиФИО",Новый Структура("АдресНачальныхДанных",АдресНачальныхДанных),ЭтаФорма);
	
	Если мНаборЗаписейФИО.Количество() = 0 Тогда
		ФИО = Объект.Наименование;
		МассивФИО = ПолучитьМассивФИОСервер(ФИО);
		ФормаВвода.Фамилия	= МассивФИО[0];
		ФормаВвода.Имя		= МассивФИО[1];
		ФормаВвода.Отчество= МассивФИО[2];
		ФормаВвода.Период		= ?(ЗначениеЗаполнено(ФизЛицоОбъект.ДатаРождения), ФизЛицоОбъект.ДатаРождения,'19800101');
	КонецЕсли;	
	
	ПереданноеЗначение=ФормаВвода.ОткрытьМодально();
	Если не ПереданноеЗначение=Неопределено тогда
		ФИОИзменено=Истина;
		Если мНаборЗаписейФИО.Количество()=0 тогда
			мНаборЗаписейФИО.Добавить();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(мНаборЗаписейФИО[0],ПереданноеЗначение);
		
	
	ПредлагаемНаименование = СокрЛП(мНаборЗаписейФИО[0].Фамилия) + " " + СокрЛП(мНаборЗаписейФИО[0].Имя) + " " + СокрЛП(мНаборЗаписейФИО[0].Отчество);
	Если ЭтаФорма.Объект.Наименование <> ПредлагаемНаименование Тогда
		ТекстВопроса = "Вы сменили ФИО физического лица. Изменить наименование на " + ПредлагаемНаименование + "?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		Модифицированность=Истина;
		Объект.Наименование = ПредлагаемНаименование;
		ФизлицоОбъект.Наименование 	= ПредлагаемНаименование;
		Элементы.РедактироватьФизлицоОтдельно.Заголовок 	= "Более подробно о физическом лице " + ПредлагаемНаименование + "...";
		Элементы.РедактироватьФизлицоОтдельноС.Заголовок 	= "Более подробно о физическом лице " + ПредлагаемНаименование + "...";
	КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФизлицаПриИзменении(Элемент)
	
	ВыборФизлицаПриИзмененииСервер();
	УстановитьЗаголовокВидимостьРедактироватьФизлицоОтдельно();
	
КонецПроцедуры

&НаКлиенте
Процедура ФизлицоПриИзменении(Элемент)
	
	ФизлицоПриИзмененииСервер();
	УстановитьЗаголовокВидимостьРедактироватьФизлицоОтдельно();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеФизлицаПриИзменении(Элемент)
	
	Объект.Наименование = ПолучитьНаименованиеСотрудника(ФизЛицоОбъект.Наименование);
	НаименованиеФизлицаПриИзмененииСервер();
	Модифицированность=Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ФизлицоДатаРожденияПриИзменении(Элемент)
	
	Если Год(ФизЛицоОбъект.ДатаРождения) >= Год(ТекущаяДата()) Тогда
		Предупреждение("Внимание! Возможно, неверно задана дата рождения.");
	КонецЕсли;
	Модифицированность=Истина;
	ИзмененыДанныеФизЛица=Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ФизлицоСтраховойНомерПФРПриИзменении(Элемент)
	
	ФизлицоСтраховойНомерПФРПриИзмененииСервер();
	Модифицированность=Истина;
	ИзмененыДанныеФизЛица=Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ФизлицоИННПриИзменении(Элемент)
	
	ФизлицоИННПриИзмененииСервер();
	Модифицированность=Истина;
	ИзмененыДанныеФизЛица=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ФизлицоДатаРожденияСПриИзменении(Элемент)
	
	Если Год(ФизЛицоОбъект.ДатаРождения) >= Год(ТекущаяДата()) Тогда
		Предупреждение("Внимание! Возможно, неверно задана дата рождения.");
	КонецЕсли;
	Модифицированность=истина;
	ИзмененыДанныеФизЛица=Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ФизлицоПолСПриИзменении(Элемент)
	Модифицированность=Истина;
	ИзмененыДанныеФизЛица=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ФизлицоСтраховойНомерПФРСПриИзменении(Элемент)
	ФизлицоСтраховойНомерПФР_С_ПриИзмененииСервер();
	Модифицированность=Истина;
	ИзмененыДанныеФизЛица=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ФизлицоКодИМНССПриИзменении(Элемент)
	Модифицированность=Истина;
	ИзмененыДанныеФизЛица=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ФизлицоПолПриИзменении(Элемент)
	Модифицированность=Истина;
	ИзмененыДанныеФизЛица=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ФизлицоКодИМНСПриИзменении(Элемент)
	Модифицированность=Истина;
	ИзмененыДанныеФизЛица=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ФизлицоИННСПриИзменении(Элемент)
	
	ФизлицоИНН_С_ПриИзмененииСервер();
	Модифицированность=Истина;
	ИзмененыДанныеФизЛица=Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	НаименованиеНачалоВыбораИзСпискаСервер("Наименование");
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ВыбранноеЗначение = "Произвольное" Тогда
		Текст = Объект.ПостфиксНаименования;
		ВвестиСтроку(Текст, "Введите дополнение наименования", 15);
		Объект.ПостфиксНаименования = Текст;
		Объект.Наименование = ПолучитьНаименованиеСотрудника(ФизЛицоОбъект.Наименование);
	Иначе
		Объект.Наименование = ВыбранноеЗначение;
		НаименованиеБезПостфикса = ФизлицоОбъект.Наименование;
		Объект.ПостфиксНаименования = СокрЛП(СтрЗаменить(ВыбранноеЗначение, НаименованиеБезПостфикса, ""));	
	КонецЕсли; 
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ВидДоговораПриИзменении(Элемент)
	
	ВидДоговораПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЗанятостиПриИзменении(Элемент)
	
	ВидЗанятостиПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаДоговораПриИзменении(Элемент)
	
	ДатаДоговораПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗанимаемыхСтавокРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Если Направление = 1 Тогда // увеличиваем значение
		Объект.ЗанимаемыхСтавок = Объект.ЗанимаемыхСтавок + 0.25
	Иначе // = -1 - уменьшаем значение
		Объект.ЗанимаемыхСтавок = Объект.ЗанимаемыхСтавок - 0.25
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеСНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	НаименованиеНачалоВыбораИзСпискаСервер("НаименованиеС");
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ВыбранноеЗначение = "Произвольное" Тогда
		Текст = Объект.ПостфиксНаименования;
		ВвестиСтроку(Текст, "Введите дополнение наименования", 15);
		Объект.ПостфиксНаименования = Текст;
		Объект.Наименование = ПолучитьНаименованиеСотрудника(ФизЛицоОбъект.Наименование);
	Иначе
		Объект.Наименование = ВыбранноеЗначение;
		НаименованиеБезПостфикса = ФизлицоОбъект.Наименование;
		Объект.ПостфиксНаименования = СокрЛП(СтрЗаменить(ВыбранноеЗначение, НаименованиеБезПостфикса, ""));	
	КонецЕсли;
	Модифицированность=Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеСАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ГражданствоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АдресНачальныхДанных=ЗаполнитьНачальныеДанные(мНаборЗаписейГражданство,"РегистрСведенийНаборЗаписей.удуГражданствоФизЛиц");
	ФормаВвода = ПолучитьФорму("Справочник.ФизическиеЛица.Форма.ФормаЗаписиГражданство",Новый Структура("АдресНачальныхДанных",АдресНачальныхДанных),ЭтаФорма);
	
		
	ПереданноеЗначение=ФормаВвода.ОткрытьМодально();
	Если не ПереданноеЗначение=Неопределено тогда
	     ГражданствоИзменено=Истина;
		 Если мНаборЗаписейГражданство.Количество()=0 тогда
			  мНаборЗаписейГражданство.Добавить();
		 КонецЕсли;
		 ЗаполнитьЗначенияСвойств(мНаборЗаписейГражданство[0],ПереданноеЗначение);
		 ОбновитьЭлемент("Гражданство");
	 КонецЕсли;	
	 
КонецПроцедуры

&НаКлиенте
Процедура ДатаДоговораСПриИзменении(Элемент)
	
	ДатаДоговораПриИзмененииСервер();

КонецПроцедуры

 &НаКлиенте
Процедура ЗанимаемыхСтавокСРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Если Направление = 1 Тогда // увеличиваем значение
		Объект.ЗанимаемыхСтавок = Объект.ЗанимаемыхСтавок + 0.25
	Иначе // = -1 - уменьшаем значение
		Объект.ЗанимаемыхСтавок = Объект.ЗанимаемыхСтавок - 0.25
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеОрганизацииПриИзменении(Элемент)
	
	ПодразделениеОрганизацииПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеОрганизацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = ВыбратьИзШтатногоРасписанияОрганизации("ПодразделениеОрганизации");
	
	Элемент.ВысотаСпискаВыбора = Мин(10, СписокВыбора.Количество());
	ЭлементСписка = ВыбратьИзСписка(СписокВыбора,Элемент,СписокВыбора.НайтиПоЗначению(Объект.ПодразделениеОрганизации));
	Если ЭлементСписка <> Неопределено  и Объект.ПодразделениеОрганизации <> ЭлементСписка.Значение Тогда
		Объект.ПодразделениеОрганизации = ЭлементСписка.Значение;
		ПодразделениеОрганизацииПриИзмененииСервер();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДолжностьПриИзменении(Элемент)
	
	ПодразделениеОрганизацииПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ДолжностьНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = ВыбратьИзШтатногоРасписанияОрганизации("Должность");
	
	Элемент.ВысотаСпискаВыбора = Мин(10, СписокВыбора.Количество());
	ЭлементСписка = ВыбратьИзСписка(СписокВыбора,Элемент,СписокВыбора.НайтиПоЗначению(Объект.Должность));
	Если ЭлементСписка <> Неопределено  и Объект.Должность <> ЭлементСписка.Значение Тогда
		Объект.Должность = ЭлементСписка.Значение;
		ПодразделениеОрганизацииПриИзмененииСервер();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ФамилияПриИзменении(Элемент)
	
	СформироватьФИО();
	НаименованиеФизлицаПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)
	
	СформироватьФИО();
	НаименованиеФизлицаПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчествоПриИзменении(Элемент)
	
	СформироватьФИО();
	НаименованиеФизлицаПриИзменении(Элемент);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНЫХ ПОЛЕЙ


&НаСервере
Процедура УстановитьКнопкиПечати()
	
	
	
КонецПроцедуры























