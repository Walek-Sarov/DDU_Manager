////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Формирует запрос по сотруднику
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросДляПечатиТрудовогоДоговора(ЭлементДляПечати)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("СправочникСсылка", ЭлементДляПечати);
	Запрос.УстановитьПараметр("Физлицо", ЭлементДляПечати.Физлицо);
	Запрос.УстановитьПараметр("Организация", ЭлементДляПечати.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента",	 ЭлементДляПечати.ДатаДоговора);
	
	// Выберем (если есть доступ) ответственное физлицо
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизЛицо КАК Физлицо,
	|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность,
	|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизЛицо.Наименование КАК НаименованиеФизлица,
	|	ФизическиеЛица.Комментарий
	|ПОМЕСТИТЬ ВТОтветственноеЛицо
	|ИЗ
	|	РегистрСведений.удуОтветственныеЛицаУчреждения.СрезПоследних(
	|			&ДатаДокумента,
	|			ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.РуководительОрганизации)
	|				И Учреждение = &Организация) КАК ОтветственныеЛицаОрганизацийСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизЛицо = ФизическиеЛица.Ссылка";
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтветственноеЛицоОрганизации.Должность КАК ДолжностьРуководителя,
	|	ТрудовойДоговор.НомерДоговора КАК НомерДок,
	|	ТрудовойДоговор.ДатаДоговора КАК ДатаДок,
	|	ВЫРАЗИТЬ(ТрудовойДоговор.Организация.ПолноеНаименование КАК СТРОКА(300)) КАК ПолноеНазваниеОрганизации,
	|	ЕСТЬNULL(ФИООтветственныхЛиц.Фамилия + "" "" + ФИООтветственныхЛиц.Имя + "" "" + ФИООтветственныхЛиц.Отчество, ОтветственноеЛицоОрганизации.НаименованиеФизлица) КАК ФИОРуководителя,
	|	ЕСТЬNULL(ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество, ТрудовойДоговор.Физлицо.Наименование) КАК ФИОРаботника,
	|	ТрудовойДоговор.ДатаОкончания КАК ДатаУвольнения,
	|	ТрудовойДоговор.ДатаНачала КАК ДатаПриема,
	|	ТрудовойДоговор.Должность.Наименование КАК Должность,
	|	ТрудовойДоговор.ЗанимаемыхСтавок,
	|	ТрудовойДоговор.ИспытательныйСрок,
	|	ТрудовойДоговор.ПодразделениеОрганизации.Наименование КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ТрудовойДоговор.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.удуВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|			ТОГДА ""основной работе""
	|		ИНАЧЕ ""совместительству""
	|	КОНЕЦ КАК ВидЗанятости,
	|	ПаспортныеДанныеФизЛицСрезПоследних.Серия КАК ДокументСерия,
	|	ПаспортныеДанныеФизЛицСрезПоследних.Номер КАК ДокументНомер,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДатаВыдачи КАК ДокументДатаВыдачи,
	|	ВЫРАЗИТЬ(ПаспортныеДанныеФизЛицСрезПоследних.КемВыдан КАК СТРОКА(300)) КАК ДокументКемВыдан,
	|	АдресФизЛица.Представление КАК АдресРегистрации,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(ТелефонФизЛица.Представление, """") КАК СТРОКА(100))) + ВЫБОР
	|		КОГДА (НЕ МобТелефонФизлица.Представление ЕСТЬ NULL )
	|			ТОГДА ВЫБОР
	|					КОГДА (НЕ ТелефонФизЛица.Представление ЕСТЬ NULL )
	|						ТОГДА ""; ""
	|				КОНЕЦ + ""моб. "" + (ВЫРАЗИТЬ(ЕСТЬNULL(МобТелефонФизлица.Представление, """") КАК СТРОКА(100)))
	|	КОНЕЦ КАК Телефоны,
	|	АдресОрганизации.Представление КАК АдресОрганизации,
	|	ТелефонОрганизации.Представление КАК ТелефоныОрганизации,
	|	ТрудовойДоговор.Организация.Наименование КАК НазваниеОрганизации,
	|	ТрудовойДоговор.Организация.ИНН + ""/"" + ТрудовойДоговор.Организация.КПП КАК ИНН,
	|	ТрудовойДоговор.ГрафикРаботы.ВидГрафика КАК ВидГрафика,
	|	ТрудовойДоговор.ГрафикРаботы.ДлительностьРабочейНедели КАК ДлительностьРабочейНедели,
	|	ТрудовойДоговор.ВидРасчета,
	|	ТрудовойДоговор.ТарифнаяСтавка,
	|	""руб."" КАК ВалютаТарифнойСтавки
	|ИЗ
	|	Справочник.удуСотрудникиОрганизаций КАК ТрудовойДоговор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтветственноеЛицо КАК ОтветственноеЛицоОрганизации
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуФИОФизЛиц.СрезПоследних(
	|				&ДатаДокумента,
	|				Физлицо В
	|					(ВЫБРАТЬ
	|						Ответственные.Физлицо
	|					ИЗ
	|						ВТОтветственноеЛицо КАК Ответственные)) КАК ФИООтветственныхЛиц
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуФИОФизЛиц.СрезПоследних(&ДатаДокумента, Физлицо = &Физлицо) КАК ФИОФизЛиц
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&ДатаДокумента, Физлицо = &Физлицо) КАК ПаспортныеДанныеФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК АдресФизЛица
	|		ПО (АдресФизЛица.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресМестаПропискиФизическогоЛица))
	|			И ТрудовойДоговор.Физлицо = АдресФизЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ТелефонФизЛица
	|		ПО ТрудовойДоговор.Физлицо = ТелефонФизЛица.Ссылка
	|			И (ТелефонФизЛица.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ДомашнийТелефонФизическогоЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.удуУчреждения.КонтактнаяИнформация КАК АдресОрганизации
	|		ПО (АдресОрганизации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮридическийАдресУчреждения))
	|			И ТрудовойДоговор.Организация = АдресОрганизации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.удуУчреждения.КонтактнаяИнформация КАК ТелефонОрганизации
	|		ПО ТрудовойДоговор.Организация = ТелефонОрганизации.Ссылка
	|			И (ТелефонОрганизации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонУчреждения))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК МобТелефонФизлица
	|		ПО ТрудовойДоговор.Физлицо = МобТелефонФизлица.Ссылка
	|			И (МобТелефонФизлица.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.МобильныйТелефонФизическогоЛица))
	|ГДЕ
	|	ТрудовойДоговор.Ссылка = &СправочникСсылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросДляПечати()

// Функция формирует табличный документ с печатной формой договора
	//
	// Возвращаемое значение:
	//  Табличный документ - печатная форма договора
	//
Функция СформироватьПечатнуюФормуТД(МассивОбъектов, ОбъектыПечати,ИмяМакета)

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_удуСотрудникиОрганизаций_ТД";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	ПервыйДокумент = Истина;
	
	Для Каждого  ЭлементДляПечати из МассивОбъектов цикл
	// получаем данные для печати
		Выборка = СформироватьЗапросДляПечатиТрудовогоДоговора(ЭлементДляПечати).Выбрать();
		Выборка.Следующий();
			
		// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически.
		Макет = УправлениеПечатью.ПолучитьМакет(ИмяМакета);
				
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент    = Ложь;
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
		Макет.Параметры.Заполнить(Выборка);
		Макет.Параметры.ИспытательныйСрокСтрокой = ?(НЕ ЗначениеЗаполнено(Выборка.ИспытательныйСрок),"             месяцев", "" + Выборка.ИспытательныйСрок + " месяца(ев)" );
		Макет.Параметры.РежимРаботы = "" + Выборка.ВидГрафика + "; " + Выборка.ДлительностьРабочейНедели + " - часовая рабочая неделя";
		Макет.Параметры.ФормаОплаты = "Форма оплаты: " + Выборка.ВидРасчета + "; Оклад (тариф) = " + Выборка.ТарифнаяСтавка + " ("+Выборка.ВалютаТарифнойСтавки+")";  
		Макет.Параметры.ПолноеНазваниеОрганизации = СокрЛП(Макет.Параметры.ПолноеНазваниеОрганизации);
		Макет.Параметры.ДокументКемВыдан = СокрЛП(Макет.Параметры.ДокументКемВыдан);	
		
		ТабДокумент.Вывести(Макет);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ЭлементДляПечати);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // СформироватьПечатнуюФормуАвансовогоОтчета()


///////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Процедура печати документа.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьТД") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьТД",
			"Трудовой договор",
			СформироватьПечатнуюФормуТД(МассивОбъектов, ОбъектыПечати,"Справочник.удуСотрудникиОрганизаций.ПФ_MXL_ТрудовойДоговор")
		);
		
	КонецЕсли;
		
КонецПроцедуры // Печать()

// Функция формирует уникальный номер трудового договора
// уникальность в пределах года
// 
Функция ПолучитьНомерТрудовогоДоговора(Объект) Экспорт
	
	Если Объект.Организация.Пустая() Тогда
		Возврат Объект.НомерДоговора;
	КонецЕсли;
	
	ВидыДоговоров	= Новый Массив;
	ВидыДоговоров.Добавить(Перечисления.удуВидыДоговоровСФизЛицами.ТрудовойДоговор);

	Если ВидыДоговоров.Найти(Объект.ВидДоговора) = Неопределено Тогда
		Возврат Объект.НомерДоговора;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	ДатаДоговораДляЗапроса = ?(ЗначениеЗаполнено(Объект.ДатаДоговора), Объект.ДатаДоговора, ТекущаяДата());
	
	Запрос.УстановитьПараметр("парамОрганизация",Объект.Организация);
	Запрос.УстановитьПараметр("парамНачалоГода" ,НачалоГода(НачалоДня(ДатаДоговораДляЗапроса)));
	Запрос.УстановитьПараметр("парамКонецГода"  ,КонецГода(КонецДня(ДатаДоговораДляЗапроса)));
	Запрос.УстановитьПараметр("парамВидДоговора" ,Объект.ВидДоговора);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(СотрудникиОрганизаций.НомерДоговора) КАК НомерДок
	|ИЗ
	|	Справочник.удуСотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	|	СотрудникиОрганизаций.Организация = &парамОрганизация
	|	И СотрудникиОрганизаций.ВидДоговора = &парамВидДоговора
	|	И СотрудникиОрганизаций.ДатаДоговора МЕЖДУ &парамНачалоГода И &парамКонецГода";
	
	Запрос.Текст = ТекстЗапроса;
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат Объект.Организация.Префикс + "0000001";
	Иначе
		
		СтрокаРезультата = Запрос.Выполнить().Выгрузить()[0];
		Если НЕ ЗначениеЗаполнено(СтрокаРезультата.НомерДок) Тогда
			Возврат Объект.Организация.Префикс + "0000001";
		Иначе
			Возврат удуФизическиеЛица.ПолучитьСледующийНомер(СокрП(СтрокаРезультата.НомерДок));
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецФункции // ПолучитьНомерТрудовогоДоговора()

// Функция формирует очередной табельный номер сотрудника
// уникальность в пределах организации и вида договора
// Возвращаемое значение:
//   Строка   – табельный номер
//
Функция ПолучитьОчереднойТабельныйНомер(Объект) Экспорт
	
	Если Не ЗначениеЗаполнено(Объект.ВидДоговора) Тогда
		Возврат "";
	КонецЕсли;
	
	Префикс = "";
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("парамОрганизация",Объект.Организация);
	парамВидДоговора = Новый Массив;
	
	удуФизическиеЛица.ЗаполнитьПараметрыВидовДоговоров(парамВидДоговора, Объект.ВидДоговора, Префикс);
	
	Запрос.УстановитьПараметр("парамВидДоговора",парамВидДоговора);
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(СотрудникиОрганизаций.Код) КАК Код
	|ИЗ
	|	Справочник.удуСотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	|	СотрудникиОрганизаций.Организация = &парамОрганизация
	|	И СотрудникиОрганизаций.ВидДоговора В(&парамВидДоговора)
	|	И СотрудникиОрганизаций.Ссылка <> &Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	РезультатаЗапроса = Запрос.Выполнить();
	Если РезультатаЗапроса.Пустой() Тогда
		Возврат ?(ЗначениеЗаполнено(Префикс), Префикс + "000000001", "0000000001");
	Иначе
		СтрокаРезультата = РезультатаЗапроса.Выгрузить()[0];
		Если НЕ ЗначениеЗаполнено(СтрокаРезультата.Код) Тогда
			Возврат ?(ЗначениеЗаполнено(Префикс), Префикс + "000000001", "0000000001");
		Иначе
			Возврат удуФизическиеЛица.ПолучитьСледующийНомер(СокрП(СтрокаРезультата.Код));
		КонецЕсли;
	КонецЕсли;
	
КонецФункции // ПолучитьОчереднойТабельныйНомер()

Процедура ПроверитьНомерТрудовогоДоговора(НачальнаяДатаДокумента,Объект) Экспорт
	
	// Определяем разность старой и новой даты договора.
	РазностьДат = НачалоГода(НачальнаяДатаДокумента) - НачалоГода(Объект.ДатаДоговора);
	
	Если РазностьДат <> 0 Тогда
		Объект.НомерДоговора = ПолучитьНомерТрудовогоДоговора(Объект);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьНомерТрудовогоДоговора()


