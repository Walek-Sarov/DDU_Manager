
//////////////////////////////////////////////////////////////////////////////// 
// ПРОЦЕДУРЫ И ФУНКЦИИ 
// 


// Вовращает значение Перечисление.удуСтатусОтправки в зависимости от строкового параметра
// Параметры: 
//		Статус - строка "Текущий" или "Закрытый", "Отправленный".
//
&НаСервере
Функция СтатусОтправки(Знач Статус)
	Если Статус = "Текущий" Тогда
		Возврат	Перечисления.удуСтатусОтправки.Текущий;
	КонецЕсли;
	Если Статус = "Закрытый" Тогда
		Возврат	Перечисления.удуСтатусОтправки.Закрытый;
	КонецЕсли;
	Если Статус = "Отправленный" Тогда
		Возврат	Перечисления.удуСтатусОтправки.Отправленный;
	КонецЕсли;

	Возврат "";
КонецФункции // СтатусОтправки()

&НаСервере
Функция СтатусЗакрытый()
	Возврат Объект.Статус = Перечисления.удуСтатусОтправки.Закрытый;
КонецФункции // СтатусЗакрытый()

&НаСервере
Процедура ЗаполнитьАдресаКорреспондентов()
	Для Каждого Элем Из Объект.Пакеты Цикл
		// Определяем табличную часть, содержащую первичную информацию по контактной информации.
		// Для корреспондента-физ.лица и родителя - это табличная часть самих субъектов (если они указаны).
		// В остальных случаях - табличная часть Справочника Корреспонденты.
		АдресТЧ = Элем.Корреспондент.КонтактнаяИнформация;
		Если Элем.Корреспондент.ВидКорреспондента = Перечисления.ВидыКорреспондентов.ФизЛицо 
			И ЗначениеЗаполнено(Элем.Корреспондент.ФизЛицо) Тогда			
			АдресТЧ = Элем.Корреспондент.ФизЛицо.КонтактнаяИнформация;
		ИначеЕсли Элем.Корреспондент.ВидКорреспондента = Перечисления.ВидыКорреспондентов.Родитель 
			И ЗначениеЗаполнено(Элем.Корреспондент.удуРодитель) Тогда			
			АдресТЧ = Элем.Корреспондент.удуРодитель.КонтактнаяИнформация;
		КонецЕсли;
		
		ПочтовыйАдрес = "";
		ФактическийАдрес = "";
		ЮридическийАдрес = "";
		
		Для Каждого ЭлемТЧ Из АдресТЧ Цикл
			Если 		ЭлемТЧ.Вид = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКорреспондента Тогда
				ПочтовыйАдрес = ЭлемТЧ.Представление;
				
			ИначеЕсли 	ЭлемТЧ.Вид = Справочники.ВидыКонтактнойИнформации.ФактическийАдресКорреспондента
				ИЛИ		ЭлемТЧ.Вид = Справочники.ВидыКонтактнойИнформации.АдресМестаПроживанияРодителя Тогда
				ФактическийАдрес = ЭлемТЧ.Представление;
				
			ИначеЕсли 	ЭлемТЧ.Вид = Справочники.ВидыКонтактнойИнформации.ЮридическийАдресКорреспондента 
				ИЛИ 	ЭлемТЧ.Вид = Справочники.ВидыКонтактнойИнформации.АдресМестаПропискиФизическогоЛица
				ИЛИ		ЭлемТЧ.Вид = Справочники.ВидыКонтактнойИнформации.АдресМестаПропискиРодителя Тогда
				ЮридическийАдрес = ЭлемТЧ.Представление;
				
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеЗаполнено(ПочтовыйАдрес) Тогда
			Элем.Адрес = ПочтовыйАдрес;
		ИначеЕсли ЗначениеЗаполнено(ФактическийАдрес) Тогда 
			Элем.Адрес = ФактическийАдрес;
		ИначеЕсли ЗначениеЗаполнено(ЮридическийАдрес) Тогда 
			Элем.Адрес = ЮридическийАдрес;
		КонецЕсли;
		
	КонецЦикла;
	Записать();
	
КонецПроцедуры // ЗаполнитьАдресаКорреспондентов


//////////////////////////////////////////////////////////////////////////////// 
// ПРОЦЕДУРЫ И ФУНКЦИИ РЕГИСТРАЦИИ
//


// Сформировать РегистрационныйНомер РеестраОтправки в зависимости от установленного
// Нумератора.
//
&НаСервере
Процедура ЗарегистрироватьНаСервере()
	// Если список получателей пуст, то не закрывать реестр
	Если Объект.Документы.Количество() > 0 Тогда
		Нумератор = Нумерация.ПолучитьНумераторДокумента(Объект); 
		Если ЗначениеЗаполнено(Нумератор) Тогда // автоматическая нумерация
			СформироватьЧисловойНомерДокумента();
			СформироватьСтроковыйНомерДокумента();
		КонецЕсли;	
		Объект.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
КонецПроцедуры // ЗарегистрироватьНаСервере()

// Выполнить Процедуру СформироватьЧисловойНомерДокументаРеестры из общего модуля Нумерация.
&НаСервере
Процедура СформироватьЧисловойНомерДокумента()
	Нумерация.СформироватьЧисловойНомерДокументаРеестры(Объект, Объект.ЧисловойНомер);
КонецПроцедуры // СформироватьЧисловойНомерДокумента

// Выполнить Процедуру СформироватьСтроковыйНомерДокументаРеестры из общего модуля Нумерация.
&НаСервере
Процедура СформироватьСтроковыйНомерДокумента()
	ОписанияОшибок = Новый СписокЗначений;
	Нумерация.СформироватьСтроковыйНомерДокументаРеестры(Объект, Объект.РегистрационныйНомер, ОписанияОшибок);
	
	Для Каждого ОписаниеОшибки Из ОписанияОшибок Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ОписаниеОшибки.Представление,,
			ОписаниеОшибки.Значение,
			"Объект");
	КонецЦикла;	
КонецПроцедуры	// СформироватьСтроковыйНомерДокументаРеестры()

&НаСервере
Функция СпособНумерацииАвтоматическая()
	Возврат ?(Объект.ТипРеестра.СпособНумерации = Перечисления.СпособыНумерации.Автоматически, Истина,Ложь);
КонецФункции // СпособНумерацииАвтоматическая()

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
// 
 
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ФильтрКорреспондент = Ложь;
	УстановитьДоступностьРеквизитов();
	Если НЕ ЗначениеЗаполнено(Объект.Статус) Тогда
		Объект.Статус =  СтатусОтправки("Текущий");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Не ЗначениеЗаполнено(Объект.ЧисловойНомер) Тогда
		Объект.ЧисловойНомер = 0;
	КонецЕсли;
	ЗаполнитьАдресаКорреспондентов();
		
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ЗначениеЗаполнено(Нумератор) Тогда // автоматическая нумерация
		Нумерация.ЗаписатьОчереднойНомер(Нумератор, Объект);
	КонецЕсли;
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
// 

// Заполнить реквизит РеестраОтправки.Статус значением Перечисления.СтатусыОтправки.Закрытый, 
// заполнить реквизиты Справочника.ИсходящиеДокументы группы отправка(Отправлен, ДатаОтправки, СпособОтправки) в
// соответствии с РеестромОтправки и запретить пользователям дальнейшее изменение реквизитов РеестраОтправки.
//
&НаКлиенте
Процедура ЗакрытьРеестр(Команда)
	Если НЕ СтатусЗакрытый() Тогда
		Ответ = Вопрос("Вы уверены, что хотите закрыть реестр отправлений?",РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Объект.Статус = СтатусОтправки("Закрытый");
			УстановитьДоступностьРеквизитов();
			Объект.ДатаЗакрытия = ТекущаяДата();
			Записать();
		КонецЕсли;
	Иначе 
		Вопрос("Данный реестр уже закрыт",РежимДиалогаВопрос.ОК);
	КонецЕсли;
КонецПроцедуры // ЗакрытьРеестр()

&НаСервере
Процедура ОтправитьРеестрНаСервере()
	Попытка
		НачатьТранзакцию();
		ПеренумероватьНаСервере();
		Объект.Статус = СтатусОтправки("Отправленный");
		Объект.ДатаОтправки = ТекущаяДата();
		ДобавитьВОтправленные();
		УстановитьДоступностьРеквизитов();
		ЗарегистрироватьНаСервере();
		Объект.Наименование = Объект.Наименование + " (№ " + Объект.РегистрационныйНомер + " от " + Объект.ДатаОтправки + ")";
		Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
КонецПроцедуры // ОтправитьРеестрНаСервере()

&НаКлиенте
Процедура ОтправитьРеестр(Команда)
	
	Если Объект.Статус <> СтатусОтправки("Отправленный") Тогда
		ЕСли Объект.Пакеты.Количество() > 0 Тогда 
			Если ЗначениеЗаполнено(Объект.РегистрационныйНомер) И НЕ СпособНумерацииАвтоматическая()
				ИЛИ СпособНумерацииАвтоматическая() Тогда
				Ответ = Вопрос("Реестр будет не доступен для изменений. Продолжить?",РежимДиалогаВопрос.ОКОтмена);
				Если Ответ = КодВозвратаДиалога.ОК Тогда
					Попытка
						ОтправитьРеестрНаСервере();
					Исключение
						Вопрос("При записи элемента справочника возникла ошибка. Данные не могут быть записаны.",РежимДиалогаВопрос.ОК);
					КонецПопытки;
					
				КонецЕсли;
			Иначе
				Вопрос("Поле регистрационного номера не заполнено",РежимДиалогаВопрос.ОК);
			КонецЕсли;
			
		Иначе
		Вопрос("Реестр не может быть закрыт, т.к. не содержит документов к отправке",РежимДиалогаВопрос.ОК);
		КонецЕсли;
	Иначе 
		Вопрос("Данный реестр уже отправлен",РежимДиалогаВопрос.ОК);
	КонецЕсли;
КонецПроцедуры

// Установить доступность реквизитов Справочника.РеестрыОтправки на формеЭлемента пользователю.
// Выполняется ПриОткрытии ФормыЭлемента, при выполнении Команды.ОтправитьИЗакрыть.
//
&НаСервере
Процедура УстановитьДоступностьРеквизитов()
	// нумерация автоматическая
	Элементы.РегистрационныйНомер.ТолькоПросмотр = СпособНумерацииАвтоматическая();
			
	Элементы.ДатаОтправки.Доступность = Ложь;
	Элементы.Статус.Доступность = Ложь;
	
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
	Если Объект.Статус = СтатусОтправки("Текущий") Тогда
		Элементы.ДатаОтправки.Доступность = Истина;
		Элементы.Статус.Доступность = Истина;
		Элементы.СписокДокументов.Доступность = Истина;
		Элементы.ТипРеестра.Доступность = Истина;

		Элементы.ОтправитьРеестр.Доступность = Ложь;
		Элементы.ЗакрытьРеестр.Доступность = Истина;
		Элементы.ИзменитьПакет.Видимость = Ложь;
		Элементы.ДатаОтправки.Видимость = Ложь;
		
		Элементы.ПакетыПроверитьОдинаковыхКорреспондентов.Видимость = Ложь;
	ИначеЕсли Объект.Статус = СтатусОтправки("Закрытый") Тогда
		Элементы.ДатаОтправки.Доступность = Истина;
		Элементы.Статус.Доступность = Ложь;
				
		Элементы.ТипРеестра.Доступность = Ложь;
		Элементы.ОтправитьРеестр.Доступность = Истина;
		Элементы.ЗакрытьРеестр.Доступность = Ложь;
		Элементы.ИзменитьПакет.Видимость = Истина;
		Элементы.ДатаОтправки.Видимость = Ложь;
		
		Элементы.СписокДокументовУдалитьДок.Видимость = Истина;
		Элементы.ПакетыПроверитьОдинаковыхКорреспондентов.Видимость = Истина;
	Иначе
		Объект.Статус = СтатусОтправки("Отправленный");
		Объект.ДатаОтправки = ТекущаяДата();
		Элементы.ДатаОтправки.Доступность = Ложь;
		Элементы.ДатаОтправки.Видимость = Истина;
		Если ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда
			Элементы.РегистрационныйНомер.Доступность = Ложь;
		КонецЕсли;
		
		Элементы.Статус.Доступность = Ложь;
		Элементы.ТипРеестра.Доступность = Ложь;
		Элементы.ОтправитьРеестр.Видимость = Ложь;
		Элементы.ЗакрытьРеестр.Видимость = Ложь;
		Элементы.ИзменитьПакет.Видимость = Ложь;
		Элементы.СписокДокументовУдалитьДок.Видимость = Ложь;
		Элементы.ПакетыПроверитьОдинаковыхКорреспондентов.Видимость = Ложь;
	КонецЕсли;
	КонецЕсли;
КонецПроцедуры // УстановитьДоступностьРеквизитов()

///////////////////////////////////////////////////////////////////////////////
// РАБОТА С ЗАКРЫТЫМ РЕЕСТРОМ
&НаКлиенте
Процедура УдалениеПустогоПакета()
	Если СписокДокументов.Количество() = 0 Тогда 
		Объект.Пакеты.Удалить(Элементы.Пакеты.ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры // УдалениеПустогоПакета()


&НаКлиенте
Процедура ПереместитьВДругойПакет(Команда)
	Если Элементы.СписокДокументов.ВыделенныеСтроки.Количество() > 0 Тогда
		Пар = Новый Структура("РеестрСсылка,Номер, Корреспондент",Объект.Ссылка,Элементы.Пакеты.ТекущиеДанные.Номер,Элементы.Пакеты.ТекущиеДанные.Корреспондент);
		Результат = ОткрытьФормуМодально("ОбщаяФорма.удуВыборПакетаРеестраОтправки",Пар);
		Если ТипЗнч(Результат) = Тип("Число") Тогда
			Для Каждого Элем Из Объект.Документы Цикл
				Если Элем.Документ = Элементы.СписокДокументов.ТекущиеДанные.Документ
					И Элем.Адресат = Элементы.СписокДокументов.ТекущиеДанные.Адресат
					И Элем.НомерПакета = Элементы.Пакеты.ТекущиеДанные.Номер Тогда
					Элем.НомерПакета = Результат;
				КонецЕсли;
			КонецЦикла;
			Записать();
			ЗаполнитьТекущиеДокументы(Элементы.Пакеты.ТекущиеДанные.Номер);	
			ОбновитьОтображениеДанных();
			УдалениеПустогоПакета();
			Записать();
		КонецЕсли;
	Иначе
		Вопрос("Документ для перемещения не выбран",РежимДиалогаВопрос.ОК);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПереместитьВНовыйНаСервере()
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МАКСИМУМ(удуРеестрыОтправкиПакеты.Номер) КАК Номер
	|ИЗ
	|	Справочник.удуРеестрыОтправки.Пакеты КАК удуРеестрыОтправкиПакеты
	|ГДЕ
	|	удуРеестрыОтправкиПакеты.Ссылка = &Ссылка"
	);	
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Номер = 1;
	Пока Выборка.Следующий() Цикл
		Номер = Выборка.Номер + 1;	
	КонецЦикла;
	Возврат Номер;	
КонецФункции // ПереместитьВНовыйНаСервере()

&НаКлиенте
Процедура ПереместитьВНовый(Команда)
	Если СписокДокументов.Количество() > 0 Тогда
	Если Элементы.СписокДокументов.ВыделенныеСтроки.Количество() > 0 Тогда
		Номер = ПереместитьВНовыйНаСервере();
		НоваяСтрока = Объект.Пакеты.Добавить();
		НоваяСтрока.Номер = Номер;
		НоваяСтрока.Корреспондент = Элементы.Пакеты.ТекущиеДанные.Корреспондент;
		НоваяСтрока.Адрес = Элементы.Пакеты.ТекущиеДанные.Адрес;
		Для Каждого Элем Из Объект.Документы Цикл
			Если Элем.Документ = Элементы.СписокДокументов.ТекущиеДанные.Документ
				И Элем.Адресат = Элементы.СписокДокументов.ТекущиеДанные.Адресат
				И Элем.НомерПакета = Элементы.Пакеты.ТекущиеДанные.Номер Тогда
				Элем.НомерПакета = Номер;
			КонецЕсли;
		КонецЦикла;
		Записать();
		ЗаполнитьТекущиеДокументы(Элементы.Пакеты.ТекущиеДанные.Номер);	
		УдалениеПустогоПакета();
		ОбновитьОтображениеДанных();
		Записать();
		
	Иначе 
		Вопрос("Документ для перемещения не выбран.",РежимДиалогаВопрос.ОК);
	КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПакетыПриАктивизацииСтроки(Элемент)
	Если Объект.Пакеты.Количество() > 0 Тогда
		Если Элементы.Пакеты.ВыделенныеСтроки.Количество() > 0 Тогда
			НомерПакета = Элементы.Пакеты.ТекущиеДанные.Номер;
		Иначе
			НомерПакета = 0;
		КонецЕсли;
        		
		ЗаполнитьТекущиеДокументы(НомерПакета);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекущиеДокументы(Знач НомерПакета)
	СписокДокументов.Очистить();
		
	Запрос = Новый Запрос(
	 "ВЫБРАТЬ
	 |	удуРеестрыОтправкиДокументы.Документ,
	 |	удуРеестрыОтправкиДокументы.Адресат
	 |ИЗ
	 |	Справочник.удуРеестрыОтправки.Документы КАК удуРеестрыОтправкиДокументы
	 |ГДЕ
	 |	удуРеестрыОтправкиДокументы.Ссылка = &Ссылка
	 |	И удуРеестрыОтправкиДокументы.НомерПакета = &НомерПакета"
	);
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("НомерПакета",НомерПакета);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СписокДокументов.Добавить();	
		НоваяСтрока.Документ = Выборка.Документ;
		НоваяСтрока.Адресат = Выборка.Адресат;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьТекущиеДокументы()

&НаСервере
Процедура ВосстановитьВНеотправленные(Знач Док)
	Запись = РегистрыСведений.удуНеотправленныеИсхДокументы.СоздатьМенеджерЗаписи();
	Запись.Документ = Док.Документ;
	Запись.Получатель = Док.Корр;
	Запись.Адресат = Док.Адресат;
	Запись.ВидДоставки = Объект.ТипРеестра.СпособОтправки;
	Запись.Записать();
КонецПроцедуры // ВосстановитьВНеотправленные()

&НаКлиенте
Процедура УдалитьДок(Команда)
	Для Каждого Элем ИЗ Объект.Документы Цикл
		Если Элем.НомерПакета = Элементы.Пакеты.ТекущиеДанные.Номер 
			И Элем.Документ = Элементы.СписокДокументов.ТекущиеДанные.Документ 
			И Элем.Адресат = Элементы.СписокДокументов.ТекущиеДанные.Адресат  Тогда
			Пар = Новый Структура("Документ,Адресат, Корр",Элем.Документ,Элем.Адресат,Элементы.Пакеты.ТекущиеДанные.Корреспондент);
			ВосстановитьВНеотправленные(Пар);
			Объект.Документы.Удалить(Элем);
			Записать();
			
			СписокДокументов.Удалить(Элементы.СписокДокументов.ТекущиеДанные);
			ОбновитьОтображениеДанных();
			Если СписокДокументов.Количество() = 0 Тогда
				Объект.Пакеты.Удалить(Элементы.Пакеты.ТекущиеДанные);	
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПеренумероватьНаСервере()
	Записать();
	Инкр = 1;
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	удуРеестрыОтправкиПакеты.НомерСтроки,
	|	удуРеестрыОтправкиПакеты.Номер КАК Номер
	|ИЗ
	|	Справочник.удуРеестрыОтправки.Пакеты КАК удуРеестрыОтправкиПакеты
	|ГДЕ
	|	удуРеестрыОтправкиПакеты.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер"
	);
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		НомерТекПакета = Выборка.Номер;
	//	Выборка.Номер = Инкр;
		Объект.Пакеты.НайтиСтроки(Новый Структура("Номер",Выборка.Номер))[0].Номер = Инкр;
		Для Каждого Док Из Объект.Документы Цикл
			Если Док.НомерПакета = НомерТекПакета Тогда
				Док.НомерПакета = Инкр;	
			КонецЕсли;
			
		КонецЦикла;
		Инкр = Инкр + 1;
	КонецЦикла;
	Записать();

	

КонецПроцедуры

&НаКлиенте
Процедура Перенумеровать(Команда)
	ПеренумероватьНаСервере();
	ОбновитьОтображениеДанных();
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОдинаковыхКорреспондентов(Команда)
	ПовторныеКорреспонденты = Новый Массив;
	Для Инкр = 0 По Объект.Пакеты.Количество() - 1 Цикл
		Объект.Пакеты[Инкр].ПовторныеПакеты = "";
		Для Каждого Элем Из Объект.Пакеты Цикл
			Если Объект.Пакеты[Инкр].Корреспондент = Элем.Корреспондент
				И Объект.Пакеты[Инкр].Номер <> Элем.Номер Тогда	
				Объект.Пакеты[Инкр].ПовторныеПакеты = Объект.Пакеты[Инкр].ПовторныеПакеты + Строка(Элем.Номер)+ ";";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// РАБОТА С ОТПРАВЛЕННЫМ РЕЕСТРОМ

&НаСервере
Процедура ДобавитьВОтправленные()
	НаборЗаписей = РегистрыСведений.удуОтправленныеДокументы.СоздатьНаборЗаписей();
	Для Каждого ЭлемСписка ИЗ Объект.Документы Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Документ = ЭлемСписка.Документ;
		НоваяЗапись.Адресат = ЭлемСписка.Адресат;
		НоваяЗапись.Корреспондент = Объект.Пакеты.НайтиСтроки(Новый Структура("Номер",ЭлемСписка.НомерПакета))[0].Корреспондент;
		НоваяЗапись.Основание = Объект.Ссылка;
		НоваяЗапись.Отправлен = Истина;
		НоваяЗапись.ПочтовыйАдрес = Объект.Пакеты.НайтиСтроки(Новый Структура("Номер",ЭлемСписка.НомерПакета))[0].Адрес;
		НоваяЗапись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		НоваяЗапись.Дата = Объект.ДатаОтправки;
		НоваяЗапись.ВидДоставки = Объект.ТипРеестра.СпособОтправки;
	КонецЦикла;
	НаборЗаписей.Записать(Ложь);
	
КонецПроцедуры // ДобавитьВОтправленные()

&НаКлиенте
Процедура ПакетыКорреспондентОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ЗаполнитьАдресаКорреспондентов();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если НЕ ЗначениеЗаполнено(Объект.РегистрационныйНомер) 
		И ЗначениеЗаполнено(Объект.ДатаОтправки) Тогда
		Вопрос("Регистрационный номер не заполнен",РежимДиалогаВопрос.ОК);
		Отказ = Истина;	
	КонецЕсли;
КонецПроцедуры





