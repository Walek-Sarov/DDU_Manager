////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ОтработатьИзменениеТипаНаСервере()
	Если Объект.ТипУчреждения = Перечисления.удуТипУчреждения.ДОУ Тогда
		Объект.ВидУчреждения = Перечисления.удуВидыДошкольногоУчреждения.ПустаяСсылка();
	Иначе
		Объект.ВидУчреждения = Перечисления.удуВидыОбщеобразовательногоУчреждения.ПустаяСсылка();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	// Сведения о лицензировании.
	ЭлементОтбораПоУчреждениюЛицензия = РеквизитСведенияОЛицензировании.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораПоУчреждениюЛицензия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораПоУчреждениюЛицензия.Использование = Истина;
	ЭлементОтбораПоУчреждениюЛицензия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Учреждение");
	ЭлементОтбораПоУчреждениюЛицензия.ПравоеЗначение = Объект.Ссылка;
	ЭлементОтбораПоУчреждениюЛицензия.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	// Сведения об аккредитации.
	ЭлементОтбораПоУчреждениюАккредитация = РеквизитСведенияОбАккредитации.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораПоУчреждениюАккредитация.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораПоУчреждениюАккредитация.Использование = Истина;
	ЭлементОтбораПоУчреждениюАккредитация.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Учреждение");
	ЭлементОтбораПоУчреждениюАккредитация.ПравоеЗначение = Объект.Ссылка;
	ЭлементОтбораПоУчреждениюАккредитация.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;	
	
	// Сведения об аккредитованных образовательных программах.
	ЭлементОтбораПоУчреждениюОбразовательныеПрограммы = РеквизитСведенияОбОбразовательныхПрограммах.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораПоУчреждениюОбразовательныеПрограммы.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораПоУчреждениюОбразовательныеПрограммы.Использование = Истина;
	ЭлементОтбораПоУчреждениюОбразовательныеПрограммы.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Учреждение");
	ЭлементОтбораПоУчреждениюОбразовательныеПрограммы.ПравоеЗначение = Объект.Ссылка;
	ЭлементОтбораПоУчреждениюОбразовательныеПрограммы.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;		
	
	// Сведения о реализуемых программах, проектах.
	ЭлементОтбораПоУчреждениюРеализуемыеПрограммы = РеквизитСведенияОРеализуемыхПрограммах.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораПоУчреждениюРеализуемыеПрограммы.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораПоУчреждениюРеализуемыеПрограммы.Использование = Истина;
	ЭлементОтбораПоУчреждениюРеализуемыеПрограммы.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Учреждение");
	ЭлементОтбораПоУчреждениюРеализуемыеПрограммы.ПравоеЗначение = Объект.Ссылка;
	ЭлементОтбораПоУчреждениюРеализуемыеПрограммы.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	// Сведения о социальных программах, проектах.
	ЭлементОтбораПоУчреждениюСоциальныеПрограммы = РеквизитСведенияОСоциальныхПрограммах.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораПоУчреждениюСоциальныеПрограммы.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораПоУчреждениюСоциальныеПрограммы.Использование = Истина;
	ЭлементОтбораПоУчреждениюСоциальныеПрограммы.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Учреждение");
	ЭлементОтбораПоУчреждениюСоциальныеПрограммы.ПравоеЗначение = Объект.Ссылка;
	ЭлементОтбораПоУчреждениюСоциальныеПрограммы.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;	
	
	// Сведения о направлениях доп.образования.
	ЭлементОтбораПоУчреждениюНаправления = РеквизитСведенияОНаправлениях.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораПоУчреждениюНаправления.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораПоУчреждениюНаправления.Использование = Истина;
	ЭлементОтбораПоУчреждениюНаправления.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Учреждение");
	ЭлементОтбораПоУчреждениюНаправления.ПравоеЗначение = Объект.Ссылка;
	ЭлементОтбораПоУчреждениюНаправления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;		
	
	ЭтаФорма.Элементы.ГруппаОбразовательнаяДеятельность.Доступность = ЗначениеЗаполнено(Объект.Ссылка);
	ЭтаФорма.Элементы.ГруппаРегистрационныеДанные.Доступность = ЗначениеЗаполнено(Объект.Ссылка);
	ЭтаФорма.Элементы.ГруппаПрограммыПроекты.Доступность = ЗначениеЗаполнено(Объект.Ссылка);
	
	// Обработчик подсистемы "Контактная информация".
	СписокГруппФормы = Новый СписокЗначений;
	СписокГруппФормы.Добавить("Адрес", "ГруппаАдреса");
	СписокГруппФормы.Добавить("Телефон", "ГруппаТелефоны");
	СписокГруппФормы.Добавить("Сайт", "ГруппаМэйлСайт");
	
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаКонтактнаяИнформация", СписокГруппФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаРедактироватьКлассификатор(Команда)
	Перем РеквизитБылИзменен;
	
	ТекущееЗначениеКлассификатора = СтрЗаменить(ЭтаФорма.ТекущийЭлемент.Имя, "КнопкаРедактировать", "");	
	ВыбранноеЗначениеКлассификатора = ОткрытьФормуМодально("Справочник.уду" + ТекущееЗначениеКлассификатора + ".ФормаВыбора");
	
	Если ВыбранноеЗначениеКлассификатора = Неопределено Тогда
		Возврат;
	Иначе
		Выполнить("РеквизитБылИзменен = Булево(ВыбранноеЗначениеКлассификатора <> Объект." + ТекущееЗначениеКлассификатора + ");");
		Если РеквизитБылИзменен Тогда
			Выполнить("Объект." + ТекущееЗначениеКлассификатора + " = ВыбранноеЗначениеКлассификатора;");
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// Сведения о лицензировании.
	Для Каждого СтрокаЭлемент Из РеквизитСведенияОЛицензировании.Отбор.Элементы Цикл
		Если Строка(СтрокаЭлемент.ЛевоеЗначение) = "Учреждение" Тогда
			СтрокаЭлемент.ПравоеЗначение = Объект.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	// Сведения об аккредитации.
	Для Каждого СтрокаЭлемент Из РеквизитСведенияОбАккредитации.Отбор.Элементы Цикл
		Если Строка(СтрокаЭлемент.ЛевоеЗначение) = "Учреждение" Тогда
			СтрокаЭлемент.ПравоеЗначение = Объект.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	// Сведения об аккредитованных образовательных программах.
	Для Каждого СтрокаЭлемент Из РеквизитСведенияОбОбразовательныхПрограммах.Отбор.Элементы Цикл
		Если Строка(СтрокаЭлемент.ЛевоеЗначение) = "Учреждение" Тогда
			СтрокаЭлемент.ПравоеЗначение = Объект.Ссылка;
		КонецЕсли;
	КонецЦикла;	
	
	// Сведения о реализуемых программах, проектах.
	Для Каждого СтрокаЭлемент Из РеквизитСведенияОРеализуемыхПрограммах.Отбор.Элементы Цикл
		Если Строка(СтрокаЭлемент.ЛевоеЗначение) = "Учреждение" Тогда
			СтрокаЭлемент.ПравоеЗначение = Объект.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	// Сведения о социальных программах, проектах
	Для Каждого СтрокаЭлемент Из РеквизитСведенияОСоциальныхПрограммах.Отбор.Элементы Цикл
		Если Строка(СтрокаЭлемент.ЛевоеЗначение) = "Учреждение" Тогда
			СтрокаЭлемент.ПравоеЗначение = Объект.Ссылка;
		КонецЕсли;
	КонецЦикла;	
	
	// Сведения о направлениях доп.образования.
	Для Каждого СтрокаЭлемент Из РеквизитСведенияОНаправлениях.Отбор.Элементы Цикл
		Если Строка(СтрокаЭлемент.ЛевоеЗначение) = "Учреждение" Тогда
			СтрокаЭлемент.ПравоеЗначение = Объект.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	ЭтаФорма.Элементы.ГруппаОбразовательнаяДеятельность.Доступность = ЗначениеЗаполнено(Объект.Ссылка);
	ЭтаФорма.Элементы.ГруппаРегистрационныеДанные.Доступность = ЗначениеЗаполнено(Объект.Ссылка);
	ЭтаФорма.Элементы.ГруппаПрограммыПроекты.Доступность = ЗначениеЗаполнено(Объект.Ссылка);
	
	// Сделаем данное учреждение основным (если таковое отсутствует).
	Если Не ЗначениеЗаполнено(Константы.удуОсновноеУчреждение.Получить()) Тогда
		Константы.удуОсновноеУчреждение.Установить(Объект.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// Обработчик подсистемы "Контактная информация".
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);		
КонецПроцедуры

&НаКлиенте
Процедура ТипУчрежденияПриИзменении(Элемент)
	ОтработатьИзменениеТипаНаСервере();	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "КОНТАКТНАЯ ИНФОРМАЦИЯ"

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)	
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтаФорма, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтаФорма, Элемент, Модифицированность, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЭтаФорма.ОбновитьОтображениеДанных();
КонецПроцедуры
