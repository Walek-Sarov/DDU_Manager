
//////////////////////////////////////////////////////////////////////////////// 
// ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

&НаКлиенте
Функция ДокументЗарегистрирован()
	
	Возврат ЗначениеЗаполнено(Объект.РегистрационныйНомер);
	
КонецФункции	

&НаСервере
Процедура УстановитьДоступностьРеквизитовРегистрации()
	
	Если Не ЗначениеЗаполнено(Объект.ВидДокумента) И Делопроизводство.ИспользоватьВидыИсходящихДокументов() Тогда // не известен вид нумерации
		Элементы.РегистрационныйНомер.Доступность = Ложь;
		Элементы.ДатаРегистрации.Доступность = Ложь;
		Команды.Зарегистрировать.Подсказка = "Зарегистрировать";
	Иначе
		Если ЗначениеЗаполнено(Нумератор) Тогда // автоматическая нумерация
			
			Если ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда // документ зарегистрирован
				Элементы.РегистрационныйНомер.Доступность = Истина;
				Элементы.ДатаРегистрации.Доступность = Истина;
				Команды.Зарегистрировать.Подсказка = "Перерегистрировать";
				Элементы.РегистрационныйНомер.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
			Иначе
				Элементы.РегистрационныйНомер.Доступность = Ложь;
				Элементы.ДатаРегистрации.Доступность = Ложь;
				Команды.Зарегистрировать.Подсказка = "Зарегистрировать";
			КонецЕсли;
			
		Иначе // ручная нумерация
			Элементы.РегистрационныйНомер.Доступность = Истина;
			Элементы.ДатаРегистрации.Доступность = Истина;
			Команды.Зарегистрировать.Подсказка = "Зарегистрировать";
			Элементы.РегистрационныйНомер.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда // документ зарегистрирован
		Элементы.Отправлен.Доступность = Истина;
		Элементы.ДатаОтправки.Доступность = Объект.Отправлен;
		Элементы.СпособОтправки.Доступность = Объект.Отправлен;
	Иначе
		Элементы.Отправлен.Доступность = Ложь;
		Элементы.СпособОтправки.Доступность = Ложь;
		Элементы.ДатаОтправки.Доступность = Ложь;
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьЧисловойНомерДокумента()
	
	Нумерация.СформироватьЧисловойНомерДокумента(Объект, Объект.ЧисловойНомер);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСтроковыйНомерДокумента()
	
	// Дошкольное учреждение
	Если ЗначениеЗаполнено(Объект.Подготовил) И  Не ЗначениеЗаполнено(Объект.Подразделение) Тогда 
		Объект.Подразделение = РаботаСПользователями.ПолучитьПодразделение(Объект.Подготовил);
	КонецЕсли;
	//
	ОписанияОшибок = Новый СписокЗначений;
	Нумерация.СформироватьСтроковыйНомерДокумента(Объект, Объект.РегистрационныйНомер, ОписанияОшибок);
	
	Для Каждого ОписаниеОшибки Из ОписанияОшибок Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ОписаниеОшибки.Представление,,
			ОписаниеОшибки.Значение,
			"Объект");
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ОбновитьСтроковыйНомерДокумента(ИзмененоПоле)
	
	Если Не ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда 
		Возврат;
	КонецЕсли;
	
	ОписанияОшибок = Новый СписокЗначений;
	Нумерация.СформироватьСтроковыйНомерДокумента(Объект, Объект.РегистрационныйНомер, ОписанияОшибок, ИзмененоПоле);
	
	Для Каждого ОписаниеОшибки Из ОписанияОшибок Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ОписаниеОшибки.Представление,,
			ОписаниеОшибки.Значение,
			"Объект");
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ОсвободитьНомерДокумента()
	
	Нумерация.ОсвободитьНомерДокумента(Нумератор, Объект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСрокИсполнения()
	
	СрокИсполненияДней = Объект.ВидДокумента.СрокИсполнения;
	Если Не ЗначениеЗаполнено(Объект.СрокИсполнения) И ЗначениеЗаполнено(СрокИсполненияДней) Тогда 
		Объект.СрокИсполнения = Объект.ДатаРегистрации + 24 * 3600 * СрокИсполненияДней;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьПоСостоянию()
	
	Делопроизводство.УстановитьДоступностьПоСостоянию(ЭтаФорма, Состояние, ДоступныеПоля);
	
КонецПроцедуры	

&НаСервере
Функция ПолучательЮрЛицо()
	
	Возврат ЗначениеЗаполнено(Объект.Получатель) 
		  И ТипЗнч(Объект.Получатель) = Тип("СправочникСсылка.Корреспонденты") 
		  И Объект.Получатель.ВидКорреспондента = Перечисления.ВидыКорреспондентов.ЮрЛицо;
	
КонецФункции

&НаСервере
Процедура ПриИзмененииВидаДокумента()
	
	НовыйНумератор = Нумерация.ПолучитьНумераторДокумента(Объект);
	
	Если ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда // документ зарегистрирован
		Если Нумератор <> НовыйНумератор Тогда 
			ОсвободитьНомерДокумента();
			Нумератор = НовыйНумератор;
			СформироватьЧисловойНомерДокумента();
			СформироватьСтроковыйНомерДокумента();
		Иначе	
			ОбновитьСтроковыйНомерДокумента("ВидДокумента");
		КонецЕсли;	
		УстановитьСрокИсполнения();
	Иначе	
		Нумератор = НовыйНумератор;
	КонецЕсли;
	
	// доступность реквизитов регистрации
	УстановитьДоступностьРеквизитовРегистрации();
	
	удуУстановитьВидимостьСведенийОРебенке();
	
КонецПроцедуры	

&НаСервере
Функция ЭлементыДляСохранения()
	
	СохраняемыеЭлементы = Новый Структура;
	СохраняемыеЭлементы.Вставить("Заголовок", Объект.Заголовок);
	СохраняемыеЭлементы.Вставить("Получатель", Объект.Получатель);
	
	Если Не БыстрыйВыборВидаДокумента Тогда 
		СохраняемыеЭлементы.Вставить("ВидДокумента", Объект.ВидДокумента);									  
	КонецЕсли;
	
	Возврат СохранениеВводимыхЗначений.СформироватьТаблицуСохраненяемыхЭлементов(СохраняемыеЭлементы);
	
КонецФункции


&НаСервере
Процедура ДобавитьВСписокНеотправленных()
	
	Если НЕ  Объект.Отправлен И ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда
		НаборЗаписей=РегистрыСведений.удуНеотправленныеИсхДокументы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(Объект.Ссылка);
				
		Если ТипЗнч(Объект.Получатель) = Тип("СправочникСсылка.Корреспонденты") Тогда
			НоваяЗапись = НаборЗаписей.Добавить();	
			НоваяЗапись.Документ = Объект.Ссылка;
			НоваяЗапись.Получатель = Объект.Получатель;
			НоваяЗапись.Адресат = Объект.Адресат;  
		КонецЕсли;
		
		Если ТипЗнч(Объект.Получатель) = Тип("СправочникСсылка.СпискиРассылкиПоКорреспондентам") Тогда
			Для Каждого Корреспондент Из Объект.Получатель.Получатели Цикл
				НоваяЗапись = НаборЗаписей.Добавить();		
				НоваяЗапись.Документ = Объект.Ссылка;
				НоваяЗапись.Получатель = Корреспондент.Получатель;
				НоваяЗапись.Адресат = Корреспондент.Адресат;
			КонецЦикла;
		КонецЕсли;
		
		НаборЗаписей.Записать();
		
	КонецЕсли;
		
КонецПроцедуры // ДобавитьВСписокНеотправленных()

&НаСервере
Функция ПолучитьКонстантуИспользоватьРеестры()
	УстановитьПривилегированныйРежим(Истина);
	ИспользоватьРеестрыОтправки = Константы.удуИспользоватьРеестрыОтправки.Получить();
	УстановитьПривилегированныйРежим(Ложь);
	Возврат ИспользоватьРеестрыОтправки;
КонецФункции // ПолучитьКонстантуИспользоватьРеестры()


//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
// 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НачальнаяДатаРегистрации = Объект.ДатаРегистрации;
	Нумератор = Нумерация.ПолучитьНумераторДокумента(Объект); 
	РольДелопроизводитель = РольДоступна("РегистрацияИсходящихДокументов") Или  РольДоступна("ПолныеПрава");
	
	// список состояний
	СписокСостояний.Добавить(Перечисления.СостоянияДокументов.Проект);
	СписокСостояний.Добавить(Перечисления.СостоянияДокументов.НаСогласовании);
	СписокСостояний.Добавить(Перечисления.СостоянияДокументов.Согласован);
	СписокСостояний.Добавить(Перечисления.СостоянияДокументов.НеСогласован);
	СписокСостояний.Добавить(Перечисления.СостоянияДокументов.НаУтверждении);
	СписокСостояний.Добавить(Перечисления.СостоянияДокументов.Утвержден);
	СписокСостояний.Добавить(Перечисления.СостоянияДокументов.НеУтвержден);
	СписокСостояний.Добавить(Перечисления.СостоянияДокументов.НаРегистрации);
	Если РольДелопроизводитель Тогда 
		СписокСостояний.Добавить(Перечисления.СостоянияДокументов.Зарегистрирован);
	КонецЕсли;	
	
	// ввод нового
	Если Объект.Ссылка.Пустая() Тогда 
		Состояние = Перечисления.СостоянияДокументов.Проект;
	Иначе	
		Состояние = Делопроизводство.ПолучитьСостояниеДокумента(Объект.Ссылка);
	КонецЕсли;
	УстановитьДоступностьПоСостоянию();
	
	// файлы
	Файлы.Параметры.УстановитьЗначениеПараметра("ВладелецФайла", Объект.Ссылка);
	Файлы.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", ОбщегоНазначения.ТекущийПользователь());
	РаботаСФайлами.ЗаполнитьУсловноеОформлениеСпискаФайлов(Файлы);
	НайтиИПоказатьКоличествоФайлов();
	
	ПоказыватьКолонкуРазмер = РаботаСФайлами.ПолучитьПоказыватьКолонкуРазмер();	
	Если ПоказыватьКолонкуРазмер = Ложь Тогда
		Элементы.ТекущаяВерсияРазмер.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("МассивФайлов") Тогда
		МассивФайлов = Параметры.МассивФайлов;
		Если МассивФайлов.Количество() <> 0 Тогда
			Для Каждого ФайлПринятый Из МассивФайлов Цикл
				Файл = Новый Файл(ФайлПринятый);
				НоваяСтрока = ФайлыДобавленные.Добавить();
				НоваяСтрока.Наименование = Файл.ИмяБезРасширения;
				НоваяСтрока.ПолныйПуть = ФайлПринятый;
				НоваяСтрока.ИндексКартинки = РаботаСФайламиКлиентСервер.ПолучитьИндексПиктограммыФайла(Файл.Расширение);
			КонецЦикла;
			
			Элементы.ГруппаСпискиФайлов.ТекущаяСтраница = Элементы.ГруппаТаблица;
			
			КоличествоФайловТаблицы = МассивФайлов.Количество();
			Элементы.ГруппаФайлы.Заголовок = ДелопроизводствоКлиентСервер.КоличествоФайловВЗаголовок(КоличествоФайловТаблицы);
			
			Если МассивФайлов.Количество() = 1 Тогда	
				Файл = Новый Файл(МассивФайлов[0]);
				Объект.Заголовок = Файл.ИмяБезРасширения;
			КонецЕсли;	
			
		КонецЕсли;	
	КонецЕсли;
	
	// выбор вида документа
	БыстрыйВыборВидаДокумента = Делопроизводство.ПолучитьРежимВыборавидаДокумента("ИсходящийДокумент");
	Элементы.ВидДокумента.БыстрыйВыбор = БыстрыйВыборВидаДокумента;
	
	// доступность элементов
	УстановитьДоступностьРеквизитовРегистрации();
	Элементы.Адресат.Доступность = ПолучательЮрЛицо() Или Не ЗначениеЗаполнено(Объект.Получатель);
	Элементы.ДатаОтправки.Доступность = Объект.Отправлен;
	Элементы.ПолученОтвет.Видимость = ЗначениеЗаполнено(Объект.ПолученОтвет);
	Элементы.Зарегистрировать.Видимость = РольДелопроизводитель; 	
	
	// Обработчик механизма "Свойства"
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаСвойства");
	
	// Обработчик подсистемы "ВерсионированиеОбъектов"	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	// Сохранение вводимых значений
	СохранениеВводимыхЗначений.ЗаполнитьСписокВыбора(ЭтаФорма, ЭлементыДляСохранения(), ЭтаФорма.ИмяФормы);
	
	удуУстановитьВидимостьСведенийОРебенке();
	
КонецПроцедуры

&НаСервере
Процедура НайтиИПоказатьКоличествоФайлов()
	
	КоличествоФайлов = 0;
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;	
	
	КоличествоФайлов = Делопроизводство.КоличествоФайлов(Объект.Ссылка);
	Элементы.ГруппаФайлы.Заголовок = ДелопроизводствоКлиентСервер.КоличествоФайловВЗаголовок(КоличествоФайлов);
	
КонецПроцедуры	

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОчиститьСообщения();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик механизма "Свойства"
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Нумератор) Тогда // автоматическая нумерация
		Нумерация.ЗаписатьОчереднойНомер(Нумератор, Объект);
	КонецЕсли;
	
	Делопроизводство.ЗаписатьСостояниеДокумента(
		ТекущийОбъект.Ссылка, 
		ТекущаяДата(), 
		Состояние, 
		ОбщегоНазначения.ТекущийПользователь());
	УстановитьДоступностьПоСостоянию();
	
	// Сохранение вводимых значений
	СохранениеВводимыхЗначений.ОбновитьСпискиВыбора(ЭтаФорма, ЭлементыДляСохранения(), ЭтаФорма.ИмяФормы);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗначениеПараметра = Файлы.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВладелецФайла"));
	Если Не ЗначениеЗаполнено(ЗначениеПараметра.Значение) Тогда 
		Файлы.Параметры.УстановитьЗначениеПараметра("ВладелецФайла", Объект.Ссылка);
	КонецЕсли;	
	
	Если ФайлыДобавленные.Количество() <> 0 Тогда
		Элементы.ГруппаСпискиФайлов.ТекущаяСтраница = Элементы.ГруппаСписок;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ДокументИзменен", Объект.Ссылка, Этаформа);
	
	Если ФайлыДобавленные.Количество() <> 0 Тогда
		
		Для Каждого ФайлТаблицы Из ФайлыДобавленные Цикл
			РаботаСФайламиКлиент.СоздатьДокументНаОсновеФайла(ФайлТаблицы.ПолныйПуть, Объект.Ссылка, ЭтаФорма, Истина);
		КонецЦикла;
		
		ФайлыДобавленные.Очистить();
	КонецЕсли;	
	
	Если Элементы.Файлы.ТекущиеДанные <> Неопределено Тогда
		УстановитьДоступностьКомманд(Элементы.Файлы.ТекущиеДанные.РедактируетТекущийПользователь,
			Элементы.Файлы.ТекущиеДанные.Редактирует);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИмпортФайловЗавершен" Тогда
		Элементы.Файлы.Обновить();
		
		Если Параметр <> Неопределено Тогда
			Элементы.Файлы.ТекущаяСтрока = Параметр;
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = "ДанныеФайлаИзменены" Тогда
		Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(Параметр, "ВладелецФайла") = Объект.Ссылка Тогда
			Элементы.Файлы.Обновить();
			
			Если Элементы.Файлы.ТекущиеДанные <> Неопределено Тогда
				УстановитьДоступностьКомманд(Элементы.Файлы.ТекущиеДанные.РедактируетТекущийПользователь,
					Элементы.Файлы.ТекущиеДанные.Редактирует);
			КонецЕсли;	
		КонецЕсли;	
 	КонецЕсли;
	
	Если ИмяСобытия = "БизнесПроцессСтартован" Тогда 
		Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(Параметр, "Предмет") = Объект.Ссылка Тогда 
			Состояние = Делопроизводство.ПолучитьСостояниеДокумента(Объект.Ссылка);
			УстановитьДоступностьПоСостоянию();
		КонецЕсли;	
	КонецЕсли;
		
	Если ИмяСобытия = "СозданФайл" Тогда
		
		Если Параметр <> Неопределено Тогда
			ВладелецФайла = Неопределено;
			Если Параметр.Свойство("Владелец", ВладелецФайла) Тогда
				Если ВладелецФайла = Объект.Ссылка Тогда
					Элементы.Файлы.Обновить();
					
					КоличествоФайлов = КоличествоФайлов + 1;
					Элементы.ГруппаФайлы.Заголовок = ДелопроизводствоКлиентСервер.КоличествоФайловВЗаголовок(КоличествоФайлов);
					
					ФайлСозданный = Неопределено;
					Если Параметр.Свойство("Файл", ФайлСозданный) Тогда
						Элементы.Файлы.ТекущаяСтрока = ФайлСозданный;
					КонецЕсли;
					
					ОповеститьОбИзменении(Объект.Ссылка);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяСобытия = "ИзмененУчетПоДетямДляИсходящихДокументов" Тогда
		Если Параметр = Объект.ВидДокумента Тогда
			удуУстановитьВидимостьСведенийОРебенке();
			ОбновитьИнтерфейс();
		КонецЕсли;
	КонецЕсли;

	
	// Обработчик механизма "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ДелопроизводствоКлиент.ПередЗакрытиемДокумента(Объект, Отказ);
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
// 

&НаСервере
Процедура ЗарегистрироватьНаСервере()
	
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;
	
	ЗанятыеФайлы = РаботаСФайлами.ПолучитьЗанятыеФайлы(Объект.Ссылка);
	Если ЗанятыеФайлы.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСТР("ru = 'Документ содержит файлы, занятые для редактирования'"),,,"Файлы");
		Возврат;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Нумератор) Тогда // автоматическая нумерация
		ОсвободитьНомерДокумента();
		
		Объект.ДатаРегистрации = ТекущаяДата();
		НачальнаяДатаРегистрации = Объект.ДатаРегистрации;
		
		// сформируем текущий номер
		СформироватьЧисловойНомерДокумента();
		СформироватьСтроковыйНомерДокумента();
	Иначе
		Если Не ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСТР(" ru = 'Не указан регистрационный номер'"),,,"Объект.РегистрационныйНомер");
			Возврат;
		КонецЕсли;
		
		Объект.ДатаРегистрации = ТекущаяДата();
		НачальнаяДатаРегистрации = Объект.ДатаРегистрации;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда // успешно сформирован номер
		Объект.Зарегистрировал = ОбщегоНазначения.ТекущийПользователь();
		Состояние = Перечисления.СостоянияДокументов.Зарегистрирован;
	Иначе	
		Объект.ДатаРегистрации = '00010101';
		НачальнаяДатаРегистрации = Объект.ДатаРегистрации;
	КонецЕсли;	
	
	УстановитьСрокИсполнения();
	УстановитьДоступностьРеквизитовРегистрации();
	
КонецПроцедуры	

&НаКлиенте
Процедура Зарегистрировать(Команда)
	
	// регистрация
	Если ЗначениеЗаполнено(Нумератор) Тогда // автоматическая нумерация
		
		Если Не ДокументЗарегистрирован()  Тогда 
			Если Не ДелопроизводствоКлиент.ПредупредитьПриРегистрации() Тогда 
				Возврат;
			КонецЕсли;	
		Иначе 
			ТекстВопроса = НСтр("ru = 'Документ будет перерегистрирован. Продолжить?'");
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			Если Ответ <> КодВозвратаДиалога.Да Тогда 
				Возврат;
			КонецЕсли;
		КонецЕсли;	
		
	Иначе
		Если Не ДелопроизводствоКлиент.ПредупредитьПриРегистрации() Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ЗарегистрироватьНаСервере();
	Если ДокументЗарегистрирован() Тогда
		Записать();
		
		ПоказатьОповещениеПользователя(
			"Изменение:", 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
			
		Если ПолучитьКонстантуИспользоватьРеестры() Тогда 
			ДобавитьВСписокНеотправленных();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////// 
// Работа с файлами
// 

&НаКлиенте
Процедура ФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КакОткрывать = РаботаСФайламиКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСФайлами().ДействиеПоДвойномуЩелчкуМыши;
	Если КакОткрывать = "ОткрыватьКарточку" Тогда
		ОткрытьЗначение(ВыбраннаяСтрока);
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = РаботаСФайлами.ПолучитьДанныеФайлаДляОткрытия(ВыбраннаяСтрока, Неопределено, ЭтаФорма.УникальныйИдентификатор);
	
	// Если уже занят для редактирования, то не спрашивать - сразу открывать
	Если ДанныеФайла.Редактирует.Пустая() Тогда
		СпрашиватьРежимРедактированияПриОткрытииФайла = РаботаСФайламиКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСФайлами().СпрашиватьРежимРедактированияПриОткрытииФайла;
		Если СпрашиватьРежимРедактированияПриОткрытииФайла = Истина Тогда
			
			Диалог = ПолучитьФорму("Справочник.Файлы.Форма.ФормаВыбораРежимаОткрытия");
			
			Результат = Диалог.ОткрытьМодально();
			Если Результат <> КодВозвратаДиалога.Ок Тогда
				Возврат;
			КонецЕсли;
			
			БольшеНеСпрашивать = Диалог.БольшеНеСпрашивать;
			Если БольшеНеСпрашивать = Истина Тогда
				РаботаСФайлами.ХранилищеОбщихНастроекСохранить("НастройкиОткрытияФайлов", "СпрашиватьРежимРедактированияПриОткрытииФайла", Ложь);
				ОбновитьПовторноИспользуемыеЗначения();
			КонецЕсли;
			
			КакОткрывать = Диалог.КакОткрывать;
			Если КакОткрывать = 1 Тогда
				РаботаСФайламиКлиент.РедактироватьФайл(ДанныеФайла);
				ОповеститьОбИзменении(ДанныеФайла.Ссылка);
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла); 
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	Если Объект.Ссылка.Пустая() Тогда 
		Предупреждение(НСтр("ru = 'Перед добавлением файлов документ необходимо записать!'"));
		Возврат;
	КонецЕсли;
	
	ВладелецФайла = Объект.Ссылка;
	ФайлОснование = Элементы.Файлы.ТекущаяСтрока;
	
	Если Не Копирование Тогда
		Попытка
			РежимСоздания = 1;
			РаботаСФайламиКлиент.СозданиеНовогоФайла(ВладелецФайла, ЭтаФорма, РежимСоздания, Истина);
		Исключение
			Инфо = ИнформацияОбОшибке();
			Предупреждение(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			                 НСтр("ru = 'Ошибка создания нового файла: %1'"),
			                 Инфо.Описание ));
		КонецПопытки;
	Иначе
		РаботаСФайламиКлиент.СкопироватьФайл(ВладелецФайла, ФайлОснование);
	КонецЕсли;
	Элементы.Файлы.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.Файлы.ТолькоПросмотр Тогда 
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда 
		Предупреждение(НСтр("ru = 'Перед добавлением файлов документ необходимо записать!'"));
		Возврат;
	КонецЕсли; 
	
	ВладелецФайлаСписка = Объект.Ссылка;
	НеОткрыватьКарточкуПослеСозданияИзФайла = Истина;	
	РаботаСФайламиКлиент.ОбработкаПеретаскиванияВЛинейныйСписок(ПараметрыПеретаскивания, ВладелецФайлаСписка, ЭтаФорма, НеОткрыватьКарточкуПослеСозданияИзФайла);
	Элементы.Файлы.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьИзСписка(Команда)
	Если Элементы.ФайлыДобавленные.ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ЗапуститьПриложение(Элементы.ФайлыДобавленные.ТекущиеДанные.ПолныйПуть);
КонецПроцедуры

&НаКлиенте
Процедура ФайлыДобавленныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.ФайлыДобавленные.ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ЗапуститьПриложение(Элементы.ФайлыДобавленные.ТекущиеДанные.ПолныйПуть);
КонецПроцедуры

&НаКлиенте
Процедура ФайлыДобавленныеПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлВыполнить()
	
	Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = РаботаСФайлами.ПолучитьДанныеФайлаДляОткрытия(Элементы.Файлы.ТекущаяСтрока, Неопределено, ЭтаФорма.УникальныйИдентификатор);
	КомандыРаботыСФайлами.Открыть(ДанныеФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	
	Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	КомандыРаботыСФайлами.Редактировать(Элементы.Файлы.ТекущаяСтрока, ЭтаФорма.УникальныйИдентификатор);
	
	УстановитьДоступностьКомманд(Элементы.Файлы.ТекущиеДанные.РедактируетТекущийПользователь,
		Элементы.Файлы.ТекущиеДанные.Редактирует);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьРедактирование(Команда)
	
	Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	КомандыРаботыСФайлами.ЗакончитьРедактирование(
		Элементы.Файлы.ТекущаяСтрока,
		ЭтаФорма.УникальныйИдентификатор,
		Элементы.Файлы.ТекущиеДанные.ХранитьВерсии,
		Элементы.Файлы.ТекущиеДанные.РедактируетТекущийПользователь,
		Элементы.Файлы.ТекущиеДанные.Редактирует);
		
	УстановитьДоступностьКомманд(Элементы.Файлы.ТекущиеДанные.РедактируетТекущийПользователь,
		Элементы.Файлы.ТекущиеДанные.Редактирует);
		
КонецПроцедуры

&НаКлиенте
Процедура Занять(Команда)
	
	Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;

	КомандыРаботыСФайлами.Занять(Элементы.Файлы.ТекущаяСтрока);
	
	УстановитьДоступностьКомманд(Элементы.Файлы.ТекущиеДанные.РедактируетТекущийПользователь,
		Элементы.Файлы.ТекущиеДанные.Редактирует);
	
КонецПроцедуры

&НаКлиенте
Процедура Освободить(Команда)
	
	Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	КомандыРаботыСФайлами.ОсвободитьФайл(
		Элементы.Файлы.ТекущаяСтрока,
		Элементы.Файлы.ТекущиеДанные.ХранитьВерсии,
		Элементы.Файлы.ТекущиеДанные.РедактируетТекущийПользователь,
		Элементы.Файлы.ТекущиеДанные.Редактирует);
		
	УстановитьДоступностьКомманд(Элементы.Файлы.ТекущиеДанные.РедактируетТекущийПользователь,
		Элементы.Файлы.ТекущиеДанные.Редактирует);
		
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	КомандыРаботыСФайлами.ОпубликоватьФайл(
		Элементы.Файлы.ТекущаяСтрока, 
		ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКак(Команда)
	
	Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = РаботаСФайлами.ПолучитьДанныеФайлаДляСохранения(Элементы.Файлы.ТекущаяСтрока, Неопределено, ЭтаФорма.УникальныйИдентификатор);
	КомандыРаботыСФайлами.СохранитьКак(ДанныеФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзФайлаНаДиске(Команда)
	Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = РаботаСФайлами.ПолучитьДанныеФайлаИРабочийКаталог(Элементы.Файлы.ТекущаяСтрока);
	КомандыРаботыСФайлами.ОбновитьИзФайлаНаДиске(ДанныеФайла, ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ИмпортФайлов(Команда)
	#Если Не ВебКлиент Тогда
		
		// заранее выбираем файлы (до открытия диалога импорта)
		Режим = РежимДиалогаВыбораФайла.Открытие;
		
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		ДиалогОткрытияФайла.ПолноеИмяФайла = "";
		Фильтр = НСтр("ru = 'Все файлы(*.*)|*.*'");
		ДиалогОткрытияФайла.Фильтр = Фильтр;
		ДиалогОткрытияФайла.МножественныйВыбор = Истина;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите файлы'");
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			МассивИменФайлов = Новый Массив;
			
			МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
			Для Каждого ИмяФайла Из МассивФайлов Цикл
				МассивИменФайлов.Добавить(ИмяФайла);
			КонецЦикла;
			
			ПараметрыИмпорта = Новый Структура("ПапкаДляДобавления, МассивИменФайлов", Объект.Ссылка, МассивИменФайлов);
			ОткрытьФорму("Справочник.Файлы.Форма.ФормаИмпортаФайлов", ПараметрыИмпорта);
		КонецЕсли;
	#Иначе	
		Предупреждение(НСтр("ru = 'В Веб-клиенте импорт файлов не поддерживается. Используйте команду ""Создать"" в списке файлов.'"));
	#КонецЕсли
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// Изменение реквизитов и флагов
// 

&НаКлиенте
Процедура СостояниеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДелопроизводствоКлиент.ОткрытьТекущееСостояниеДокумента(Объект.Ссылка, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокИсполненияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.СрокИсполнения) И (КонецДня(Объект.СрокИсполнения) < Объект.ДатаРегистрации) Тогда 
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Установленный срок ответа меньше даты регистрации документа!'"),,,
				"Объект.СрокИсполнения");
			Возврат;
	КонецЕсли;	
	
	СрокИсполненияДней = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.ВидДокумента, "СрокИсполнения");
	Если ЗначениеЗаполнено(СрокИсполненияДней) И ЗначениеЗаполнено(Объект.ДатаРегистрации) Тогда 
		Если Объект.СрокИсполнения > Объект.ДатаРегистрации + 24 * 3600 * СрокИсполненияДней Тогда 
			ОчиститьСообщения();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Установленный срок ответа превышает нормативный срок для данного вида документа!'"),,,
				"Объект.СрокИсполнения");
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправленПриИзменении(Элемент)
	
	Если Объект.Отправлен Тогда
		Объект.ДатаОтправки = ТекущаяДата();
		Объект.СпособОтправки = Делопроизводство.ПолучитьСпособДоставкиПоУмолчанию("СпособОтправки");
	Иначе
		Объект.ДатаОтправки = '00010101';
		Объект.СпособОтправки = Неопределено;
	КонецЕсли;	
	
	Элементы.ДатаОтправки.Доступность = Объект.Отправлен;
	Элементы.СпособОтправки.Доступность = Объект.Отправлен;
	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ДокументЗарегистрирован() И ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.СостоянияДокументов.Зарегистрирован") Тогда 
		СтандартнаяОбработка = Ложь;
		Предупреждение("Состояние ""Зарегистрирован"" не может быть установлено вручную. Воспользуйтесь кнопкой ""Зарегистрировать"".");
	КонецЕсли;
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////// 
// Выбор пользователей
// 

&НаКлиенте
Процедура ПодписалНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьПользователя(Элемент, Объект.Подписал);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовилНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьПользователя(Элемент, Объект.Подготовил);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьПользователя(Элемент, Объект.Ответственный);
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////// 
// Изменение полей, влияющих на номер
// 

&НаКлиенте
Процедура ДатаРегистрацииПриИзменении(Элемент)
	
	Если Нумерация.ПроверитьСменуПериодаНумерации(Объект.ДатаРегистрации, НачальнаяДатаРегистрации, Нумератор) Тогда 
		СформироватьЧисловойНомерДокумента();
		СформироватьСтроковыйНомерДокумента();
	Иначе
		ОбновитьСтроковыйНомерДокумента("ДатаРегистрации");
	КонецЕсли;	
	НачальнаяДатаРегистрации = Объект.ДатаРегистрации;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПриИзменении(Элемент)
	
	ПолучательЮрЛицо = ПолучательЮрЛицо();

	Если ПолучательЮрЛицо Тогда
		КонтактноеЛицоКорреспондента = Делопроизводство.КонтактноеЛицоКорреспондента(Объект.Получатель);
		Если ЗначениеЗаполнено(КонтактноеЛицоКорреспондента) Тогда 
			Объект.Адресат = КонтактноеЛицоКорреспондента;
		КонецЕсли;
	Иначе
		Объект.Адресат = Неопределено;
	КонецЕсли;	
	
	Элементы.Адресат.Доступность = ПолучательЮрЛицо Или Не ЗначениеЗаполнено(Объект.Получатель);
	
	ОбновитьСтроковыйНомерДокумента("Получатель");
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	
	ПриИзмененииВидаДокумента();
	
	// Обработчик механизма "Свойства"
	ОбновитьЭлементыДополнительныхРеквизитов();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Нумератор) Тогда // ручное изменение номера
		ОсвободитьНомерДокумента();
		Объект.ЧисловойНомер = -1; 
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбновитьСтроковыйНомерДокумента("Организация");
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// Выбор реквизитов с установкой параметров
// 

&НаКлиенте
Процедура ДелоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Объект.Дело) Тогда 
		КоличествоЗадач = Делопроизводство.КоличествоЗадач(Объект.Ссылка, Истина);
		Если КоличествоЗадач > 0 Тогда 
			ТекстВопроса = 
				НСтр("ru = 'По документу имеются невыполненные задачи.'") 
				+ Символы.ПС 
				+ НСтр("ru = 'Вы действительно хотите поместить документ в дело?'");
			
			Результат = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет);
			Если Результат = КодВозвратаДиалога.Нет Тогда 
				Возврат;
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	
	ДелопроизводствоКлиент.ВыбратьДело(Элемент, Объект.Дело, Объект.ДатаРегистрации, Объект.Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДелопроизводствоКлиент.ВыбратьПолучателя(Элемент, Объект.Получатель);
	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокСостояний;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресатНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Получатель) Тогда
		СтандартнаяОбработка = Ложь;
		
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не заполнено поле ""Получатель""'"),,,
			"Объект.Получатель");
	КонецЕсли;
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////// 
// Работа с документом "в ответ на"
// 

&НаКлиенте
Процедура ВОтветНаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Объект.Получатель) Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не заполнено поле ""Получатель""'"),,,
			"Объект.Получатель");
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("Отправитель", Объект.Получатель);
	ПараметрыФормы = Новый Структура("Отбор", Отбор);
	
	ФормаВыбора = ОткрытьФорму("Справочник.ВходящиеДокументы.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ МЕХАНИЗМА СВОЙСТВ

&НаКлиенте
Процедура РедактироватьСоставСвойствВыполнить()
	
	НаборыСвойствОбъекта = УправлениеСвойствамиПереопределяемый.ПолучитьНаборыСвойствПоВидуИсходящегоДокумента(Объект.ВидДокумента);
	
	Если НаборыСвойствОбъекта.Количество() = 1 Тогда
		НаборСвойствОбъекта = НаборыСвойствОбъекта.Получить(0);
	Иначе
		НаборСвойствОбъекта = НаборыСвойствОбъекта.ВыбратьЭлемент();
		Если НаборСвойствОбъекта = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормыНабораСвойств = Новый Структура("Ключ", НаборСвойствОбъекта.Значение);
	ОткрытьФормуМодально("Справочник.НаборыСвойств.Форма.ФормаЭлемента", ПараметрыФормыНабораСвойств);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	Если ЭтаФорма.__Свойства_ИспользоватьСвойства Тогда
		УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомманды(Команда, Доступность)
	Если ДоступныеПоля = "" Тогда
		Команда.Доступность = Доступность;
	ИначеЕсли ТипЗнч(ДоступныеПоля) = Тип("Структура") Тогда
		Если ДоступныеПоля.Свойство(Команда.Имя) Тогда
			Команда.Доступность = Доступность;
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомманд(РедактируетТекущийПользователь, Редактирует)
	УстановитьДоступностьКомманды(Элементы.ЗакончитьРедактирование, РедактируетТекущийПользователь);
	УстановитьДоступностьКомманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыЗакончитьРедактирование, РедактируетТекущийПользователь);
	
	УстановитьДоступностьКомманды(Элементы.СохранитьИзменения, РедактируетТекущийПользователь);
	УстановитьДоступностьКомманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыСохранитьИзменения, РедактируетТекущийПользователь);
	
	УстановитьДоступностьКомманды(Элементы.Освободить, Не Редактирует.Пустая());
	УстановитьДоступностьКомманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыОсвободить, Не Редактирует.Пустая());
	
	УстановитьДоступностьКомманды(Элементы.Занять, Редактирует.Пустая());
	УстановитьДоступностьКомманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыЗанять, Редактирует.Пустая());
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПриАктивизацииСтроки(Элемент)
	Если Элементы.Файлы.ТекущиеДанные <> Неопределено Тогда
		УстановитьДоступностьКомманд(Элементы.Файлы.ТекущиеДанные.РедактируетТекущийПользователь,
			Элементы.Файлы.ТекущиеДанные.Редактирует);
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура ПодготовилПриИзменении(Элемент)
		
	Объект.Подразделение = РаботаСПользователями.ПолучитьПодразделение(Объект.Подготовил);
	ОбновитьСтроковыйНомерДокумента("Подготовил");
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписалПриИзменении(Элемент)
	
	Объект.Подразделение = РаботаСПользователями.ПолучитьПодразделение(Объект.Подписал);
	ОбновитьСтроковыйНомерДокумента("Подписал");
	
КонецПроцедуры

&НаСервере
Процедура удуУстановитьВидимостьСведенийОРебенке() 	
	
	Если Не Объект.Ссылка.Пустая() Тогда
		Элементы.удуСведенияОРебенкеГруппа.Видимость = Объект.Ссылка.ВидДокумента.удуУчетПоДетям;
	Иначе
		Элементы.удуСведенияОРебенкеГруппа.Видимость = Объект.ВидДокумента.удуУчетПоДетям;
	КонецЕсли;
		
КонецПроцедуры