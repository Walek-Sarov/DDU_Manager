&НаСервере
Перем ПредставлениеОбновить;
&НаКлиенте
Перем БиблиографическоеПредставление;
&НаКлиенте
Перем БиблиографическоеПредставлениеНовое;


///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ 

&НаСервере
Процедура УстановитьДоступностьРеквизитов()
	Если РольДоступна("удуРаботаСЭлектроннойБиблиотекой")
		ИЛИ РольДоступна("удуВедениеУчетаМетодическихМатериалов") 
		ИЛИ РольДоступна("ПолныеПрава")  Тогда
		
		Элементы.ОбразыОбраз.КнопкаВыбора =Истина;
	Иначе
		Элементы.Авторы.ТолькоПросмотр = Истина;
		Элементы.ВидИНаправление.ТолькоПросмотр = Истина;
		Элементы.АвторыКниги.ТолькоПросмотр = Истина;
		Элементы.Книга.ТолькоПросмотр = Истина;
		Элементы.ПериодическиеИздания.ТолькоПросмотр = Истина;
		Элементы.Наименование.ТолькоПросмотр = Истина;
		Элементы.ОбразыКоманднаяПанель.Доступность = Ложь;
		Элементы.ОбразыОбраз.КнопкаВыбора = Ложь;
		Элементы.ДобавитьАвтора.Видимость = Ложь;
		Элементы.ОчиститьАвтора.Видимость = Ложь;
		Элементы.НедоступенКВыдаче.ТолькоПросмотр = Истина;
	КонецЕсли;
		
	Элементы.НомерТома.Доступность = ЗначениеЗаполнено(Объект.Многотомник);
	Если Объект.ВидМатериала = Справочники.удуВидыМетодическихМатериалов.Книга Тогда
		Элементы.Книга.Видимость = Истина;
		Элементы.АвторыКниги.Видимость = Истина;
		Элементы.Статьи.Видимость = Истина;
		Элементы.ПериодическиеИздания.Видимость = Ложь;
	ИначеЕсли Объект.ВидМатериала = Справочники.удуВидыМетодическихМатериалов.ПериодическоеИздание Тогда
		Элементы.Книга.Видимость = Ложь;
		Элементы.АвторыКниги.Видимость = Ложь;
		Элементы.ПериодическиеИздания.Видимость = Истина;
		Элементы.Статьи.Видимость = Истина;
	Иначе
		Элементы.Книга.Видимость = Истина;
		Элементы.АвторыКниги.Видимость = Ложь;
		Элементы.ПериодическиеИздания.Видимость = Ложь;
		Элементы.Статьи.Видимость = Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Серия) Тогда 
		Элементы.Учредитель.ТолькоПросмотр = Истина;
	Иначе 
		Элементы.Учредитель.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	Элементы.АвторыКниги.Видимость = Ложь;		
КонецПроцедуры // УстановитьДоступностьРеквизитов()

// Авторы
&НаКлиенте
Процедура ДобавитьАвтора(Команда)
	
	Результат = ОткрытьФормуМодально("Справочник.удуАвторы.Форма.ВыборАвтораИРолиАвтора");
	Если ЗначениеЗаполнено(Результат) Тогда
		МассивСтрок = Объект.Авторы.НайтиСтроки(Новый Структура("Автор",Результат.Автор));
		Если МассивСтрок.Количество() = 0 Тогда
			НовыйАвтор = Объект.Авторы.Добавить();	
			НовыйАвтор.Автор = Результат.Автор;
			НовыйАвтор.Роль = Результат.Роль;
			Если ЗначениеЗаполнено(Авторы) Тогда
				Авторы = Авторы + ", ";
			КонецЕсли;
			Авторы = Авторы	+ Результат.Автор;
			Объект.АвторПредставление = Авторы;
			ОбновитьБиблиографическоеПредставление();
		Иначе
			Вопрос("Выбранный автор уже добавлен",РежимДиалогаВопрос.ОК);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьАвтора(Команда)
	Авторы = "";
	Объект.АвторПредставление = "";
	Объект.Авторы.Очистить();
	ОбновитьБиблиографическоеПредставление();
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеАвтора()
	
	Авторы = "";
	Для Каждого Автор Из Объект.Авторы Цикл 
		Если Авторы <> "" Тогда 
			Авторы = Авторы + ", ";
		КонецЕсли;
		Авторы = Авторы + Автор.Автор;
	КонецЦикла;
	
КонецПроцедуры // СформироватьПредставлениеАвтора()

&НаСервере
Процедура ЗаполнитьАвторыИзАвторовМноготомника()
	Для Каждого Автор Из Объект.Многотомник.Авторы Цикл
		УжеДобавлен = Ложь;
		Для Каждого ДобавлАвтора Из Объект.Авторы Цикл
			Если Автор.Автор = ДобавлАвтора.Автор Тогда
				УжеДобавлен = Истина;
			КонецЕсли;
		КонецЦикла;
		Если Не УжеДобавлен Тогда
			НовыйАвтор = Объект.Авторы.Добавить();	
			НовыйАвтор.Автор = Автор.Автор;
			НовыйАвтор.Роль = Автор.Роль;
		КонецЕсли;
	КонецЦикла;
	СформироватьПредставлениеАвтора();	
КонецПроцедуры //ЗаполнитьАвторыИзАвторовМноготомника()

// Образы
&НаСервере
Функция ОбразПриИзмененииНаСервере(Знач ОбразСсылка)
	ОбразОбъект = ОбразСсылка.ПолучитьОбъект();
	Результат = Новый Структура("Расширение",ОбразОбъект.ТекущаяВерсия.Расширение);
	Результат.Вставить("индексКартинки",ОбразОбъект.ИндексКартинки);
	Возврат Результат;
	
КонецФункции // ОбразПриИзмененииНаСервере()

&НаСервере
&НаСервере
Процедура ЗаполнитьКоличествоЭкземпляров()
	ЭкземпляровВсего = 0;
	ЭкземпляровНаПолке = 0;
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	удуУчетныеЕдиницы.Ссылка КАК УчетныеЕдиницыСсылка,
	                      |	удуУчетныеЕдиницы.Наименование,
	                      |	удуУчетныеЕдиницы.НедоступенКВыдаче,
	                      |	удуУчетныеЕдиницы.НаправлениеДеятельностиДОУ,
	                      |	удуУчетныеЕдиницы.ВидМатериала,
	                      |	ЕСТЬNULL(МатериалыНаСкладах.КоличествоОстаток, 0) КАК КоличествоОстаток,
	                      |	ЕСТЬNULL(МатериалыНаРуках.КоличествоОстаток, 0) КАК КоличествоНаРуках
	                      |ИЗ
	                      |	Справочник.удуУчетныеЕдиницы КАК удуУчетныеЕдиницы
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |			удуМетодическиеМатериалыНаРукахОстатки.УчетнаяЕдиница КАК УчетнаяЕдиница,
	                      |			СУММА(удуМетодическиеМатериалыНаРукахОстатки.КоличествоОстаток) КАК КоличествоОстаток
	                      |		ИЗ
	                      |			РегистрНакопления.удуМетодическиеМатериалыНаРуках.Остатки КАК удуМетодическиеМатериалыНаРукахОстатки
	                      |		
	                      |		СГРУППИРОВАТЬ ПО
	                      |			удуМетодическиеМатериалыНаРукахОстатки.УчетнаяЕдиница) КАК МатериалыНаРуках
	                      |		ПО удуУчетныеЕдиницы.Ссылка = МатериалыНаРуках.УчетнаяЕдиница
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |			удуТМЦ_НаСкладахОстатки.Номенклатура КАК Номенклатура,
	                      |			СУММА(удуТМЦ_НаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток
	                      |		ИЗ
	                      |			РегистрНакопления.удуТМЦ_НаСкладах.Остатки КАК удуТМЦ_НаСкладахОстатки
	                      |		ГДЕ
	                      |			ТИПЗНАЧЕНИЯ(удуТМЦ_НаСкладахОстатки.Номенклатура) = ТИП(Справочник.удуУчетныеЕдиницы)
	                      |		
	                      |		СГРУППИРОВАТЬ ПО
	                      |			удуТМЦ_НаСкладахОстатки.Номенклатура) КАК МатериалыНаСкладах
	                      |		ПО удуУчетныеЕдиницы.Ссылка = МатериалыНаСкладах.Номенклатура
	                      |ГДЕ
	                      |	(НЕ удуУчетныеЕдиницы.ЭтоГруппа)
	                      |	И удуУчетныеЕдиницы.Ссылка = &УчетнаяЕдиница");
	Запрос.УстановитьПараметр("УчетнаяЕдиница",Объект.Ссылка);
	
	ВыборкаКолНаПолке = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаКолНаПолке.Следующий() Тогда 
		ЭкземпляровВсего = ВыборкаКолНаПолке.КоличествоОстаток;
		ЭкземпляровНаПолке = ЭкземпляровВсего - ВыборкаКолНаПолке.КоличествоНаРуках;
	КонецЕсли;
		
КонецПроцедуры // ЗаполнитьКоличествоЭкземпляров()

&НаСервере
Процедура ОбновитьБиблиографическоеПредставление()
	Если Объект.ВидМатериала = Справочники.удуВидыМетодическихМатериалов.Книга Тогда
		Объект.Представление = удуУчетМетодическихМатериалов.СформироватьПредставлениеКнига(Этаформа);
	ИначеЕсли Объект.ВидМатериала = Справочники.удуВидыМетодическихМатериалов.ПериодическоеИздание Тогда
		Объект.Представление = удуУчетМетодическихМатериалов.СформироватьПредставлениеПериодика(Этаформа);
	Иначе
		Объект.Представление = удуУчетМетодическихМатериалов.СформироватьПредставлениеКнига(Этаформа);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформациюОСерии()
	ОбъектСерия = Объект.Серия.ПолучитьОбъект();
	Объект.Учредитель = ОбъектСерия.Учредитель;
	Объект.КоличествоСтраниц = ОбъектСерия.КоличествоСтраниц;
	Объект.Иллюстрации = ОбъектСерия.Иллюстрации;
КонецПроцедуры // ЗаполнитьИнформациюОСерии()
	
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьКоличествоЭкземпляров();
	Статьи.Параметры.УстановитьЗначениеПараметра("УчетнаяЕдиница",Объект.Ссылка);
	
	СформироватьПредставлениеАвтора();
	
	НедоступенКВыдаче = Объект.НедоступенКВыдаче;
	Если Объект.РедактироватьПредставление Тогда
		ПредставлениеОбновить = Ложь;
	Иначе
		ПредставлениеОбновить = Истина;
	КонецЕсли;
    УстановитьДоступностьРеквизитов();
	Если Не ЗначениеЗаполнено(Объект.ОбщееОбозначениеМатериала) Тогда
		Объект.ОбщееОбозначениеМатериала = Перечисления.удуОбозначенияМетодическихМатериалов.Текст;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Для Каждого Образ Из Объект.Образы Цикл
		Если НЕ ЗначениеЗаполнено(Образ.Образ) Тогда
			Объект.Образы.Удалить(Образ);
		КонецЕсли;
	КонецЦикла;
	
	Объект.АвторПредставление = Авторы;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "КоличествоЭкземпляровИзменено" Тогда
		ЗаполнитьКоличествоЭкземпляров();
	КонецЕсли;
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ОбразыОбразПриИзменении(Элемент)
	Строка = Элементы.Образы.ТекущиеДанные;
	
	Результат = ОбразПриИзмененииНаСервере(Строка.Образ);
	Строка.Тип = Результат.Расширение;
	Строка.ИндексКартинки = Результат.ИндексКартинки;
КонецПроцедуры

&НаКлиенте
Процедура ВидМатериалаПриИзменении(Элемент)
	УстановитьДоступностьРеквизитов();
	ОбновитьБиблиографическоеПредставление();
КонецПроцедуры

&НаКлиенте
Процедура МноготомникПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Многотомник) Тогда
		ЗаполнитьАвторыИзАвторовМноготомника();
		Элементы.НомерТома.Доступность = Истина;
	КонецЕсли;
	ОбновитьБиблиографическоеПредставление();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтатью(Команда)
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Пар = Новый Структура("Владелец",Объект.Ссылка);
		ОткрытьФормуМодально("Справочник.удуСтатьи.ФормаОбъекта",Пар);
		
	Иначе
		РезультатВопроса = Вопрос("Для добавления статьи необходимо записать учетную карточку. Записать сейчас?",РежимДиалогаВопрос.ДаНет);
		Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
			Записать();
			Пар = Новый Структура("Владелец",Объект.Ссылка);
			ОткрытьФормуМодально("Справочник.удуСтатьи.ФормаОбъекта",Пар);

		КонецЕсли;
	КонецЕсли;
	Статьи.Параметры.УстановитьЗначениеПараметра("УчетнаяЕдиница",Объект.Ссылка);
	Элементы.Статьи.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура НедоступенКВыдачеПриИзменении(Элемент)
	
	// Обновить список уже недоступных экземпляров данной учетной записи
	
	Если ПризнакДоступностиИзменен() Тогда
		НеобходимоИзменитьСведенияОНедоступности = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ПризнакДоступностиИзменен()
	
	Возврат (НедоступенКВыдаче 
		И (Объект.Ссылка.Пустая() ИЛИ НЕ Объект.Ссылка.НедоступенКВыдаче))
		ИЛИ (Не Объект.Ссылка.Пустая() И Объект.НедоступенКВыдаче <> Объект.Ссылка.НедоступенКВыдаче);
		
КонецФункции

// Изменение представления учетной единицы
&НаКлиенте
Процедура РедактироватьПредставление(Команда)
	БиблиографическоеПредставление = Объект.Представление;
	Если Элементы.Книга.Видимость Тогда
		Элементы.Представление.Вид = ВидПоляФормы.ПолеВвода;
		Элементы.Представление.Доступность = Истина;
		Элементы.Представление.ТолькоПросмотр = Ложь;
	ИначеЕсли Элементы.ПериодическиеИздания.Видимость Тогда
		Элементы.Представление1.Вид = ВидПоляФормы.ПолеВвода;
		Элементы.Представление1.Доступность = Истина;
		Элементы.Представление1.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзмененияПредставления(Команда)
	
	Результат = Вопрос("Сохранить изменения библиографического представления?",РежимДиалогаВопрос.ДаНет);
	Если Результат = КодВозвратаДиалога.Да И БиблиографическоеПредставлениеНовое <> Неопределено Тогда
		Объект.РедактироватьПредставление = Истина; // представление сформировано вручную
		Объект.Представление = БиблиографическоеПредставлениеНовое;
	Иначе
		Объект.Представление = БиблиографическоеПредставление;
	КонецЕсли;

	Если Элементы.Книга.Видимость Тогда
		Элементы.Представление.Вид = ВидПоляФормы.ПолеНадписи;
	ИначеЕсли Элементы.ПериодическиеИздания.Видимость Тогда
		Элементы.Представление1.Вид = ВидПоляФормы.ПолеНадписи;
	КонецЕсли;
			
КонецПроцедуры

// Автоматически обновлять представление при изменении основных 
// реквизитов учетной карточки
&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	ОбновитьБиблиографическоеПредставление();
КонецПроцедуры

&НаКлиенте
Процедура СведенияОтносящиесяКЗаглавиюПриИзменении(Элемент)
	ОбновитьБиблиографическоеПредставление();
КонецПроцедуры

&НаКлиенте
Процедура НомерТомаПриИзменении(Элемент)
	ОбновитьБиблиографическоеПредставление();
КонецПроцедуры

&НаКлиенте
Процедура СерияПриИзменении(Элемент)
	ОбновитьБиблиографическоеПредставление();
КонецПроцедуры

&НаКлиенте
Процедура КнигаИздательствоПриИзменении(Элемент)
	ОбновитьБиблиографическоеПредставление();
КонецПроцедуры

&НаКлиенте
Процедура КнигаМестоИзданияПриИзменении(Элемент)
	ОбновитьБиблиографическоеПредставление();
КонецПроцедуры

&НаКлиенте
Процедура КнигаИзданиеПриИзменении(Элемент)
	ОбновитьБиблиографическоеПредставление();
КонецПроцедуры

&НаКлиенте
Процедура Год1ПриИзменении(Элемент)
	ОбновитьБиблиографическоеПредставление();

КонецПроцедуры

&НаКлиенте
Процедура КнигаКоличествоСтраницПриИзменении(Элемент)
	ОбновитьБиблиографическоеПредставление();
КонецПроцедуры

&НаКлиенте
Процедура КнигаИллюстрацииПриИзменении(Элемент)
	ОбновитьБиблиографическоеПредставление();
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПриИзменении(Элемент)
	БиблиографическоеПредставлениеНовое = Объект.Представление;
	ОбновитьБиблиографическоеПредставление();
КонецПроцедуры

&НаКлиенте
Процедура Представление1ПриИзменении(Элемент)
	БиблиографическоеПредставлениеНовое = Объект.Представление;
	ОбновитьБиблиографическоеПредставление();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставление(Команда)
	Если Объект.РедактироватьПредставление Тогда
		Рез = Вопрос("Представление было отредактировано. Продолжить?",РежимДиалогаВопрос.ДаНет);
		Если Рез = КодВозвратаДиалога.Да Тогда 
			ОбновитьБиблиографическоеПредставление();
			Объект.РедактироватьПредставление = Ложь;
		КонецЕсли;
	Иначе
		ОбновитьБиблиографическоеПредставление();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПериодическоеИздание1ПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Серия) Тогда
		ЗаполнитьИнформациюОСерии();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если НеобходимоИзменитьСведенияОНедоступности = Истина Тогда
				
		Если ТекущийОбъект.НедоступенКВыдаче = Истина Тогда
			
			МЗ = РегистрыСведений.удуНедоступныеМетодическиеМатериалы.СоздатьМенеджерЗаписи();
			МЗ.УчетнаяЕдиница = ТекущийОбъект.Ссылка;
			МЗ.Записать(Ложь);
			
		Иначе
			
			Отбор =  Новый Структура("УчетнаяЕдиница", ТекущийОбъект.Ссылка);
			Выборка = РегистрыСведений.удуНедоступныеМетодическиеМатериалы.Выбрать(Отбор);
			
			Пока Выборка.Следующий() Цикл
				Выборка.ПолучитьМенеджерЗаписи().Удалить();
			КонецЦикла;
			
		КонецЕсли;
		
		НеобходимоИзменитьСведенияОНедоступности = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры








