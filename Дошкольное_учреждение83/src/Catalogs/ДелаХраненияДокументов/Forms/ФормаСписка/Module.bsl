
&НаСервере
Процедура УстановитьОтборСписка(ПараметрыОтбора)
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
		ПараметрыОтбора["Организация"] = Неопределено;
	КонецЕсли;
	
	Если ПараметрыОтбора["ПоказыватьДела"] = "Все"
	 Или ПараметрыОтбора["ПоказыватьДела"] = "Открытые"
	 Или ПараметрыОтбора["ПоказыватьДела"] = "Закрытые"
	 Или ПараметрыОтбора["ПоказыватьДела"] = "Переданные в архив"
	 Или ПараметрыОтбора["ПоказыватьДела"] = "Уничтоженные" Тогда 
	 
		ОбщегоНазначенияКлиентСервер.УдалитьОтборУСписка(Список.Отбор,
			Новый ПолеКомпоновкиДанных("Состояние"));
			
		ОбщегоНазначенияКлиентСервер.УдалитьОтборУСписка(Список.Отбор,
			Новый ПолеКомпоновкиДанных("ДелоЗакрыто"));	
			
	КонецЕсли;	
	
	Если ПараметрыОтбора["ПоказыватьДела"] = "Открытые" Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаНаРавенство(Список.Отбор,
			Новый ПолеКомпоновкиДанных("Состояние"), 
			Перечисления.СостоянияДелХраненияДокументов.ПустаяСсылка());
			
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаНаРавенство(Список.Отбор,
			Новый ПолеКомпоновкиДанных("ДелоЗакрыто"), 
			Ложь);
			
	ИначеЕсли ПараметрыОтбора["ПоказыватьДела"] = "Закрытые" Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаНаРавенство(Список.Отбор,
			Новый ПолеКомпоновкиДанных("Состояние"), 
			Перечисления.СостоянияДелХраненияДокументов.ПустаяСсылка());
			
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаНаРавенство(Список.Отбор,
			Новый ПолеКомпоновкиДанных("ДелоЗакрыто"), 
			Истина);		
			
	ИначеЕсли ПараметрыОтбора["ПоказыватьДела"] = "Переданные в архив" Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаНаРавенство(Список.Отбор,
			Новый ПолеКомпоновкиДанных("Состояние"), 
			Перечисления.СостоянияДелХраненияДокументов.ПереданоВАрхив);
		
	ИначеЕсли ПараметрыОтбора["ПоказыватьДела"] = "Уничтоженные" Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаНаРавенство(Список.Отбор,
			Новый ПолеКомпоновкиДанных("Состояние"), 
			Перечисления.СостоянияДелХраненияДокументов.Уничтожено);
		
	КонецЕсли;	
	
	// организация 
	Если Не ЗначениеЗаполнено(ПараметрыОтбора["Организация"]) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьОтборУСписка(Список.Отбор,
			Новый ПолеКомпоновкиДанных("Организация"));
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаНаРавенство(Список.Отбор,
			Новый ПолеКомпоновкиДанных("Организация"),
			ПараметрыОтбора["Организация"]);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтбор()
	
	ПараметрыОтбора = Новый Соответствие();
	ПараметрыОтбора.Вставить("ПоказыватьДела", ПоказыватьДела);	
	ПараметрыОтбора.Вставить("Организация",    Организация);	
	УстановитьОтборСписка(ПараметрыОтбора);
	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПоказыватьДела = "Открытые";
	Организация = РаботаСОрганизациями.ПолучитьОрганизациюПоУмолчанию();
	УстановитьОтбор();
	
	Если ЗначениеЗаполнено(Параметры.НоменклатураДел) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаНаРавенство(Список.Отбор, 
			Новый ПолеКомпоновкиДанных("НоменклатураДел"), 
			Параметры.НоменклатураДел);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьОтборСписка(Настройки);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьДелаПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры
