////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьРазделениеПоОбластямДанных = ОбщегоНазначенияПовтИсп.РазделениеВключено();
	
	Заголовок = НСтр("ru = 'Новости и поддержка'");
	СсылкаПоискаИнформации = "http://its.1c.ru/db/alldb#search:";
	
	Если ИспользоватьРазделениеПоОбластямДанных Тогда // для модели сервиса
		// Заголовок формы
		СтандартныеПодсистемыПереопределяемый.ОпределитьЗаголовокОсновнойФормыИнформационныйЦентр(Заголовок);
		
		// Инетграция с сервисом
		Элементы.ГруппаИнтеграцииССервисом.Видимость = Истина;
		
		СсылкаНаПриложения = "https://1cfresh.com/my";
		ИнформационныйЦентрСерверПереопределяемый.ОпределитьАдресСсылкиДляПереходаКПриложениямАбонента(СсылкаНаПриложения);
	
		СсылкаСайтаДляПубликацииПриложенийЧерезИнтернет = ИнформационныйЦентрСервер.НовоеОписаниеСсылкиСайтаДляПубликацииПриложенийЧерезИнтернет();
		СсылкаСайтаДляПубликацииПриложенийЧерезИнтернет.Имя		= НСтр("ru = 'www.1cfresh.com'");
		СсылкаСайтаДляПубликацииПриложенийЧерезИнтернет.Адрес	= "https://1cfresh.com";
		
		ИнформационныйЦентрСерверПереопределяемый.ОпределитьСсылкуДляПубликацииПриложенийЧерезИнтернет(СсылкаСайтаДляПубликацииПриложенийЧерезИнтернет);
		Элементы.СсылкаСайтаДляПубликацииПриложенийЧерезИнтернет.Заголовок = СсылкаСайтаДляПубликацииПриложенийЧерезИнтернет.Имя;
		
		// Новости
		ВидимостьНовостейВМоделиСервиса = Истина;
		ИнформационныйЦентрСерверПереопределяемый.ОпределитьВидимостьНовостейВМоделиСервиса(ВидимостьНовостейВМоделиСервиса);
		ОтображатьЭлементыСвязанныеСНовостями(ВидимостьНовостейВМоделиСервиса);
		
		// Поиск информации
		ИнформационныйЦентрСерверПереопределяемый.ОпределитьСсылкуПоискаИнформации(СсылкаПоискаИнформации);
	Иначе // для локального режима
		Элементы.ГруппаИнтеграцииССервисом.Видимость = Ложь;
	КонецЕсли;
	
	// Поиск информации
	ВидимостьПоискаИнформации = Истина;
	ИнформационныйЦентрСерверПереопределяемый.ОпределитьВидимостьПоискаИнформации(ВидимостьПоискаИнформации);
	
	СформироватьСписокПолезныхСсылок();
	СформироватьСписокСтатей();
	СформироватьСписокНовостей();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОткрытьМоиПриложения(Команда)
	
	ПерейтиПоНавигационнойСсылке(СсылкаНаПриложения);
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаСайтаДляПубликацииПриложенийЧерезИнтернетНажатие(Элемент)
	
	Если Не СсылкаСайтаДляПубликацииПриложенийЧерезИнтернет.Свойство("Адрес") Тогда 
		Возврат;
	КонецЕсли;
	
	ПерейтиПоНавигационнойСсылке(СсылкаСайтаДляПубликацииПриложенийЧерезИнтернет.Адрес);
	
КонецПроцедуры

&НаКлиенте
Процедура НажатиеНаСсылку(Элемент)
	
	МассивСсылок = ТаблицаСсылок.НайтиСтроки(Новый Структура("ИмяСсылки", Элемент.Имя));
	Если МассивСсылок.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	ПерейтиПоНавигационнойСсылке(МассивСсылок.Получить(0).Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура НажатиеНаСообщениеВТехПоддержку()
	
	ПараметрыСообщения	= СформироватьПараметрыСообщения();
	ИнформационныйЦентрКлиент.ОткрытьФормуОтправкиСообщенияВТехподдержку(ИспользоватьРазделениеПоОбластямДанных, ПараметрыСообщения);
	
КонецПроцедуры	

&НаКлиенте
Процедура НажатиеНаСтатью(Элемент)
	
	МассивСтатей = ТаблицаСтатей.НайтиСтроки(Новый Структура("ИмяСтатьи", Элемент.Имя));
	Если МассивСтатей.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	ПерейтиПоНавигационнойСсылке(МассивСтатей.Получить(0).Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура НажатиеНаНовость(Элемент)
	
	МассивНовостей = ТаблицаНовостей.НайтиСтроки(Новый Структура("ИмяНовости", Элемент.Имя));
	Если МассивНовостей.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Идентификатор = МассивНовостей.Получить(0).Идентификатор;
	ВнешняяСсылка = МассивНовостей.Получить(0).ВнешняяСсылка;
	ИнформационныйЦентрКлиент.ПоказатьНовость(ВнешняяСсылка, Идентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура НажатиеЕщеНовости(Элемент)
	
	ИнформационныйЦентрКлиент.ПоказатьВсеНовости();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура НайтиОтветНаВопрос(Команда)
	
	ПоискОтветаНаВопрос();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура СформироватьСписокПолезныхСсылок()
	
	МассивПолезныхСсылок = Новый Массив;
	
	ПолезнаяСсылка = ИнформационныйЦентрСервер.НовоеОписаниеПолезнойСсылки();
	ПолезнаяСсылка.Имя			= НСтр("ru = 'Методическая информация'");
	ПолезнаяСсылка.Адрес		= "http://its.1c.ru";
	ПолезнаяСсылка.Пояснение	= НСтр("ru = 'Методики, статьи, законодательство'");
	МассивПолезныхСсылок.Добавить(ПолезнаяСсылка);
	
	Если ИспользоватьРазделениеПоОбластямДанных Тогда 
		ПолезнаяСсылка = ИнформационныйЦентрСервер.НовоеОписаниеПолезнойСсылки();
		ПолезнаяСсылка.Имя			= НСтр("ru = 'Форум'");
		ПолезнаяСсылка.Адрес		= "https://1cfresh.com/forum/";
		ПолезнаяСсылка.Пояснение	= НСтр("ru = 'Обсудить вопрос на форуме'");
		МассивПолезныхСсылок.Добавить(ПолезнаяСсылка);
	КонецЕсли;
	
	Если ИспользоватьРазделениеПоОбластямДанных Тогда 
		ПолезнаяСсылка = ИнформационныйЦентрСервер.НовоеОписаниеПолезнойСсылки();
		ПолезнаяСсылка.Имя					= НСтр("ru = 'Сообщение в техподдержку'");
		ПолезнаяСсылка.Пояснение			= НСтр("ru = 'Отправить сообщение'");
		ПолезнаяСсылка.ДействиеПоНажатию	= "НажатиеНаСообщениеВТехПоддержку";
		МассивПолезныхСсылок.Добавить(ПолезнаяСсылка);
	КонецЕсли;
	
	ПолезнаяСсылка = ИнформационныйЦентрСервер.НовоеОписаниеПолезнойСсылки();
	ПолезнаяСсылка.Имя			= НСтр("ru = 'Новости фирмы 1С'");
	ПолезнаяСсылка.Адрес		= "http://www.1c.ru";
	ПолезнаяСсылка.Пояснение	= НСтр("ru = 'Новости на сайте www.1c.ru'");
	МассивПолезныхСсылок.Добавить(ПолезнаяСсылка);
	
	ИнформационныйЦентрСерверПереопределяемый.ОпределитьМассивПолезныхСсылок(МассивПолезныхСсылок);
	
	Если МассивПолезныхСсылок.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;	
	
	ГруппаПолезныхСсылок = Элементы.ГруппаПолезныхСсылок;
	
	Итерация = 0;
	Для каждого СтруктураСсылки из МассивПолезныхСсылок Цикл 
		
		Итерация = Итерация + 1;
		
		ГруппаСсылки						= Элементы.Добавить("ГруппаСсылки" + Строка(Итерация), Тип("ГруппаФормы"), ГруппаПолезныхСсылок);
		ГруппаСсылки.Вид 					= ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаСсылки.ОтображатьЗаголовок	= Ложь;
		ГруппаСсылки.Группировка			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаСсылки.Отображение			= ОтображениеОбычнойГруппы.Нет;
		
		ИмяСсылки							= Элементы.Добавить("ИмяСсылки" + Строка(Итерация), Тип("ДекорацияФормы"), ГруппаСсылки);
		ИмяСсылки.Вид						= ВидДекорацииФормы.Надпись;
		ИмяСсылки.Заголовок					= СтруктураСсылки.Имя; 
		ИмяСсылки.Гиперссылка	            = Истина;
		ДействиеПоНажатию					= ?(СтруктураСсылки.ДействиеПоНажатию = Неопределено, "НажатиеНаСсылку", СтруктураСсылки.ДействиеПоНажатию);
		ИмяСсылки.УстановитьДействие("Нажатие", ДействиеПоНажатию);
		
		ПояснениеСсылки								= Элементы.Добавить("ПояснениеСсылки" + Строка(Итерация), Тип("ДекорацияФормы"), ГруппаСсылки);
		ПояснениеСсылки.Вид							= ВидДекорацииФормы.Надпись;
		ПояснениеСсылки.Заголовок					= СтруктураСсылки.Пояснение; 
		ПояснениеСсылки.РастягиватьПоГоризонтали	= Истина;
		ПояснениеСсылки.ЦветТекста					= WebЦвета.Серый;
		
		СтрокаТаблицыСсылок 			= ТаблицаСсылок.Добавить();
		СтрокаТаблицыСсылок.ИмяСсылки	= "ИмяСсылки" + Строка(Итерация);
		СтрокаТаблицыСсылок.Ссылка		= СтруктураСсылки.Адрес;
		
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьСписокСтатей()
	
	МассивСтатей = Новый Массив;
	ИнформационныйЦентрСерверПереопределяемый.ОпределитьМассивСтатей(МассивСтатей);
	
	Если МассивСтатей.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;	
	
	ГруппаСтатей = Элементы.ГруппаСтатей;
	
	Итерация = 0;
	Для каждого СтруктураСтатьи из МассивСтатей Цикл 
		
		Итерация = Итерация + 1;
		
		ГруппаСтатьи						= Элементы.Добавить("ГруппаСтатьи" + Строка(Итерация), Тип("ГруппаФормы"), ГруппаСтатей);
		ГруппаСтатьи.Вид 					= ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаСтатьи.ОтображатьЗаголовок	= Ложь;
		ГруппаСтатьи.Группировка			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаСтатьи.Отображение			= ОтображениеОбычнойГруппы.Нет;
		
		ИмяСтатьи							= Элементы.Добавить("ИмяСтатьи" + Строка(Итерация), Тип("ДекорацияФормы"), ГруппаСтатьи);
		ИмяСтатьи.Вид						= ВидДекорацииФормы.Надпись;
		ИмяСтатьи.РастягиватьПоГоризонтали	= Истина;
		ИмяСтатьи.Заголовок					= СтруктураСтатьи.Имя; 
		ИмяСтатьи.Гиперссылка	            = Истина;
		ИмяСтатьи.УстановитьДействие("Нажатие", "НажатиеНаСтатью");
		
		СтрокаТаблицыСтатей 			= ТаблицаСтатей.Добавить();
		СтрокаТаблицыСтатей.ИмяСтатьи	= "ИмяСтатьи" + Строка(Итерация);
		СтрокаТаблицыСтатей.Ссылка		= СтруктураСтатьи.Адрес;
		
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьСписокНовостей()
	
	УстановитьПривилегированныйРежим(Истина);
	ИнформационныйЦентрСервер.СформироватьСписокНовостейНаРабочийСтол(ТаблицаНовостей);
	
	Если ТаблицаНовостей.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;	
	
	ГруппаНовостей = Элементы.ГруппаНовостей;
	
	Для Итерация = 0 По ТаблицаНовостей.Количество() - 1 Цикл
		
		Критичность		= ТаблицаНовостей.Получить(Итерация).Критичность;
		Наименование	= ТаблицаНовостей.Получить(Итерация).Наименование;
		Картинка		= ?(Критичность > 5, БиблиотекаКартинок.СостояниеОбменаДаннымиОшибка, БиблиотекаКартинок.Информация);
		
		ГруппаНовости						= Элементы.Добавить("ГруппаНовости" + Строка(Итерация), Тип("ГруппаФормы"), ГруппаНовостей);
		ГруппаНовости.Вид 					= ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаНовости.ОтображатьЗаголовок	= Ложь;
		ГруппаНовости.Группировка			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаНовости.Отображение			= ОтображениеОбычнойГруппы.Нет;
		
		КартинкаНовости						= Элементы.Добавить("КартинкаНовости" + Строка(Итерация), Тип("ДекорацияФормы"), ГруппаНовости);
		КартинкаНовости.Вид					= ВидДекорацииФормы.Картинка;
		КартинкаНовости.Картинка			= Картинка;
		КартинкаНовости.Ширина				= 2;
		КартинкаНовости.Высота				= 1;
		КартинкаНовости.РазмерКартинки		= РазмерКартинки.Растянуть;
		
		ИмяНовости							= Элементы.Добавить("ИмяНовости" + Строка(Итерация), Тип("ДекорацияФормы"), ГруппаНовости);
		ИмяНовости.Вид						= ВидДекорацииФормы.Надпись;
		ИмяНовости.Заголовок				= Наименование;
		ИмяНовости.РастягиватьПоГоризонтали	= Истина;
		ИмяНовости.ВертикальноеПоложение	= ВертикальноеПоложениеЭлемента.Центр;
		ИмяНовости.ВысотаЗаголовка			= 1;
		ИмяНовости.Гиперссылка	            = Истина;
		ИмяНовости.УстановитьДействие("Нажатие", "НажатиеНаНовость");
		
		Если Критичность = 10 Тогда 
			ИмяНовости.Шрифт = Новый Шрифт(, , Истина, , , );
		КонецЕсли;	
		
		ТаблицаНовостей.Получить(Итерация).ИмяНовости = "ИмяНовости" + Строка(Итерация);
	
	КонецЦикла;	
	
	ЕщеНовости							= Элементы.Добавить("ЕщеНовости", Тип("ДекорацияФормы"), ГруппаНовостей);
	ЕщеНовости.Вид						= ВидДекорацииФормы.Надпись;
	ЕщеНовости.Заголовок				= НСтр("ru = 'Еще новости'");
	ЕщеНовости.РастягиватьПоГоризонтали	= Истина;
	ЕщеНовости.ВертикальноеПоложение	= ВертикальноеПоложениеЭлемента.Центр;
	ЕщеНовости.Гиперссылка	            = Истина;
	ЕщеНовости.УстановитьДействие("Нажатие", "НажатиеЕщеНовости");
	
КонецПроцедуры	

&НаСервере
Функция СформироватьПараметрыСообщения()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыСообщения = Новый Структура;
	ПараметрыСообщения.Вставить("ОтКого",				ИнформационныйЦентрСервер.ОпределитьАдресЭлектроннойПочтыПользователя());
	ПараметрыСообщения.Вставить("Тема",					НСтр("ru = 'Обращение в техподдержку'") + " (" + Формат(ТекущаяДатаСеанса(),"ДЛФ=DT") + ")");
	ПараметрыСообщения.Вставить("Текст",				ИнформационныйЦентрСервер.СформироватьШаблонТекстаВТехПоддержку());
	ПараметрыСообщения.Вставить("Вложения",				ИнформационныйЦентрСервер.СформироватьXMLСТехническимиПараметрами());
	
	Возврат ПараметрыСообщения;
	
КонецФункции	

&НаСервере
Процедура ОтображатьЭлементыСвязанныеСНовостями(ВидимостьНовостей)
	
	Элементы.ГруппаНовостей.Видимость = ВидимостьНовостей;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПоискОтветаНаВопрос()
	
	ПодключитьОбработчикОжидания("ОбработкаОжиданияПоискаОтветаНаВопрос", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжиданияПоискаОтветаНаВопрос()
	
	Если ПустаяСтрока(СтрокаПоиска) Тогда
		Возврат;
	КонецЕсли;
	
	ПерейтиПоНавигационнойСсылке(СсылкаПоискаИнформации + СтрокаПоиска);
	
КонецПроцедуры

