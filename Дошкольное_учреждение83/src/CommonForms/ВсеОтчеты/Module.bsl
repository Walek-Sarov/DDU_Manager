////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Параметры.Подсистемы) = Тип("СписокЗначений") Тогда
		ПутиПодсистемы = Параметры.Подсистемы;
	Иначе
		ПутиПодсистемы = Новый СписокЗначений;
		ПутиПодсистемы.Добавить(Параметры.Подсистемы);
	КонецЕсли;
	
	Закрепить = БиблиотекаКартинок.ЗакрепитьВариантОтчета;
	Открепить = БиблиотекаКартинок.ОткрепитьВариантОтчета;
	
	ЭтаФорма.Заголовок = Параметры.ИмяФормы;
	
	ГруппироватьВарианты = Истина;
	
	СписокОтчетов = ВариантыОтчетовПереопределяемый.СписокОтчетовПоддерживаемыхПодсистемой();
	
	ДеревоПодсистем = Новый ДеревоЗначений;
	ДеревоПодсистем.Колонки.Добавить("Подсистема");
	ДеревоПодсистем.Колонки.Добавить("Название");
	
	СписокПодсистем = ВариантыОтчетов.ПолучитьСписокПодсистем(ПутиПодсистемы, ДеревоПодсистем);
	Если СписокПодсистем.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МаксимальнаяДлинна = 0;
	
	Для каждого ЭлементСпПодсистема из СписокПодсистем Цикл
		МаксимальнаяДлинна = Макс(СтрДлина(ЭлементСпПодсистема.Значение), МаксимальнаяДлинна);
	КонецЦикла;
	
	
	// Получить варианты отчетов с разделами 
	ТЗ = "ВЫБРАТЬ
	|	ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта КАК Ключ,
	|	ВариантыОтчетов.Наименование КАК Представление,
	|	ВариантыОтчетов.Описание,
	|	ВариантыОтчетов.БыстрыйДоступ,
	|	ВариантыОтчетов.Наименование КАК Сортировка,
	|	ВариантыОтчетов.ТипВариантаОтчета,
	|	ВариантыОтчетов.Администратор,
	|	ВариантыОтчетовПодсистемы.Подсистема
	|ИЗ
	|	Справочник.ВариантыОтчетов.Подсистемы КАК ВариантыОтчетовПодсистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|		ПО ВариантыОтчетовПодсистемы.Ссылка = ВариантыОтчетов.Ссылка
	|ГДЕ
	|	(НЕ ВариантыОтчетов.ПометкаУдаления)
	|	И ВЫРАЗИТЬ(ВариантыОтчетовПодсистемы.Подсистема КАК Строка("+Формат(МаксимальнаяДлинна, "ЧГ=0")+"))В (&Подсистемы)
	|	И ВариантыОтчетов.КлючОбъекта В (&СписокОтчетов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сортировка";
	
	Запрос = Новый Запрос(ТЗ);
	Запрос.УстановитьПараметр("Подсистемы",       СписокПодсистем);
	Запрос.УстановитьПараметр("СписокОтчетов", СписокОтчетов);
	УстановитьПривилегированныйРежим(истина);
	ТаблицаВариантов = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(ложь);
	
	// роли вариантов
	ТЗ = "ВЫБРАТЬ
	|	ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта КАК Ключ,
	|	ИсключенныеПользователи.Пользователь КАК Пользователь,
	|	НЕ ВариантыОтчетов.БыстрыйДоступ КАК БыстрыйДоступ
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтчетов.ИсключенияБыстрогоДоступа КАК ИсключенныеПользователи
	|		ПО ВариантыОтчетов.Ссылка = ИсключенныеПользователи.Ссылка
	|ГДЕ
	|	(НЕ ВариантыОтчетов.ПометкаУдаления)
	|	И ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта В (&Ключи)
	|	И ВариантыОтчетов.КлючОбъекта В (&СписокОтчетов)
	|	И (ИсключенныеПользователи.Пользователь = Пользователь)";
	
	Запрос.Текст = ТЗ;
	Запрос.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());
	Запрос.УстановитьПараметр("Ключи", ТаблицаВариантов.ВыгрузитьКолонку("Ключ"));
	УстановитьПривилегированныйРежим(истина);
	ТаблицаПользователей = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(ложь);
	
	ТаблицаВариантов.Колонки.Добавить("Группировка", Новый ОписаниеТипов(,, Новый КвалификаторыСтроки()));
	ТаблицаВариантов.Колонки.Добавить("ВнешняяКоманда", Новый ОписаниеТипов(,, Новый КвалификаторыСтроки()));
	
	СписокГруппировок = Новый ТаблицаЗначений;
	СписокГруппировок.Колонки.Добавить("Группировка");
	СписокГруппировок.Колонки.Добавить("ГруппировкаПредставление");
	
	Для каждого СтрокаПодсистемы из ДеревоПодсистем.Строки Цикл
		ДанныеГруппировки                          = СписокГруппировок.Добавить(); 
		ДанныеГруппировки.Группировка              = СтрокаПодсистемы.Подсистема;
		ДанныеГруппировки.ГруппировкаПредставление = "";
		Для каждого СтрокаГруппировки из СтрокаПодсистемы.Строки Цикл
			ДанныеГруппировки                          = СписокГруппировок.Добавить(); 
			ДанныеГруппировки.Группировка              = СтрокаГруппировки.Подсистема;
			ДанныеГруппировки.ГруппировкаПредставление = СтрокаГруппировки.Название;
		КонецЦикла;
	КонецЦикла;
	
	// Дерево вариантов
	
	ГруппировкиВариантов = Новый Соответствие;
	
	ГруппировкиВариантовСмТакже = Новый СписокЗначений;
	
	СгруппированныйСписокВариантовОтчетов = Новый ДеревоЗначений;
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Ключ");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Представление");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Описание");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Группировка");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("ГруппировкаПредставление");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Сортировка");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("БыстрыйДоступ");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Администратор");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("ВнешняяКоманда");
	
	Если ГруппироватьВарианты Тогда
		Для каждого ГруппировкаВар из СписокГруппировок Цикл
			Если Найти(ГруппировкаВар.Группировка, "СмТакже") > 0  Тогда
				Продолжить;
			КонецЕсли;
			СтрокаГруппировкиОтчета = СгруппированныйСписокВариантовОтчетов.Строки.Добавить();
			СтрокаГруппировкиОтчета.Группировка = ГруппировкаВар.Группировка;
			СтрокаГруппировкиОтчета.ГруппировкаПредставление = ГруппировкаВар.ГруппировкаПредставление;
			ГруппировкиВариантов.Вставить(ГруппировкаВар.Группировка, СтрокаГруппировкиОтчета);
		КонецЦикла;
	КонецЕсли;
	
	СтрокаГруппировкиОтчета = СгруппированныйСписокВариантовОтчетов.Строки.Добавить();
	СтрокаГруппировкиОтчета.Группировка = "ПрочиеИПользовательскиеВариантыОтчета";
	СтрокаГруппировкиОтчета.ГруппировкаПредставление = НСТр("ru = 'Прочие'");
	ГруппировкиВариантов.Вставить("ПрочиеИПользовательскиеВариантыОтчета", СтрокаГруппировкиОтчета);
	СтрокаФиксированнаяГруппировка = СтрокаГруппировкиОтчета;
	
	СтрокаГруппировкиОтчета = СгруппированныйСписокВариантовОтчетов.Строки.Добавить();
	СтрокаГруппировкиОтчета.Группировка = "СмТакже";
	СтрокаГруппировкиОтчета.ГруппировкаПредставление =  НСТр("ru = 'См. также'");
	ГруппировкиВариантов.Вставить("СмТакже", СтрокаГруппировкиОтчета);
	СтрокаГруппировкаСмТакже = СтрокаГруппировкиОтчета;

	СтрокаГруппировкиОтчета = СгруппированныйСписокВариантовОтчетов.Строки.Добавить();
	СтрокаГруппировкиОтчета.Группировка = "ДополнительныеОтчеты";
	СтрокаГруппировкиОтчета.ГруппировкаПредставление = НСТр("ru = 'Дополнительные отчеты'");
	ГруппировкиВариантов.Вставить("ДополнительныеОтчеты", СтрокаГруппировкиОтчета);
	СтрокаГруппировкаДополнительныеОтчеты = СтрокаГруппировкиОтчета;

	
	//ДополнительныеКоманды
	ТаблицаДополнительныхКоманд = Новый ТаблицаЗначений;
	ТаблицаДополнительныхКоманд.Колонки.Добавить("УникальныйИдентификатор");
	ТаблицаДополнительныхКоманд.Колонки.Добавить("Представление");
	ТаблицаДополнительныхКоманд.Колонки.Добавить("Описание");
	ТаблицаДополнительныхКоманд.Колонки.Добавить("БыстрыйДоступ");
	ТаблицаДополнительныхКоманд.Колонки.Добавить("ПараметрКоманды");
	
	ВариантыОтчетовПереопределяемый.СписокДополнительныхКоманд(ТаблицаДополнительныхКоманд, ПутиПодсистемы);
	
	ПараметрыКоманд = Новый Массив;
	
	Если ТаблицаДополнительныхКоманд.Количество() > 0 Тогда
		Индекс = 0;
		Для Каждого СтрокаДополнительногоОтчета из ТаблицаДополнительныхКоманд Цикл
			
			СтрокаТаблицаВариантов = ТаблицаВариантов.Добавить();
			СтрокаТаблицаВариантов.Ключ	             = "Отчет.ДополнительнаяКоманда\"+СтрокаДополнительногоОтчета.УникальныйИдентификатор;
			СтрокаТаблицаВариантов.Представление     = СтрокаДополнительногоОтчета.Представление;
			СтрокаТаблицаВариантов.Описание          = СтрокаДополнительногоОтчета.Описание;
			СтрокаТаблицаВариантов.БыстрыйДоступ         = СтрокаДополнительногоОтчета.БыстрыйДоступ;
			СтрокаТаблицаВариантов.Сортировка        = СтрокаДополнительногоОтчета.Представление;
			СтрокаТаблицаВариантов.ТипВариантаОтчета = Перечисления.ТипыВариантовОтчетов.ДополнительнаяКоманда;
			СтрокаТаблицаВариантов.Подсистема        = "ДополнительныеОтчеты";
			СтрокаТаблицаВариантов.ВнешняяКоманда    = Истина;
			
			СтрокаЗначенияКоманды = ЗначениеПараметровКоманд.Добавить();
			СтрокаЗначенияКоманды.Ключ                  = СтрокаДополнительногоОтчета.УникальныйИдентификатор;
			СтрокаЗначенияКоманды.ИндексПозицииЭлемента = Индекс;
			ПараметрыКоманд.Добавить(Новый ФиксированнаяСтруктура(СтрокаДополнительногоОтчета.ПараметрКоманды));
			Индекс = Индекс + 1;
			
		КонецЦикла;
	КонецЕсли;
	
	МассивПараметровКомманд = Новый ФиксированныйМассив(ПараметрыКоманд);
	
	// Составим список отчетов
	СоответствиеВариантовНомеруСортировки = Новый Соответствие;
	
	Для каждого СтрокаВариантаОтчета из ТаблицаВариантов Цикл
		
		Если НЕ ГруппироватьВарианты или НЕ ЗначениеЗаполнено(СтрокаВариантаОтчета.Подсистема ) Тогда
			СтрокаВариантаОтчета.Группировка = "ПрочиеИПользовательскиеВариантыОтчета";
		Иначе
			Если Найти(СтрокаВариантаОтчета.Подсистема, "СмТакже") > 0  Тогда
				СтрокаВариантаОтчета.Группировка = "СмТакже";
			ИначеЕсли СтрокаВариантаОтчета.Подсистема = СтрокаВариантаОтчета.Подсистема Тогда
				Для каждого ГруппировкаВараинта из ГруппировкиВариантов Цикл
					Если СтрокаВариантаОтчета.Подсистема = ГруппировкаВараинта.Ключ Тогда
						СтрокаВариантаОтчета.Группировка = ГруппировкаВараинта.Ключ;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		СоответствиеВариантовНомеруСортировки.Вставить(СтрокаВариантаОтчета.Ключ, СтрокаВариантаОтчета.Сортировка);
	КонецЦикла;
	
	Для каждого СтрокаВарианта из ТаблицаВариантов Цикл
		БыстрыйДоступ = СтрокаВарианта.БыстрыйДоступ;
		СтрокиПользователи = ТаблицаПользователей.НайтиСтроки(Новый Структура("Ключ, Пользователь", СтрокаВарианта.Ключ, Пользователи.ТекущийПользователь()));
		Для каждого СтрокаПользователи из СтрокиПользователи Цикл
			БыстрыйДоступ = СтрокаПользователи.БыстрыйДоступ;
		КонецЦикла;
		
		Если СтрокаВарианта.Группировка = Неопределено Тогда
			НаборСтрок = СтрокаФиксированнаяГруппировка.Строки;
		Иначе
			НаборСтрок = ГруппировкиВариантов[СтрокаВарианта.Группировка].Строки;
		КонецЕсли;
		Если НаборСтрок.НайтиСтроки(Новый Структура("Ключ", СтрокаВарианта.Ключ)).Количество() = 0 Тогда
			СтрокаВариантаОтчета = НаборСтрок.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаВариантаОтчета, СтрокаВарианта);
			Если СтрокаВарианта.ТипВариантаОтчета = Перечисления.ТипыВариантовОтчетов.Отчет Тогда
				СтрокаВариантаОтчета.Ключ = СтрокаВарианта.Ключ + "_Отчет_";
			КонецЕсли;
			СтрокаВариантаОтчета.БыстрыйДоступ = БыстрыйДоступ;
			СтрокаВариантаОтчета.Сортировка = СоответствиеВариантовНомеруСортировки[СтрокаВарианта.Ключ];
			Если НЕ ЗначениеЗаполнено(СтрокаВариантаОтчета.Сортировка) Тогда
				СтрокаВариантаОтчета.Сортировка = "ЯЯ9999999999999";
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого СтрокаГруппировки из СгруппированныйСписокВариантовОтчетов.Строки Цикл
		
		Если СтрокаГруппировки.Строки.Количество() > 0 Тогда
			
			Если СтрокаГруппировки.ГруппировкаПредставление = "" Тогда
				ЭлементыГруппы = ДеревоНастройкиВидимостиВариантов.ПолучитьЭлементы();
				ИмяГруппировки = ВариантыОтчетов.ЗаменитьЗапрещенныеСимволы(СтрокаГруппировки.Группировка);
				
			Иначе
				ЭлементГруппирвоки = ДеревоНастройкиВидимостиВариантов.ПолучитьЭлементы().Добавить();
				ЭлементГруппирвоки.Название = СтрокаГруппировки.ГруппировкаПредставление;
				ЭлементыГруппы = ЭлементГруппирвоки.ПолучитьЭлементы();
				ИмяГруппировки = ВариантыОтчетов.ЗаменитьЗапрещенныеСимволы(СтрокаГруппировки.Группировка);
			КонецЕсли;
			
			ИмяГруппировки = "_ГруппаРаздела_" + ИмяГруппировки;
			
			Для каждого СтрокаВарианта из СтрокаГруппировки.Строки Цикл
				
				ИмяОтчета =  СтрокаВарианта.Ключ;
				
				ПозицияВарианта = Найти(ИмяОтчета, "\");
				ИмяОтчета = Лев(ИмяОтчета, ПозицияВарианта-1);
				ИмяОтчета = СтрЗаменить(ИмяОтчета, "Отчет.", "");
		
				СодержитсяВФО      = Ложь;
				ДоступенПоФО = Ложь;

				Если Найти(ИмяОтчета, "ДополнительнаяКоманда") = 0 Тогда
					Отчет = Метаданные.Отчеты.Найти(ИмяОтчета);
					Если Отчет = Неопределено Тогда
						Продолжить;
					КонецЕсли;
					
					ЕстьПравоПросмотра  = ПравоДоступа("Просмотр", Отчет);
					Если НЕ ЕстьПравоПросмотра Тогда
						Продолжить;
					КонецЕсли;
					
					ПараметрыФО = Новый Структура("");
					ДоступенПоФО = Ложь;
					СодержитсяВФО = Ложь;
					Для каждого Опция из Метаданные.ФункциональныеОпции Цикл
						
						Если Опция.Состав.Найти(Отчет.Имя) = Неопределено Тогда
							Продолжить;
						КонецЕсли;
						
						СодержитсяВФО = Истина;
						
						ЗначениеФО = ПолучитьФункциональнуюОпцию(Опция.Имя, ПараметрыФО);
						Если ТипЗнч(ЗначениеФО) = Тип("Булево") Тогда
							Если ЗначениеФО Тогда
								ДоступенПоФО = Истина;
								Прервать;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				Иначе
					СодержитсяВФО = Ложь;
					ДоступенПоФО = Истина;
				КонецЕсли;
				
				Если СодержитсяВФО И НЕ ДоступенПоФО Тогда
					Продолжить;
				КонецЕсли;
				
				Элемент = ЭлементыГруппы.Добавить();
				Элемент.Использование       = СтрокаВарианта.БыстрыйДоступ;
				Элемент.Название            = СтрокаВарианта.Представление;
				Элемент.Описание            = СтрокаВарианта.Описание;
				Элемент.Автор               = СтрокаВарианта.Администратор;
				Элемент.Ключ		        = СтрокаВарианта.Ключ;
				Элемент.ВнешняяКоманда		= СтрокаВарианта.ВнешняяКоманда;
				
				Если Элемент.Использование Тогда
					Элемент.Картинка = Закрепить;
				Иначе
					Элемент.Картинка = Открепить;
				КонецЕсли;
				
				Ключ = ВариантыОтчетов.ЗаменитьЗапрещенныеСимволы(СтрокаВарианта.Ключ);
				Элемент.НазваниеЭлемента = Ключ + ИмяГруппировки;
				
				ЭлементСтроки = СписокНастройкиВидимостиВариантов.Добавить();
				ЭлементСтроки.Использование    = СтрокаВарианта.БыстрыйДоступ;
				ЭлементСтроки.Название         = СтрокаВарианта.Представление;
				ЭлементСтроки.Описание         = СтрокаВарианта.Описание;
				ЭлементСтроки.Автор            = СтрокаВарианта.Администратор;
				ЭлементСтроки.Ключ		       = СтрокаВарианта.Ключ;
				ЭлементСтроки.Идентификатор    = Элемент.ПолучитьИдентификатор();
				Элемент.Идентификатор          = ЭлементСтроки.ПолучитьИдентификатор();
				Элемент.ВнешняяКоманда         = СтрокаВарианта.ВнешняяКоманда;
				
				Если ЭлементСтроки.Использование Тогда
					ЭлементСтроки.Картинка = Закрепить;
				Иначе
					ЭлементСтроки.Картинка = Открепить;
				КонецЕсли;
			
				Ключ = ВариантыОтчетов.ЗаменитьЗапрещенныеСимволы(СтрокаВарианта.Ключ);
				Элемент.НазваниеЭлемента = Ключ + ИмяГруппировки;
				
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;
	
	МассивНаУдаление = Новый Массив;
	
	Для каждого СтрокаГруппировки из ДеревоНастройкиВидимостиВариантов.ПолучитьЭлементы() Цикл
		Если СтрокаГруппировки.ПолучитьЭлементы().Количество() = 0 и СтрокаГруппировки.Ключ = "" Тогда
			МассивНаУдаление.Добавить(СтрокаГруппировки);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтрокаНаУдаление из МассивНаУдаление Цикл
		ДеревоНастройкиВидимостиВариантов.ПолучитьЭлементы().Удалить(СтрокаНаУдаление);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	СписокКлючейВарианта      = Новый СписокЗначений;
	СписокЭлементовУправления = Новый СписокЗначений;
	
	Для каждого СтрокаГруппировки из ДеревоНастройкиВидимостиВариантов.ПолучитьЭлементы() Цикл
		Если СтрокаГруппировки.Ключ <> "" Тогда
			КлючОбъекта     = СтрокаГруппировки.Ключ;
			ПозицияВарианта = Найти(КлючОбъекта, "\");
			ИмяОтчета       = Лев(КлючОбъекта, ПозицияВарианта-1);
			КлючВарианта    = Прав(КлючОбъекта, СтрДлина(КлючОбъекта)-ПозицияВарианта);
			СписокКлючейВарианта.Добавить(КлючОбъекта, , СтрокаГруппировки.Использование);
			СписокЭлементовУправления.Добавить(СтрокаГруппировки.НазваниеЭлемента, , СтрокаГруппировки.Использование);
		Иначе
			Для каждого ЭлементЗначение из СтрокаГруппировки.ПолучитьЭлементы() Цикл
				КлючОбъекта = ЭлементЗначение.Ключ;
				ПозицияВарианта = Найти(КлючОбъекта, "\");
				ИмяОтчета       = Лев(КлючОбъекта, ПозицияВарианта-1);
				КлючВарианта    = Прав(КлючОбъекта, СтрДлина(КлючОбъекта)-ПозицияВарианта);
				СписокКлючейВарианта.Добавить(КлючОбъекта, , ЭлементЗначение.Использование);
				СписокЭлементовУправления.Добавить(ЭлементЗначение.НазваниеЭлемента, , ЭлементЗначение.Использование);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ОповеститьОВыборе(Новый Структура("СписокВариантов, СписокЭлементов", СписокКлючейВарианта, СписокЭлементовУправления));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ДеревоНастройкиВидимостиВариантов

&НаКлиенте
Процедура ДеревоНастройкиВидимостиВариантовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыборВТаблице(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастройкиВидимостиВариантовПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.Использование Тогда
		Элементы.ФормаИспользовать.Пометка       = Истина;
		Элементы.ФормаИспользоватьКП.Пометка     = Истина;
		Элементы.ФормаИспользоватьСписок.Пометка = Истина;
	Иначе
		Элементы.ФормаИспользовать.Пометка       = Ложь;
		Элементы.ФормаИспользоватьКП.Пометка     = Ложь;
		Элементы.ФормаИспользоватьСписок.Пометка = Ложь;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.Ключ = "" Тогда
		Элементы.ФормаИспользовать.Доступность       = Ложь;
		Элементы.ФормаИспользоватьКП.Доступность     = Ложь;
		Элементы.ФормаОткрыть.Доступность            = Ложь;
		Элементы.ФормаОткрытьКП.Доступность          = Ложь;
		Элементы.ФормаОткрытьСписок.Доступность      = Ложь;
		Элементы.ФормаИспользоватьСписок.Доступность = Ложь;
	Иначе
		Элементы.ФормаИспользовать.Доступность   	 = Истина;
		Элементы.ФормаИспользоватьКП.Доступность  	 = Истина;
		Элементы.ФормаОткрыть.Доступность        	 = Истина;
		Элементы.ФормаОткрытьКП.Доступность      	 = Истина;
		Элементы.ФормаОткрытьСписок.Доступность      = Истина;
		Элементы.ФормаИспользоватьСписок.Доступность = Истина;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Ключ = Элемент.ТекущиеДанные.Ключ;
		Элементы.СписокНастройкиВидимостиВариантов.ТекущаяСтрока = Элемент.ТекущиеДанные.Идентификатор;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ СписокНастройкиВидимостиВариантов

&НаКлиенте
Процедура СписокНастройкиВидимостиВариантовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыборВТаблице(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНастройкиВидимостиВариантовПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Ключ = Элемент.ТекущиеДанные.Ключ;
		Элементы.ДеревоНастройкиВидимостиВариантов.ТекущаяСтрока = Элемент.ТекущиеДанные.Идентификатор;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Использовать(Команда)
	
	Если Элементы.ДеревоНастройкиВидимостиВариантов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокКлючейВариантов = Новый СписокЗначений;
	Если Элементы.ДеревоНастройкиВидимостиВариантов.ВыделенныеСтроки.Количество() > 0 Тогда
		Для каждого ИндексСтроки из Элементы.ДеревоНастройкиВидимостиВариантов.ВыделенныеСтроки Цикл
			ТекущиеДанные = ДеревоНастройкиВидимостиВариантов.НайтиПоИдентификатору(ИндексСтроки);
			Если СписокКлючейВариантов.НайтиПоЗначению(ТекущиеДанные.Ключ) = Неопределено Тогда
				СписокКлючейВариантов.Добавить(ТекущиеДанные.Ключ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Элементы.СписокНастройкиВидимостиВариантов.ВыделенныеСтроки.Количество() > 0 Тогда 
		Для каждого ИндексСтроки из Элементы.СписокНастройкиВидимостиВариантов.ВыделенныеСтроки Цикл
			ТекущиеДанные = СписокНастройкиВидимостиВариантов.НайтиПоИдентификатору(ИндексСтроки);
			Если СписокКлючейВариантов.НайтиПоЗначению(ТекущиеДанные.Ключ) = Неопределено Тогда
				СписокКлючейВариантов.Добавить(ТекущиеДанные.Ключ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокКлючейВариантов.Количество() > 0 Тогда
		
		Для каждого СтрокаДерева из ДеревоНастройкиВидимостиВариантов.ПолучитьЭлементы() Цикл
			
			Если СтрокаДерева.Ключ <> "" Тогда
				Если СписокКлючейВариантов.НайтиПоЗначению(СтрокаДерева.Ключ) <> Неопределено Тогда
					ТекущиеДанные = СтрокаДерева;
					ТекущиеДанные.Использование = НЕ Элементы.ФормаИспользоватьКП.Пометка;
					Если ТекущиеДанные.Использование Тогда
						ТекущиеДанные.Картинка = Закрепить;
					Иначе
						ТекущиеДанные.Картинка = Открепить;
					КонецЕсли;
				КонецЕсли;
			Иначе
				УстановитьДоступностьПодчиненныхВариантов(СтрокаДерева, НЕ Элементы.ФормаИспользоватьКП.Пометка, СписокКлючейВариантов);
			КонецЕсли;
		КонецЦикла;
		
		Для каждого СтрокаСписка из СписокНастройкиВидимостиВариантов Цикл
			Если СписокКлючейВариантов.НайтиПоЗначению(СтрокаСписка.Ключ) <> Неопределено Тогда
				ТекущиеДанные = СтрокаСписка;
				ТекущиеДанные.Использование = НЕ Элементы.ФормаИспользоватьКП.Пометка;
				Если ТекущиеДанные.Использование Тогда
					ТекущиеДанные.Картинка = Закрепить;
				Иначе
					ТекущиеДанные.Картинка = Открепить;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ТекущиеДанные <> Неопределено И ТекущиеДанные.Использование Тогда
		Элементы.ФормаИспользовать.Пометка       = Истина;
		Элементы.ФормаИспользоватьКП.Пометка     = Истина;
		Элементы.ФормаИспользоватьСписок.Пометка = Истина;
	Иначе
		Элементы.ФормаИспользовать.Пометка       = Ложь;
		Элементы.ФормаИспользоватьКП.Пометка     = Ложь;
		Элементы.ФормаИспользоватьСписок.Пометка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчет(Команда)
	
	Если Элементы.ДеревоНастройкиВидимостиВариантов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Ключ = Элементы.ДеревоНастройкиВидимостиВариантов.ТекущиеДанные.Ключ;
	
	Если СокрЛП(Ключ) = "" Тогда
		Возврат;
	КонецЕсли;
	
	ПозицияВарианта = Найти(Ключ, "\");
	ИмяОтчета = Лев(Ключ, ПозицияВарианта-1);
	КлючВарианта = Прав(Ключ, СтрДлина(Ключ) - ПозицияВарианта);
	
	ПараметрыОтчета = Новый Структура("КлючВарианта", КлючВарианта);
	
	СтандартнаяОбработка = Истина;
	
	ВариантыОтчетовКлиентПереопределяемый.ПередОткрытиемФормыОтчета(Ключ, ПараметрыОтчета, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка Тогда
		Если ИмяОтчета = "Отчет.ДополнительнаяКоманда" Тогда
			ПараметрКоманды = ВариантыОтчетовКлиент.ПолучитьПараметрыКоманды(ЗначениеПараметровКоманд, МассивПараметровКомманд, КлючВарианта);
			Если ПараметрКоманды <> Неопределено Тогда
				ВариантыОтчетовКлиентПереопределяемый.ВыполнитьВнешнююКоманду(КлючВарианта, ПараметрКоманды);
			КонецЕсли;
		Иначе
			ОткрытьФорму(ИмяОтчета + ".Форма", ПараметрыОтчета, , Ключ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Разделы(Команда)
	
	Если Элементы.ФормаРазделы.Пометка Тогда
		Элементы.ФормаРазделы.Пометка = Ложь;
		Элементы.ГруппаСтраницыПредставления.ТекущаяСтраница = Элементы.ГруппаСписок;
		Элементы.ФормаНайти.Доступность         = Истина;
		Элементы.ФормаОтменитьПоиск.Доступность = Истина;
	Иначе
		Элементы.ФормаРазделы.Пометка = Истина;
		Элементы.ГруппаСтраницыПредставления.ТекущаяСтраница = Элементы.ГруппаДерево;
		Элементы.ФормаНайти.Доступность         = Ложь;
		Элементы.ФормаОтменитьПоиск.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УстановитьДоступностьПодчиненныхВариантов(СтрокаДерева, Использование, СписокКлючейВариантов)
	
	Для каждого ПодчиненнаяСтрокаДерева из СтрокаДерева.ПолучитьЭлементы() Цикл
		
		Если ПодчиненнаяСтрокаДерева.Ключ <> "" Тогда
			Если СписокКлючейВариантов.НайтиПоЗначению(ПодчиненнаяСтрокаДерева.Ключ) <> Неопределено Тогда
				ТекущиеДанные = ПодчиненнаяСтрокаДерева;
				ТекущиеДанные.Использование = Использование;
				Если ТекущиеДанные.Использование Тогда
					ТекущиеДанные.Картинка = Закрепить;
				Иначе
					ТекущиеДанные.Картинка = Открепить;
				КонецЕсли;
			КонецЕсли;
		Иначе
			УстановитьДоступностьПодчиненныхВариантов(ПодчиненнаяСтрокаДерева, Использование, СписокКлючейВариантов);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборВТаблице(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Ключ = Элементы.ДеревоНастройкиВидимостиВариантов.ТекущиеДанные.Ключ;
	Если СокрЛП(Ключ) = "" Тогда
		Возврат;
	КонецЕсли;
	
	ПозицияВарианта = Найти(Ключ, "\");
	ИмяОтчета = Лев(Ключ, ПозицияВарианта-1);
	КлючВарианта = Прав(Ключ, СтрДлина(Ключ)-ПозицияВарианта);
	
	ПараметрыОтчета = Новый Структура("КлючВарианта", КлючВарианта);
	
	СтандартнаяОбработка = Истина;
	
	ВариантыОтчетовКлиентПереопределяемый.ПередОткрытиемФормыОтчета(Ключ, ПараметрыОтчета, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка Тогда
		ОткрытьФорму(ИмяОтчета + ".Форма", ПараметрыОтчета, Ключ);
	КонецЕсли;
	
КонецПроцедуры
