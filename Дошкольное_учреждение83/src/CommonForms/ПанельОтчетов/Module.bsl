////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	КартинкаБыстрыйДоступ = БиблиотекаКартинок.БыстрыйДоступ;
	
	РазделИмя = Параметры.ИмяРаздела;
	РазделМетаданные = Метаданные.Подсистемы.Найти(РазделИмя);
	РазделСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(РазделМетаданные);
	
	Если Параметры.Свойство("Заголовок") Тогда
		Заголовок = Параметры.Заголовок;
	Иначе
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отчеты раздела ""%1""'"),
			РазделМетаданные.Представление()
		);
	КонецЕсли;
	
	ЭтаФорма.КлючНазначенияИспользования = "Раздел_" + Строка(РазделСсылка.УникальныйИдентификатор());
	
	ВсеПодсистемы = ВариантыОтчетовПовтИсп.ПодсистемыТекущегоПользователя();
	Найденные = ВсеПодсистемы.Строки.НайтиСтроки(Новый Структура("РазделСсылка", РазделСсылка), Истина);
	Для Каждого СтрокаДерева Из Найденные Цикл
		СтрокаТаблицы = Подсистемы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаДерева);
		СтрокаТаблицы.ИмяЭлемента   = СтрЗаменить(СтрокаТаблицы.ПолноеИмя, ".", "_");
		СтрокаТаблицы.НомерЭлемента = 0;
	КонецЦикла;
	
	ЦветСкрытыхВариантов = ЦветаСтиля.СкрытыйВариантОтчета;
	ЦветВидимыхВариантов = ЦветаСтиля.ВидимыйВариантОтчета;
	ЦветГруппыВариантовОтчетов = ЦветаСтиля.ГруппаВариантовОтчетов;
	ШрифтЖирный = Новый Шрифт(, , Истина);
	
	НаборРеквизитов = ПолучитьРеквизиты();
	Для Каждого Реквизит Из НаборРеквизитов Цикл
		ПостоянныеРеквизиты.Добавить(Реквизит.Имя);
	КонецЦикла;
	
	Для Каждого Команда Из Команды Цикл
		ПостоянныеКоманды.Добавить(Команда.Имя);
	КонецЦикла;
	
	ПерерисоватьПанельОтчетов(Ложь, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	#Если ВебКлиент Тогда
		ВебКлиент = Истина;
	#Иначе
		ВебКлиент = Ложь;
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = ВариантыОтчетовКлиентСервер.ИмяСобытияИзменениеВарианта() Тогда
		СохранитьНастройки = Ложь;
		ОставитьИзмененияВНастройках = РежимНастройки;
		ПерерисоватьПанельОтчетов(СохранитьНастройки, ОставитьИзмененияВНастройках);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Настройки);
	
	ОтборНаименованиеСписокВыбора = Настройки.Получить("ОтборНаименованиеСписокВыбора");
	Если ТипЗнч(ОтборНаименованиеСписокВыбора) = Тип("Массив") Тогда
		Элементы.ОтборНаименование.СписокВыбора.ЗагрузитьЗначения(ОтборНаименованиеСписокВыбора);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Настройки.Вставить("ОтборНаименованиеСписокВыбора", Элементы.ОтборНаименование.СписокВыбора.ВыгрузитьЗначения());
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если ВариантыОтчетовКлиент.СохранитьДанныеПроизвольнойФормы(Модифицированность, Отказ) Тогда
		СохранитьПользовательскиеНастройки();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	Если ВариантыОтчетовКлиент.СохранитьДанныеПроизвольнойФормы(Модифицированность) Тогда
		СохранитьПользовательскиеНастройки();
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ВариантНажатие(Элемент)
	Найденные = ДобавленныеВарианты.НайтиСтроки(Новый Структура("НадписьИмя", Элемент.Имя));
	Если Найденные.Количество() <> 1 Тогда
		Возврат;
	КонецЕсли;
	Вариант = Найденные[0];
	
	// Открытие
	Если Вариант.Дополнительный Тогда
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("КлючВарианта",  Вариант.КлючВарианта);
		ПараметрыОткрытия.Вставить("Вариант",       Вариант.Ссылка);
		ПараметрыОткрытия.Вставить("Отчет",         Вариант.Отчет);
		СтандартныеПодсистемыКлиентПереопределяемый.ОткрытьВариантДополнительногоОтчета(ПараметрыОткрытия);
		
	ИначеЕсли Не ЗначениеЗаполнено(Вариант.ИмяОтчета) Тогда
		
		Предупреждение(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Невозможно открыть
				|вариант отчета ""%1"",
				|так как не заполнено имя отчета.'"),
				Вариант.Наименование
			)
		);
		
	Иначе
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("КлючВарианта", Вариант.КлючВарианта);
		ПараметрыОткрытия.Вставить("Раздел", РазделСсылка);
		Уникальность = "Отчет." + Вариант.ИмяОтчета + "/КлючВарианта." + Вариант.КлючВарианта;
		ОткрытьФорму("Отчет." + Вариант.ИмяОтчета + ".Форма", ПараметрыОткрытия, Неопределено, Уникальность);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьВариантаПриИзменении(Элемент)
	Флажок = Элемент;
	Показать = ЭтаФорма[Флажок.Имя];
	
	НадписьИмя = Сред(Флажок.Имя, СтрДлина("Флажок_")+1);
	Элемент = Элементы.Найти(НадписьИмя);
	Найденные = ДобавленныеВарианты.НайтиСтроки(Новый Структура("НадписьИмя", НадписьИмя));
	Если Найденные.Количество() <> 1 ИЛИ Элемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Вариант = Найденные[0];
	
	ПоказатьСкрытьВариант(Вариант, Элемент, Показать);
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаименованиеПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ОтборНаименование) Тогда
		СписокВыбора = Элементы.ОтборНаименование.СписокВыбора;
		ЭлементСписка = СписокВыбора.НайтиПоЗначению(ОтборНаименование);
		Если ЭлементСписка = Неопределено Тогда
			СписокВыбора.Вставить(0, ОтборНаименование);
			Если СписокВыбора.Количество() > 10 Тогда
				СписокВыбора.Удалить(10);
			КонецЕсли;
		Иначе
			Индекс = СписокВыбора.Индекс(ЭлементСписка);
			Если Индекс <> 0 Тогда
				СписокВыбора.Сдвинуть(Индекс, -Индекс);
			КонецЕсли;
		КонецЕсли;
		ТекущийЭлемент = Элементы.ОтборНаименование;
	КонецЕсли;
	
	ПерерисоватьПанельОтчетов(Ложь, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОтборАвторПриИзменении(Элемент)
	ПерерисоватьПанельОтчетов(Ложь, Истина);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Настроить(Команда)
	РежимНастройки = НЕ РежимНастройки;
	СохранитьНастройки = Ложь;
	Если НЕ РежимНастройки И Модифицированность Тогда
		ТекстВопроса = НСтр("ru = 'Настройки расположения отчетов были изменены.
		|Сохранить изменения?'");
		
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да); 
		Если Ответ = КодВозвратаДиалога.Да Тогда
			СохранитьНастройки = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ПерерисоватьПанельОтчетов(СохранитьНастройки, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	РежимНастройки = Ложь;
	ПерерисоватьПанельОтчетов(Истина, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьИзменения(Команда)
	РежимНастройки = Ложь;
	ПерерисоватьПанельОтчетов(Ложь, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВБыстрыйДоступ(Команда)
	Если ВебКлиент Тогда
		Элемент = Элементы.Найти(Сред(Команда.Имя, Найти(Команда.Имя, "_")+1));
	Иначе
		Элемент = ТекущийЭлемент;
	КонецЕсли;
	Если ТипЗнч(Элемент) <> Тип("ДекорацияФормы") Тогда
		Возврат;
	КонецЕсли;
	
	Найденные = ДобавленныеВарианты.НайтиСтроки(Новый Структура("НадписьИмя", Элемент.Имя));
	Если Найденные.Количество() <> 1 Тогда
		Возврат;
	КонецЕсли;
	Вариант = Найденные[0];
	
	ДобавитьУбратьВариантИзБыстрогоДоступа(Вариант, Элемент, Истина);
КонецПроцедуры

&НаКлиенте
Процедура УбратьИзБыстрогоДоступа(Команда)
	Если ВебКлиент Тогда
		Элемент = Элементы.Найти(Сред(Команда.Имя, Найти(Команда.Имя, "_")+1));
	Иначе
		Элемент = ТекущийЭлемент;
	КонецЕсли;
	Если ТипЗнч(Элемент) <> Тип("ДекорацияФормы") Тогда
		Возврат;
	КонецЕсли;
	
	Найденные = ДобавленныеВарианты.НайтиСтроки(Новый Структура("НадписьИмя", Элемент.Имя));
	Если Найденные.Количество() <> 1 Тогда
		Возврат;
	КонецЕсли;
	Вариант = Найденные[0];
	
	ДобавитьУбратьВариантИзБыстрогоДоступа(Вариант, Элемент, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	Если ВебКлиент Тогда
		Элемент = Элементы.Найти(Сред(Команда.Имя, Найти(Команда.Имя, "_")+1));
	Иначе
		Элемент = ТекущийЭлемент;
	КонецЕсли;
	Если ТипЗнч(Элемент) <> Тип("ДекорацияФормы") Тогда
		Возврат;
	КонецЕсли;
	
	Найденные = ДобавленныеВарианты.НайтиСтроки(Новый Структура("НадписьИмя", Элемент.Имя));
	Если Найденные.Количество() <> 1 Тогда
		Возврат;
	КонецЕсли;
	Вариант = Найденные[0];
	
	ОткрытьЗначение(Вариант.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура СброситьНастройки(Команда)
	ТекстВопроса = НСтр("ru = 'Сбросить настройки расположения отчетов?'");
	
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СброситьНастройкиИПерерисоватьФорму();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВсеОтчеты(Команда)
	ФормаПараметры = Новый Структура("РазделСсылка", РазделСсылка);
	ОткрытьФорму("Справочник.ВариантыОтчетов.ФормаСписка", ФормаПараметры);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура ПоказатьСкрытьВариант(Вариант, Элемент, Показать)
	Модифицированность = Истина;
	Вариант.Видимость = Показать;
	Вариант.ИзмененПользователем = Истина;
	Вариант.СвоиНастройки = Истина;
	Элемент.ЦветТекста = ?(Показать, ЦветВидимыхВариантов, ЦветСкрытыхВариантов);
	ЭтаФорма["Флажок_"+ Вариант.НадписьИмя] = Показать;
	Если Вариант.Важный Тогда
		Если Показать Тогда
			Элемент.Шрифт = ШрифтЖирный;
		Иначе
			Элемент.Шрифт = Новый Шрифт;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУбратьВариантИзБыстрогоДоступа(Вариант, Элемент, БыстрыйДоступ)
	Модифицированность = Истина;
	Если Вариант.БыстрыйДоступ = БыстрыйДоступ Тогда
		Возврат;
	КонецЕсли;
	
	// Регистрация результата для записи
	Вариант.БыстрыйДоступ = БыстрыйДоступ;
	Вариант.ИзмененПользователем = Истина;
	Вариант.СвоиНастройки = Истина;
	
	// Связанное действие: если добавляемый в быстрый доступ вариант не видим - показываем его
	Если БыстрыйДоступ И НЕ Вариант.Видимость Тогда
		ПоказатьСкрытьВариант(Вариант, Элемент, Истина);
	КонецЕсли;
	
	// Визуальный результат
	ПереместитьВариантБыстрогоДоступа(Вариант.ПолучитьИдентификатор(), БыстрыйДоступ);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервере
Процедура ПереместитьВариантБыстрогоДоступа(Знач ВариантИдентификатор, Знач БыстрыйДоступ)
	Вариант = ДобавленныеВарианты.НайтиПоИдентификатору(ВариантИдентификатор);
	Элемент = Элементы.Найти(Вариант.НадписьИмя);
	
	Если БыстрыйДоступ Тогда
		Элемент.Шрифт = ШрифтЖирный;
		ГруппаДляПереноса = ПодгруппаСНаименьшимКоличествомЭлементов(Элементы.БыстрыйДоступ);
		Если НЕ Элементы.БыстрыйДоступДекорация.Видимость Тогда
			Элементы.БыстрыйДоступДекорация.Видимость = Истина;
		КонецЕсли;
	ИначеЕсли Вариант.СмТакже Тогда
		Элемент.Шрифт = Новый Шрифт;
		ГруппаДляПереноса = ПодгруппаСНаименьшимКоличествомЭлементов(Элементы.СмТакже);
	ИначеЕсли Вариант.БезГруппы Тогда
		Элемент.Шрифт = ?(Вариант.Важный, ШрифтЖирный, Новый Шрифт);
		ГруппаДляПереноса = ПодгруппаСНаименьшимКоличествомЭлементов(Элементы.БезГруппы);
	Иначе
		Элемент.Шрифт = ?(Вариант.Важный, ШрифтЖирный, Новый Шрифт);
		Найденные = Подсистемы.НайтиСтроки(Новый Структура("Ссылка", Вариант.Подсистема));
		Подсистема = Найденные[0];
		Если Подсистема.НомерЭлемента = 0 Тогда
			Результат = ДобавитьГруппуУровня4(Элементы.СГруппойКолонка3, Подсистема);
			ГруппаДляПереноса = Результат.ГруппаУровня4;
		Иначе
			ГруппаДляПереноса = Элементы.Найти(Подсистема.ИмяЭлемента + "_" + Формат(Подсистема.НомерЭлемента, "ЧГ=0"));
		КонецЕсли;
	КонецЕсли;
	
	Элементы.Переместить(Элемент.Родитель, ГруппаДляПереноса);
	
	КартинкаИмя = "Картинка_" + Вариант.НадписьИмя;
	Картинка = Элементы.Найти(КартинкаИмя);
	КартинкаВыведена = (Картинка <> Неопределено);
	Если КартинкаВыведена <> БыстрыйДоступ Тогда
		Если КартинкаВыведена Тогда
			Элементы.Удалить(Картинка);
		Иначе
			Картинка = Элементы.Вставить(КартинкаИмя, Тип("ДекорацияФормы"), Элемент.Родитель, Элемент);
			Картинка.Вид = ВидДекорацииФормы.Картинка;
			Картинка.Ширина = 2;
			Картинка.Высота = 1;
			Картинка.Картинка = КартинкаБыстрыйДоступ;
			Картинка.РастягиватьПоГоризонтали = Ложь;
			Картинка.РастягиватьПоВертикали = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ФлажокИмя = "Флажок_" + Вариант.НадписьИмя;
	Флажок = Элементы.Найти(ФлажокИмя);
	ФлажокВыведен = (Флажок <> Неопределено);
	Если ФлажокВыведен = БыстрыйДоступ Тогда
		Если ФлажокВыведен Тогда
			Элементы.Удалить(Флажок);
			
			УдаляемыеРеквизиты = Новый Массив;
			УдаляемыеРеквизиты.Добавить(ФлажокИмя);
			ИзменитьРеквизиты(, УдаляемыеРеквизиты);
		Иначе
			РеквизитФормы = Новый РеквизитФормы(ФлажокИмя, Новый ОписаниеТипов("Булево"), , , Истина);
			
			ДобавляемыеРеквизиты = Новый Массив;
			ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
			ИзменитьРеквизиты(ДобавляемыеРеквизиты);
			
			Флажок = Элементы.Вставить(ФлажокИмя, Тип("ПолеФормы"), Элемент.Родитель, Элемент);
			Флажок.Вид = ВидПоляФормы.ПолеФлажка;
			Флажок.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Флажок.УстановитьДействие("ПриИзменении", "ВидимостьВариантаПриИзменении");
			Флажок.ПутьКДанным = ФлажокИмя;
			
			ЭтаФорма[ФлажокИмя] = Вариант.Видимость;
		КонецЕсли;
	КонецЕсли;
	
	НадписьКонтекстноеМеню = Элемент.КонтекстноеМеню;
	Если НадписьКонтекстноеМеню <> Неопределено Тогда
		КнопкаУбрать = Элементы.Найти("УбратьИзБыстрогоДоступа_" + Вариант.НадписьИмя);
		КнопкаПереместить = Элементы.Найти("ПереместитьВБыстрыйДоступ_" + Вариант.НадписьИмя);
		КнопкаУбрать.Видимость = БыстрыйДоступ;
		КнопкаПереместить.Видимость = НЕ БыстрыйДоступ;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СброситьНастройкиИПерерисоватьФорму()
	РежимНастройки = Ложь;
	Модифицированность = Ложь;
	РегистрыСведений.НастройкиВариантовОтчетов.СброситьНастройкиПользователяВРазделе(РазделСсылка);
	ПерерисоватьПанельОтчетов(Ложь, Ложь);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Сервер

&НаСервере
Функция ДобавитьГруппуУровня4(ВГруппу, Знач ПодсистемаСсылкаИлиСтрока)
	Результат = Новый Структура;
	
	// Поиск строки подсистемы по ссылке
	Если ТипЗнч(ПодсистемаСсылкаИлиСтрока) = Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных") Тогда
		Найденные = Подсистемы.НайтиСтроки(Новый Структура("Ссылка", ПодсистемаСсылкаИлиСтрока));
		ПодсистемаСтрока = Найденные[0];
	Иначе
		ПодсистемаСтрока = ПодсистемаСсылкаИлиСтрока;
	КонецЕсли;
	
	ПодсистемаСтрока.НомерЭлемента = ПодсистемаСтрока.НомерЭлемента + 1;
	ГруппаУровня4Имя = ПодсистемаСтрока.ИмяЭлемента + "_" + Формат(ПодсистемаСтрока.НомерЭлемента, "ЧГ=0");
	
	// Пустая декорация
	Если ВГруппу.ПодчиненныеЭлементы.Количество() > 0 Тогда
		ДекорацияИмя = "Декорация_" + ГруппаУровня4Имя;
		Декорация = Элементы.Вставить(ДекорацияИмя, Тип("ДекорацияФормы"), ВГруппу);
		Декорация.Заголовок = " ";
		Результат.Вставить("Декорация", Декорация);
	КонецЕсли;
	
	// Группа
	ГруппаУровня4 = Элементы.Вставить(ГруппаУровня4Имя, Тип("ГруппаФормы"), ВГруппу);
	ГруппаУровня4.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаУровня4.ЦветТекстаЗаголовка = ЦветГруппыВариантовОтчетов;
	ГруппаУровня4.РастягиватьПоГоризонтали = Истина;
	ГруппаУровня4.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаУровня4.ШрифтЗаголовка = ШрифтЖирный;
	ГруппаУровня4.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаУровня4.Заголовок = ПодсистемаСтрока.Представление;
	Результат.Вставить("ГруппаУровня4", ГруппаУровня4);
	
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ЗаполнитьПанельОтчетов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Подсистемы.Ссылка,
	|	Подсистемы.Представление,
	|	Подсистемы.Приоритет
	|ПОМЕСТИТЬ втПодсистемы
	|ИЗ
	|	&Подсистемы КАК Подсистемы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДобавленныеВарианты.Ссылка,
	|	ДобавленныеВарианты.Подсистема,
	|	ДобавленныеВарианты.Видимость,
	|	ДобавленныеВарианты.БыстрыйДоступ
	|ПОМЕСТИТЬ втДобавленныеВарианты
	|ИЗ
	|	&ДобавленныеВарианты КАК ДобавленныеВарианты
	|ГДЕ
	|	ДобавленныеВарианты.ИзмененПользователем = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	НастройкиРаздела.Ссылка КАК Ссылка,
	|	НастройкиРаздела.Ссылка.Отчет КАК Отчет,
	|	НастройкиРаздела.Ссылка.КлючВарианта КАК КлючВарианта,
	|	НастройкиРаздела.Ссылка.Наименование КАК Наименование,
	|	НастройкиРаздела.Ссылка.Автор КАК Автор,
	|	ВЫРАЗИТЬ(НастройкиРаздела.Ссылка.Описание КАК СТРОКА(1000)) КАК Описание,
	|	НастройкиРаздела.РазделИлиГруппа КАК Подсистема,
	|	втПодсистемы.Приоритет КАК ПодсистемаПриоритет,
	|	втПодсистемы.Представление КАК ПодсистемаПредставление,
	|	НастройкиРаздела.Важный КАК Важный,
	|	НастройкиРаздела.СмТакже КАК СмТакже,
	|	ВЫБОР
	|		КОГДА НастройкиРаздела.Ссылка.ТипОтчета = ЗНАЧЕНИЕ(Перечисление.ТипыОтчетов.Дополнительный)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Дополнительный,
	|	ВЫБОР
	|		КОГДА НастройкиРаздела.РазделИлиГруппа = &РазделСсылка
	|				И НастройкиРаздела.СмТакже = ЛОЖЬ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК БезГруппы,
	|	ЕСТЬNULL(втДобавленныеВарианты.Видимость, ЕСТЬNULL(НастройкиПользователя.Видимость, НастройкиРаздела.Ссылка.ВидимостьПоУмолчанию
	|				ИЛИ ВЫБОР
	|					КОГДА НастройкиРаздела.Ссылка.Автор = &ТекущийПользователь
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ)) КАК Видимость,
	|	ЕСТЬNULL(втДобавленныеВарианты.БыстрыйДоступ, ЕСТЬNULL(НастройкиПользователя.БыстрыйДоступ, ЛОЖЬ)) КАК БыстрыйДоступ,
	|	ВЫБОР
	|		КОГДА НастройкиПользователя.Видимость ЕСТЬ NULL 
	|				И втДобавленныеВарианты.Видимость ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СвоиНастройки,
	|	ВЫБОР
	|		КОГДА НастройкиРаздела.Ссылка.ТипОтчета = &ТипВнутренний
	|			ТОГДА НастройкиРаздела.Ссылка.Отчет.Имя
	|		КОГДА НастройкиРаздела.Ссылка.ТипОтчета = &ТипДополнительный
	|			ТОГДА """"
	|		ИНАЧЕ ПОДСТРОКА(ВЫРАЗИТЬ(НастройкиРаздела.Ссылка.Отчет КАК СТРОКА(150)), 14, 137)
	|	КОНЕЦ КАК ИмяОтчета,
	|	ВЫБОР
	|			КОГДА &ОтборНаименование = """"
	|				ТОГДА ЛОЖЬ
	|			КОГДА НастройкиРаздела.Ссылка.Наименование ПОДОБНО ""%"" + &ОтборНаименование + ""%""
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|		ИЛИ ВЫБОР
	|			КОГДА &ОтборАвтор = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|				ТОГДА ЛОЖЬ
	|			КОГДА НастройкиРаздела.Ссылка.Автор = &ОтборАвтор
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ КАК СкрытОтбором
	|ИЗ
	|	Справочник.ВариантыОтчетов.Размещение КАК НастройкиРаздела
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПодсистемы КАК втПодсистемы
	|		ПО НастройкиРаздела.РазделИлиГруппа = втПодсистемы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиВариантовОтчетов КАК НастройкиПользователя
	|		ПО (НастройкиПользователя.Пользователь = &ТекущийПользователь)
	|			И НастройкиРаздела.Ссылка = НастройкиПользователя.Вариант
	|			И НастройкиРаздела.РазделИлиГруппа = НастройкиПользователя.РазделИлиГруппа
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДобавленныеВарианты КАК втДобавленныеВарианты
	|		ПО НастройкиРаздела.Ссылка = втДобавленныеВарианты.Ссылка
	|			И НастройкиРаздела.РазделИлиГруппа = втДобавленныеВарианты.Подсистема
	|ГДЕ
	|	НастройкиРаздела.Использование = ИСТИНА
	|	И НастройкиРаздела.Ссылка.Отчет В(&ОтчетыПользователя)
	|	И НастройкиРаздела.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И НЕ НастройкиРаздела.Ссылка.Отчет ЕСТЬ NULL 
	|	И ЕСТЬNULL(НастройкиПользователя.Видимость, НастройкиРаздела.Ссылка.ВидимостьПоУмолчанию
	|				ИЛИ ВЫБОР
	|					КОГДА НастройкиРаздела.Ссылка.Автор = &ТекущийПользователь
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ) = ИСТИНА";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подсистемы",          Подсистемы.Выгрузить());
	Запрос.УстановитьПараметр("РазделСсылка",        РазделСсылка);
	Запрос.УстановитьПараметр("ДобавленныеВарианты", ДобавленныеВарианты.Выгрузить(, "Ссылка, Подсистема, Видимость, БыстрыйДоступ, ИзмененПользователем"));
	Запрос.УстановитьПараметр("ТекущийПользователь", Пользователи.ТекущийПользователь());
	Запрос.УстановитьПараметр("ОтборНаименование",   ?(РежимНастройки, ОтборНаименование, ""));
	Запрос.УстановитьПараметр("ОтборАвтор",          ?(РежимНастройки, ОтборАвтор, Справочники.Пользователи.ПустаяСсылка()));
	Запрос.УстановитьПараметр("ТипВнутренний",       Перечисления.ТипыОтчетов.Внутренний);
	Запрос.УстановитьПараметр("ТипДополнительный",   Перечисления.ТипыОтчетов.Дополнительный);
	Запрос.УстановитьПараметр("ОтчетыПользователя",  ВариантыОтчетов.ОтчетыТекущегоПользователя());
	
	Если РежимНастройки Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
			"
			|	И ЕСТЬNULL(НастройкиПользователя.Видимость, НастройкиРаздела.Ссылка.ВидимостьПоУмолчанию
			|				ИЛИ ВЫБОР
			|					КОГДА НастройкиРаздела.Ссылка.Автор = &ТекущийПользователь
			|						ТОГДА ИСТИНА
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ) = ИСТИНА",
			""
		);
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	
	Варианты = Запрос.Выполнить().Выгрузить();
	ПараметрыДобавления = Новый Структура("ИмяГруппы");
	
	ВариантыБыстрогоДоступа = Варианты.Скопировать(Новый Структура("СкрытОтбором, БыстрыйДоступ", Ложь, Истина));
	ПараметрыДобавления.ИмяГруппы = "БыстрыйДоступ";
	ДобавитьВариантыВПанель(ВариантыБыстрогоДоступа, ПараметрыДобавления);
	
	ВариантыБезГруппы = Варианты.Скопировать(Новый Структура("СкрытОтбором, БыстрыйДоступ, БезГруппы", Ложь, Ложь, Истина));
	ПараметрыДобавления.ИмяГруппы = "БезГруппы";
	ДобавитьВариантыВПанель(ВариантыБезГруппы, ПараметрыДобавления);
	
	ВариантыСГруппой = Варианты.Скопировать(Новый Структура("СкрытОтбором, БыстрыйДоступ, БезГруппы, СмТакже", Ложь, Ложь, Ложь, Ложь));
	ПараметрыДобавления.ИмяГруппы = "СГруппой";
	ДобавитьВариантыВПанель(ВариантыСГруппой, ПараметрыДобавления);
	
	ВариантыСмТакже = Варианты.Скопировать(Новый Структура("СкрытОтбором, БыстрыйДоступ, БезГруппы, СмТакже", Ложь, Ложь, Ложь, Истина));
	ПараметрыДобавления.ИмяГруппы = "СмТакже";
	ДобавитьВариантыВПанель(ВариантыСмТакже, ПараметрыДобавления);
	
	// Добавление вариантов, скрытых отбором (для сохранения их пользовательских настроек)
	ВариантыСкрытыеОтбором = Варианты.НайтиСтроки(Новый Структура("СкрытОтбором", Истина));
	Для Каждого Вариант Из ВариантыСкрытыеОтбором Цикл
		Найденные = ДобавленныеВарианты.НайтиСтроки(Новый Структура("Ссылка, Подсистема", Вариант.Ссылка, Вариант.Подсистема));
		Если Найденные.Количество() = 0 Тогда
			СтрокаТаблицы = ДобавленныеВарианты.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Вариант);
		КонецЕсли;
	КонецЦикла;
	
	Элементы.БыстрыйДоступДекорация.Видимость = (ВариантыБыстрогоДоступа.Количество() > 0);
	Элементы.БезГруппыДекорация.Видимость = (ВариантыБезГруппы.Количество() > 0);
	Элементы.СГруппойДекорация.Видимость = (ВариантыСГруппой.Количество() > 0);
	Элементы.СмТакжеДекорация.Видимость = (ВариантыСмТакже.Количество() > 0);
	
	Если ВариантыБыстрогоДоступа.Количество() = 0 
		И ВариантыБезГруппы.Количество() = 0 
		И ВариантыСГруппой.Количество() = 0 
		И ВариантыСмТакже.Количество() = 0 Тогда
		Надпись = Элементы.Вставить("СписокОтчетовПуст", Тип("ДекорацияФормы"), Элементы.БыстрыйДоступКолонка1);
		Надпись.Заголовок = НСтр("ru = 'Нет доступных отчетов.'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВариантыВПанель(Варианты, ПараметрыДобавления)
	
	ВариантыКоличество = Варианты.Количество();
	Если ВариантыКоличество = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ГруппаУровня2Имя = ПараметрыДобавления.ИмяГруппы;
	ГруппаУровня2 = Элементы.Найти(ГруппаУровня2Имя);
	РазмещатьВПодгруппах = (ГруппаУровня2Имя = "СГруппой");
	
	Если ГруппаУровня2Имя = "БыстрыйДоступ" ИЛИ ГруппаУровня2Имя = "СмТакже" Тогда
		Варианты.Сортировать("Наименование ВОЗР"); // Нет важных
	ИначеЕсли ГруппаУровня2Имя = "БезГруппы" Тогда
		Варианты.Сортировать("Важный УБЫВ, Наименование ВОЗР"); // Есть важные
	Иначе
		Варианты.Сортировать("ПодсистемаПриоритет ВОЗР, Важный УБЫВ, Наименование ВОЗР"); // Есть группы и важные
	КонецЕсли;
	
	// Переменные для поддержки динамики групп верхнего уровня
	ГруппыВерхнегоУровня = Новый Массив;
	Для Каждого ГруппаУровня3 Из ГруппаУровня2.ПодчиненныеЭлементы Цикл
		ГруппыВерхнегоУровня.Добавить(ГруппаУровня3);
	КонецЦикла;
	ГруппВерхнегоУровня = ГруппыВерхнегоУровня.Количество();
	
	ГруппаУровня3Индекс = 0;
	ГруппаУровня3 = ГруппыВерхнегоУровня[ГруппаУровня3Индекс];
	ГруппаУровня3Свободно = ГруппыВерхнегоУровня.ВГраница();
	
	Если РазмещатьВПодгруппах Тогда
		ТаблицаПодсистем = Варианты.Скопировать(, "Подсистема");
		ТаблицаПодсистем.Колонки.Добавить("ВариантовВПодсистеме");
		ТаблицаПодсистем.ЗаполнитьЗначения(1, "ВариантовВПодсистеме");
		ТаблицаПодсистем.Свернуть("Подсистема", "ВариантовВПодсистеме");
		ОбщееКоличествоСтрок = ВариантыКоличество + 2*ТаблицаПодсистем.Количество() - Мин(3, ТаблицаПодсистем.Количество());
	Иначе
		ТаблицаПодсистем = Неопределено;
		ОбщееКоличествоСтрок = ВариантыКоличество;
	КонецЕсли;
	
	МногоЭлементов = ОбщееКоличествоСтрок > 20;
	
	ГруппаУровня3Отсечка = Цел(ОбщееКоличествоСтрок / ГруппВерхнегоУровня);
	ГруппаУровня3Добавка = ОбщееКоличествоСтрок - ГруппаУровня3Отсечка * ГруппВерхнегоУровня;
	ГруппаУровня3Корректировка = ?(ГруппаУровня3Добавка > 0, 1, 0);
	
	ГруппаУровня4Осталось = 0;
	
	// Шаблоны заполнения создаваемых элементов управления
	НадписьШаблон = Новый Структура(
		"Вид, Гиперссылка, Высота, ЦветТекста,
		|РастягиватьПоГоризонтали, РастягиватьПоВертикали"
	);
	НадписьШаблон.Вид = ВидДекорацииФормы.Надпись;
	НадписьШаблон.Гиперссылка = Истина;
	НадписьШаблон.РастягиватьПоГоризонтали = Истина;
	НадписьШаблон.РастягиватьПоВертикали = Ложь;
	НадписьШаблон.Высота = 1;
	НадписьШаблон.ЦветТекста = ЦветВидимыхВариантов;
	
	КартинкаШаблон = Новый Структура(
		"Вид, Ширина, Высота, Картинка,
		|РастягиватьПоГоризонтали, РастягиватьПоВертикали"
	);
	КартинкаШаблон.Вид = ВидДекорацииФормы.Картинка;
	КартинкаШаблон.Ширина = 2;
	КартинкаШаблон.Высота = 1;
	КартинкаШаблон.Картинка = КартинкаБыстрыйДоступ;
	КартинкаШаблон.РастягиватьПоГоризонтали = Ложь;
	КартинкаШаблон.РастягиватьПоВертикали = Ложь;
	
	ГруппаУровня4Шаблон = Новый Структура(
		"Вид, ЦветТекстаЗаголовка, РастягиватьПоГоризонтали,
		|Отображение, Группировка, ШрифтЗаголовка"
	);
	ГруппаУровня4Шаблон.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаУровня4Шаблон.ЦветТекстаЗаголовка = ЦветГруппыВариантовОтчетов;
	ГруппаУровня4Шаблон.РастягиватьПоГоризонтали = Истина;
	ГруппаУровня4Шаблон.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаУровня4Шаблон.ШрифтЗаголовка = ШрифтЖирный;
	ГруппаУровня4Шаблон.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	
	ГруппаУровня5Шаблон = Новый Структура(
		"Вид, РастягиватьПоГоризонтали,
		|Отображение, Группировка, 
		|ОтображатьЗаголовок"
	);
	ГруппаУровня5Шаблон.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаУровня5Шаблон.РастягиватьПоГоризонтали = Истина;
	ГруппаУровня5Шаблон.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаУровня5Шаблон.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ГруппаУровня5Шаблон.ОтображатьЗаголовок = Ложь;
	
	Если РежимНастройки Тогда
		КонтекстноеМеню = Новый Структура("УбратьИзБыстрогоДоступа, ПереместитьВБыстрыйДоступ, Изменить");
		КонтекстноеМеню.УбратьИзБыстрогоДоступа   = Новый Структура("Видимость", (ГруппаУровня2Имя = "БыстрыйДоступ"));
		КонтекстноеМеню.ПереместитьВБыстрыйДоступ = Новый Структура("Видимость", (ГруппаУровня2Имя <> "БыстрыйДоступ"));
		КонтекстноеМеню.Изменить                  = Новый Структура("Видимость", Истина);
	КонецЕсли;
	
	ПродолжениеСуффикс = " " + НСтр("ru = '(продолжение)'");
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	СтрокаТекущейГруппы = Неопределено;
	ГруппаУровня4 = Неопределено;
	ГруппаУровня3НомерЭлемента = 0;
	ГруппаУровня4Выведено = 0;
	Для Каждого Вариант Из Варианты Цикл
		ГруппаУровня3НомерЭлемента = ГруппаУровня3НомерЭлемента + 1;
		ГруппаУровня3Изменилась = Ложь;
		
		// Вычисление предела
		ВерхнийПредел = ГруппаУровня3Отсечка + ГруппаУровня3Корректировка;
		
		// Корректировка предела с учетом разделения группы на 2 части
		Если РазмещатьВПодгруппах И ГруппаУровня4Осталось > 1 И МногоЭлементов Тогда
			ВерхнийПредел = ВерхнийПредел + ГруппаУровня3Свободно;
		КонецЕсли;
		
		// Переход к следующей группе верхнего уровня
		Если ГруппаУровня3НомерЭлемента > ВерхнийПредел
			И (ГруппаУровня4Осталось = 0 ИЛИ ГруппаУровня4Осталось > 3)
			И (ГруппаУровня4Выведено = 0 ИЛИ ГруппаУровня4Выведено > 2)
			И ГруппаУровня3Свободно > 0 Тогда
			
			ГруппаУровня3НомерЭлемента = 1;
			ГруппаУровня3Индекс        = ГруппаУровня3Индекс + 1;
			ГруппаУровня3Свободно      = ГруппаУровня3Свободно - 1;
			ГруппаУровня3              = ГруппыВерхнегоУровня[ГруппаУровня3Индекс];
			ГруппаУровня3Добавка       = ГруппаУровня3Добавка - 1;
			ГруппаУровня3Корректировка = ?(ГруппаУровня3Добавка > 0, 1, 0);
			
			ГруппаУровня3Изменилась = Истина;
		КонецЕсли;
		
		// Переход к следующей группе текущего уровня
		Если РазмещатьВПодгруппах
			И (
				ГруппаУровня3Изменилась
				ИЛИ СтрокаТекущейГруппы = Неопределено
				ИЛИ СтрокаТекущейГруппы.Подсистема <> Вариант.Подсистема
			) Тогда
			
			НачалоСПродолжением = (СтрокаТекущейГруппы <> Неопределено И СтрокаТекущейГруппы.Подсистема = Вариант.Подсистема);
			
			Если НачалоСПродолжением И Прав(ГруппаУровня4.Заголовок, СтрДлина(ПродолжениеСуффикс)) <> ПродолжениеСуффикс Тогда
				ГруппаУровня4.Заголовок = ГруппаУровня4.Заголовок;
			КонецЕсли;
			
			Если НЕ НачалоСПродолжением Тогда
				СтрокаТекущейГруппы = ТаблицаПодсистем.Найти(Вариант.Подсистема, "Подсистема");
				ГруппаУровня4Осталось = СтрокаТекущейГруппы.ВариантовВПодсистеме;
			КонецЕслИ;
			
			Результат = ДобавитьГруппуУровня4(ГруппаУровня3, Вариант.Подсистема);
			
			ГруппаУровня4 = Результат.ГруппаУровня4;
			ГруппаУровня3НомерЭлемента = ГруппаУровня3НомерЭлемента + ?(Результат.Свойство("Декорация"), 2, 1);
			
			Если НачалоСПродолжением Тогда
				ГруппаУровня4.Заголовок = ГруппаУровня4.Заголовок + ПродолжениеСуффикс;
			КонецЕсли;
			
			ГруппаУровня4Выведено = 0;
			
		КонецЕсли;
		
		Если РазмещатьВПодгруппах Тогда
			ГруппаУровня4Выведено = ГруппаУровня4Выведено + 1;
		КонецЕсли;
		
		// Уникальное имя добавляемого элемента
		ДобавленоЭлементов = ДобавленоЭлементов + 1;
		НадписьИмя = "ДобавленныйЭлемент_" + Формат(ДобавленоЭлементов, "ЧГ=0");
		
		// Добавление группы нижнего уровня для горизонтальной группировки
		Если РежимНастройки ИЛИ ГруппаУровня2Имя = "БыстрыйДоступ" Тогда
			ГруппаУровня5Имя = "Группа_" + НадписьИмя;
			ГруппаУровня5 = Элементы.Вставить(ГруппаУровня5Имя, Тип("ГруппаФормы"), ?(РазмещатьВПодгруппах, ГруппаУровня4, ГруппаУровня3));
			ЗаполнитьЗначенияСвойств(ГруппаУровня5, ГруппаУровня5Шаблон);
		Иначе
			ГруппаУровня5 = ?(РазмещатьВПодгруппах, ГруппаУровня4, ГруппаУровня3);
		КонецЕсли;
		
		// Добавление флажка (для быстрого доступа не используется)
		Если РежимНастройки И ГруппаУровня2Имя <> "БыстрыйДоступ" Тогда
			ФлажокИмя = "Флажок_" + НадписьИмя;
			
			РеквизитФормы = Новый РеквизитФормы(ФлажокИмя, Новый ОписаниеТипов("Булево"), , , Истина);
			ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
			
			Флажок = Элементы.Вставить(ФлажокИмя, Тип("ПолеФормы"), ГруппаУровня5);
			Флажок.Вид = ВидПоляФормы.ПолеФлажка;
			Флажок.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Флажок.УстановитьДействие("ПриИзменении", "ВидимостьВариантаПриИзменении");
		КонецЕсли;
		
		// Добавление картинки (используется только для быстрого доступа)
		Если ГруппаУровня2Имя = "БыстрыйДоступ" Тогда
			КартинкаИмя = "Картинка_" + НадписьИмя;
			Картинка = Элементы.Вставить(КартинкаИмя, Тип("ДекорацияФормы"), ГруппаУровня5);
			ЗаполнитьЗначенияСвойств(Картинка, КартинкаШаблон);
		КонецЕсли;
		
		// Добавление надписи (варианта)
		Надпись = Элементы.Вставить(НадписьИмя, Тип("ДекорацияФормы"), ГруппаУровня5);
		ЗаполнитьЗначенияСвойств(Надпись, НадписьШаблон);
		Надпись.Заголовок = СокрЛП(Вариант.Наименование);
		Надпись.Подсказка = СокрЛП(?(ПустаяСтрока(Вариант.Описание), Вариант.Наименование, Вариант.Описание));
		Если ЗначениеЗаполнено(Вариант.Автор) Тогда
			Надпись.Подсказка = Надпись.Подсказка + Символы.ПС + НСтр("ru = 'Автор:'") + " " + СокрЛП(Строка(Вариант.Автор));
		КонецЕсли;
		Надпись.УстановитьДействие("Нажатие", "ВариантНажатие");
		Если НЕ Вариант.Видимость Тогда
			Надпись.ЦветТекста = ЦветСкрытыхВариантов;
		КонецЕсли;
		Если ГруппаУровня2Имя <> "СмТакже" 
			И (Вариант.Важный ИЛИ ГруппаУровня2Имя = "БыстрыйДоступ")
			И Вариант.Видимость Тогда
			Надпись.Шрифт = ШрифтЖирный;
		КонецЕсли;
		
		Если РежимНастройки Тогда
			НадписьКонтекстноеМеню = Надпись.КонтекстноеМеню;
			Если НадписьКонтекстноеМеню <> Неопределено Тогда
				Для Каждого КлючИЗначение Из КонтекстноеМеню Цикл
					КомандаИмя = КлючИЗначение.Ключ;
					КнопкаИмя = КомандаИмя + "_" + НадписьИмя;
					Кнопка = Элементы.Вставить(КнопкаИмя, Тип("КнопкаФормы"), НадписьКонтекстноеМеню);
					Если ВебКлиент Тогда
						Команда = Команды.Добавить(КнопкаИмя);
						ЗаполнитьЗначенияСвойств(Команда, Команды[КомандаИмя]);
						Кнопка.ИмяКоманды = КнопкаИмя;
					Иначе
						Кнопка.ИмяКоманды = КомандаИмя;
					КонецЕсли;
					ЗаполнитьЗначенияСвойств(Кнопка, КлючИЗначение.Значение);
				КонецЦикла; 
			КонецЕсли;
		КонецЕсли;
		
		// Регистрация добавленной надписи
		ГруппирующаяСущность = ?(РазмещатьВПодгруппах, ГруппаУровня4.Имя, ГруппаУровня2Имя);
		Найденные = ДобавленныеВарианты.НайтиСтроки(Новый Структура("Ссылка, Подсистема", Вариант.Ссылка, Вариант.Подсистема));
		Если Найденные.Количество() > 0 Тогда
			СтрокаТаблицы = Найденные[0];
		Иначе
			СтрокаТаблицы = ДобавленныеВарианты.Добавить();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Вариант);
		СтрокаТаблицы.ГруппаУровня2Имя     = ГруппаУровня2Имя;
		СтрокаТаблицы.НадписьИмя           = НадписьИмя;
		СтрокаТаблицы.ГруппирующаяСущность = ГруппирующаяСущность;
		
		Если РазмещатьВПодгруппах Тогда
			ГруппаУровня4Осталось = ГруппаУровня4Осталось - 1;
		КонецЕсли;
		
	КонецЦикла;
	
	Если РежимНастройки И ДобавляемыеРеквизиты.Количество() > 0 Тогда
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		Для Каждого Реквизит Из ДобавляемыеРеквизиты Цикл
			Флажок = Элементы.Найти(Реквизит.Имя);
			Флажок.ПутьКДанным = Реквизит.Имя;
			НадписьИмя = Сред(Реквизит.Имя, СтрДлина("Флажок_")+1);
			Найденные = ДобавленныеВарианты.НайтиСтроки(Новый Структура("НадписьИмя", НадписьИмя));
			Если Найденные.Количество() > 0 Тогда
				Вариант = Найденные[0];
				ЭтаФорма[Реквизит.Имя] = Вариант.Видимость;
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПерерисоватьПанельОтчетов(СохранитьНастройки, ОставитьИзмененияВНастройках)
	Если СохранитьНастройки Тогда
		ОставитьИзмененияВНастройках = Ложь;
	КонецЕсли;
	
	Если РежимНастройки И Элементы.ВерхняяПанельНадпись.Заголовок = "" Тогда
		Элементы.ВерхняяПанельНадпись.Заголовок = НСтр("ru = 'Настроить быстрый доступ можно с помощью правой кнопки мыши.'");
	КонецЕсли;
	
	Элементы.ОтборНаименование.Видимость    = РежимНастройки;
	Элементы.ОтборАвтор.Видимость           = РежимНастройки;
	Элементы.СохранитьИзменения.Видимость   = РежимНастройки;
	Элементы.ОтменитьИзменения.Видимость    = РежимНастройки;
	Элементы.ВерхняяПанельСтрока2.Видимость = РежимНастройки;
	Элементы.ВерхняяПанельОтступ.Видимость  = РежимНастройки;
	Элементы.ВсеОтчеты.Видимость            = НЕ РежимНастройки;
	Элементы.СсылкаВсеОтчеты.Видимость      = НЕ РежимНастройки;
	
	// Заголовок
	ПрефиксРежимаНастройки = НСтр("ru = 'Настройка:'") + " ";
	ПрефиксВыведен = (Лев(Заголовок, СтрДлина(ПрефиксРежимаНастройки)) = ПрефиксРежимаНастройки);
	Если ПрефиксВыведен <> РежимНастройки Тогда
		Если РежимНастройки Тогда
			Заголовок = ПрефиксРежимаНастройки + Заголовок;
		Иначе
			Заголовок = СтрЗаменить(Заголовок, ПрефиксРежимаНастройки, "");
		КонецЕсли;
	КонецЕсли;
	
	// Удаление элементов
	УдаляемыеЭлементы = Новый Массив;
	Для Каждого ЭлементУровня2 Из Элементы.Колонки.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(ЭлементУровня2) = Тип("ГруппаФормы") Тогда
			Для Каждого ЭлементУровня3 Из ЭлементУровня2.ПодчиненныеЭлементы Цикл
				Если ТипЗнч(ЭлементУровня3) = Тип("ГруппаФормы") Тогда
					Для Каждого ЭлементУровня4 Из ЭлементУровня3.ПодчиненныеЭлементы Цикл
						УдаляемыеЭлементы.Добавить(ЭлементУровня4);
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Для Каждого УдаляемыйЭлемент Из УдаляемыеЭлементы Цикл
		Элементы.Удалить(УдаляемыйЭлемент);
	КонецЦикла;
	
	// Удаление реквизитов
	УдаляемыеРеквизиты = Новый Массив;
	НаборРеквизитов = ПолучитьРеквизиты();
	Для Каждого Реквизит Из НаборРеквизитов Цикл
		Если ПостоянныеРеквизиты.НайтиПоЗначению(Реквизит.Имя) = Неопределено Тогда
			УдаляемыеРеквизиты.Добавить(Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;
	ИзменитьРеквизиты(, УдаляемыеРеквизиты);
	
	// Удаление команд
	Если ВебКлиент Тогда
		УдаляемыеКоманды = Новый Массив;
		Для Каждого Команда Из Команды Цикл
			Если ПостоянныеКоманды.НайтиПоЗначению(Команда.Имя) = Неопределено Тогда
				УдаляемыеКоманды.Добавить(Команда);
			КонецЕсли;
		КонецЦикла;
		Для Каждого Команда Из УдаляемыеКоманды Цикл
			Команды.Удалить(Команда);
		КонецЦикла;
	КонецЕсли;
	
	// Сохранение пользовательских настроек
	Если СохранитьНастройки Тогда
		СохранитьПользовательскиеНастройки();
	КонецЕсли;
	
	// Очистка изменений в пользовательских настройках
	Если НЕ ОставитьИзмененияВНастройках Тогда
		ДобавленныеВарианты.Очистить();
		ДобавленоЭлементов = 0;
	КонецЕсли;
	
	// Сброс номера последнего добавленного элемента
	Для Каждого СтрокаТаблицы Из Подсистемы Цикл
		СтрокаТаблицы.НомерЭлемента = 0;
	КонецЦикла;
	
	// Заполнение панели
	ЗаполнитьПанельОтчетов();
	
	Если Модифицированность И НЕ ОставитьИзмененияВНастройках Тогда
		Модифицированность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьПользовательскиеНастройки()
	ИзмененныеНастройки = ДобавленныеВарианты.Выгрузить(
		Новый Структура("ИзмененПользователем", Истина),
		"Ссылка, Подсистема, Видимость, БыстрыйДоступ"
	);
	ИзмененныеНастройки.Колонки.Ссылка.Имя = "Вариант";
	ИзмененныеНастройки.Колонки.Подсистема.Имя = "РазделИлиГруппа";
	РегистрыСведений.НастройкиВариантовОтчетов.СохранитьНастройкиПользователяВРазделе(ИзмененныеНастройки);
КонецПроцедуры

&НаСервере
Функция ПодгруппаСНаименьшимКоличествомЭлементов(Группа)
	ПодгруппаМин = Неопределено;
	ВложенныхЭлементовМин = 0;
	Для Каждого Подгруппа Из Группа.ПодчиненныеЭлементы Цикл
		ВложенныхЭлементов = Подгруппа.ПодчиненныеЭлементы.Количество();
		Если ВложенныхЭлементов < ВложенныхЭлементовМин ИЛИ ПодгруппаМин = Неопределено Тогда
			ПодгруппаМин          = Подгруппа;
			ВложенныхЭлементовМин = ВложенныхЭлементов;
		КонецЕсли;
	КонецЦикла;
	Возврат ПодгруппаМин;
КонецФункции


