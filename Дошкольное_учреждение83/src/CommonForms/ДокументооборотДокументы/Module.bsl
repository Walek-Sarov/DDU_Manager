
///////////////////////////////////////////////////////////
// Процедуры и функции

&НаСервере
Процедура ПолучитьДанныеДокумента()
	
	Прокси = РаботаС1СДокументооборотВызовСервера.ПолучитьПрокси();
	
	ExternalObject = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "ExternalObject");
	ExternalObject.id = Строка(Параметры.ВнешнийОбъект.УникальныйИдентификатор());
	ExternalObject.type = Строка(ТипЗнч(Параметры.ВнешнийОбъект));
	ExternalObject.name = Строка(Параметры.ВнешнийОбъект);
	
	Запрос = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMGetDocumentListRequest");
	Запрос.externalObjects.Добавить(ExternalObject);
	
	Запрос.columnSet.Добавить("name"); 
	Запрос.columnSet.Добавить("relations"); 
	
	Результат = Прокси.execute(Запрос);
	Если РаботаС1СДокументооборот.ПроверитьТип(Прокси, Результат, "DMError") Тогда 
		ВызватьИсключение Результат.description;
	КонецЕсли;	
		
	Если Результат.documents.Количество() > 0 Тогда 
		Объект = Результат.documents[0];
		
		ДокументID = Объект.objectId.id;
		ДокументТип = Объект.objectId.type;
		Документ = Объект.name;
		ДополнитьПредставлениеДокумента(Документ, ДокументТип);
		
		Дерево = РеквизитФормыВЗначение("СписокДокументов"); 
		Дерево.Строки.Очистить();
		Для Каждого Связь Из Объект.relations Цикл
			
			НайденнаяСтрока = Дерево.Строки.Найти(Связь.relationType.name, "Заголовок", Ложь);
			Если НайденнаяСтрока <> Неопределено Тогда 
				СтрокаТипСвязи = НайденнаяСтрока;
			Иначе	
				СтрокаТипСвязи = Дерево.Строки.Добавить();
				СтрокаТипСвязи.Заголовок = Связь.relationType.name;
				СтрокаТипСвязи.ID = Связь.relationType.objectId.id;
				СтрокаТипСвязи.Тип = Связь.relationType.objectId.type;
			КонецЕсли;	
			
			НоваяСтрока = СтрокаТипСвязи.Строки.Добавить();
			НоваяСтрока.Заголовок = Связь.relatedDocument.title;
			НоваяСтрока.Тип = Связь.relatedDocument.objectId.type;
			НоваяСтрока.ID 	= Связь.relatedDocument.objectId.id;
			НоваяСтрока.РегистрационныйНомер = Связь.relatedDocument.regNumber;
			НоваяСтрока.ДатаРегистрации = Связь.relatedDocument.regDate;
		КонецЦикла;	
		ЗначениеВРеквизитФормы(Дерево, "СписокДокументов");
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОткрытьФормуДокумента(Тип, ID)
	
	Владелец = Элементы.Документ;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Тип", Тип);
	ПараметрыФормы.Вставить("ID", ID);
	ПараметрыФормы.Вставить("ВнешнийОбъект", Параметры.ВнешнийОбъект);
	
	Если Тип = "DMIncomingDocument" Тогда 
		ОткрытьФорму("ОбщаяФорма.ДокументооборотВходящийДокумент", ПараметрыФормы, Владелец);
	ИначеЕсли Тип = "DMOutgoingDocument" Тогда 
		ОткрытьФорму("ОбщаяФорма.ДокументооборотИсходящийДокумент", ПараметрыФормы, Владелец);
	ИначеЕсли Тип = "DMInternalDocument" Тогда 
		ОткрытьФорму("ОбщаяФорма.ДокументооборотВнутреннийДокумент", ПараметрыФормы, Владелец);
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОткрытьФормуСвязанногоДокумента(Тип, ID)
	
	Владелец = Элементы.СписокДокументов;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Тип", Тип);
	ПараметрыФормы.Вставить("ID", ID);
	
	Если Тип = "DMIncomingDocument" Тогда 
		ОткрытьФорму("ОбщаяФорма.ДокументооборотВходящийДокумент", ПараметрыФормы, Владелец);
	ИначеЕсли Тип = "DMOutgoingDocument" Тогда 
		ОткрытьФорму("ОбщаяФорма.ДокументооборотИсходящийДокумент", ПараметрыФормы, Владелец);
	ИначеЕсли Тип = "DMInternalDocument" Тогда 
		ОткрытьФорму("ОбщаяФорма.ДокументооборотВнутреннийДокумент", ПараметрыФормы, Владелец);
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура ДобавлениеСвязи(ID, Тип, ВнешнийОбъект)
	
	Прокси = РаботаС1СДокументооборотВызовСервера.ПолучитьПрокси();
	
	Запрос = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMAddObjectLinkRequest");
			
	Запрос.ownerObject = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "ExternalObject");
	Запрос.ownerObject.id = Строка(ВнешнийОбъект.УникальныйИдентификатор());
	Запрос.ownerObject.type = Строка(ТипЗнч(ВнешнийОбъект));
	Запрос.ownerObject.name = Строка(ВнешнийОбъект);
	
	Запрос.linkedObject = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectID");
	Запрос.linkedObject.id = ID;
	Запрос.linkedObject.type = Тип;
	
	Ответ = Прокси.execute(Запрос);
	РаботаС1СДокументооборотВызовСервера.ПроверитьВозвратВебСервиса(Прокси, Ответ);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалениеСвязи(ID, Тип, ВнешнийОбъект)
	
	Прокси = РаботаС1СДокументооборотВызовСервера.ПолучитьПрокси();
	
	Запрос = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMRemoveObjectLinkRequest");
			
	Запрос.ownerObject = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "ExternalObject");
	Запрос.ownerObject.id = Строка(ВнешнийОбъект.УникальныйИдентификатор());
	Запрос.ownerObject.type = Строка(ТипЗнч(ВнешнийОбъект));
	Запрос.ownerObject.name = Строка(ВнешнийОбъект);
	
	Запрос.linkedObject = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectID");
	Запрос.linkedObject.id = ID;
	Запрос.linkedObject.type = Тип;
	
	Ответ = Прокси.execute(Запрос);
	РаботаС1СДокументооборотВызовСервера.ПроверитьВозвратВебСервиса(Прокси, Ответ);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДополнитьПредставлениеДокумента(Документ, ДокументТип)
	
	Если ЗначениеЗаполнено(Документ) Тогда 
		Если ДокументТип = "DMIncomingDocument" Тогда 
			Документ = Документ + НСтр("ru = ' (Входящий документ)'");
		ИначеЕсли ДокументТип = "DMOutgoingDocument" Тогда 
			Документ = Документ + НСтр("ru = ' (Исходящий документ)'");
		ИначеЕсли ДокументТип = "DMInternalDocument" Тогда 	
			Документ = Документ + НСтр("ru = ' (Внутренний документ)'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура РазвернутьДеревоСвязанных()
	
	Строки = СписокДокументов.ПолучитьЭлементы();
	Для Каждого Строка Из Строки Цикл 
		Элементы.СписокДокументов.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры	


///////////////////////////////////////////////////////////
// Обработка событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеПотребителя = Параметры.ВнешнийОбъект.Метаданные();
	ИмяПотребителя = ?(МетаданныеПотребителя.Синоним <> "", МетаданныеПотребителя.Синоним, МетаданныеПотребителя.Имя);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТипОбъектаДокументооборота
		|ИЗ
		|	Справочник.НастройкиЗаполненияОбъектов1СДокументооборота
		|ГДЕ
		|	ТипОбъектаПотребителя = &ТипОбъектаПотребителя
		|	И Не ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ТипОбъектаПотребителя", Параметры.ВнешнийОбъект.Метаданные().ПолноеИмя());
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		ТипОбъектаДокументооборота = Выборка.ТипОбъектаДокументооборота;
		Если ТипОбъектаДокументооборота = "DMIncomingDocument" Тогда 
			Элементы.СоздатьВходящийДокумент.Видимость = Истина;
			Элементы.СоздатьИсходящийДокумент.Видимость = Ложь;
			Элементы.СоздатьВнутреннийДокумент.Видимость = Ложь;
		ИначеЕсли ТипОбъектаДокументооборота = "DMOutgoingDocument" Тогда 
			Элементы.СоздатьВходящийДокумент.Видимость = Ложь;
			Элементы.СоздатьИсходящийДокумент.Видимость = Истина;
			Элементы.СоздатьВнутреннийДокумент.Видимость = Ложь;
		ИначеЕсли ТипОбъектаДокументооборота = "DMInternalDocument" Тогда 
			Элементы.СоздатьВходящийДокумент.Видимость = Ложь;
			Элементы.СоздатьИсходящийДокумент.Видимость = Ложь;
			Элементы.СоздатьВнутреннийДокумент.Видимость = Истина;
		КонецЕсли;	
		Элементы.ГруппаИнфо.Видимость = Ложь;
	Иначе	
		Элементы.ДекорацияИнфо.Заголовок = НСтр("ru = 'Не настроено заполнение документа 1С:Документооборота из '''") + ИмяПотребителя + НСтр("ru = ''''");
	КонецЕсли;	
	
	ПолучитьДанныеДокумента();
	
	Если ЗначениеЗаполнено(Документ) Тогда 
		Элементы.ГруппаСоздать.Доступность = Ложь;
		Элементы.СоздатьВходящийДокумент.Доступность = Ложь;
		Элементы.СоздатьИсходящийДокумент.Доступность = Ложь;
		Элементы.СоздатьВнутреннийДокумент.Доступность = Ложь;
		
		Элементы.Выбрать.Доступность = Ложь;
		Элементы.ГруппаИнфо.Видимость = Ложь;
	Иначе	
		Элементы.СписокДокументовГруппаСоздать.Доступность = Ложь;
		Элементы.СоздатьСвязанныйВходящий.Доступность = Ложь;
		Элементы.СоздатьСвязанныйИсходящий.Доступность = Ложь;
		Элементы.СоздатьСвязанныйВнутренний.Доступность = Ложь;
		
		Элементы.СписокДокументовКонтекстноеМенюГруппаСоздать.Доступность = Ложь;
		
		Элементы.СписокДокументовГруппаПрисоединить.Доступность = Ложь;
		Элементы.ПрисоединитьСвязанныйВходящий.Доступность = Ложь;
		Элементы.ПрисоединитьСвязанныйИсходящий.Доступность = Ложь;
		Элементы.ПрисоединитьСвязанныйВнутренний.Доступность = Ложь;
		
		Элементы.СписокДокументовКонтекстноеМенюГруппаПрисоединить.Доступность = Ложь;
		
		Элементы.СоздатьБизнесПроцессОсновнойДокумент.Доступность = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РазвернутьДеревоСвязанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ДокументооборотДокумент" И Источник = Элементы.Документ Тогда 
		ДокументID = Параметр.ID;
		ДокументТип = Параметр.Тип;
		Документ = Параметр.Представление;
		
		Элементы.ГруппаСоздать.Доступность = Ложь;
		Элементы.СоздатьВходящийДокумент.Доступность = Ложь;
		Элементы.СоздатьИсходящийДокумент.Доступность = Ложь;
		Элементы.СоздатьВнутреннийДокумент.Доступность = Ложь;
		
		Элементы.Выбрать.Доступность = Ложь;
		Элементы.СоздатьБизнесПроцессОсновнойДокумент.Доступность = Истина;
		
		Элементы.СписокДокументовГруппаСоздать.Доступность = Истина;
		Элементы.СоздатьСвязанныйВходящий.Доступность = Истина;
		Элементы.СоздатьСвязанныйИсходящий.Доступность = Истина;
		Элементы.СоздатьСвязанныйВнутренний.Доступность = Истина;
		
		Элементы.СписокДокументовКонтекстноеМенюГруппаСоздать.Доступность = Истина;
		
		Элементы.СписокДокументовГруппаПрисоединить.Доступность = Истина;
		Элементы.ПрисоединитьСвязанныйВходящий.Доступность = Истина;
		Элементы.ПрисоединитьСвязанныйИсходящий.Доступность = Истина;
		Элементы.ПрисоединитьСвязанныйВнутренний.Доступность = Истина;
		
		Элементы.СписокДокументовКонтекстноеМенюГруппаПрисоединить.Доступность = Истина;
		
		ДополнитьПредставлениеДокумента(Документ, ДокументТип);
	КонецЕсли;	
	
	Если ИмяСобытия = "Запись_ДокументооборотДокумент" И Источник = Элементы.СписокДокументов Тогда 
		СвязанныйДокументID = Параметр.ID;
		СвязанныйДокументТип = Параметр.Тип;
		
		ПолучитьДанныеДокумента();
		РазвернутьДеревоСвязанных();
		
		Для Каждого СтрокаТипСвязи Из СписокДокументов.ПолучитьЭлементы() Цикл
			Для Каждого СтрокаСвязанныйДокумент Из СтрокаТипСвязи.ПолучитьЭлементы() Цикл 
				Если СтрокаСвязанныйДокумент.ID = СвязанныйДокументID И СтрокаСвязанныйДокумент.Тип = СвязанныйДокументТип Тогда 
					Элементы.СписокДокументов.ТекущаяСтрока = СтрокаСвязанныйДокумент.ПолучитьИдентификатор();
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
		КонецЦикла;	
		
	КонецЕсли;	
		
КонецПроцедуры


/////////////////////////////////////////////////////////////////////////////////////////////////
// Основной документ

&НаКлиенте
Процедура СоздатьВходящийДокумент(Команда)
	
	Если ЗначениеЗаполнено(Документ) Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВнешнийОбъект", Параметры.ВнешнийОбъект);
	
	ОткрытьФорму("ОбщаяФорма.ДокументооборотВходящийДокумент", ПараметрыФормы, Элементы.Документ);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИсходящийДокумент(Команда)
	
	Если ЗначениеЗаполнено(Документ) Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВнешнийОбъект", Параметры.ВнешнийОбъект);
	
	ОткрытьФорму("ОбщаяФорма.ДокументооборотИсходящийДокумент", ПараметрыФормы, Элементы.Документ);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВнутреннийДокумент(Команда)
	
	Если ЗначениеЗаполнено(Документ) Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВнешнийОбъект", Параметры.ВнешнийОбъект);
	
	ОткрытьФорму("ОбщаяФорма.ДокументооборотВнутреннийДокумент", ПараметрыФормы, Элементы.Документ);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФормуДокумента(ДокументТип, ДокументID);
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	СтарыйID = ДокументID;
	СтарыйТип = ДокументТип;
	СтароеПредставление = Документ;
	
	Если ЗначениеЗаполнено(Документ) Тогда 
		ТекстВопроса = НСтр("ru = 'Вы действительно хотите заменить документ, соответствующий'")
			+ Символы.ПС
			+ Строка(Параметры.ВнешнийОбъект)
			+ "?";
			
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет);
		Если Ответ <> КодВозвратаДиалога.Да Тогда 
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("DMIncomingDocument",  "Входящий документ");
	СписокВыбора.Добавить("DMOutgoingDocument",  "Исходящий документ");
	СписокВыбора.Добавить("DMInternalDocument",  "Внутренний документ");
	
	ВыбранныйЭлемент = СписокВыбора.ВыбратьЭлемент("Укажите тип документа");
	Если ВыбранныйЭлемент <> Неопределено Тогда 
		РаботаС1СДокументооборотКлиент.ВыбратьЗначениеИзСписка(ВыбранныйЭлемент.Значение, "Документ", ЭтаФорма);
		Модифицированность = Ложь;
		
		ИзменитьДокументТекущегоОбъекта(СтарыйID, СтарыйТип);
		РазвернутьДеревоСвязанных();
		
		Если Не ЗначениеЗаполнено(СтароеПредставление) И ЗначениеЗаполнено(Документ) Тогда 
			Элементы.ГруппаСоздать.Доступность = Ложь;
			Элементы.СоздатьВходящийДокумент.Доступность = Ложь;
			Элементы.СоздатьИсходящийДокумент.Доступность = Ложь;
			Элементы.СоздатьВнутреннийДокумент.Доступность = Ложь;
			
			Элементы.Выбрать.Доступность = Ложь;
			Элементы.СоздатьБизнесПроцессОсновнойДокумент.Доступность = Истина;
			
			Элементы.СписокДокументовГруппаСоздать.Доступность = Истина;
			Элементы.СоздатьСвязанныйВходящий.Доступность = Истина;
			Элементы.СоздатьСвязанныйИсходящий.Доступность = Истина;
			Элементы.СоздатьСвязанныйВнутренний.Доступность = Истина;
			
			Элементы.СписокДокументовКонтекстноеМенюГруппаСоздать.Доступность = Истина;
			
			Элементы.СписокДокументовГруппаПрисоединить.Доступность = Истина;
			Элементы.ПрисоединитьСвязанныйВходящий.Доступность = Истина;
			Элементы.ПрисоединитьСвязанныйИсходящий.Доступность = Истина;
			Элементы.ПрисоединитьСвязанныйВнутренний.Доступность = Истина;
			
			Элементы.СписокДокументовКонтекстноеМенюГруппаПрисоединить.Доступность = Истина;
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьДокументТекущегоОбъекта(СтарыйID, СтарыйТип)
	
	Если (СтарыйID <> ДокументID) Или (СтарыйТип <> ДокументТип) Тогда 
		
		Если ЗначениеЗаполнено(СтарыйID) И ЗначениеЗаполнено(СтарыйТип) Тогда // удаление старой связи
			УдалениеСвязи(СтарыйID, СтарыйТип, Параметры.ВнешнийОбъект)
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(ДокументID) И ЗначениеЗаполнено(ДокументТип) Тогда // добавление новой связи
			ДобавлениеСвязи(ДокументID, ДокументТип, Параметры.ВнешнийОбъект);
		КонецЕсли;	
		
		ПолучитьДанныеДокумента();
		
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ДокументОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Не ЗначениеЗаполнено(Документ) Тогда 
		Возврат;
	КонецЕсли;	
	
	ТекстВопроса = НСтр("ru = 'Вы действительно хотите удалить соответствие для'")
		+ Символы.ПС 
		+ Строка(Параметры.ВнешнийОбъект) 
		+ "?";
	
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет);
	Если Ответ <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;	
	
	УдалениеСвязи(ДокументID, ДокументТип, Параметры.ВнешнийОбъект);
	
	ДокументID = "";
	ДокументТип = "";
	Документ = "";
	
	СписокДокументов.ПолучитьЭлементы().Очистить();
	
	Элементы.ГруппаСоздать.Доступность = Истина;
	Элементы.СоздатьВходящийДокумент.Доступность = Истина;
	Элементы.СоздатьИсходящийДокумент.Доступность = Истина;
	Элементы.СоздатьВнутреннийДокумент.Доступность = Истина;
	
	Элементы.Выбрать.Доступность = Истина;
	Элементы.СоздатьБизнесПроцессОсновнойДокумент.Доступность = Ложь;
	
	Элементы.СписокДокументовГруппаСоздать.Доступность = Ложь;
	Элементы.СоздатьСвязанныйВходящий.Доступность = Ложь;
	Элементы.СоздатьСвязанныйИсходящий.Доступность = Ложь;
	Элементы.СоздатьСвязанныйВнутренний.Доступность = Ложь;
	
	Элементы.СписокДокументовКонтекстноеМенюГруппаСоздать.Доступность = Ложь;
	
	Элементы.СписокДокументовГруппаПрисоединить.Доступность = Ложь;
	Элементы.ПрисоединитьСвязанныйВходящий.Доступность = Ложь;
	Элементы.ПрисоединитьСвязанныйИсходящий.Доступность = Ложь;
	Элементы.ПрисоединитьСвязанныйВнутренний.Доступность = Ложь;
	
	Элементы.СписокДокументовКонтекстноеМенюГруппаПрисоединить.Доступность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьБизнесПроцессОсновнойДокумент(Команда)
		
	РаботаС1СДокументооборотКлиент.СоздатьБизнесПроцессПоДокументуИзДО(ДокументID, ДокументТип);
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////////////////
// Связанные документы

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.СписокДокументов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	ОткрытьФормуСвязанногоДокумента(ТекущиеДанные.Тип, ТекущиеДанные.ID);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.СписокДокументов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	ОткрытьФормуСвязанногоДокумента(ТекущиеДанные.Тип, ТекущиеДанные.ID);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСвязанный(Команда)
	
	ТекущиеДанные = Элементы.СписокДокументов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	ОткрытьФормуДокумента(ТекущиеДанные.Тип, ТекущиеДанные.ID);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСвязь(Команда)
	
	ТекущиеДанные = Элементы.СписокДокументов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Тип = ТекущиеДанные.Тип;
	ID = ТекущиеДанные.ID;
	
	Если Тип = "DMIncomingDocument" Или Тип = "DMOutgoingDocument" Или Тип = "DMInternalDocument" Тогда 
		
		ДокументСтруктура = Новый Структура;
		ДокументСтруктура.Вставить("РеквизитID", ДокументID);
		ДокументСтруктура.Вставить("РеквизитТип", ДокументТип);
		ДокументСтруктура.Вставить("РеквизитПредставление", Документ);
		
		СвязанныйДокументСтруктура = Новый Структура;
		СвязанныйДокументСтруктура.Вставить("РеквизитID", ТекущиеДанные.ID);
		СвязанныйДокументСтруктура.Вставить("РеквизитТип", ТекущиеДанные.Тип);
		СвязанныйДокументСтруктура.Вставить("РеквизитПредставление", ТекущиеДанные.Заголовок);
		
		НайденнаяСтрока = СписокДокументов.НайтиПоИдентификатору(Элементы.СписокДокументов.ТекущаяСтрока);
		Родитель = НайденнаяСтрока.ПолучитьРодителя();
		
		ТипСвязиСтруктура = Новый Структура;
		ТипСвязиСтруктура.Вставить("РеквизитID", Родитель.ID);
		ТипСвязиСтруктура.Вставить("РеквизитТип", Родитель.Тип);
		ТипСвязиСтруктура.Вставить("РеквизитПредставление", Родитель.Заголовок);
		
		ОтсоединитьСвязанныйДокументНаСервере(ДокументСтруктура, ТипСвязиСтруктура, СвязанныйДокументСтруктура);
		РазвернутьДеревоСвязанных();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСвязанный(Команда)
	
	УдалитьСвязанныйНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСвязанныйНаКлиенте()
	
	ТекущиеДанные = Элементы.СписокДокументов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Тип = ТекущиеДанные.Тип;
	ID = ТекущиеДанные.ID;
	
	Если Тип = "DMIncomingDocument" Или Тип = "DMOutgoingDocument" Или Тип = "DMInternalDocument" Тогда 
		ТекстВопроса = НСтр("ru = 'Пометить ""'") + ТекущиеДанные.Заголовок + НСтр("ru = '"" на удаление?'");
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
		Если Ответ <> КодВозвратаДиалога.Да Тогда 
			Возврат;
		КонецЕсли;	
		
		УдалитьСвязанныйНаСервере(ТекущиеДанные.ID, ТекущиеДанные.Тип);
		
		ПолучитьДанныеДокумента();
		РазвернутьДеревоСвязанных();
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура УдалитьСвязанныйНаСервере(ID, Тип)
	
	Прокси = РаботаС1СДокументооборотВызовСервера.ПолучитьПрокси();
	Запрос = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMDeleteRequest");
	
	ОбъектИд = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectID");
	ОбъектИд.id = ID;
	ОбъектИд.type = Тип;
		
	Запрос.objectIds.Добавить(ОбъектИд);
	
	Ответ = Прокси.execute(Запрос);
	РаботаС1СДокументооборотВызовСервера.ПроверитьВозвратВебСервиса(Прокси, Ответ);
	
КонецПроцедуры	

&НаКлиенте
Процедура ОбновитьСвязанные(Команда)
	
	Если ЗначениеЗаполнено(Документ) Тогда 
		ПолучитьДанныеДокумента();
		РазвернутьДеревоСвязанных();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСвязанныйДокумент(ТипДокумента)
	
	//открытие карточки документа
	Если ТипДокумента = "DMInternalDocument" Тогда 
		Результат = ОткрытьФормуМодально("ОбщаяФорма.ДокументооборотВнутреннийДокумент", , ЭтаФорма);	
	ИначеЕсли ТипДокумента = "DMIncomingDocument" Тогда 
		Результат = ОткрытьФормуМодально("ОбщаяФорма.ДокументооборотВходящийДокумент", , ЭтаФорма);
	ИначеЕсли ТипДокумента = "DMOutgoingDocument" Тогда 
		Результат = ОткрытьФормуМодально("ОбщаяФорма.ДокументооборотИсходящийДокумент", , ЭтаФорма);
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Структура")
		И ЗначениеЗаполнено(Результат.id)
		И ЗначениеЗаполнено(Результат.type) Тогда
		
		СвязанныйДокументСтруктура = Новый Структура;
		СвязанныйДокументСтруктура.Вставить("РеквизитID", Результат.id);
		СвязанныйДокументСтруктура.Вставить("РеквизитТип", Результат.type);
		СвязанныйДокументСтруктура.Вставить("РеквизитПредставление", Результат.name);
	Иначе	
		Возврат;
	КонецЕсли;
	
	// выбор типа связи
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипОбъектаВыбора", "DMRelationType");
	ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Укажите тип связи исходного и созданного документа'"));
	
	DocumentFrom = Новый Структура("id, type", ДокументID, ДокументТип);
	DocumentTo = Новый Структура("id, type", СвязанныйДокументСтруктура.РеквизитID, СвязанныйДокументСтруктура.РеквизитТип);
	ПараметрыФормы.Вставить("Отбор", Новый Структура("documentFrom, documentTo", DocumentFrom, DocumentTo));
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.ДокументооборотВыборИзСписка", ПараметрыФормы, ЭтаФорма);
	Если ТипЗнч(Результат) = Тип("Структура") Тогда 
		ТипСвязиСтруктура = Результат;
	Иначе	
		Возврат;
	КонецЕсли;
	
	//создание связи
	ДокументСтруктура = Новый Структура;
	ДокументСтруктура.Вставить("РеквизитID", ДокументID);
	ДокументСтруктура.Вставить("РеквизитТип", ДокументТип);
	ДокументСтруктура.Вставить("РеквизитПредставление", Документ);
	
	ПрисоединитьСвязанныйДокументНаСервере(ДокументСтруктура, ТипСвязиСтруктура, СвязанныйДокументСтруктура);
	РазвернутьДеревоСвязанных();
		
	Для Каждого СтрокаТипСвязи Из СписокДокументов.ПолучитьЭлементы() Цикл
		Для Каждого СтрокаСвязанныйДокумент Из СтрокаТипСвязи.ПолучитьЭлементы() Цикл 
			Если СтрокаСвязанныйДокумент.ID = СвязанныйДокументСтруктура.РеквизитID 
			   И СтрокаСвязанныйДокумент.Тип = СвязанныйДокументСтруктура.РеквизитТип Тогда 
				Элементы.СписокДокументов.ТекущаяСтрока = СтрокаСвязанныйДокумент.ПолучитьИдентификатор();
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура СоздатьСвязанныйВнутренний(Команда)
	
	Если Не ЗначениеЗаполнено(Документ) Тогда 
		Возврат;
	КонецЕсли;
	
	СоздатьСвязанныйДокумент("DMInternalDocument");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСвязанныйВходящий(Команда)
	
	Если Не ЗначениеЗаполнено(Документ) Тогда 
		Возврат;
	КонецЕсли;
	
	СоздатьСвязанныйДокумент("DMIncomingDocument");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСвязанныйИсходящий(Команда)
	
	Если Не ЗначениеЗаполнено(Документ) Тогда 
		Возврат;
	КонецЕсли;
	
	СоздатьСвязанныйДокумент("DMOutgoingDocument");
	
КонецПроцедуры

&НаСервере
Процедура ПрисоединитьСвязанныйДокументНаСервере(ДокументСтруктура, ТипСвязиСтруктура, СвязанныйДокументСтруктура)
	
	// создание связи 
	Прокси = РаботаС1СДокументооборотВызовСервера.ПолучитьПрокси();
	
	Document = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMDocument");
	Document.objectId = РаботаС1СДокументооборот.СоздатьObjectID(Прокси, ДокументСтруктура.РеквизитID, ДокументСтруктура.РеквизитТип);
	Document.name = ДокументСтруктура.РеквизитПредставление;
	
	RelatedDocument = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMDocument");
	RelatedDocument.objectId = РаботаС1СДокументооборот.СоздатьObjectID(Прокси, СвязанныйДокументСтруктура.РеквизитID, СвязанныйДокументСтруктура.РеквизитТип);
	RelatedDocument.name = СвязанныйДокументСтруктура.РеквизитПредставление;
	
	RelationType = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMRelationType");
	RelationType.objectId = РаботаС1СДокументооборот.СоздатьObjectID(Прокси, ТипСвязиСтруктура.РеквизитID, ТипСвязиСтруктура.РеквизитТип);
	RelationType.name = ТипСвязиСтруктура.РеквизитПредставление;
	
	Связь = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMDocumentRelation");
	Связь.document = Document;
	Связь.relationType = RelationType;
	Связь.relatedDocument = RelatedDocument;
	
	Запрос = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMAddDocumentRelationRequest");
	Запрос.relation = Связь;
	
	Ответ = Прокси.execute(Запрос);
	РаботаС1СДокументооборотВызовСервера.ПроверитьВозвратВебСервиса(Прокси, Ответ);
	
	ПолучитьДанныеДокумента();
	
КонецПроцедуры	

&НаСервере
Процедура ОтсоединитьСвязанныйДокументНаСервере(ДокументСтруктура, ТипСвязиСтруктура, СвязанныйДокументСтруктура)
	
	// создание связи 
	Прокси = РаботаС1СДокументооборотВызовСервера.ПолучитьПрокси();
	
	Document = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMDocument");
	Document.objectId = РаботаС1СДокументооборот.СоздатьObjectID(Прокси, ДокументСтруктура.РеквизитID, ДокументСтруктура.РеквизитТип);
	Document.name = ДокументСтруктура.РеквизитПредставление;
	
	RelatedDocument = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMDocument");
	RelatedDocument.objectId = РаботаС1СДокументооборот.СоздатьObjectID(Прокси, СвязанныйДокументСтруктура.РеквизитID, СвязанныйДокументСтруктура.РеквизитТип);
	RelatedDocument.name = СвязанныйДокументСтруктура.РеквизитПредставление;
	
	RelationType = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMRelationType");
	RelationType.objectId = РаботаС1СДокументооборот.СоздатьObjectID(Прокси, ТипСвязиСтруктура.РеквизитID, ТипСвязиСтруктура.РеквизитТип);
	RelationType.name = ТипСвязиСтруктура.РеквизитПредставление;
	
	Связь = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMDocumentRelation");
	Связь.document = Document;
	Связь.relationType = RelationType;
	Связь.relatedDocument = RelatedDocument;
	
	Запрос = РаботаС1СДокументооборот.СоздатьОбъект(Прокси, "DMRemoveDocumentRelationRequest");
	Запрос.relation = Связь;
	
	Ответ = Прокси.execute(Запрос);
	РаботаС1СДокументооборотВызовСервера.ПроверитьВозвратВебСервиса(Прокси, Ответ);
	
	ПолучитьДанныеДокумента();
	
КонецПроцедуры	

&НаКлиенте
Процедура ПрисоединитьСвязанныйДокумент(ТипДокумента)
	
	// выбор документа
	Если ТипДокумента = "DMInternalDocument" Тогда Заголовок = НСтр("ru = 'Выбор внутреннего документа'");
	ИначеЕсли ТипДокумента = "DMIncomingDocument" Тогда Заголовок = НСтр("ru = 'Выбор входящего документа'");
	ИначеЕсли ТипДокумента = "DMOutgoingDocument" Тогда Заголовок = НСтр("ru = 'Выбор исходящего документа'");
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипОбъектаВыбора", ТипДокумента);
	ПараметрыФормы.Вставить("Заголовок", Заголовок);
	Результат = ОткрытьФормуМодально("ОбщаяФорма.ДокументооборотВыборИзСписка", ПараметрыФормы, ЭтаФорма);
	Если ТипЗнч(Результат) = Тип("Структура") Тогда 
		СвязанныйДокументСтруктура = Результат;
	Иначе	
		Возврат;
	КонецЕсли;
	
	// выбор типа связи
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипОбъектаВыбора", "DMRelationType");
	ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Укажите тип связи исходного и выбранного документа'"));
	
	DocumentFrom = Новый Структура("id, type", ДокументID, ДокументТип);
	DocumentTo = Новый Структура("id, type", СвязанныйДокументСтруктура.РеквизитID, СвязанныйДокументСтруктура.РеквизитТип);
	ПараметрыФормы.Вставить("Отбор", Новый Структура("documentFrom, documentTo", DocumentFrom, DocumentTo));
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.ДокументооборотВыборИзСписка", ПараметрыФормы, ЭтаФорма);
	Если ТипЗнч(Результат) = Тип("Структура") Тогда 
		ТипСвязиСтруктура = Результат;
	Иначе	
		Возврат;
	КонецЕсли;
	
	ДокументСтруктура = Новый Структура;
	ДокументСтруктура.Вставить("РеквизитID", ДокументID);
	ДокументСтруктура.Вставить("РеквизитТип", ДокументТип);
	ДокументСтруктура.Вставить("РеквизитПредставление", Документ);
	
	ПрисоединитьСвязанныйДокументНаСервере(ДокументСтруктура, ТипСвязиСтруктура, СвязанныйДокументСтруктура);
	РазвернутьДеревоСвязанных();
	
	Для Каждого СтрокаТипСвязи Из СписокДокументов.ПолучитьЭлементы() Цикл
		Для Каждого СтрокаСвязанныйДокумент Из СтрокаТипСвязи.ПолучитьЭлементы() Цикл 
			Если СтрокаСвязанныйДокумент.ID = СвязанныйДокументСтруктура.РеквизитID 
			   И СтрокаСвязанныйДокумент.Тип = СвязанныйДокументСтруктура.РеквизитТип Тогда 
				Элементы.СписокДокументов.ТекущаяСтрока = СтрокаСвязанныйДокумент.ПолучитьИдентификатор();
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПрисоединитьСвязанныйВнутренний(Команда)
	
	Если Не ЗначениеЗаполнено(Документ) Тогда 
		Возврат;
	КонецЕсли;
	
	ПрисоединитьСвязанныйДокумент("DMInternalDocument");
	
КонецПроцедуры

&НаКлиенте
Процедура ПрисоединитьСвязанныйВходящий(Команда)
	
	Если Не ЗначениеЗаполнено(Документ) Тогда 
		Возврат;
	КонецЕсли;
	
	ПрисоединитьСвязанныйДокумент("DMIncomingDocument");
	
КонецПроцедуры

&НаКлиенте
Процедура ПрисоединитьСвязанныйИсходящий(Команда)
	
	Если Не ЗначениеЗаполнено(Документ) Тогда 
		Возврат;
	КонецЕсли;
	
	ПрисоединитьСвязанныйДокумент("DMOutgoingDocument");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьБизнесПроцессСвязанныйДокумент(Команда)
	
	Если Элементы.СписокДокументов.ТекущиеДанные = Неопределено
		ИЛИ НЕ ЗначениеЗаполнено(Элементы.СписокДокументов.ТекущиеДанные.ID) Тогда
		Возврат;
	КонецЕсли;
		
	РаботаС1СДокументооборотКлиент.СоздатьБизнесПроцессПоДокументуИзДО(Элементы.СписокДокументов.ТекущиеДанные.ID, Элементы.СписокДокументов.ТекущиеДанные.Тип);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовПриАктивизацииСтроки(Элемент)
	
	Если Элементы.СписокДокументов.ТекущиеДанные = Неопределено Тогда 
		Элементы.СписокДокументовСоздатьБизнесПроцессСвязанныйДокумент.Доступность = Ложь;
		Элементы.ИзменитьСвязанный.Доступность = Ложь;
		Элементы.СписокДокументовИзменитьСвязанный.Доступность = Ложь;
		Элементы.СписокДокументовГруппаУдалить.Доступность = Ложь;
	Иначе	
		Тип = Элементы.СписокДокументов.ТекущиеДанные.Тип;
		Если Тип = "DMIncomingDocument" Или Тип = "DMOutgoingDocument" Или Тип = "DMInternalDocument" Тогда 
			Элементы.СписокДокументовСоздатьБизнесПроцессСвязанныйДокумент.Доступность = Истина;
			Элементы.ИзменитьСвязанный.Доступность = Истина;
			Элементы.СписокДокументовИзменитьСвязанный.Доступность = Истина;
			Элементы.СписокДокументовГруппаУдалить.Доступность = Истина;
		Иначе
			Элементы.СписокДокументовСоздатьБизнесПроцессСвязанныйДокумент.Доступность = Ложь;
			Элементы.ИзменитьСвязанный.Доступность = Ложь;
			Элементы.СписокДокументовИзменитьСвязанный.Доступность = Ложь;
			Элементы.СписокДокументовГруппаУдалить.Доступность = Ложь;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСсылкаНажатие(Элемент)
	
	ТекстПредупреждения = 
		НСтр("ru = 'Для настройки правил автоматического заполнения документов 1С:Документооборота обратитесь к Администратору.'");
		
	Предупреждение(ТекстПредупреждения);
		
КонецПроцедуры





