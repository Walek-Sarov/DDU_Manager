////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НажатаКнопкаСинхронизироватьДанные = Ложь;
	
	ОбновитьДанныеФормыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ОбновитьДанныеФормы", 15);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КомандаВыполнить(Команда)
	
	НажатаКнопкаСинхронизироватьДанные = Истина;
	
	ИнициироватьОбменДанными();
	
	ОбновитьВсеОткрытыеСписки = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОбновитьДанныеФормы()
	
	ОбновитьДанныеФормыНаСервере();
	
	Если ОбновитьВсеОткрытыеСписки Тогда
		
		// Обновляем все открытые динамические списки
		ОбменДаннымиКлиент.ОбновитьВсеОткрытыеДинамическиеСписки();
		
		ОбновитьВсеОткрытыеСписки = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеФормыНаСервере()
	
	ВыполняетсяОбменДанными = ОбменДаннымиВМоделиСервиса.ВСистемеВыполняетсяОбменДанными();
	
	Если ВыполняетсяОбменДанными Тогда
		
		Элементы.СтраницыИндикатораДлительнойОперации.ТекущаяСтраница = Элементы.СтраницаИндикатораДлительнойОперацииАктивная;
		Элементы.Выполнить.Доступность = Ложь;
		
		Элементы.СтраницыСостоянияОбмена.ТекущаяСтраница = Элементы.СтраницаОжидания;
		
	Иначе
		
		Если НажатаКнопкаСинхронизироватьДанные Тогда
			
			ОбновитьВсеОткрытыеСписки = Истина;
			
		КонецЕсли;
		
		НажатаКнопкаСинхронизироватьДанные = Ложь;
		
		Элементы.СтраницыИндикатораДлительнойОперации.ТекущаяСтраница = Элементы.СтраницаИндикатораДлительнойОперацииНеактивная;
		Элементы.Выполнить.Доступность = Истина;
		
		Элементы.СтраницыСостоянияОбмена.ТекущаяСтраница = Элементы.СтраницаУспешногоВыполнения;
		
		ДатаПоследнейУспешнойЗагрузки = ОбменДаннымиВМоделиСервиса.ДатаПоследнейУспешнойЗагрузкиДляВсехУзловИнформационнойБазы();
		ДатаПоследнейУспешнойЗагрузкиСтрокой = Формат(ДатаПоследнейУспешнойЗагрузки, "ДЛФ=DDT");
		
		Если ДатаПоследнейУспешнойЗагрузки = Неопределено Тогда
			
			Элементы.НадписьУспеха.Заголовок = НСтр("ru = 'Синхронизация данных не выполнялась.'");
			
		Иначе
			
			Элементы.НадписьУспеха.Заголовок = НСтр("ru = 'Последняя синхронизация: %1'");
			Элементы.НадписьУспеха.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Элементы.НадписьУспеха.Заголовок, ДатаПоследнейУспешнойЗагрузкиСтрокой);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнициироватьОбменДанными()
	
	ОбменДаннымиВМоделиСервиса.ВыполнитьОбменДаннымиСоВсемиИнформационнымиБазамиАбонента();
	
	ОбновитьДанныеФормыНаСервере();
	
КонецПроцедуры
