&НаСервере
Функция ПолучитьРебенкаДляОтбора(ДокументПараметр)
	Попытка
		Возврат ДокументПараметр.Ребенок;
	Исключение
		Попытка
			Возврат ДокументПараметр.Владелец;
		Исключение
			Возврат Справочники.удуДети.ПустаяСсылка();
		КонецПопытки;
	КонецПопытки;
КонецФункции

&НаСервере
Процедура СформироватьТаблицуДокументов()
	ТекстЗапроса = "ВЫБРАТЬ
	               |	удуСвязьДокументовСДелопроизводством.ДокументДелопроизводства,
	               |	удуСвязьДокументовСДелопроизводством.ВидДокумента,
	               |	удуСвязьДокументовСДелопроизводством.Комментарий
	               |ИЗ
	               |	РегистрСведений.удуСвязьДокументовСДелопроизводством КАК удуСвязьДокументовСДелопроизводством
	               |ГДЕ
	               |	удуСвязьДокументовСДелопроизводством.ДокументДОУ = &ДокументДОУ";
				   
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументДОУ", РеквизитДокументДОУ);
	
	сэРезультатВыполнения = Запрос.Выполнить().Выгрузить();	
    ЗначениеВРеквизитФормы(сэРезультатВыполнения, "РеквизитТаблицаСвязанныхДокументов");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСодержимоеРегистраСведений()
	сэТаблицаДокументов = РеквизитФормыВЗначение("РеквизитТаблицаСвязанныхДокументов");
	Если ЗначениеЗаполнено(РеквизитДокументДОУ) Тогда 
		нзСвязьСДП = РегистрыСведений.удуСвязьДокументовСДелопроизводством.СоздатьНаборЗаписей();
		нзСвязьСДП.Отбор.ДокументДОУ.Установить(РеквизитДокументДОУ);
		
		Для Каждого СтрокаТаблицыДокументов Из сэТаблицаДокументов Цикл
			Если ЗначениеЗаполнено(СтрокаТаблицыДокументов.ВидДокумента) И ЗначениеЗаполнено(СтрокаТаблицыДокументов.ДокументДелопроизводства) Тогда
				НоваяЗаписьСвязьСДП = нзСвязьСДП.Добавить();
				НоваяЗаписьСвязьСДП.ДокументДОУ = РеквизитДокументДОУ;
				НоваяЗаписьСвязьСДП.ВидДокумента = СтрокаТаблицыДокументов.ВидДокумента;
				НоваяЗаписьСвязьСДП.ДокументДелопроизводства = СтрокаТаблицыДокументов.ДокументДелопроизводства;
			КонецЕсли;
		КонецЦикла;		
		
		нзСвязьСДП.Записать(Истина);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитДокументДОУОчистка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура РеквизитДокументДОУНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбновитьСодержимоеРегистраСведений();
КонецПроцедуры

&НаКлиенте
Процедура РеквизитТаблицаСвязанныхДокументовДокументДелопроизводстваНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Элементы.РеквизитТаблицаСвязанныхДокументов.ТекущиеДанные.ВидДокумента) Тогда
		СтрокаВидДокумента = СокрЛП(Элементы.РеквизитТаблицаСвязанныхДокументов.ТекущиеДанные.ВидДокумента);		
		Если СтрокаВидДокумента = "Внутренние документы" Тогда
			ФормаВыбораСправочника = ПолучитьФорму("Справочник.ВнутренниеДокументы.Форма.ФормаВыбора",, ЭтаФорма);
		ИначеЕсли СтрокаВидДокумента = "Входящие документы" Тогда
			ФормаВыбораСправочника = ПолучитьФорму("Справочник.ВходящиеДокументы.Форма.ФормаВыбора",, ЭтаФорма);
		ИначеЕсли СтрокаВидДокумента = "Исходящие документы" Тогда
			ФормаВыбораСправочника = ПолучитьФорму("Справочник.ИсходящиеДокументы.Форма.ФормаВыбора",, ЭтаФорма);
		КонецЕсли;		
		
		РебнокДляОтбора = ПолучитьРебенкаДляОтбора(РеквизитДокументДОУ);
		
		ЭлементОтбораПоРебенку = ФормаВыбораСправочника.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораПоРебенку.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбораПоРебенку.Использование = Истина;
		ЭлементОтбораПоРебенку.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("удуРебенок");
		ЭлементОтбораПоРебенку.ПравоеЗначение = РебнокДляОтбора;
		ЭлементОтбораПоРебенку.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
		ВыбранныйДокумент = ФормаВыбораСправочника.ОткрытьМодально();
		
		Если ВыбранныйДокумент <> Неопределено Тогда
			Элементы.РеквизитТаблицаСвязанныхДокументов.ТекущиеДанные.ДокументДелопроизводства = ВыбранныйДокумент;
		КонецЕсли;		
	Иначе
		Вопрос("Сначала укажите вид документа!", РежимДиалогаВопрос.ОК);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СформироватьТаблицуДокументов();
КонецПроцедуры

