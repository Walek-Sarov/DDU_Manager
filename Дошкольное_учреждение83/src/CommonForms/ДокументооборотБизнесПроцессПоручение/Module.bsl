
///////////////////////////////////////////////////////////
//// Обработка событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	//Если открывается новая карточка бизнес-процесса
	Если Параметры.Свойство("Предмет") И ЗначениеЗаполнено(Параметры.Предмет) Тогда
		
		ЗаполнитьКарточкуНовогоБизнесПроцесса("DMBusinessProcessOrder", ЭтаФорма, Параметры.Предмет);
		
	//Если открывается карточка имеющегося бизнес-процесса 		
	ИначеЕсли ЗначениеЗаполнено(Параметры.ID) И ЗначениеЗаполнено(Параметры.Type) Тогда
		ОбъектID = Параметры.ID;
		ДанныеБП = РаботаС1СДокументооборот.ПолучитьОбъект(Параметры.Type, Параметры.ID);
		Объект = ДанныеБП.objects[0];
		
		ЗаполнитьФормуИзОбъектаXDTO(Объект);
 	КонецЕсли;	
	
	ЭтаФорма.Заголовок = Наименование;
	Если НЕ ЗначениеЗаполнено(ОбъектID) Тогда
		ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + НСтр("ru = ' (Создание)'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВажностьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаС1СДокументооборотКлиент.ВыбратьЗначениеИзСписка("DMBusinessProcessImportance", "Важность", ЭтаФорма); 
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.ДокументооборотВыборИсполнителяБизнесПроцесса",, ЭтаФорма);
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Результат.Свойство("Исполнитель", Исполнитель);
	Результат.Свойство("ИсполнительID", ИсполнительID);
	Результат.Свойство("ИсполнительТип", ИсполнительТип);
	
	Результат.Свойство("ОсновнойОбъектАдресации", ОсновнойОбъектАдресации);
	Результат.Свойство("ОсновнойОбъектАдресацииID", ОсновнойОбъектАдресацииID);
	Результат.Свойство("ОсновнойОбъектАдресацииТип", ОсновнойОбъектАдресацииТип);
	
	Результат.Свойство("ДополнительныйОбъектАдресации", ДополнительныйОбъектАдресации);
	Результат.Свойство("ДополнительныйОбъектАдресацииID", ДополнительныйОбъектАдресацииID);
	Результат.Свойство("ДополнительныйОбъектАдресацииТип", ДополнительныйОбъектАдресацииТип);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверяющийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.ДокументооборотВыборИсполнителяБизнесПроцесса",, ЭтаФорма);

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Результат.Свойство("Исполнитель", Проверяющий);
	Результат.Свойство("ИсполнительID", ПроверяющийID);
	Результат.Свойство("ИсполнительТип", ПроверяющийТип);
	
	Результат.Свойство("ОсновнойОбъектАдресации", ОсновнойОбъектАдресацииПроверяющего);
	Результат.Свойство("ОсновнойОбъектАдресацииID", ОсновнойОбъектАдресацииПроверяющегоID);
	Результат.Свойство("ОсновнойОбъектАдресацииТип", ОсновнойОбъектАдресацииПроверяющегоТип);
	
	Результат.Свойство("ДополнительныйОбъектАдресации", ДополнительныйОбъектАдресацииПроверяющего);
	Результат.Свойство("ДополнительныйОбъектАдресацииID", ДополнительныйОбъектАдресацииПроверяющегоID);
	Результат.Свойство("ДополнительныйОбъектАдресацииТип",ДополнительныйОбъектАдресацииПроверяющегоТип);
	
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура КонтролерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.ДокументооборотВыборИсполнителяБизнесПроцесса",, ЭтаФорма);

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Результат.Свойство("Исполнитель", Контролер);
	Результат.Свойство("ИсполнительID", КонтролерID);
	Результат.Свойство("ИсполнительТип", КонтролерТип);
	
	Результат.Свойство("ОсновнойОбъектАдресации",ОсновнойОбъектАдресацииКонтролера);
	Результат.Свойство("ОсновнойОбъектАдресацииID", ОсновнойОбъектАдресацииКонтролераID);
	Результат.Свойство("ОсновнойОбъектАдресацииТип", ОсновнойОбъектАдресацииКонтролераТип);
	
	Результат.Свойство("ДополнительныйОбъектАдресации", ДополнительныйОбъектАдресацииКонтролера);
	Результат.Свойство("ДополнительныйОбъектАдресацииID", ДополнительныйОбъектАдресацииКонтролераID);
	Результат.Свойство("ДополнительныйОбъектАдресацииТип", ДополнительныйОбъектАдресацииКонтролераТип);	
	
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура АвторПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаС1СДокументооборотКлиент.ВыбратьПользователяИзДереваПодразделений("Автор", ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	#Если Не ВебКлиент Тогда
	Если Модифицированность Тогда
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Режим = РежимДиалогаВопрос.ДаНетОтмена;
		Ответ = Вопрос(ТекстВопроса, Режим);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Отказ = НЕ ЗаписатьОбъектВыполнить();
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	#Если ВебКлиент Тогда
	Если Модифицированность Тогда
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос(ТекстВопроса, Режим);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьОбъектВыполнить();
		КонецЕсли;
	КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ГлавнаяЗадачаПредставлениеОткрытие(Элемент, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ГлавнаяЗадача) Тогда
		ПараметрыФормы = Новый Структура("ID, Type", ГлавнаяЗадачаID, ГлавнаяЗадачаТип);
		ОткрытьФормуМодально("ОбщаяФорма.ДокументооборотКарточкаЗадачи", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Предмет) Тогда
		РаботаС1СДокументооборотКлиент.ОткрытьКарточкуПредметаБизнесПроцесса(ПредметТип, ПредметID, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникБизнесПроцессаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		РаботаС1СДокументооборотВызовСервера.ПолучитьДанныеДляАвтоПодбора("DMUser;DMBusinessProcessExecutorRole", ДанныеВыбора, Текст, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникБизнесПроцессаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		РаботаС1СДокументооборотВызовСервера.ПолучитьДанныеДляАвтоПодбора("DMUser;DMBusinessProcessExecutorRole", ДанныеВыбора, Текст, СтандартнаяОбработка);
		
		Если ДанныеВыбора.Количество() = 1 Тогда
			Если Элемент = Элементы.ПроверяющийПредставление  Тогда
			    РаботаС1СДокументооборотКлиент.ПрименитьВыборУчастникаБизнесПроцессаВПоле("Проверяющий", "ОбъектАдресацииПроверяющего", ДанныеВыбора[0].Значение, СтандартнаяОбработка, ЭтаФорма);
			ИначеЕсли Элемент = Элементы.КонтролерПредставление Тогда
				РаботаС1СДокументооборотКлиент.ПрименитьВыборУчастникаБизнесПроцессаВПоле("Контролер", "ОбъектАдресацииКонтролера", ДанныеВыбора[0].Значение, СтандартнаяОбработка, ЭтаФорма);
			Иначе
				РаботаС1СДокументооборотКлиент.ПрименитьВыборУчастникаБизнесПроцессаВПоле("Исполнитель", "ОбъектАдресации", ДанныеВыбора[0].Значение, СтандартнаяОбработка, ЭтаФорма);
			КонецЕсли;
			СтандартнаяОбработка = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РаботаС1СДокументооборотКлиент.ПрименитьВыборУчастникаБизнесПроцессаВПоле("Исполнитель", "ОбъектАдресации", ВыбранноеЗначение, СтандартнаяОбработка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверяющийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РаботаС1СДокументооборотКлиент.ПрименитьВыборУчастникаБизнесПроцессаВПоле("Проверяющий", "ОбъектАдресацииПроверяющего", ВыбранноеЗначение, СтандартнаяОбработка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтролерОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РаботаС1СДокументооборотКлиент.ПрименитьВыборУчастникаБизнесПроцессаВПоле("Контролер", "ОбъектАдресацииКонтролера", ВыбранноеЗначение, СтандартнаяОбработка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокДатаПриИзменении(Элемент)
	
	Если Срок = НачалоДня(Срок) Тогда
		Срок = КонецДня(Срок);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ДокументооборотДокумент" И Источник = Элементы.ПредметПредставление Тогда 
		Предмет = Параметр.Представление;
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ВажностьАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		РаботаС1СДокументооборотВызовСервера.ПолучитьДанныеДляАвтоПодбора("DMBusinessProcessImportance", Данныевыбора, Текст, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВажностьОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		
		РаботаС1СДокументооборотВызовСервера.ПолучитьДанныеДляАвтоПодбора("DMBusinessProcessImportance", ДанныеВыбора, Текст, СтандартнаяОбработка);
		Если ДанныеВыбора.Количество() = 1 Тогда
			РаботаС1СДокументооборотКлиент.ОбработкаВыбораДанныхДляАвтоПодбора("Важность", ДанныеВыбора[0].Значение, СтандартнаяОбработка, ЭтаФорма);
			СтандартнаяОбработка = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВажностьОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РаботаС1СДокументооборотКлиент.ОбработкаВыбораДанныхДляАвтоПодбора("Важность", ВыбранноеЗначение, СтандартнаяОбработка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура АвторАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		РаботаС1СДокументооборотВызовСервера.ПолучитьДанныеДляАвтоПодбора("DMUser", Данныевыбора, Текст, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвторОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		РаботаС1СДокументооборотВызовСервера.ПолучитьДанныеДляАвтоПодбора("DMUser", ДанныеВыбора, Текст, СтандартнаяОбработка);
		
		Если ДанныеВыбора.Количество() = 1 Тогда 
			РаботаС1СДокументооборотКлиент.ОбработкаВыбораДанныхДляАвтоПодбора("Автор", ДанныеВыбора[0].Значение, СтандартнаяОбработка, ЭтаФорма);
			СтандартнаяОбработка = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвторОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РаботаС1СДокументооборотКлиент.ОбработкаВыбораДанныхДляАвтоПодбора("Автор", ВыбранноеЗначение, СтандартнаяОбработка, ЭтаФорма);
	
КонецПроцедуры

///////////////////////////////////////////////////////////
//// Обработка команд формы

&НаКлиенте
Процедура Записать(Команда)
	
	РезультатЗаписи = ЗаписатьОбъектВыполнить();
	
	Если РезультатЗаписи Тогда
		ПараметрыОповещения = Новый Структура("ID", ОбъектID);
		Оповестить("Запись_ДокументооборотБизнесПроцесс", ПараметрыОповещения);
		ЭтаФорма.Заголовок = Наименование;
		Состояние(НСтр("ru = 'Бизнес-процесс """ + Наименование + """ сохранен.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтартоватьИЗакрыть(Команда)
	
	РезультатЗапуска = ПодготовитьКПередачеИСтартоватьБизнесПроцесс();
	Если РезультатЗапуска Тогда 
		ПараметрыОповещения = Новый Структура("ID", ОбъектID);
		Оповестить("Запись_ДокументооборотБизнесПроцесс", ПараметрыОповещения);
		
		ТекстСостояния = НСтр("ru = 'Бизнес-процесс """ + Наименование + """ успешно запущен.'");
		Состояние(ТекстСостояния);
		
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоШаблону(Команда)
	
	РезультатВыбораШаблона = РаботаС1СДокументооборотКлиент.ВыбратьШаблонБизнесПроцесса(ЭтаФорма);
	Если ТипЗнч(РезультатВыбораШаблона) = Тип("Структура") Тогда
		ЗаполнитьКарточкуПоШаблону(РезультатВыбораШаблона);	
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////
//// Служебные процедуры и функции

&НаСервере
Процедура ЗаполнитьКарточкуПоШаблону(ДанныеШаблона)
	
	РезультатЗаполнения = РаботаС1СДокументооборотВызовСервера.ЗаполнитьБизнесПроцессПоШаблону(ЭтаФорма, ДанныеШаблона);
	ЗаполнитьФормуИзОбъектаXDTO(РезультатЗаполнения.object);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКарточкуНовогоБизнесПроцесса(ТипБизнесПроцесса, Форма, Предмет)	
	
	НовыйОбъект = РаботаС1СДокументооборот.ПолучитьНовыйОбъект(ТипБизнесПроцесса, Предмет);
	ЗаполнитьФормуИзОбъектаXDTO(НовыйОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормуИзОбъектаXDTO(Объект)
	
	РаботаС1СДокументооборот.УстановитьСтандартнуюШапкуБизнесПроцесса(Объект, Этаформа);
	РаботаС1СДокументооборот.УстановитьЕдинственногоИсполнителяНаКарточке(Объект, Этаформа);		
    РаботаС1СДокументооборот.УстановитьКонтролераНаКарточке(Объект, Этаформа);
    РаботаС1СДокументооборот.УстановитьПроверяющегоНаКарточке(Объект, Этаформа);
		
КонецПроцедуры

&НаСервере
Функция СоздатьОбъект(Прокси, Тип)
	
	Возврат РаботаС1СДокументооборотВызовСервера.СоздатьОбъектDM(Прокси, Тип);
	
КонецФункции

&НаСервере
Процедура СоздатьУчастникаБизнесПроцесса(Прокси, Объект, Форма, ИмяРеквизита, ИмяРеквизитаАдресации)
	
	Если ЗначениеЗаполнено(Форма[ИмяРеквизита]) Тогда 
		Объект = СоздатьОбъект(Прокси, "DMBusinessProcessTaskExecutor");
		Если Форма[ИмяРеквизита + "Тип"] = "DMUser" Тогда
			Объект.user = СоздатьОбъект(Прокси, "DMUser");
			Объект.user.name = Форма[ИмяРеквизита];
			Объект.user.objectId = СоздатьОбъект(Прокси, "DMObjectID");
			Объект.user.objectId.id = Форма[ИмяРеквизита + "ID"];
			Объект.user.objectId.type = Форма[ИмяРеквизита + "Тип"];
		Иначе
			Объект.role = СоздатьОбъект(Прокси, "DMBusinessProcessExecutorRole");
			Объект.role.name = Форма[ИмяРеквизита];
			Объект.role.objectId = СоздатьОбъект(Прокси, "DMObjectID");
			Объект.role.objectId.id = Форма[ИмяРеквизита + "ID"];
			Объект.role.objectId.type = Форма[ИмяРеквизита + "Тип"];
			
			Если ЗначениеЗаполнено(Форма["Основной" + ИмяРеквизитаАдресации]) Тогда
				Объект.mainAddressingObject = СоздатьОбъект(Прокси, "DMMainAddressingObject");
				Объект.mainAddressingObject.name = Форма["Основной" + ИмяРеквизитаАдресации];
				Объект.mainAddressingObject.objectId = СоздатьОбъект(Прокси, "DMObjectID");
				Объект.mainAddressingObject.objectId.id = Форма["Основной" + ИмяРеквизитаАдресации + "ID"];
				Объект.mainAddressingObject.objectId.type = Форма["Основной" + ИмяРеквизитаАдресации + "Тип"];
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Форма["Дополнительный" + ИмяРеквизитаАдресации]) Тогда
				Объект.secondaryAddressingObject = СоздатьОбъект(Прокси, "DMSecondaryAddressingObject");
				Объект.secondaryAddressingObject.name = Форма["Дополнительный" + ИмяРеквизитаАдресации];
				Объект.secondaryAddressingObject.objectId = СоздатьОбъект(Прокси, "DMObjectID");
				Объект.secondaryAddressingObject.objectId.id = Форма["Дополнительный" + ИмяРеквизитаАдресации + "ID"];
				Объект.secondaryAddressingObject.objectId.type = Форма["Дополнительный" + ИмяРеквизитаАдресации + "Тип"];
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьКПередачеИЗаписатьБизнесПроцесс()
	
	Прокси = РаботаС1СДокументооборотВызовСервера.ПолучитьПрокси();
	Объект = ПодготовитьБизнесПроцесс(Прокси);
	Если ЗначениеЗаполнено(ОбъектID) Тогда
		РезультатЗаписи = РаботаС1СДокументооборот.ЗаписатьОбъект(Прокси, Объект);
	Иначе
		РезультатСоздания = РаботаС1СДокументооборот.СоздатьНовыйОбъект(Прокси, Объект);
	КонецЕсли;
	
	Результат = ?(РезультатСоздания = Неопределено, РезультатЗаписи, РезультатСоздания);
	Если РаботаС1СДокументооборот.ПроверитьТип(Прокси, Результат , "DMError") Тогда
		ВызватьИсключение(РезультатСоздания.description);
	Иначе
		Если РезультатЗаписи <> Неопределено Тогда
			ОбъектID = Результат.objects[0].objectId.id;
		Иначе
			ОбъектID = Результат.object.objectId.id;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПодготовитьКПередачеИСтартоватьБизнесПроцесс()
	
	Прокси = РаботаС1СДокументооборотВызовСервера.ПолучитьПрокси();
	Объект = ПодготовитьБизнесПроцесс(Прокси);
	РезультатЗапуска = РаботаС1СДокументооборот.ЗапуститьБизнесПроцесс(Прокси, Объект); 	
	
	Если РаботаС1СДокументооборот.ПроверитьТип(Прокси, РезультатЗапуска, "DMError") Тогда
		ВызватьИсключение(РезультатЗапуска.description); 
	Иначе
		ОбъектID = РезультатЗапуска.businessProcess.objectId.id;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПодготовитьБизнесПроцесс(Прокси)
		
	Объект = СоздатьОбъект(Прокси, "DMBusinessProcessOrder");
	
	Объект.name = Наименование;
	Объект.objectId = СоздатьОбъект(Прокси, "DMObjectID"); 
	Объект.objectId.id = ОбъектID;
	Объект.objectId.Type = "DMBusinessProcessOrder";
	
	//Общая шапка бизнес-процессов
	Объект.author = СоздатьОбъект(Прокси, "DMUser");
	Объект.author.name = Автор;
	Объект.author.objectId = СоздатьОбъект(Прокси, "DMObjectID");
	Объект.author.objectId.id = АвторID;
	Объект.author.objectId.type = АвторТип;
	
	Объект.importance = СоздатьОбъект(Прокси, "DMBusinessProcessImportance");
	Объект.importance.name = Важность;
	Объект.importance.objectId = СоздатьОбъект(Прокси, "DMObjectID");
	Объект.importance.objectId.id = ВажностьID;
	Объект.importance.objectId.type = ВажностьТип;
	
	Объект.beginDate = ДатаНачала;
	
	Объект.target = СоздатьОбъект(Прокси, "DMObject");
	Объект.target.name = Предмет;
	Объект.target.objectId = СоздатьОбъект(Прокси, "DMObjectID");
	Объект.target.objectId.id = ПредметID;
	Объект.target.objectId.type = ПредметТип;
	
	Объект.started = Стартован;
	Объект.completed = Завершен;
	Объект.description = Описание;
	Объект.duedate = Срок;
	
	//специфика Поручения
	
	//контролер
	СоздатьУчастникаБизнесПроцесса(Прокси, Объект.controller, ЭтаФорма, "Контролер", "ОбъектАдресацииКонтролера");
	
	//проверяющий
	СоздатьУчастникаБизнесПроцесса(Прокси, Объект.verifier, ЭтаФорма, "Проверяющий", "ОбъектАдресацииПроверяющего");	
	
	//исполнитель
	ИсполнительБП = СоздатьОбъект(Прокси, "DMBusinessProcessTaskExecutor");
			
	Если ИсполнительТип = "DMUser" Тогда
		ИсполнительБП.user = СоздатьОбъект(Прокси, "DMUser");
		ИсполнительБП.user.name = Исполнитель;
		ИсполнительБП.user.objectId = СоздатьОбъект(Прокси, "DMObjectID");
		ИсполнительБП.user.objectId.id = ИсполнительID;
		ИсполнительБП.user.objectId.type = ИсполнительТип;
	Иначе
		ИсполнительБП.role = СоздатьОбъект(Прокси, "DMBusinessProcessExecutorRole");
		ИсполнительБП.role.name = Исполнитель;
		ИсполнительБП.role.objectId = СоздатьОбъект(Прокси, "DMObjectID");
		ИсполнительБП.role.objectId.id = ИсполнительID;
		ИсполнительБП.role.objectId.type = ИсполнительТип;
		
		Если ЗначениеЗаполнено(ОсновнойОбъектАдресации) Тогда
			ИсполнительБП.mainAddressingObject = СоздатьОбъект(Прокси, "DMMainAddressingObject");
			ИсполнительБП.mainAddressingObject.name = ОсновнойОбъектАдресации;
			ИсполнительБП.mainAddressingObject.objectId = СоздатьОбъект(Прокси, "DMObjectID");
			ИсполнительБП.mainAddressingObject.objectId.id = ОсновнойОбъектАдресацииID;
			ИсполнительБП.mainAddressingObject.objectId.type = ОсновнойОбъектАдресацииТип;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДополнительныйОбъектАдресации) Тогда
			ИсполнительБП.secondaryAddressingObject = СоздатьОбъект(Прокси, "DMSecondaryAddressingObject");
			ИсполнительБП.secondaryAddressingObject.name = ДополнительныйОбъектАдресации;
			ИсполнительБП.secondaryAddressingObject.objectId = СоздатьОбъект(Прокси, "DMObjectID");
			ИсполнительБП.secondaryAddressingObject.objectId.id = ДополнительныйОбъектАдресацииID;
			ИсполнительБП.secondaryAddressingObject.objectId.type = ДополнительныйОбъектАдресацииТип;
		КонецЕсли;
	КонецЕсли;
	
	Объект.performer = ИсполнительБП;
	
	Возврат Объект;
	
КонецФункции

&НаКлиенте
Функция ЗаписатьОбъектВыполнить()
	
	ПодготовитьКПередачеИЗаписатьБизнесПроцесс();
	Модифицированность = Ложь;
	Возврат Истина;
	
КонецФункции

