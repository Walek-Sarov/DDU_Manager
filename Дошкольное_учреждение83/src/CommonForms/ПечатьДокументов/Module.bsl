
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем КоллекцияПечатныхФорм;
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьПечатныеФормы(КоллекцияПечатныхФорм, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьРеквизитыИЭлементыФормыДляПечатныхФорм(КоллекцияПечатныхФорм);
	СохранитьНастройкиКомплектаПоУмолчанию();
	ЗагрузитьНастройкиКоличестваКопий();
	ЕстьРазрешенныйВывод = ЕстьРазрешенныйВывод();
	НастроитьВидимостьЭлементовФормы(ЕстьРазрешенныйВывод);
	УстановитьПризнакДоступностиВыводаВПредставленияхПечатныхФорм(ЕстьРазрешенныйВывод);
	УстановитьИмяПринтераВПодсказкеКнопкиПечать();
	УстановитьЗаголовокФормы();
	Если ЭтоПечатьКомплекта() Тогда
		Элементы.Копий.Заголовок = НСтр("ru = 'Копий комплекта'");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(НастройкиФорматаСохранения) Тогда
		Отказ = Истина; // отказ от открытия формы
		СохранитьПечатнуюФормуВФайл();
	КонецЕсли;
	УстановитьТекущуюСтраницу();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если Не ПустаяСтрока(КлючНастроек) Тогда
		СохраняемыеНастройкиПечатныхФорм = Новый Массив;
		Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
			СохраняемаяНастройка = Новый Структура;
			СохраняемаяНастройка.Вставить("ИмяМакета", НастройкаПечатнойФормы.ИмяМакета);
			СохраняемаяНастройка.Вставить("Количество", ?(НастройкаПечатнойФормы.Печатать,НастройкаПечатнойФормы.Количество, 0));
			
			СохраняемыеНастройкиПечатныхФорм.Добавить(СохраняемаяНастройка);
		КонецЦикла;
		
		СохранитьНастройкиПечатныхФорм(КлючНастроек, СохраняемыеНастройкиПечатныхФорм);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КопийПриИзменении(Элемент)
	Если НастройкиПечатныхФорм.Количество() = 1 Тогда
		НастройкиПечатныхФорм[0].Количество = Копий;
		ЭтаФорма[НастройкиПечатныхФорм[0].ИмяРеквизита].КоличествоЭкземпляров = НастройкиПечатныхФорм[0].Количество;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ НастройкиПечатныхФорм

&НаКлиенте
Процедура НастройкиПечатныхФормПриИзменении(Элемент)
	ЕстьВыбранныеПечатныеФормы = Ложь;
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		ЕстьВыбранныеПечатныеФормы = ЕстьВыбранныеПечатныеФормы Или НастройкаПечатнойФормы.Печатать
			И ЭтаФорма[НастройкаПечатнойФормы.ИмяРеквизита].ВысотаТаблицы > 0;
	КонецЦикла;
	
	Элементы.КнопкаПечатьКоманднаяПанель.Доступность = ЕстьВыбранныеПечатныеФормы;
	Элементы.КнопкаПечатьВсеДействия.Доступность = ЕстьВыбранныеПечатныеФормы;
	Элементы.КнопкаСохранить.Доступность = ЕстьВыбранныеПечатныеФормы;
	Элементы.КнопкаОтправить.Доступность = ЕстьВыбранныеПечатныеФормы;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПечатныхФормПриАктивизацииСтроки(Элемент)
	УстановитьТекущуюСтраницу();
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПечатныхФормКоличествоПриИзменении(Элемент)
	ТекущиеДанные = Элементы.НастройкиПечатныхФорм.ТекущиеДанные;
	ЭтаФорма[ТекущиеДанные.ИмяРеквизита].КоличествоЭкземпляров = ТекущиеДанные.Количество;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПечатныхФормКоличествоРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.НастройкиПечатныхФорм.ТекущиеДанные;
	ТекущиеДанные.Печатать = ТекущиеДанные.Количество + Направление > 0;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПечатныхФормПечататьПриИзменении(Элемент)
	ТекущиеДанные = Элементы.НастройкиПечатныхФорм.ТекущиеДанные;
	Если ТекущиеДанные.Печатать И ТекущиеДанные.Количество = 0 Тогда
		ТекущиеДанные.Количество = 1;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Сохранить(Команда)
	НастройкиСохранения = ОткрытьФормуМодально("ОбщаяФорма.СохранениеПечатнойФормы", Новый Структура("ОбъектыПечати", ОбъектыПечати));
	Если НастройкиСохранения <> Неопределено И НастройкиСохранения <> КодВозвратаДиалога.Отмена Тогда
		ФайлыВоВременномХранилище = ПоместитьТабличныеДокументыВоВременноеХранилище(НастройкиСохранения);
		Если НастройкиСохранения.ВариантСохранения = "СохранитьВПапку" Тогда
			СохранитьПечатныеФормыВПапку(ФайлыВоВременномХранилище, НастройкиСохранения.ПапкаДляСохранения);
		Иначе
			ПрисоединитьПечатныеФормыКОбъекту(ФайлыВоВременномХранилище, НастройкиСохранения.ОбъектДляПрикрепления);
			Состояние(НСтр("ru = 'Сохранение успешно завершено.'"));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ИмяОткрываемойФормы = "ОбщаяФорма.ВыборФорматаВложений";
	Если ПолучателейБольшеОдного(ПараметрыВывода.ПараметрыОтправки.Получатель) Тогда
		ПараметрыОткрытия.Вставить("Получатели", ПараметрыВывода.ПараметрыОтправки.Получатель);
		ИмяОткрываемойФормы = "ОбщаяФорма.ОтправкаПечатнойФормыПоПочте";
	КонецЕсли;
	
	НастройкиСохранения = ОткрытьФормуМодально(ИмяОткрываемойФормы, ПараметрыОткрытия);
	Если НастройкиСохранения <> Неопределено И НастройкиСохранения <> КодВозвратаДиалога.Отмена Тогда
		СписокВложений = ПоместитьТабличныеДокументыВоВременноеХранилище(НастройкиСохранения);
		ПараметрыОтправки = ПараметрыВывода.ПараметрыОтправки;
		Получатели = ПараметрыОтправки.Получатель;
		Если НастройкиСохранения.Свойство("Получатели") Тогда
			Получатели = НастройкиСохранения.Получатели;
		КонецЕсли;
		РаботаСПочтовымиСообщениямиКлиент.ОткрытьФормуОтправкиПочтовогоСообщения( , Получатели, ПараметрыОтправки.Тема, ПараметрыОтправки.Текст, СписокВложений, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКДокументу(Команда)
	
	СписокВыбора = Новый СписокЗначений;
	Для Каждого ОбъектПечати Из ОбъектыПечати Цикл
		СписокВыбора.Добавить(ОбъектПечати.Представление, Строка(ОбъектПечати.Значение));
	КонецЦикла;
	
	ВыбранныйЭлемент = СписокВыбора.ВыбратьЭлемент(НСтр("ru = 'Перейти к печатной форме'"));
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		ПолеТабличногоДокумента = Элементы[НастройкаПечатнойФормы.ИмяРеквизита];
		ТабличныйДокумент = ЭтаФорма[НастройкаПечатнойФормы.ИмяРеквизита];
		ОбластьВыбранногоДокумента = ТабличныйДокумент.Области.Найти(ВыбранныйЭлемент.Значение);
		
		ПолеТабличногоДокумента.ТекущаяОбласть = ТабличныйДокумент.Область("R1C1"); // переход к началу
		
		Если ОбластьВыбранногоДокумента <> Неопределено Тогда
			ПолеТабличногоДокумента.ТекущаяОбласть = ТабличныйДокумент.Область(ОбластьВыбранногоДокумента.Верх,,ОбластьВыбранногоДокумента.Низ,);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКУправлениюМакетами(Команда)
	
	ПараметрыОткрытия = ?(ОбъектыПечати.Количество() > 0, Новый Структура("Фильтр", ОбъектыПечати[0].Значение), Неопределено);
	
	ОткрытьФорму("РегистрСведений.ПользовательскиеМакетыПечати.Форма.МакетыПечатныхФорм", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	ТабличныеДокументы = Новый СписокЗначений;
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Если Элементы[НастройкаПечатнойФормы.ИмяРеквизита].Вывод = ИспользованиеВывода.Разрешить И НастройкаПечатнойФормы.Печатать Тогда
			ТабличныеДокументы.Добавить(ЭтаФорма[НастройкаПечатнойФормы.ИмяРеквизита], НастройкаПечатнойФормы.Представление);
		КонецЕсли;
	КонецЦикла;
	
	УправлениеПечатьюКлиент.РаспечататьТабличныеДокументы(ТабличныеДокументы, ОбъектыПечати,
								ПараметрыВывода.ДоступнаПечатьПоКомплектно, ?(НастройкиПечатныхФорм.Количество() > 1, Копий, 1));
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьНастройкуКоличестваКопий(Команда)
	УстановитьВидимостьНастройкиКоличестваКопий();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	УстановитьСнятьФлажки(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	УстановитьСнятьФлажки(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура СброситьНастройки(Команда)
	ВосстановитьНастройкиПечатныхФорм();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура СформироватьПечатныеФормы(КоллекцияПечатныхФорм, Отказ)
	
	// формирование табличных документов
	Если ЗначениеЗаполнено(Параметры.ИсточникДанных) Тогда
		Отказ = Отказ Или Не УправлениеПечатьюПереопределяемый.ПечатьПоВнешнемуИсточнику(Параметры.ИсточникДанных,
			Параметры.ПараметрыИсточника, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	Иначе
		УправлениеПечатью.СформироватьПечатныеФормы(Параметры.ИмяМенеджераПечати, Параметры.ИменаМакетов,
			Параметры.ПараметрКоманды, Параметры.ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	КонецЕсли;
	
	// установка признака сохранения печатной формы в файл
	Если ТипЗнч(Параметры.ПараметрыПечати) = Тип("Структура") И Параметры.ПараметрыПечати.Свойство("ФорматСохранения") Тогда
		НайденныйФормат = УправлениеПечатью.НастройкиФорматовСохраненияТабличногоДокумента().Найти(Параметры.ПараметрыПечати.ФорматСохранения, "ТипФайлаТабличногоДокумента");
		Если НайденныйФормат <> Неопределено Тогда
			НастройкиФорматаСохранения = Новый Структура("ТипФайлаТабличногоДокумента,Представление,Расширение,Фильтр");
			ЗаполнитьЗначенияСвойств(НастройкиФорматаСохранения, НайденныйФормат);
			НастройкиФорматаСохранения.Фильтр = НастройкиФорматаСохранения.Представление + "|*." + НастройкиФорматаСохранения.Расширение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиКоличестваКопий()
	
	СохраненныеНастройкиПечатныхФорм = Новый Массив;
	
	ИспользоватьСохраненныеНастройки = Истина;
	Если ТипЗнч(Параметры.ПараметрыПечати) = Тип("Структура") И Параметры.ПараметрыПечати.Свойство("ПереопределитьПользовательскиеНастройкиКоличества") Тогда
		ИспользоватьСохраненныеНастройки = Не Параметры.ПараметрыПечати.ПереопределитьПользовательскиеНастройкиКоличества;
	КонецЕсли;
	
	Если ИспользоватьСохраненныеНастройки И Не ЗначениеЗаполнено(Параметры.ИсточникДанных) Тогда
		ИменаМакетов = Параметры.ИменаМакетов;
		Если ТипЗнч(ИменаМакетов) = Тип("Массив") Тогда
			ИменаМакетов = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ИменаМакетов);
		КонецЕсли;
			
		КлючНастроек = Параметры.ИмяМенеджераПечати + "-" + ИменаМакетов;
		СохраненныеНастройкиПечатныхФорм = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиПечатныхФорм", КлючНастроек, Новый Массив);
	КонецЕсли;
	
	ВосстановитьНастройкиПечатныхФорм(СохраненныеНастройкиПечатныхФорм);
	
	Если ЭтоПечатьКомплекта() Тогда
		Копий = 1;
	Иначе
		Копий = НастройкиПечатныхФорм[0].Количество;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьРеквизитыИЭлементыФормыДляПечатныхФорм(КоллекцияПечатныхФорм)
	
	// создание реквизитов для табличных документов
	НовыеРеквизитыФормы = Новый Массив;
	Для НомерПечатнойФормы = 1 По КоллекцияПечатныхФорм.Количество() Цикл
		ИмяРеквизита = "ПечатнаяФорма" + Формат(НомерПечатнойФормы,"ЧГ=0");
		РеквизитФормы = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ТабличныйДокумент"),,КоллекцияПечатныхФорм[НомерПечатнойФормы - 1].СинонимМакета);
		НовыеРеквизитыФормы.Добавить(РеквизитФормы);
	КонецЦикла;
	ИзменитьРеквизиты(НовыеРеквизитыФормы);
	
	// Создание страниц с табличными документами на форме
	НомерПечатнойФормы = 0;
	Для Каждого РеквизитФормы Из НовыеРеквизитыФормы Цикл
		ОписаниеПечатнойФормы = КоллекцияПечатныхФорм[НомерПечатнойФормы];
		ИмяРеквизита = РеквизитФормы.Имя;
		
		ЭтаФорма[ИмяРеквизита] = ОписаниеПечатнойФормы.ТабличныйДокумент;
		
		// создание страниц для табличных документов
		ИмяСтраницы = "Страница" + ИмяРеквизита;
		Страница = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Элементы.Страницы);
		Страница.Вид = ВидГруппыФормы.Страница;
		Страница.Картинка = БиблиотекаКартинок.ТабличныйДокументВставитьРазрывСтраницы;
		Страница.Заголовок = ОписаниеПечатнойФормы.СинонимМакета;
		Страница.Подсказка = ОписаниеПечатнойФормы.СинонимМакета;
		Страница.Видимость = ЭтаФорма[ИмяРеквизита].ВысотаТаблицы > 0;
		
		// создание элементов под табличные документы
		НовыйЭлемент = Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Страница);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеТабличногоДокумента;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		НовыйЭлемент.ПутьКДанным = ИмяРеквизита;
		НовыйЭлемент.Вывод = ВычислитьИспользованиеВывода(ОписаниеПечатнойФормы.ТабличныйДокумент);
		НовыйЭлемент.Редактирование = НовыйЭлемент.Вывод = ИспользованиеВывода.Разрешить;
		
		// таблица настроек печатных форм
		НастройкаПечатнойФормы = НастройкиПечатныхФорм.Добавить();
		НастройкаПечатнойФормы.Представление = ОписаниеПечатнойФормы.СинонимМакета;
		НастройкаПечатнойФормы.Печатать = Истина;
		НастройкаПечатнойФормы.Количество = ОписаниеПечатнойФормы.Экземпляров;
		НастройкаПечатнойФормы.ИмяСтраницы = ИмяСтраницы;
		НастройкаПечатнойФормы.ИмяРеквизита = ИмяРеквизита;
		НастройкаПечатнойФормы.ИмяМакета = ОписаниеПечатнойФормы.ИмяМакета;
		
		НомерПечатнойФормы = НомерПечатнойФормы + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СохранитьНастройкиКомплектаПоУмолчанию()
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		ЗаполнитьЗначенияСвойств(НастройкиКомплектаПоУмолчанию.Добавить(), НастройкаПечатнойФормы);
	КонецЦикла;
КонецФункции

&НаСервере
Процедура НастроитьВидимостьЭлементовФормы(ЕстьРазрешенныйВывод)
	
	ВозможнаОтправкаПоПочте = ЕстьРазрешенныйВывод И РаботаСПочтовымиСообщениями.ПолучитьДоступныеУчетныеЗаписи(Истина).Количество() > 0;
	ЕстьОбъектыПечати = ОбъектыПечати.Количество() > 0 Или ЕстьДанныеДляПечати();
	
	Элементы.КнопкаПерейтиКДокументу.Видимость = ОбъектыПечати.Количество() > 1;
	Элементы.КнопкаСохранить.Видимость = ЕстьОбъектыПечати;
	Элементы.КнопкаОтправить.Видимость = ВозможнаОтправкаПоПочте и ЕстьОбъектыПечати;
	Элементы.КнопкаПечатьКоманднаяПанель.Видимость = ЕстьРазрешенныйВывод И ЕстьОбъектыПечати;
	Элементы.КнопкаПечатьВсеДействия.Видимость = ЕстьРазрешенныйВывод И ЕстьОбъектыПечати;
	Элементы.Копий.Видимость = ЕстьРазрешенныйВывод И ЕстьОбъектыПечати;
	
	Элементы.КнопкаПоказатьСкрытьНастройкуКомплекта.Видимость = ЭтоПечатьКомплекта();
	Элементы.НастройкиПечатныхФорм.Видимость = ЭтоПечатьКомплекта();
	Элементы.ГруппаНастройкаКомплектаПодменю.Видимость = ЭтоПечатьКомплекта();
	
	ДоступнаНастройкаКомплекта = Истина;
	Если ТипЗнч(Параметры.ПараметрыПечати) = Тип("Структура") И Параметры.ПараметрыПечати.Свойство("ФиксированныйКомплект") Тогда
		ДоступнаНастройкаКомплекта = Не Параметры.ПараметрыПечати.ФиксированныйКомплект;
	КонецЕсли;
	
	Элементы.ГруппаНастройкаКомплектаКонтекстноеМеню.Видимость = ДоступнаНастройкаКомплекта;
	Элементы.ГруппаНастройкаКомплектаПодменю.Видимость = ЭтоПечатьКомплекта() И ДоступнаНастройкаКомплекта;
	Элементы.НастройкиПечатныхФормПечатать.Видимость = ДоступнаНастройкаКомплекта;
	Элементы.НастройкиПечатныхФормКоличество.Видимость = ДоступнаНастройкаКомплекта;
	
	Если Не ДоступнаНастройкаКомплекта Тогда
		ДобавитьКоличествоЭкземпляровВПредставленияхПечатныхФорм();
	КонецЕсли;
	
	// отключение "технологической" страницы, которая нужна только в конфигураторе для дизайна формы
	Элементы.СтраницаПечатнаяФормаОбразец.Видимость = Ложь;

КонецПроцедуры

&НаСервере
Процедура ДобавитьКоличествоЭкземпляровВПредставленияхПечатныхФорм()
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		НастройкаПечатнойФормы.Представление = НастройкаПечатнойФормы.Представление + " (" + НастройкаПечатнойФормы.Количество + ")";
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура УстановитьПризнакДоступностиВыводаВПредставленияхПечатныхФорм(ЕстьРазрешенныйВывод)
	Если ЕстьРазрешенныйВывод Тогда
		Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
			Если Элементы[НастройкаПечатнойФормы.ИмяРеквизита].Вывод = ИспользованиеВывода.Запретить Тогда
				НастройкаПечатнойФормы.Представление = НастройкаПечатнойФормы.Представление + " (" + НСтр("ru = 'вывод не доступен'") + ")";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьНастройкиКоличестваКопий(Знач Видимость = Неопределено)
	Если Видимость = Неопределено Тогда
		Видимость = Не Элементы.НастройкиПечатныхФорм.Видимость;
	КонецЕсли;
	
	Элементы.НастройкиПечатныхФорм.Видимость = Видимость;
	Элементы.ГруппаНастройкаКомплектаПодменю.Видимость = Видимость И ДоступнаНастройкаКомплекта;
КонецПроцедуры

&НаСервере
Процедура УстановитьИмяПринтераВПодсказкеКнопкиПечать()
	Если НастройкиПечатныхФорм.Количество() > 0 Тогда
		ИмяПринтера = ЭтаФорма[НастройкиПечатныхФорм[0].ИмяРеквизита].ИмяПринтера;
		Если Не ПустаяСтрока(ИмяПринтера) Тогда
			ЭтаФорма.Команды["Печать"].Подсказка = НСтр("ru = 'Напечатать на принтере'") + " (" + ИмяПринтера + ")";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()
	Перем ЗаголовокФормы;
	
	Если ТипЗнч(Параметры.ПараметрыПечати) = Тип("Структура") Тогда
		Параметры.ПараметрыПечати.Свойство("ЗаголовокФормы", ЗаголовокФормы);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаголовокФормы) Тогда
		Заголовок = ЗаголовокФормы;
	Иначе
		Если ЭтоПечатьКомплекта() Тогда
			Заголовок = НСтр("ru = 'Печать комплекта'");
		ИначеЕсли ТипЗнч(Параметры.ПараметрКоманды) <> Тип("Массив") Или Параметры.ПараметрКоманды.Количество() > 1 Тогда
			Заголовок = НСтр("ru = 'Печать документов'");
		Иначе
			Заголовок = НСтр("ru = 'Печать документа'");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущуюСтраницу()
	
	ТекущиеДанные = Элементы.НастройкиПечатныхФорм.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено И НастройкиПечатныхФорм.Количество() > 0 Тогда
		ТекущиеДанные = НастройкиПечатныхФорм[0];
	КонецЕсли;
	
	ТекущаяСтраница = Элементы.СтраницаПечатнаяФормаНедоступна;
	Если ТекущиеДанные <> Неопределено И ЭтаФорма[ТекущиеДанные.ИмяРеквизита].ВысотаТаблицы > 0 Тогда
		ТекущаяСтраница = Элементы[ТекущиеДанные.ИмяСтраницы];
	КонецЕсли;
	
	Элементы.Страницы.ТекущаяСтраница = ТекущаяСтраница;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьФлажки(Пометка)
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		НастройкаПечатнойФормы.Печатать = Пометка;
		Если Пометка И НастройкаПечатнойФормы.Количество = 0 Тогда
			НастройкаПечатнойФормы.Количество = 1;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ВычислитьИспользованиеВывода(ТабличныйДокумент)
	Если ТабличныйДокумент.Вывод = ИспользованиеВывода.Авто Тогда
		Возврат ?(Пользователи.РолиДоступны("ВыводНаПринтерФайлБуферОбмена"), ИспользованиеВывода.Разрешить, ИспользованиеВывода.Запретить);
	Иначе
		Возврат ТабличныйДокумент.Вывод;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Процедура СохранитьНастройкиПечатныхФорм(КлючНастроек, СохраняемыеНастройкиПечатныхФорм)
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НастройкиПечатныхФорм", КлючНастроек, СохраняемыеНастройкиПечатныхФорм);
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиПечатныхФорм(СохраненныеНастройкиПечатныхФорм = Неопределено)
	Если СохраненныеНастройкиПечатныхФорм = Неопределено Тогда
		СохраненныеНастройкиПечатныхФорм = НастройкиКомплектаПоУмолчанию;
	КонецЕсли;
	
	Если СохраненныеНастройкиПечатныхФорм = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СохраненнаяНастройка Из СохраненныеНастройкиПечатныхФорм Цикл
		НайденныеНастройки = НастройкиПечатныхФорм.НайтиСтроки(Новый Структура("ИмяМакета", СохраненнаяНастройка.ИмяМакета));
		Для Каждого НастройкаПечатнойФормы Из НайденныеНастройки Цикл
			ИндексСтроки = НастройкиПечатныхФорм.Индекс(НастройкаПечатнойФормы);
			НастройкиПечатныхФорм.Сдвинуть(ИндексСтроки, НастройкиПечатныхФорм.Количество()-1 - ИндексСтроки); // сдвиг в конец
			НастройкаПечатнойФормы.Количество = СохраненнаяНастройка.Количество;
			ЭтаФорма[НастройкаПечатнойФормы.ИмяРеквизита].КоличествоЭкземпляров = НастройкаПечатнойФормы.Количество;
			НастройкаПечатнойФормы.Печатать = НастройкаПечатнойФормы.Количество > 0;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПоместитьТабличныеДокументыВоВременноеХранилище(НастройкиСохранения)
	Перем ЗаписьZipФайла, ИмяАрхива;
	
	Результат = Новый СписокЗначений;
	
	// подготовка архива
	Если НастройкиСохранения.УпаковатьВАрхив Тогда
		ИмяАрхива = ПолучитьИмяВременногоФайла("zip");
		ЗаписьZipФайла = Новый ЗаписьZipФайла(ИмяАрхива);
	КонецЕсли;
	
	// подготовка временной папки
	ИмяВременнойПапки = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяВременнойПапки);
	ИспользованныеИменаФайлов = Новый Соответствие;
	
	ВыбранныеФорматыСохранения = НастройкиСохранения.ФорматыСохранения;
	ТаблицаФорматов = УправлениеПечатью.НастройкиФорматовСохраненияТабличногоДокумента();
	
	// сохранение печатных форм
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		
		Если Не НастройкаПечатнойФормы.Печатать Тогда
			Продолжить;
		КонецЕсли;
		
		ПечатнаяФорма = ЭтаФорма[НастройкаПечатнойФормы.ИмяРеквизита];
		
		Если ПечатнаяФорма.Вывод = ИспользованиеВывода.Запретить Тогда
			Продолжить;
		КонецЕсли;
		
		НомерПечатнойФормы = НастройкиПечатныхФорм.Индекс(НастройкаПечатнойФормы) + 1;
		Для Каждого ТипФайла Из ВыбранныеФорматыСохранения Цикл
			НастройкиФормата = ТаблицаФорматов.НайтиСтроки(Новый Структура("ТипФайлаТабличногоДокумента", ТипФайла))[0];
			
			ИмяФайла = ПолучитьИмяВременногоФайлаДляПечатнойФормы(НастройкаПечатнойФормы.Представление,НастройкиФормата.Расширение,ИспользованныеИменаФайлов);
			ПолноеИмяФайла = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки) + ИмяФайла;
			
			ПечатнаяФорма.Записать(ПолноеИмяФайла, ТипФайла);
			
			Если ТипФайла = ТипФайлаТабличногоДокумента.HTML Тогда
				ВставитьКартинкиВHTML(ПолноеИмяФайла);
			КонецЕсли;
			
			Если ЗаписьZipФайла <> Неопределено Тогда 
				ЗаписьZipФайла.Добавить(ПолноеИмяФайла);
			Иначе
				ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
				ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
				Результат.Добавить(ПутьВоВременномХранилище, ИмяФайла);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	// если архив подготовлен, записываем и помещаем его во временное хранилище
	Если ЗаписьZipФайла <> Неопределено Тогда 
		ЗаписьZipФайла.Записать();
		ФайлАрхива = Новый Файл(ИмяАрхива);
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяАрхива);
		ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
		Результат.Добавить(ПутьВоВременномХранилище, ПолучитьИмяФайлаДляАрхива());
	КонецЕсли;
	
	УдалитьФайлы(ИмяВременнойПапки);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ВставитьКартинкиВHTML(ИмяФайлаHTML)
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.Прочитать(ИмяФайлаHTML, КодировкаТекста.UTF8);
	ТекстHTML = ТекстовыйДокумент.ПолучитьТекст();
	
	ФайлHTML = Новый Файл(ИмяФайлаHTML);
	
	ИмяПапкиКартинок = ФайлHTML.ИмяБезРасширения + "_files";
	ПутьКПапкеКартинок = СтрЗаменить(ФайлHTML.ПолноеИмя, ФайлHTML.Имя, ИмяПапкиКартинок);
	
	// ожидается, что в папке будут только картинки
	ФайлыКартинок = НайтиФайлы(ПутьКПапкеКартинок, "*");
	
	Для Каждого ФайлКартинки Из ФайлыКартинок Цикл
		КартинкаТекстом = Base64Строка(Новый ДвоичныеДанные(ФайлКартинки.ПолноеИмя));
		КартинкаТекстом = "data:image/" + Сред(ФайлКартинки.Расширение,2) + ";base64," + Символы.ПС + КартинкаТекстом;
		
		ТекстHTML = СтрЗаменить(ТекстHTML, ИмяПапкиКартинок + "\" + ФайлКартинки.Имя, КартинкаТекстом);
	КонецЦикла;
		
	ТекстовыйДокумент.УстановитьТекст(ТекстHTML);
	ТекстовыйДокумент.Записать(ИмяФайлаHTML, КодировкаТекста.UTF8);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяВременногоФайлаДляПечатнойФормы(ИмяМакета, Расширение, ИспользованныеИменаФайлов)
	
	ШаблонИмениФайла = "%1%2.%3";
	
	ИмяВременногоФайла = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонИмениФайла, ИмяМакета, "", Расширение));
		
	НомерИспользования = ?(ИспользованныеИменаФайлов[ИмяВременногоФайла] <> Неопределено,
							ИспользованныеИменаФайлов[ИмяВременногоФайла] + 1,
							1);
	
	ИспользованныеИменаФайлов.Вставить(ИмяВременногоФайла, НомерИспользования);
	
	// если имя уже было ранее использовано, прибавляем счётчик в конце имени
	Если НомерИспользования > 1 Тогда
		ИмяВременногоФайла = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонИмениФайла,
				ИмяМакета,
				" (" + НомерИспользования + ")",
				Расширение));
	КонецЕсли;
	
	Возврат ИмяВременногоФайла;
	
КонецФункции

&НаСервере
Функция ПолучитьИмяФайлаДляАрхива()
	
	Результат = "";
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		
		Если Не НастройкаПечатнойФормы.Печатать Тогда
			Продолжить;
		КонецЕсли;
		
		ПечатнаяФорма = ЭтаФорма[НастройкаПечатнойФормы.ИмяРеквизита];
		
		Если ПечатнаяФорма.Вывод = ИспользованиеВывода.Запретить Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПустаяСтрока(Результат) Тогда
			Результат = НастройкаПечатнойФормы.Представление;
		Иначе
			Результат = НСтр("ru = 'Документы'");
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат + ".zip";
	
КонецФункции

&НаКлиенте
Процедура СохранитьПечатнуюФормуВФайл()
	
	ФорматыСохранения = Новый Массив;
	ФорматыСохранения.Добавить(НастройкиФорматаСохранения.ТипФайлаТабличногоДокумента);
	НастройкиСохранения = Новый Структура("ФорматыСохранения,УпаковатьВАрхив", ФорматыСохранения, Ложь);
	ФайлыВоВременномХранилище = ПоместитьТабличныеДокументыВоВременноеХранилище(НастройкиСохранения);
	
	Для Каждого ФайлДляЗаписи Из ФайлыВоВременномХранилище Цикл
		#Если ВебКлиент Тогда
		ПолучитьФайл(ФайлДляЗаписи.Значение, ФайлДляЗаписи.Представление);
		#Иначе
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(НастройкиФорматаСохранения.Расширение);
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ФайлДляЗаписи.Значение);
		ДвоичныеДанные.Записать(ИмяВременногоФайла);
		ЗапуститьПриложение(ИмяВременногоФайла);
		#КонецЕсли
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПечатныеФормыВПапку(СписокФайловВоВременномХранилище, Папка = "")
	
	#Если ВебКлиент Тогда
		Для Каждого ФайлДляЗаписи Из СписокФайловВоВременномХранилище Цикл
			ПолучитьФайл(ФайлДляЗаписи.Значение, ФайлДляЗаписи.Представление);
		КонецЦикла;
		Возврат;
	#КонецЕсли
	
	БольшеНеЗадаватьЭтотВопрос = Ложь;
	ОтветПользователя = "Отмена";
	
	Для Каждого ФайлДляЗаписи Из СписокФайловВоВременномХранилище Цикл
		ПолноеИмяФайла = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(Папка) + ФайлДляЗаписи.Представление;
		
		// проверка существования файла с таким же именем
		ПроверяемыйФайл = Новый Файл(ПолноеИмяФайла);
		Если ПроверяемыйФайл.Существует() Тогда
			СписокКнопок = Новый СписокЗначений;
			СписокКнопок.Добавить("Заменить", НСтр("ru = 'Заменить'"));
			СписокКнопок.Добавить("Пропустить", НСтр("ru = 'Пропустить'"));
			СписокКнопок.Добавить("Отмена", НСтр("ru = 'Отмена'"));
			
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Файл %1 уже существует в указанной папке. Заменить?'"),  """" + ПолноеИмяФайла + """" + Символы.ПС);
			
			Если Не БольшеНеЗадаватьЭтотВопрос Тогда
				ОтветПользователя = СтандартныеПодсистемыКлиент.ВопросПользователю(ТекстВопроса, СписокКнопок, , "Отмена",
					НСтр("ru = 'Сохранение печатной формы'"),,БольшеНеЗадаватьЭтотВопрос);
			КонецЕсли;
			
			Если ОтветПользователя = "Отмена" Тогда
				Возврат;
			ИначеЕсли ОтветПользователя = "Пропустить" Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
			
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ФайлДляЗаписи.Значение);
		ДвоичныеДанные.Записать(ПолноеИмяФайла);
	КонецЦикла;
	
	Состояние(НСтр("ru = 'Сохранение успешно завершено'"), , НСтр("ru = 'в папку:'") + " " + Папка);
	
КонецПроцедуры

&НаСервере
Процедура ПрисоединитьПечатныеФормыКОбъекту(ФайлыВоВременномХранилище, ОбъектДляПрисоединения)
	Для Каждого Файл Из ФайлыВоВременномХранилище Цикл
		СтандартныеПодсистемыПереопределяемый.ПриПрисоединенииПечатнойФормыКОбъекту(ОбъектДляПрисоединения, Файл.Представление, Файл.Значение);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ЭтоПечатьКомплекта()
	Возврат НастройкиПечатныхФорм.Количество() > 1;
КонецФункции

&НаСервере
Функция ЕстьРазрешенныйВывод()
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Если Элементы[НастройкаПечатнойФормы.ИмяРеквизита].Вывод = ИспользованиеВывода.Разрешить Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Функция ПолучателейБольшеОдного(Получатель)
	Если ТипЗнч(Получатель) = Тип("Массив") Или ТипЗнч(Получатель) = Тип("СписокЗначений") Тогда
		Возврат Получатель.Количество() > 1;
	Иначе
		Возврат ОбщегоНазначенияКлиентСервер.АдресаЭлектроннойПочтыИзСтроки(Получатель).Количество() > 1;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ЕстьДанныеДляПечати()
	Результат = Ложь;
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Результат = Результат Или НастройкаПечатнойФормы.Печатать И ЭтаФорма[НастройкаПечатнойФормы.ИмяРеквизита].ВысотаТаблицы > 0;
	КонецЦикла;
	Возврат Результат;
КонецФункции
