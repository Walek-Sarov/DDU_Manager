
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Пользователи.ЭтоПолноправныйПользователь() Тогда
		ВызватьИсключение(НСтр("ru = 'Недостаточно прав для добавления пользователей'"));
	КонецЕсли;
	
	РежимРаботы = Константы.РежимИспользованияИнформационнойБазы.Получить();
	Если РежимРаботы = Перечисления.РежимыИспользованияИнформационнойБазы.Демонстрационный Тогда
		ВызватьИсключение(НСтр("ru = 'В демонстрационном режиме не доступно добавление новых пользователей'"));
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Прокси = РаботаВМоделиСервиса.ПолучитьПроксиМенеджераСервиса();
	
	СообщениеОбОшибке = "";
	СписокПользователей = Неопределено;
	
	ТекущаяОбластьДанных = ОбщегоНазначения.ЗначениеРазделителяСеанса();
	
	Результат = Прокси.GetUserList(ТекущаяОбластьДанных, Константы.КлючОбластиДанных.Получить(), 
		СписокПользователей, СообщениеОбОшибке);
	
	Если НЕ Результат Тогда
		ШаблонСообщения = НСтр("ru = 'Ошибка при попытке получения списка пользователей сервиса:
			|%1'");
		ВызватьИсключение(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, СообщениеОбОшибке));
	КонецЕсли;
	
	ИдентификаторыПользователей = Новый Массив;
	
	Для каждого ИнформацияОПользователе Из СписокПользователей.User Цикл
		ИдентификаторыПользователей.Добавить(Новый УникальныйИдентификатор(ИнформацияОПользователе.UserID));
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пользователи.Ссылка,
	|	Пользователи.ИдентификаторПользователяСервиса КАК Идентификатор
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ИдентификаторПользователяСервиса В(&Идентификаторы)";
	Запрос.УстановитьПараметр("Идентификаторы", ИдентификаторыПользователей);
	Результат = Запрос.Выполнить();
	ИдентификаторыПользователейСДоступом = Результат.Выгрузить().ВыгрузитьКолонку("Идентификатор");
	
	Для каждого ИнформацияОПользователе Из СписокПользователей.User Цикл
		ИдентификаторПользователя = Новый УникальныйИдентификатор(ИнформацияОПользователе.UserID);
		Если ИдентификаторыПользователейСДоступом.Найти(ИдентификаторПользователя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаПользователя = ПользователиСервиса.Добавить();
		СтрокаПользователя.Имя = ИнформацияОПользователе.Name;
		СтрокаПользователя.ПолноеИмя = ИнформацияОПользователе.FullName;
		СтрокаПользователя.Комментарий = ИнформацияОПользователе.Comment;
		СтрокаПользователя.Идентификатор = ИдентификаторПользователя;
		СтрокаПользователя.ЕстьДоступ = ИнформацияОПользователе.HasAccess;
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура УстановитьВсе(Команда)
	
	Для каждого СтрокаТаблицы Из ПользователиСервиса Цикл
		СтрокаТаблицы.Добавить = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для каждого СтрокаТаблицы Из ПользователиСервиса Цикл
		СтрокаТаблицы.Добавить = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВыбранныхПользователей(Команда)
	
	ДобавитьВыбранныхПользователейНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ДобавитьВыбранныхПользователейНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Прокси = РаботаВМоделиСервиса.ПолучитьПроксиМенеджераСервиса();
	
	НаборПрав = "ПользовательОбластиДанных";
	
	Счетчик = 0;
	КоличествоСтрок = ПользователиСервиса.Количество();
	Для Счетчик = 1 По КоличествоСтрок Цикл
		СтрокаТаблицы = ПользователиСервиса[КоличествоСтрок - Счетчик];
		Если НЕ СтрокаТаблицы.Добавить Тогда
			Продолжить;
		КонецЕсли;
		
		СообщениеОбОшибке = "";
		ТекущаяОбластьДанных = ОбщегоНазначения.ЗначениеРазделителяСеанса();
		
		Результат = Прокси.GrantUserAccess(ТекущаяОбластьДанных, Константы.КлючОбластиДанных.Получить(), 
			Строка(СтрокаТаблицы.Идентификатор), "User", СообщениеОбОшибке);
		
		Если НЕ Результат Тогда
			ШаблонСообщения = НСтр("ru = 'Ошибка при предоставлении пользователя доступа в приложение %1 с сервисом:
				|%2'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СтрокаТаблицы.Имя, СообщениеОбОшибке);
			ЗаписьЖурналаРегистрации("ManageApplication", УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			ОтменитьТранзакцию();
			Продолжить;
		КонецЕсли;
		
		ПользователиСервиса.Удалить(СтрокаТаблицы);
		
	КонецЦикла;
	
КонецПроцедуры
