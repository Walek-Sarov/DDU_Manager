
///////////////////////////////////////////////////////////
//// Обработка событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Если открывается новая карточка бизнес-процесса
	Если Параметры.Свойство("Предмет") И ЗначениеЗаполнено(Параметры.Предмет) Тогда
		
		ЗаполнитьКарточкуНовогоБизнесПроцесса("DMBusinessProcessApproval", ЭтаФорма, Параметры.Предмет);

	//Если открывается карточка имеющегося бизнес-процесса 		
	ИначеЕсли ЗначениеЗаполнено(Параметры.ID) И ЗначениеЗаполнено(Параметры.Type) Тогда
		ОбъектID = Параметры.ID;
		ДанныеБП = РаботаС1СДокументооборот.ПолучитьОбъект(Параметры.Type, Параметры.ID);
		Объект = ДанныеБП.objects[0];
		
		ЗаполнитьФормуИзОбъектаXDTO(Объект);
	КонецЕсли;	
	
	ЭтаФорма.Заголовок = Наименование;
	Если НЕ ЗначениеЗаполнено(ОбъектID) Тогда
		ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + НСтр("ru = ' (Создание)'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаНачала) Тогда
		Элементы.ИсполнителиШаг.Видимость = Ложь;
		Элементы.ИсполнителиПорядокСогласованияПредставление.Видимость = Ложь;
		Элементы.ВариантСогласованияПредставление.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВажностьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаС1СДокументооборотКлиент.ВыбратьЗначениеИзСписка("DMBusinessProcessImportance", "Важность", ЭтаФорма); 
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.ДокументооборотВыборИсполнителяБизнесПроцесса",, ЭтаФорма);
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Результат.Свойство("Исполнитель", Элемент.Родитель.Родитель.ТекущиеДанные.Исполнитель);
	Результат.Свойство("ИсполнительID", Элемент.Родитель.Родитель.ТекущиеДанные.ИсполнительID);
	Результат.Свойство("ИсполнительТип", Элемент.Родитель.Родитель.ТекущиеДанные.ИсполнительТип);
	
	Результат.Свойство("ОсновнойОбъектАдресации", Элемент.Родитель.Родитель.ТекущиеДанные.ОсновнойОбъектАдресации);
	Результат.Свойство("ОсновнойОбъектАдресацииID", Элемент.Родитель.Родитель.ТекущиеДанные.ОсновнойОбъектАдресацииID);
	Результат.Свойство("ОсновнойОбъектАдресацииТип", Элемент.Родитель.Родитель.ТекущиеДанные.ОсновнойОбъектАдресацииТип);
	
	Результат.Свойство("ДополнительныйОбъектАдресации", Элемент.Родитель.Родитель.ТекущиеДанные.ДополнительныйОбъектАдресации);
	Результат.Свойство("ДополнительныйОбъектАдресацииID", Элемент.Родитель.Родитель.ТекущиеДанные.ДополнительныйОбъектАдресацииID);
	Результат.Свойство("ДополнительныйОбъектАдресацииТип", Элемент.Родитель.Родитель.ТекущиеДанные.ДополнительныйОбъектАдресацииТип);
	
КонецПроцедуры

&НаКлиенте
Процедура АвторНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаС1СДокументооборотКлиент.ВыбратьПользователяИзДереваПодразделений("Автор", ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПорядокСогласованияПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипОбъектаВыбора", "DMApprovalOrder");
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.ДокументооборотВыборИзСписка", ПараметрыФормы, ЭтаФорма);
	Если ТипЗнч(Результат) = Тип("Структура") Тогда 
		Элемент.Родитель.ТекущиеДанные.ПорядокСогласованияID = Результат.РеквизитID;
		Элемент.Родитель.ТекущиеДанные.ПорядокСогласованияТип = Результат.РеквизитТип;
		Элемент.Родитель.ТекущиеДанные.ПорядокСогласования = Результат.РеквизитПредставление;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОбъектID) Тогда
		ЗаполнитьШаг(Исполнители);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантСогласованияПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаС1СДокументооборотКлиент.ВыбратьЗначениеИзСписка("DMApprovalType", "ВариантСогласования", ЭтаФорма);
	
	Если ВариантСогласованияID <> "Смешанно" Тогда
		Элементы.ИсполнителиШаг.Видимость = Ложь;
		Элементы.ИсполнителиПорядокСогласованияПредставление.Видимость = Ложь;
	Иначе
		Элементы.ИсполнителиШаг.Видимость = Истина;
		Элементы.ИсполнителиПорядокСогласованияПредставление.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	#Если Не ВебКлиент Тогда
	Если Модифицированность Тогда
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Режим = РежимДиалогаВопрос.ДаНетОтмена;
		Ответ = Вопрос(ТекстВопроса, Режим);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Отказ = НЕ ЗаписатьОбъектВыполнить();
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	#Если ВебКлиент Тогда
	Если Модифицированность Тогда
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос(ТекстВопроса, Режим);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьОбъектВыполнить();
		КонецЕсли;
	КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ГлавнаяЗадачаПредставлениеОткрытие(Элемент, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ГлавнаяЗадача) Тогда
		ПараметрыФормы = Новый Структура("ID, Type", ГлавнаяЗадачаID, ГлавнаяЗадачаТип);
		ОткрытьФормуМодально("ОбщаяФорма.ДокументооборотКарточкаЗадачи", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Предмет) Тогда
		РаботаС1СДокументооборотКлиент.ОткрытьКарточкуПредметаБизнесПроцесса(ПредметТип, ПредметID, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникБизнесПроцессаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		РаботаС1СДокументооборотВызовСервера.ПолучитьДанныеДляАвтоПодбора("DMUser;DMBusinessProcessExecutorRole", ДанныеВыбора, Текст, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникБизнесПроцессаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
		
	Если ЗначениеЗаполнено(Текст) Тогда
		
		РаботаС1СДокументооборотВызовСервера.ПолучитьДанныеДляАвтоПодбора("DMUser;DMBusinessProcessExecutorRole", ДанныеВыбора, Текст, СтандартнаяОбработка);
		Если ДанныеВыбора.Количество() = 1 Тогда
			РаботаС1СДокументооборотКлиент.ПрименитьВыборУчастникаБизнесПроцессаВСписке(Элемент.Родитель.Родитель, ДанныеВыбора[0].Значение, СтандартнаяОбработка, ЭтаФорма);
			СтандартнаяОбработка = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникБизнесПроцессаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РаботаС1СДокументооборотКлиент.ПрименитьВыборУчастникаБизнесПроцессаВСписке(Элемент.Родитель.Родитель, ВыбранноеЗначение, СтандартнаяОбработка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Изменен" И Параметр = Элементы.ПредметПредставление Тогда 
		Предмет = Источник.Представление;
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ВажностьАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		РаботаС1СДокументооборотВызовСервера.ПолучитьДанныеДляАвтоПодбора("DMBusinessProcessImportance", Данныевыбора, Текст, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВажностьОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		РаботаС1СДокументооборотВызовСервера.ПолучитьДанныеДляАвтоПодбора("DMBusinessProcessImportance", ДанныеВыбора, Текст, СтандартнаяОбработка);
		
		Если ДанныеВыбора.Количество() = 1 Тогда 
			РаботаС1СДокументооборотКлиент.ОбработкаВыбораДанныхДляАвтоПодбора("Важность", ДанныеВыбора[0].Значение, СтандартнаяОбработка, ЭтаФорма);
			СтандартнаяОбработка = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВажностьОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РаботаС1СДокументооборотКлиент.ОбработкаВыбораДанныхДляАвтоПодбора("Важность", ВыбранноеЗначение, СтандартнаяОбработка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура АвторАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		РаботаС1СДокументооборотВызовСервера.ПолучитьДанныеДляАвтоПодбора("DMUser", Данныевыбора, Текст, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвторОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		РаботаС1СДокументооборотВызовСервера.ПолучитьДанныеДляАвтоПодбора("DMUser", ДанныеВыбора, Текст, СтандартнаяОбработка);
		
		Если ДанныеВыбора.Количество() = 1 Тогда 
			РаботаС1СДокументооборотКлиент.ОбработкаВыбораДанныхДляАвтоПодбора("Автор", ДанныеВыбора[0].Значение, СтандартнаяОбработка, ЭтаФорма);
			СтандартнаяОбработка = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвторОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РаботаС1СДокументооборотКлиент.ОбработкаВыбораДанныхДляАвтоПодбора("Автор", ВыбранноеЗначение, СтандартнаяОбработка, ЭтаФорма);
	
КонецПроцедуры

///////////////////////////////////////////////////////////
//// Обработка команд формы

&НаКлиенте
Процедура Записать(Команда)
	
	РезультатЗаписи = ЗаписатьОбъектВыполнить();
	
	Если РезультатЗаписи Тогда
		ПараметрыОповещения = Новый Структура("ID", ОбъектID);
		Оповестить("БизнесПроцессИзменен", ПараметрыОповещения);
		ЭтаФорма.Заголовок = Наименование;
		Состояние(НСтр("ru = 'Бизнес-процесс """ + Наименование + """ сохранен.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтартоватьИЗакрыть(Команда)
	
	РезультатЗапуска = ПодготовитьКПередачеИСтартоватьБизнесПроцесс();
	Если РезультатЗапуска Тогда 
		ПараметрыОповещения = Новый Структура("ID", ОбъектID);
		Оповестить("БизнесПроцессИзменен", ПараметрыОповещения);
		
		ТекстСостояния = НСтр("ru = 'Бизнес-процесс """ + Наименование + """ успешно запущен.'");
		Состояние(ТекстСостояния);
		
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоШаблону(Команда)
	
	РезультатВыбораШаблона = РаботаС1СДокументооборотКлиент.ВыбратьШаблонБизнесПроцесса(ЭтаФорма);
	Если ТипЗнч(РезультатВыбораШаблона) = Тип("Структура") Тогда
		ЗаполнитьКарточкуПоШаблону(РезультатВыбораШаблона);	
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////
//// Служебные процедуры и функции

&НаСервере
Процедура ЗаполнитьКарточкуПоШаблону(ДанныеШаблона)
	
	РезультатЗаполнения = РаботаС1СДокументооборотВызовСервера.ЗаполнитьБизнесПроцессПоШаблону(ЭтаФорма, ДанныеШаблона);
	ЗаполнитьФормуИзОбъектаXDTO(РезультатЗаполнения.object);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКарточкуНовогоБизнесПроцесса(ТипБизнесПроцесса, Форма, Предмет)	
	
	НовыйОбъект = РаботаС1СДокументооборот.ПолучитьНовыйОбъект(ТипБизнесПроцесса, Предмет);
	ЗаполнитьФормуИзОбъектаXDTO(НовыйОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормуИзОбъектаXDTO(Объект)
	
	РаботаС1СДокументооборот.УстановитьСтандартнуюШапкуБизнесПроцесса(Объект, Этаформа);
	
	ЗаполнитьРеквизитФормыИзПакета("ВариантСогласования", Объект, "approvalType");
	Исполнители.Очистить();
	Для Каждого Исполнитель Из Объект.Performers Цикл
		НоваяСтрока = Исполнители.Добавить();
		РаботаС1СДокументооборот.УстановитьИсполнителяВСпискеИсполнителейНаКарточке(Исполнитель, НоваяСтрока);
		НоваяСтрока.ПорядокСогласования = Исполнитель.approvalOrder.name;
		НоваяСтрока.ПорядокСогласованияID = Исполнитель.approvalOrder.objectId.id;
		НоваяСтрока.ПорядокСогласованияТип = Исполнитель.approvalOrder.objectId.type;
	КонецЦикла;
	
	Если ВариантСогласованияID <> "Смешанно" Тогда
		Элементы.ИсполнителиШаг.Видимость = Ложь;
		Элементы.ИсполнителиПорядокСогласованияПредставление.Видимость = Ложь;
	Иначе
		Элементы.ИсполнителиШаг.Видимость = Истина;
		Элементы.ИсполнителиПорядокСогласованияПредставление.Видимость = Истина;
	КонецЕсли;
	
	СрокИсполненияДней = Объект.durationDays;
	СрокИсполненияЧасов = Объект.durationHours;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитФормыИзПакета(ИмяРеквизита, Объект, ИмяСвойстваОбъекта)
	
	Если Объект.Установлено(ИмяСвойстваОбъекта) Тогда
		ЭтаФорма[ИмяРеквизита + "ID"] = Объект[ИмяСвойстваОбъекта].objectId.id;
		ЭтаФорма[ИмяРеквизита] = Объект[ИмяСвойстваОбъекта].name;
		ЭтаФорма[ИмяРеквизита + "Тип"] = Объект[ИмяСвойстваОбъекта].objectId.type;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьОбъект(Прокси, Тип)
	
	Возврат РаботаС1СДокументооборотВызовСервера.СоздатьОбъектDM(Прокси, Тип);
	
КонецФункции

&НаСервере
Функция ПодготовитьКПередачеИЗаписатьБизнесПроцесс()
	
	Прокси = РаботаС1СДокументооборотВызовСервера.ПолучитьПрокси();
	Объект = ПодготовитьБизнесПроцесс(Прокси);
	Если ЗначениеЗаполнено(ОбъектID) Тогда
		РезультатЗаписи = РаботаС1СДокументооборот.ЗаписатьОбъект(Прокси, Объект);
	Иначе
		РезультатСоздания = РаботаС1СДокументооборот.СоздатьНовыйОбъект(Прокси, Объект);
	КонецЕсли;
	
	Результат = ?(РезультатСоздания = Неопределено, РезультатЗаписи, РезультатСоздания);
	Если РаботаС1СДокументооборот.ПроверитьТип(Прокси, Результат , "DMError") Тогда
		ВызватьИсключение(РезультатСоздания.Description);
	Иначе
		Если РезультатЗаписи <> Неопределено Тогда
			ОбъектID = Результат.objects[0].objectId.id;
		Иначе
			ОбъектID = Результат.object.objectId.id;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПодготовитьКПередачеИСтартоватьБизнесПроцесс()
	
	Прокси = РаботаС1СДокументооборотВызовСервера.ПолучитьПрокси();
	Объект = ПодготовитьБизнесПроцесс(Прокси);
	РезультатЗапуска = РаботаС1СДокументооборот.ЗапуститьБизнесПроцесс(Прокси, Объект); 	
	
	Если РаботаС1СДокументооборот.ПроверитьТип(Прокси, РезультатЗапуска, "DMError") Тогда
		ВызватьИсключение(РезультатЗапуска.Description); 
	Иначе
		ОбъектID = РезультатЗапуска.BusinessProcess.objectId.id;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПодготовитьБизнесПроцесс(Прокси)
		
	Объект = СоздатьОбъект(Прокси, "DMBusinessProcessApproval");
	
	Объект.name = Наименование;
	Объект.objectId = СоздатьОбъект(Прокси, "DMObjectID"); 
	Объект.objectId.id = ОбъектID;
	Объект.objectId.type = "DMBusinessProcessApproval";
	
	//Общая шапка бизнес-процессов
	Объект.author = СоздатьОбъект(Прокси, "DMUser");
	Объект.author.name = Автор;
	Объект.author.objectId = СоздатьОбъект(Прокси, "DMObjectID");
	Объект.author.objectId.id = АвторID;
	Объект.author.objectId.type = АвторТип;
	
	Объект.importance = СоздатьОбъект(Прокси, "DMBusinessProcessImportance");
	Объект.importance.name = Важность;
	Объект.importance.objectId = СоздатьОбъект(Прокси, "DMObjectID");
	Объект.importance.objectId.id = ВажностьID;
	Объект.importance.objectId.type = ВажностьТип;
	
	Объект.beginDate = ДатаНачала;
	
	Объект.target = СоздатьОбъект(Прокси, "DMObject");
	Объект.target.name = Предмет;
	Объект.target.objectId = СоздатьОбъект(Прокси, "DMObjectID");
	Объект.target.objectId.id = ПредметID;
	Объект.target.objectId.type = ПредметТип;
	
	Объект.started = Стартован;
	Объект.completed = Завершен;
	Объект.description = Описание;
	
	//специфика Исполнения
	Объект.durationDays = СрокИсполненияДней;
	Объект.durationHours = СрокИсполненияЧасов;
	Объект.approvalType = РаботаС1СДокументооборотВызовСервера.СоздатьОбъектDM(Прокси, "DMApprovalType");
	Объект.approvalType.name = ВариантСогласования;
	Объект.approvalType.objectId = РаботаС1СДокументооборотВызовСервера.СоздатьОбъектDM(Прокси, "DMObjectID");
	Объект.approvalType.objectId.id =  ВариантСогласованияID;
	Объект.approvalType.objectId.type =  ВариантСогласованияТип;
	
	//исполнители
	Для Каждого Строка Из Исполнители Цикл 
		
		Исполнитель = СоздатьОбъект(Прокси, "DMBusinessProcessApprovalParticipant");
				
		Если Строка.ИсполнительТип = "DMUser" Тогда
			Исполнитель.user = СоздатьОбъект(Прокси, "DMUser");
			Исполнитель.user.name = Строка.Исполнитель;
			Исполнитель.user.objectId = СоздатьОбъект(Прокси, "DMObjectID");
			Исполнитель.user.objectId.id = Строка.ИсполнительID;
			Исполнитель.user.objectId.type = Строка.ИсполнительТип;
		Иначе
			Исполнитель.role = СоздатьОбъект(Прокси, "DMBusinessProcessExecutorRole");
			Исполнитель.role.name = Строка.Исполнитель;
			Исполнитель.role.objectId = СоздатьОбъект(Прокси, "DMObjectID");
			Исполнитель.role.objectId.id = Строка.ИсполнительID;
			Исполнитель.role.objectId.type = Строка.ИсполнительТип;
			
			Если ЗначениеЗаполнено(Строка.ОсновнойОбъектАдресации) Тогда
				Исполнитель.mainAddressingObject = СоздатьОбъект(Прокси, "DMMainAddressingObject");
				Исполнитель.mainAddressingObject.name = Строка.ОсновнойОбъектАдресации;
				Исполнитель.mainAddressingObject.objectId = СоздатьОбъект(Прокси, "DMObjectID");
				Исполнитель.mainAddressingObject.objectId.id = Строка.ОсновнойОбъектАдресацииID;
				Исполнитель.mainAddressingObject.objectId.type = Строка.ОсновнойОбъектАдресацииТип;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.ДополнительныйОбъектАдресации) Тогда
				Исполнитель.secondaryAddressingObject = СоздатьОбъект(Прокси, "DMSecondaryAddressingObject");
				Исполнитель.secondaryAddressingObject.name = Строка.ДополнительныйОбъектАдресации;
				Исполнитель.secondaryAddressingObject.objectId = СоздатьОбъект(Прокси, "DMObjectID");
				Исполнитель.secondaryAddressingObject.objectId.id = Строка.ДополнительныйОбъектАдресацииID;
				Исполнитель.secondaryAddressingObject.objectId.type = Строка.ДополнительныйОбъектАдресацииТип;
			КонецЕсли;
		КонецЕсли;
		
		Исполнитель.ApprovalOrder = РаботаС1СДокументооборотВызовСервера.СоздатьОбъектDM(Прокси, "DMApprovalOrder");
		Исполнитель.ApprovalOrder.name = Строка.ПорядокСогласования;
		Исполнитель.ApprovalOrder.objectId = РаботаС1СДокументооборотВызовСервера.СоздатьОбъектDM(Прокси, "DMObjectID");
		Исполнитель.ApprovalOrder.objectId.id =  Строка.ПорядокСогласованияID;
		Исполнитель.ApprovalOrder.objectId.type =  Строка.ПорядокСогласованияТип;
		
		Объект.performers.Добавить(Исполнитель);
		
	КонецЦикла;
	
	Возврат Объект;
	
КонецФункции

&НаКлиенте
Функция ЗаписатьОбъектВыполнить()
	
	ПодготовитьКПередачеИЗаписатьБизнесПроцесс();
	Модифицированность = Ложь;
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьШаг(Таблица)
	
	Для Каждого Строка Из Таблица Цикл
		Строка.Шаг = 0;
	КонецЦикла;	
	
	КоличествоСтрок = Таблица.Количество();
	Для Инд = 0 По КоличествоСтрок - 1 Цикл
		
		Строка = Таблица[Инд];
		Если Не ЗначениеЗаполнено(Строка.ПорядокСогласованияID) Тогда 
			Прервать;
		КонецЕсли;	
		
		Если Инд = 0 Тогда 
			Строка.Шаг = 1;
			Продолжить;
		КонецЕсли;	
		
		ПредыдущаяСтрока = Таблица[Инд-1];
		Если Строка.ПорядокСогласованияID = "ВместеСПредыдущим" Тогда 
			Строка.Шаг = ПредыдущаяСтрока.Шаг;
		ИначеЕсли Строка.ПорядокСогласованияID = "ПослеПредыдущего" Тогда 
			Строка.Шаг = ПредыдущаяСтрока.Шаг + 1;
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры






