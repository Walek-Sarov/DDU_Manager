
&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	МассивСтруктур = Новый Массив;
	
	// работа с файлами
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиОткрытияФайлов");
	Элемент.Вставить("Настройка", "ДействиеПоДвойномуЩелчкуМыши");
	Элемент.Вставить("Значение", ДействиеПоДвойномуЩелчкуМыши);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиОткрытияФайлов");
	Элемент.Вставить("Настройка", "СпрашиватьРежимРедактированияПриОткрытииФайла");
	Элемент.Вставить("Значение", СпрашиватьРежимРедактированияПриОткрытииФайла);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиПрограммы");
	Элемент.Вставить("Настройка", "ПоказыватьПодсказкиПриРедактированииФайлов");
	Элемент.Вставить("Значение", ПоказыватьПодсказкиПриРедактированииФайлов);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиПрограммы");
	Элемент.Вставить("Настройка", "ПоказыватьЗанятыеФайлыПриЗавершенииРаботы");
	Элемент.Вставить("Значение", ПоказыватьЗанятыеФайлыПриЗавершенииРаботы);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиСравненияФайлов");
	Элемент.Вставить("Настройка", "СпособСравненияВерсийФайлов");
	Элемент.Вставить("Значение", СпособСравненияВерсийФайлов);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиПрограммы");
	Элемент.Вставить("Настройка", "ПоказыватьКолонкуРазмер");
	Элемент.Вставить("Значение", ПоказыватьКолонкуРазмер);
	МассивСтруктур.Добавить(Элемент);
	
	// работа с документами
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", 		"НастройкиРаботыСДокументами");
	Элемент.Вставить("Настройка", 	"ВидВнутреннегоДокумента");
	Элемент.Вставить("Значение", 	ВидВнутреннегоДокумента);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", 		"НастройкиРаботыСДокументами");
	Элемент.Вставить("Настройка", 	"ВидВходящегоДокумента");
	Элемент.Вставить("Значение", 	ВидВходящегоДокумента);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", 		"НастройкиРаботыСДокументами");
	Элемент.Вставить("Настройка", 	"ВидИсходящегоДокумента");
	Элемент.Вставить("Значение", 	ВидИсходящегоДокумента);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", 		"НастройкиРаботыСДокументами");
	Элемент.Вставить("Настройка", 	"СпособОтправки");
	Элемент.Вставить("Значение", 	СпособОтправки);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", 		"НастройкиРаботыСДокументами");
	Элемент.Вставить("Настройка", 	"СпособПолучения");
	Элемент.Вставить("Значение", 	СпособПолучения);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", 		"НастройкиРаботыСДокументами");
	Элемент.Вставить("Настройка", 	"ПоказыватьПредупреждениеПриРегистрации");
	Элемент.Вставить("Значение", 	ПоказыватьПредупреждениеПриРегистрации);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", 		"НастройкиРаботыСДокументами");
	Элемент.Вставить("Настройка", 	"Организация");
	Элемент.Вставить("Значение", 	Организация);
	МассивСтруктур.Добавить(Элемент);
	
	// настройки учета времени
	Элемент = Новый Структура;
	Элемент.Вставить("Объект",    "НастройкиУчетаВремени");
	Элемент.Вставить("Настройка", "ВидРабот");
	Элемент.Вставить("Значение",  ВидРабот);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", 	  "НастройкиУчетаВремени");
	Элемент.Вставить("Настройка", "СпособУказанияВремени");
	Элемент.Вставить("Значение",  СпособУказанияВремени);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", 	  "НастройкиУчетаВремени");
	Элемент.Вставить("Настройка", "ДобавлятьРаботуВЕжедневныйОтчетПриВыполненииЗадачи");
	Элемент.Вставить("Значение",  ДобавлятьРаботуВЕжедневныйОтчетПриВыполненииЗадачи);
	МассивСтруктур.Добавить(Элемент);
	
	РаботаСФайлами.ХранилищеОбщихНастроекСохранитьМассив(МассивСтруктур);
	Закрыть();
	
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаРабочегоКаталога(Команда)
	ОткрытьФормуМодально("ОбщаяФорма.НастройкаЛокальногоКэшаФайлов");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРасширениеРаботыСФайламиНаКлиенте(Команда)
	УстановитьРасширениеРаботыСФайлами();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// работа с файлами
	СпрашиватьРежимРедактированияПриОткрытииФайла = 
		ХранилищеОбщихНастроек.Загрузить("НастройкиОткрытияФайлов", "СпрашиватьРежимРедактированияПриОткрытииФайла");
	Если СпрашиватьРежимРедактированияПриОткрытииФайла = Неопределено Тогда
		СпрашиватьРежимРедактированияПриОткрытииФайла = Истина;
		ХранилищеОбщихНастроек.Сохранить("НастройкиОткрытияФайлов", "СпрашиватьРежимРедактированияПриОткрытииФайла", СпрашиватьРежимРедактированияПриОткрытииФайла);
	КонецЕсли;
	
	ДействиеПоДвойномуЩелчкуМыши = ХранилищеОбщихНастроек.Загрузить("НастройкиОткрытияФайлов", "ДействиеПоДвойномуЩелчкуМыши");
	Если ДействиеПоДвойномуЩелчкуМыши = Неопределено Тогда
		ДействиеПоДвойномуЩелчкуМыши = Перечисления.ДействияСФайламиПоДвойномуЩелчку.ОткрыватьФайл;
		ХранилищеОбщихНастроек.Сохранить("НастройкиОткрытияФайлов", "ДействиеПоДвойномуЩелчкуМыши", ДействиеПоДвойномуЩелчкуМыши);
	КонецЕсли;
	
	СпособСравненияВерсийФайлов = ХранилищеОбщихНастроек.Загрузить("НастройкиСравненияФайлов", "СпособСравненияВерсийФайлов");
	ПоказыватьПодсказкиПриРедактированииФайлов = РаботаСФайлами.ХранилищеОбщихНастроекЗагрузить("НастройкиПрограммы", "ПоказыватьПодсказкиПриРедактированииФайлов");
	
	ПоказыватьЗанятыеФайлыПриЗавершенииРаботы = РаботаСФайлами.ХранилищеОбщихНастроекЗагрузить("НастройкиПрограммы", "ПоказыватьЗанятыеФайлыПриЗавершенииРаботы");
	Если ПоказыватьЗанятыеФайлыПриЗавершенииРаботы = Неопределено Тогда 
		ПоказыватьЗанятыеФайлыПриЗавершенииРаботы = Истина;
		ХранилищеОбщихНастроек.Сохранить("НастройкиПрограммы", "ПоказыватьЗанятыеФайлыПриЗавершенииРаботы", ПоказыватьЗанятыеФайлыПриЗавершенииРаботы);
	КонецЕсли;	
	
	ПоказыватьКолонкуРазмер = ХранилищеОбщихНастроек.Загрузить("НастройкиПрограммы", "ПоказыватьКолонкуРазмер");
	Если ПоказыватьКолонкуРазмер = Неопределено Тогда
		ПоказыватьКолонкуРазмер = Ложь;
		ХранилищеОбщихНастроек.Сохранить("НастройкиПрограммы", "ПоказыватьКолонкуРазмер", ПоказыватьКолонкуРазмер);
	КонецЕсли;
	
	// работа с документами
	ВидВнутреннегоДокумента = ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыСДокументами", "ВидВнутреннегоДокумента");
	ВидВходящегоДокумента	= ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыСДокументами", "ВидВходящегоДокумента");
	ВидИсходящегоДокумента 	= ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыСДокументами", "ВидИсходящегоДокумента");
	
	СпособОтправки  = ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыСДокументами", "СпособОтправки");
	СпособПолучения = ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыСДокументами", "СпособПолучения");
	
	ПоказыватьПредупреждениеПриРегистрации = ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыСДокументами", "ПоказыватьПредупреждениеПриРегистрации");
	Если ПоказыватьПредупреждениеПриРегистрации = Неопределено Тогда 
		ПоказыватьПредупреждениеПриРегистрации = Истина;
		ХранилищеОбщихНастроек.Сохранить("НастройкиРаботыСДокументами", "ПоказыватьПредупреждениеПриРегистрации", ПоказыватьПредупреждениеПриРегистрации);
	КонецЕсли;	
	
	Организация = ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыСДокументами", "Организация");
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСканирования(Команда)
	КомпонентаУстановлена = РаботаСоСканеромКлиент.ПроинициализироватьКомпоненту();
	ПараметрыФормы = Новый Структура("КомпонентаУстановлена", КомпонентаУстановлена);
	ОткрытьФормуМодально("Справочник.Файлы.Форма.НастройкаСканирования", ПараметрыФормы);
КонецПроцедуры
