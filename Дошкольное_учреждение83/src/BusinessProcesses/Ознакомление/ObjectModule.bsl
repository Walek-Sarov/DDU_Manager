
////////////////////////////////////////////////////////////////////////////////
// Обработчики событий бизнес-процесса

// Процедура ЗаполнитьНаборыЗначенийДоступа заполняет таблицу
// НаборыЗначений(НомерНабора, ВидДоступа, ЗначениеДоступа, Чтение, Добавление, Изменение, Удаление)
// по проверяемому объекту.
//
//  Вызывается из процедуры УправлениеДоступом.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	// Логика ограничения:
	// Чтения:                Автор ИЛИ Исполнитель ИЛИ <исполнитель по адресации>
	// Добавления, Изменения: Автор
	
	// Реквизит ГруппаДоступаИсполнителей содержит либо "Исполнителя" либо 
	// "СправочникСсылка.ГруппыДоступаИсполнителей"
	
	// Чтение, Добавление, Изменение: набор №1.
	Строка = Таблица.Добавить();
	Строка.НомерНабора     = 1;
	Строка.Чтение          = Истина;
	Строка.Добавление      = Истина;
	Строка.Изменение       = Истина;
	Строка.ВидДоступа      = ПланыВидовХарактеристик.ВидыДоступа.Пользователи;
	Строка.ЗначениеДоступа = Автор;
	
	// Чтение: набор №2.
	ТекущийНомерНабора = 2;
	Для каждого Элемент Из Исполнители Цикл
		Строка = Таблица.Добавить();
		Строка.НомерНабора     = ТекущийНомерНабора;
		Строка.Чтение          = Истина;
		Строка.ВидДоступа      = ПланыВидовХарактеристик.ВидыДоступа.Пользователи;
		Строка.ЗначениеДоступа = Элемент.ГруппаДоступаИсполнителей;
		
		ТекущийНомерНабора = ТекущийНомерНабора + 1;
	КонецЦикла;
	
	// Чтение:
	Для каждого Элемент Из ДополнительныеИсполнители Цикл
		Строка = Таблица.Добавить();
		Строка.НомерНабора     = ТекущийНомерНабора;
		Строка.Чтение          = Истина;
		Строка.ВидДоступа      = ПланыВидовХарактеристик.ВидыДоступа.Пользователи;
		Строка.ЗначениеДоступа = Элемент.ГруппаДоступаИсполнителей;
		
		ТекущийНомерНабора = ТекущийНомерНабора + 1;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = ТекущаяДата();
	Автор = ОбщегоНазначения.ТекущийПользователь();
	ДатаНачала = '00010101';
	ДатаЗавершения = '00010101';
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда 
		Дата = ТекущаяДата();
		Автор = ОбщегоНазначения.ТекущийПользователь();
		Важность = Перечисления.ВариантыВажностиЗадачи.Обычная;
	КонецЕсли;	
	
	Если ДанныеЗаполнения <> Неопределено И ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Тогда
		Предмет = ДанныеЗаполнения;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Предмет) Тогда 
		Наименование = "Ознакомиться """ + Строка(Предмет) + """";
	Иначе
		Наименование = "Ознакомиться ";
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Для Каждого Строка Из Исполнители Цикл
		Если Не БизнесПроцессыИЗадачиПереопределяемый.ЕстьПравоДоступаУчастникаБизнесПроцесса(ЭтотОбъект, Предмет, "ЧтениеПапокИФайлов",  Строка.Исполнитель, Строка.ОсновнойОбъектАдресации, Строка.ДополнительныйОбъектАдресации, "Исполнители", "Исполнитель", Строка.НомерСтроки - 1) Тогда
			Отказ = Истина;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления <> Ссылка.ПометкаУдаления Тогда
		Если ПометкаУдаления Тогда 
			РаботаСБизнесПроцессами.УдалитьСостоянияБизнесПроцесса(Ссылка);
		Иначе
			ВосстановитьСостоянияБизнесПроцесса();
		КонецЕсли;	
	КонецЕсли;
	
	// Исполнители (табличная часть)
	Для каждого Элемент Из Исполнители Цикл
		Если ТипЗнч(Элемент.Исполнитель) = Тип("СправочникСсылка.РолиИсполнителей") Тогда
			Элемент.ГруппаДоступаИсполнителей = РегистрыСведений.ИсполнителиЗадач.ГруппаДоступаИсполнителей(
				Элемент.Исполнитель, Элемент.ОсновнойОбъектАдресации, Элемент.ДополнительныйОбъектАдресации);
		Иначе		
			Элемент.ГруппаДоступаИсполнителей = Элемент.Исполнитель;
		КонецЕсли;		
	КонецЦикла;	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Обработчики событий элементов карты маршрута

Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	ДатаНачала = ТекущаяДата();
	Записать();
	
	Если ЗначениеЗаполнено(Предмет) Тогда
		Если ТипЗнч(Предмет) = Тип("СправочникСсылка.ВходящиеДокументы") 
		 Или ТипЗнч(Предмет) = Тип("СправочникСсылка.ВнутренниеДокументы") Тогда	
			Делопроизводство.ЗаписатьСостояниеДокумента(
				Предмет, 
				ДатаНачала, 
				Перечисления.СостоянияДокументов.НаИсполнении, 
				Ссылка);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОзнакомитьсяПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Для Каждого Строка Из Исполнители Цикл
		
		Задача = Задачи.ЗадачаИсполнителя.СоздатьЗадачу();
		Задача.Дата  	= ТекущаяДата();
		Задача.Автор 	= Автор;
		Задача.Описание = Описание;
		Задача.Предмет	= Предмет;
		Задача.Важность	= Важность;
		
		Задача.Наименование   = Наименование;
		Задача.СрокИсполнения = СрокИсполнения;
		Задача.БизнесПроцесс  = ЭтотОбъект.Ссылка;
		Задача.ТочкаМаршрута  = ТочкаМаршрутаБизнесПроцесса;
		
		Если ТипЗнч(Строка.Исполнитель) = Тип("СправочникСсылка.Пользователи") Тогда
			Задача.Исполнитель = Строка.Исполнитель;
		Иначе	
			Задача.РольИсполнителя = Строка.Исполнитель;
			Задача.ОсновнойОбъектАдресации = Строка.ОсновнойОбъектАдресации;
			Задача.ДополнительныйОбъектАдресации = Строка.ДополнительныйОбъектАдресации;
		КонецЕсли;	
		
		ФормируемыеЗадачи.Добавить(Задача);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОзнакомитьсяОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	
	Результат = Истина;
	
КонецПроцедуры

Процедура ЗавершениеПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	ДатаЗавершения = ТекущаяДата();
	Записать();
	
	Если ЗначениеЗаполнено(Предмет) Тогда 
		Если ТипЗнч(Предмет) = Тип("СправочникСсылка.ВходящиеДокументы") 
		 Или ТипЗнч(Предмет) = Тип("СправочникСсылка.ВнутренниеДокументы") Тогда	
			Делопроизводство.ЗаписатьСостояниеДокумента(
				Предмет, 
				ДатаЗавершения, 
				Перечисления.СостоянияДокументов.Исполнен, 
				Ссылка);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры

Процедура ИзменитьРеквизитыНевыполненныхЗадач() Экспорт 

	НачатьТранзакцию();
	Попытка
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Задачи.Ссылка
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК Задачи
		|ГДЕ
		|	Задачи.БизнесПроцесс = &БизнесПроцесс
		|	И Задачи.ПометкаУдаления = ЛОЖЬ
		|	И Задачи.Выполнена = ЛОЖЬ";
		Запрос.УстановитьПараметр("БизнесПроцесс", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗадачаОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ЗаблокироватьДанныеДляРедактирования(ЗадачаОбъект.Ссылка);
			ЗадачаОбъект.Важность = Важность;
			ЗадачаОбъект.Описание = Описание;
			ЗадачаОбъект.Автор 	  = Автор;
			ЗадачаОбъект.СрокИсполнения = СрокИсполнения;
			ЗадачаОбъект.Наименование 	= Наименование;
			ЗадачаОбъект.Записать();
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры 

Процедура ВосстановитьСостоянияБизнесПроцесса()
	
	Если ЗначениеЗаполнено(ДатаНачала) Тогда 
		Если ЗначениеЗаполнено(Предмет) И ДелопроизводствоКлиентСервер.ЭтоСсылкаНаДокумент(Предмет) Тогда 
			Делопроизводство.ЗаписатьСостояниеДокумента(
				Предмет, 
				ДатаНачала, 
				Перечисления.СостоянияДокументов.НаИсполнении, 
				Ссылка);
		КонецЕсли;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ДатаЗавершения) Тогда 
		Если ЗначениеЗаполнено(Предмет) И ДелопроизводствоКлиентСервер.ЭтоСсылкаНаДокумент(Предмет) Тогда 
			Делопроизводство.ЗаписатьСостояниеДокумента(
				Предмет, 
				ДатаЗавершения, 
				Перечисления.СостоянияДокументов.Исполнен, 
				Ссылка);
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры	
