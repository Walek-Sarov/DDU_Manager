
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьДоступность()
	
	Если Объект.Стартован Тогда 
		Элементы.Исполнители.ТолькоПросмотр = Истина;
		Элементы.Подобрать.Доступность = Ложь;
		Элементы.Проверяющий.ТолькоПросмотр = Истина;
		Элементы.Предмет.ТолькоПросмотр = Истина;
		Элементы.СрокИсполнения.ТолькоПросмотр = Истина;
		Элементы.Описание.ТолькоПросмотр = Истина; 
	КонецЕсли;	
	
	Если Объект.Завершен Тогда 
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Объект.Исполнители.Количество() > 1 Тогда 
		Элементы.НазначитьОтветственным.Доступность = Не Объект.Стартован;
	Иначе
		Элементы.НазначитьОтветственным.Доступность = Ложь;
	КонецЕсли;	
	
	Элементы.ГруппаИнфо.Видимость = Не Объект.Ссылка.Пустая();
	
КонецПроцедуры

&НаСервере
Функция ПоместитьИсполнителейВоВременноеХранилище()

	Возврат ПоместитьВоВременноеХранилище(Объект.Исполнители.Выгрузить(), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ЗагрузитьИсполнителейИзВременногоХранилища(АдресВременногоХранилища)
	
	Исполнители = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	// добавление появившихся строк
	Для Каждого Строка Из Исполнители Цикл
		
		ПараметрыОтбора = Новый Структура("Исполнитель, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации", 
			Строка.Исполнитель, 
			Строка.ОсновнойОбъектАдресации, 
			Строка.ДополнительныйОбъектАдресации);
		
		Если Объект.Исполнители.НайтиСтроки(ПараметрыОтбора).Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;	
		
		НоваяСтрока = Объект.Исполнители.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		
	КонецЦикла;	
	
	// удаление пропавших строк
	КоличествоСтрок = Объект.Исполнители.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		Строка = Объект.Исполнители[КоличествоСтрок - Инд];
		
		ПараметрыОтбора = Новый Структура("Исполнитель, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации", 
			Строка.Исполнитель, 
			Строка.ОсновнойОбъектАдресации, 
			Строка.ДополнительныйОбъектАдресации);
		
		Если Исполнители.НайтиСтроки(ПараметрыОтбора).Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;		
		
		Объект.Исполнители.Удалить(Строка);
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Функция ЭлементыДляСохранения()
	
	СохраняемыеЭлементы = Новый Структура("Проверяющий", 
										  Объект.Проверяющий);
	
	Возврат СохранениеВводимыхЗначений.СформироватьТаблицуСохраненяемыхЭлементов(СохраняемыеЭлементы);
	
КонецФункции

	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьДоступность();
	
	ИзменятьЗаданияЗаднимЧислом = ПолучитьФункциональнуюОпцию("ИзменятьЗаданияЗаднимЧислом");
	
	// Сохранение вводимых значений
	СохранениеВводимыхЗначений.ЗаполнитьСписокВыбора(ЭтаФорма, ЭлементыДляСохранения(), ЭтаФорма.ИмяФормы);
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(РезультатВыбора, ИсточникВыбора)
	
	Если ТипЗнч(РезультатВыбора) = Тип("Строка") И ЭтоАдресВременногоХранилища(РезультатВыбора) Тогда 
		ЗагрузитьИсполнителейИзВременногоХранилища(РезультатВыбора);
		Модифицированность = Истина;
	КонецЕсли;
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("Старт") И ПараметрыЗаписи.Старт Тогда
		РаботаСБизнесПроцессамиКлиент.ПередСтартомБизнесПроцесса(Объект, Отказ);
		
		Если ЗначениеЗаполнено(Объект.СрокИсполнения) И Объект.СрокИсполнения < НачалоДня(Объект.Дата) Тогда 
			ТекстВопроса = НСтр("ru = 'Общий срок исполнения меньше даты создания бизнес-процесса. Выполнить запуск бизнес-процесса?'");
			Результат = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
			Если Результат <> КодВозвратаДиалога.Да Тогда 
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;	
		
		Исполнители = "";	
		Для Каждого Строка Из Объект.Исполнители Цикл
			Если ЗначениеЗаполнено(Строка.СрокИсполнения) И Строка.СрокИсполнения < НачалоДня(Объект.Дата) Тогда 
				Исполнители  = Исполнители + Строка(Строка.Исполнитель) + ", ";
			КонецЕсли;	
		КонецЦикла;
		Если Исполнители <> "" Тогда 
			Исполнители = Лев(Исполнители, СтрДлина(Исполнители) - 1);
			
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Срок исполнения для %1 меньше даты создания бизнес-процесса. 
			|Выполнить запуск бизнес-процесса?'"),
			Исполнители);
			
			Результат = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
			Если Результат <> КодВозвратаДиалога.Да Тогда 
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;	
		
	ИначеЕсли Объект.Стартован И ИзменятьЗаданияЗаднимЧислом И Модифицированность Тогда 
		ТекстСообщения = НСтр("ru = 'Бизнес-процесс был изменен, будет выполнено обновление незавершенных задач.'");
		Предупреждение(ТекстСообщения);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("БизнесПроцессИзменен", Объект.Ссылка);
	
	Если ПараметрыЗаписи.Свойство("Старт") И ПараметрыЗаписи.Старт Тогда
		Оповестить("БизнесПроцессСтартован", Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("Старт") И ПараметрыЗаписи.Старт Тогда
	ИначеЕсли Объект.Стартован И ИзменятьЗаданияЗаднимЧислом И Модифицированность Тогда 
		ТекущийОбъект.ИзменитьРеквизитыНевыполненныхЗадач();
	КонецЕсли;
	
	// Сохранение вводимых значений
	СохранениеВводимыхЗначений.ОбновитьСпискиВыбора(ЭтаФорма, ЭлементыДляСохранения(), ЭтаФорма.ИмяФормы);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура Подобрать(Команда)
	
	АдресВременногоХранилища = ПоместитьИсполнителейВоВременноеХранилище();
	РаботаСПользователямиКлиент.ПодборИсполнителей(АдресВременногоХранилища, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьИсполнителя(Элемент, Элементы.Исполнители.ТекущиеДанные.Исполнитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;
		
		ТекущийДанные = Элементы.Исполнители.ТекущиеДанные;
		ТекущийДанные.Исполнитель = ВыбранноеЗначение.РольИсполнителя;
		ТекущийДанные.ОсновнойОбъектАдресации = ВыбранноеЗначение.ОсновнойОбъектАдресации;
		ТекущийДанные.ДополнительныйОбъектАдресации = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
		
		Модифицированность = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура АвторНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьПользователя(Элемент, Объект.Автор);
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственным(Команда)
	
	ТекущиеДанные = Элементы.Исполнители.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Для Каждого Строка Из Объект.Исполнители Цикл
		Если Строка.НомерСтроки = ТекущиеДанные.НомерСтроки Тогда 
			Строка.Ответственный = Не Строка.Ответственный;
		ИначеЕсли Строка.Ответственный Тогда
			Строка.Ответственный = Ложь;
		КонецЕсли;	
	КонецЦикла;	
	
	Элементы.НазначитьОтветственным.Пометка = ТекущиеДанные.Ответственный;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПослеУдаления(Элемент)
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока Тогда 
		УстановитьДоступность();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Исполнители.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Элементы.НазначитьОтветственным.Пометка = ТекущиеДанные.Ответственный;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Предмет) И (Не ЗначениеЗаполнено(Объект.Наименование) Или Объект.Наименование = "Исполнить ") Тогда 
		Объект.Наименование = "Исполнить """ + Строка(Объект.Предмет) + """";
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда 
		Элементы.Исполнители.ТекущиеДанные.Исполнитель = ПользователиПустаяСсылка;
	КонецЕсли;	
	
	Если НоваяСтрока Тогда 
		УстановитьДоступность();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	
	ТекущийДанные = Элементы.Исполнители.ТекущиеДанные;
	Если ТипЗнч(ТекущийДанные.Исполнитель) = Тип("СправочникСсылка.РолиИсполнителей") И ЗначениеЗаполнено(ТекущийДанные.Исполнитель) Тогда 
		
		Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(ТекущийДанные.Исполнитель, "ИспользуетсяСОбъектамиАдресации") Тогда 
			Результат = ОткрытьФормуМодально("ОбщаяФорма.ВыборРолиИсполнителя", 
				Новый Структура("РольИсполнителя, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации", 
					ТекущийДанные.Исполнитель, 
					ТекущийДанные.ОсновнойОбъектАдресации, 
					ТекущийДанные.ДополнительныйОбъектАдресации), 
				ЭтаФорма);
			
			Если ТипЗнч(Результат) = Тип("Структура") Тогда
				ТекущийДанные.Исполнитель = Результат.РольИсполнителя;
				ТекущийДанные.ОсновнойОбъектАдресации = Результат.ОсновнойОбъектАдресации;
				ТекущийДанные.ДополнительныйОбъектАдресации = Результат.ДополнительныйОбъектАдресации;
			КонецЕсли;
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверяющийПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.Проверяющий) = Тип("СправочникСсылка.РолиИсполнителей") И ЗначениеЗаполнено(Объект.Проверяющий) Тогда 
		
		Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.Проверяющий, "ИспользуетсяСОбъектамиАдресации") Тогда 
			Результат = ОткрытьФормуМодально("ОбщаяФорма.ВыборРолиИсполнителя", 
				Новый Структура("РольИсполнителя, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации", 
					Объект.Проверяющий, 
					Объект.ОсновнойОбъектАдресацииПроверяющего, 
					Объект.ДополнительныйОбъектАдресацииПроверяющего), 
				ЭтаФорма);
			
			Если ТипЗнч(Результат) = Тип("Структура") Тогда
				Объект.Проверяющий = Результат.РольИсполнителя;
				Объект.ОсновнойОбъектАдресацииПроверяющего = Результат.ОсновнойОбъектАдресации;
				Объект.ДополнительныйОбъектАдресацииПроверяющего = Результат.ДополнительныйОбъектАдресации;
			КонецЕсли;
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверяющийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьИсполнителя(Элемент, Объект.Проверяющий);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверяющийОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверяющийАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверяющийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;
		
		Объект.Проверяющий = ВыбранноеЗначение.РольИсполнителя;
		Объект.ОсновнойОбъектАдресацииПроверяющего = ВыбранноеЗначение.ОсновнойОбъектАдресации;
		Объект.ДополнительныйОбъектАдресацииПроверяющего = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры
