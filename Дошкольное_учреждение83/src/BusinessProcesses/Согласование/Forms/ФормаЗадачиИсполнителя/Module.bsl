
////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура СогласованоСервер()
	
	УстановитьПривилегированныйРежим(Истина);
	СогласованиеОбъект = Объект.БизнесПроцесс.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(СогласованиеОбъект.Ссылка);
	НайденнаяСтрока = СогласованиеОбъект.РезультатыСогласования.Найти(Объект.Ссылка, "ЗадачаИсполнителя");
	НайденнаяСтрока.РезультатСогласования = Перечисления.РезультатыСогласования.Согласовано;
	СогласованиеОбъект.Записать();
	УстановитьПривилегированныйРежим(Ложь);
	
	БизнесПроцессыИЗадачиСервер.ВыполнитьЗадачу(Объект.Ссылка);
		
КонецПроцедуры

&НаСервере
Процедура НеСогласованоСервер()
	
	УстановитьПривилегированныйРежим(Истина);
	СогласованиеОбъект = Объект.БизнесПроцесс.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(СогласованиеОбъект.Ссылка);
	НайденнаяСтрока = СогласованиеОбъект.РезультатыСогласования.Найти(Объект.Ссылка, "ЗадачаИсполнителя");
	НайденнаяСтрока.РезультатСогласования = Перечисления.РезультатыСогласования.НеСогласовано;
	СогласованиеОбъект.Записать();
	УстановитьПривилегированныйРежим(Ложь);
	
	БизнесПроцессыИЗадачиСервер.ВыполнитьЗадачу(Объект.Ссылка);
		
КонецПроцедуры

&НаСервере
Процедура СогласованоСЗамечаниямиСервер()
	
	УстановитьПривилегированныйРежим(Истина);
	СогласованиеОбъект = Объект.БизнесПроцесс.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(СогласованиеОбъект.Ссылка);
	НайденнаяСтрока = СогласованиеОбъект.РезультатыСогласования.Найти(Объект.Ссылка, "ЗадачаИсполнителя");
	НайденнаяСтрока.РезультатСогласования = Перечисления.РезультатыСогласования.СогласованоСЗамечаниями;
	СогласованиеОбъект.Записать();
	УстановитьПривилегированныйРежим(Ложь);
	
	БизнесПроцессыИЗадачиСервер.ВыполнитьЗадачу(Объект.Ссылка);
		
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСБизнесПроцессами.ФормаЗадачиПриСозданииНаСервере(ЭтаФорма, Объект, 
		Элементы.СрокИсполнения, Элементы.ДатаИсполнения, Элементы.Предмет);
	
	// номер цикла
	НайденнаяСтрока = Объект.БизнесПроцесс.РезультатыСогласования.Найти(Объект.Ссылка, "ЗадачаИсполнителя");
	Если НайденнаяСтрока <> Неопределено Тогда 
		НомерИтерации = НайденнаяСтрока.НомерИтерации;
		
		Элементы.ТекстРезультатаВыполнения.Заголовок = Строка(НайденнаяСтрока.РезультатСогласования) + ".";
		Если (НайденнаяСтрока.РезультатСогласования = Перечисления.РезультатыСогласования.Согласовано) 
		 Или (НайденнаяСтрока.РезультатСогласования = Перечисления.РезультатыСогласования.СогласованоСЗамечаниями) Тогда 
			Элементы.ТекстРезультатаВыполнения.ЦветТекста = ЦветаСтиля.ОтметкаПоложительногоВыполненияЗадачи;
		
		ИначеЕсли НайденнаяСтрока.РезультатСогласования = Перечисления.РезультатыСогласования.НеСогласовано Тогда 
			Элементы.ТекстРезультатаВыполнения.ЦветТекста = ЦветаСтиля.ОтметкаОтрицательногоВыполненияЗадачи;
			
		КонецЕсли;
	КонецЕсли;	
	
	Если НомерИтерации <= 1 Тогда 
		Элементы.НомерИтерации.Видимость = Ложь;
		Элементы.История.Видимость = Ложь;
	КонецЕсли;	
		
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПеренаправлениеЗадач") Тогда
		Элементы.Перенаправить.Видимость = Ложь;	
	КонецЕсли;		
		
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	
	ОчиститьСообщения();
	Если Записать() Тогда
		ОповеститьОбИзменении(Объект.Ссылка);
		ПоказатьОповещениеПользователя(
			"Изменение:", 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		Закрыть();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВыполнить(Команда)
	
	Если Записать() Тогда
		ОповеститьОбИзменении(Объект.Ссылка);
		ПоказатьОповещениеПользователя(
			"Изменение:", 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(Объект.Предмет) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		БизнесПроцессыИЗадачиКлиент.ОткрытьФормуВыполненияЗадачи(Объект.Предмет);
	Иначе	
		ОткрытьЗначение(Объект.Предмет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Согласовано(Команда)
	
	Если Не РаботаСБизнесПроцессамиКлиент.ПроверитьНаличиеЗанятыхФайлов(Объект) Тогда 
		Возврат;
	КонецЕсли;
	
	Если Записать() Тогда 
	
		СогласованоСервер();
 		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Выполнение:'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		
		ОповеститьОбИзменении(Объект.Ссылка);
		Оповестить("ЗадачаВыполнена", Объект.Ссылка);
		Оповестить("ЗадачаИзменена", Объект.Ссылка);
		
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура НеСогласовано(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.РезультатВыполнения) Тогда 
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		    НСтр("ru = 'Поле ""Комментарий"" не заполнено'"),,, 
			"Объект.РезультатВыполнения");
		Возврат;	
	КонецЕсли;	
	
	Если Не РаботаСБизнесПроцессамиКлиент.ПроверитьНаличиеЗанятыхФайлов(Объект) Тогда 
		Возврат;
	КонецЕсли;
	
	Если Записать() Тогда 
			
		НеСогласованоСервер();
	
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Выполнение:'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		
		ОповеститьОбИзменении(Объект.Ссылка);
		Оповестить("ЗадачаВыполнена", Объект.Ссылка);
		Оповестить("ЗадачаИзменена", Объект.Ссылка);
		
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СогласованоСЗамечаниями(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.РезультатВыполнения) Тогда 
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		    НСтр("ru = 'Поле ""Комментарий"" не заполнено'"),,, 
			"Объект.РезультатВыполнения");
		Возврат;	
	КонецЕсли;	
	
	Если Записать() Тогда 
			
		СогласованоСЗамечаниямиСервер();
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Выполнение:'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		
		ОповеститьОбИзменении(Объект.Ссылка);
		Оповестить("ЗадачаВыполнена", Объект.Ссылка);
		Оповестить("ЗадачаИзменена", Объект.Ссылка);
		
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура История(Команда)
	
	ПараметрыФормы = Новый Структура("ЗадачаСсылка", Объект.Ссылка);
	ОткрытьФорму("БизнесПроцесс.Согласование.Форма.ФормаИсторияСогласования", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительСтрокойОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСБизнесПроцессамиКлиент.ОткрытьИсполнителя(Объект.Исполнитель);
	
КонецПроцедуры

&НаКлиенте
Процедура Дополнительно(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ОткрытьДопИнформациюОЗадаче(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Перенаправить(Команда)
	
	Если Объект.Выполнена Тогда
		Предупреждение(НСтр("ru = 'Уже выполненную задачу нельзя перенаправить.'"));
		Возврат;
	КонецЕсли;	
			
	Записать();
	Если БизнесПроцессыИЗадачиКлиент.ПеренаправитьЗадачу(Объект.Ссылка, ЭтаФорма) Тогда
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры
