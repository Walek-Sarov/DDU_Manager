
Функция ФормаВыполненияЗадачи(ЗадачаСсылка, ТочкаМаршрутаСсылка) Экспорт
	
	Если ТочкаМаршрутаСсылка = БизнесПроцессы.Согласование.ТочкиМаршрута.СогласоватьПараллельно
	 Или ТочкаМаршрутаСсылка = БизнесПроцессы.Согласование.ТочкиМаршрута.СогласоватьПоследовательно Тогда 
		ИмяФормы = "БизнесПроцесс.Согласование.Форма.ФормаЗадачиИсполнителя";
		
	ИначеЕсли ТочкаМаршрутаСсылка = БизнесПроцессы.Согласование.ТочкиМаршрута.Ознакомиться Тогда 
		ИмяФормы = "БизнесПроцесс.Согласование.Форма.ФормаЗадачиОзнакомиться";
		
	КонецЕсли;	
		
	Результат = Новый Структура;
	Результат.Вставить("ПараметрыФормы", Новый Структура("Ключ", ЗадачаСсылка));
	Результат.Вставить("ИмяФормы", ИмяФормы);
	Возврат Результат;	
	
КонецФункции

// Вызывается при выполнении задачи из формы списка.
//
// Параметры
//   ЗадачаСсылка  – ЗадачаСсылка.ЗадачаИсполнителя – задача 
//   ТочкаМаршрутаСсылка – точка маршрута 
//
Процедура ОбработкаВыполненияПоУмолчанию(ЗадачаСсылка, БизнесПроцессСсылка, ТочкаМаршрутаБизнесПроцесса) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// устанавливаем значения по умолчанию для пакетного выполнения задач
	Если ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.Согласование.ТочкиМаршрута.СогласоватьПоследовательно Или
		 ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.Согласование.ТочкиМаршрута.СогласоватьПараллельно Тогда
		 
		СогласованиеОбъект = БизнесПроцессСсылка.ПолучитьОбъект();
		ЗаблокироватьДанныеДляРедактирования(СогласованиеОбъект.Ссылка);
		НайденнаяСтрока = СогласованиеОбъект.РезультатыСогласования.Найти(ЗадачаСсылка, "ЗадачаИсполнителя");
		НайденнаяСтрока.РезультатСогласования = Перечисления.РезультатыСогласования.Согласовано;
		СогласованиеОбъект.Записать();
		
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.Согласование.ТочкиМаршрута.Ознакомиться Тогда
		
		СогласованиеОбъект = БизнесПроцессСсылка.ПолучитьОбъект();
		ЗаблокироватьДанныеДляРедактирования(СогласованиеОбъект.Ссылка);
		НайденнаяСтрока = СогласованиеОбъект.РезультатыОзнакомлений.Найти(ЗадачаСсылка, "ЗадачаИсполнителя");
		НайденнаяСтрока.ОтправленоНаПовторноеСогласование = Ложь;
		СогласованиеОбъект.Записать();
		
	КонецЕсли;
	
КонецПроцедуры	

// Вызывается при перенаправлении задачи.
//
// Параметры
//   ЗадачаСсылка  – ЗадачаСсылка.ЗадачаИсполнителя – перенаправляемая задача.
//   НоваяЗадачаСсылка  – ЗадачаСсылка.ЗадачаИсполнителя – задача для нового исполнителя.
//
Процедура ПриПеренаправленииЗадачи(ЗадачаСсылка) Экспорт
	
	// Изменяем бизнес-процесс
	УстановитьПривилегированныйРежим(Истина);
	БизнесПроцессОбъект = ЗадачаСсылка.БизнесПроцесс.ПолучитьОбъект();
	БизнесПроцессОбъект.Заблокировать();
	Строка = БизнесПроцессОбъект.ДополнительныеИсполнители.Добавить();
	Строка.Исполнитель = ЗадачаСсылка.Исполнитель;
	Строка.ОсновнойОбъектАдресации = ЗадачаСсылка.ОсновнойОбъектАдресации;
	Строка.ДополнительныйОбъектАдресации = ЗадачаСсылка.ДополнительныйОбъектАдресации;
	
	Если ТипЗнч(Строка.Исполнитель) = Тип("СправочникСсылка.РолиИсполнителей") Тогда
		Строка.ГруппаДоступаИсполнителей = РегистрыСведений.ИсполнителиЗадач.ГруппаДоступаИсполнителей(
			Строка.Исполнитель, Строка.ОсновнойОбъектАдресации, Строка.ДополнительныйОбъектАдресации);
	Иначе		
		Строка.ГруппаДоступаИсполнителей = Строка.Исполнитель;
	КонецЕсли;		
	
	БизнесПроцессОбъект.Записать();
	УстановитьПривилегированныйРежим(Ложь);
	
	РаботаСБизнесПроцессами.ПриПеренаправленииЗадачи(ЗадачаСсылка);
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
    // Устанавливаем признак достпности печати по-комплектно
    ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЛистСогласования") Тогда

        // Формируем табличный документ и добавляем его в коллекцию печатных форм
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
            "ЛистСогласования", "Лист согласования", ЛистСогласования(МассивОбъектов, ОбъектыПечати));

	КонецЕсли;
		
КонецПроцедуры

Функция ЛистСогласования(МассивОбъектов, ОбъектыПечати) Экспорт
	
	// Создаем табличный документ и устанавливаем имя параметров печати
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ЛистСогласования";
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СогласованиеИсполнители.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА РезультатыСогласования.ЗадачаИсполнителя ЕСТЬ NULL 
	|			ТОГДА СогласованиеИсполнители.Исполнитель
	|		КОГДА РезультатыСогласования.ЗадачаИсполнителя.Исполнитель <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|			ТОГДА РезультатыСогласования.ЗадачаИсполнителя.Исполнитель
	|		КОГДА РезультатыСогласования.ЗадачаИсполнителя.ДополнительныйОбъектАдресации <> &Неопределено
	|			ТОГДА """" + РезультатыСогласования.ЗадачаИсполнителя.РольИсполнителя.Наименование + "" ("" + РезультатыСогласования.ЗадачаИсполнителя.ОсновнойОбъектАдресации.Наименование + "", "" + РезультатыСогласования.ЗадачаИсполнителя.ДополнительныйОбъектАдресации.Наименование + "")""
	|		КОГДА РезультатыСогласования.ЗадачаИсполнителя.ОсновнойОбъектАдресации <> &Неопределено
	|			ТОГДА """" + РезультатыСогласования.ЗадачаИсполнителя.РольИсполнителя.Наименование + "" ("" + РезультатыСогласования.ЗадачаИсполнителя.ОсновнойОбъектАдресации.Наименование + "")""
	|		ИНАЧЕ """" + РезультатыСогласования.ЗадачаИсполнителя.РольИсполнителя.Наименование
	|	КОНЕЦ КАК Исполнитель,
	|	РезультатыСогласования.РезультатСогласования КАК РезультатСогласования,
	|	РезультатыСогласования.ЗадачаИсполнителя.ДатаИсполнения КАК ДатаИсполнения,
	|	СведенияоПользователях.Должность КАК Должность,
	|	РезультатыСогласования.ЗадачаИсполнителя.РезультатВыполнения
	|ИЗ
	|	БизнесПроцесс.Согласование.Исполнители КАК СогласованиеИсполнители
	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.Согласование.РезультатыСогласования КАК РезультатыСогласования
	|		ПО СогласованиеИсполнители.Ссылка = РезультатыСогласования.Ссылка
	|			И СогласованиеИсполнители.Ссылка.НомерИтерации = РезультатыСогласования.НомерИтерации
	|			И (СогласованиеИсполнители.Исполнитель = РезультатыСогласования.ЗадачаИсполнителя.Исполнитель
	|				ИЛИ СогласованиеИсполнители.Исполнитель = РезультатыСогласования.ЗадачаИсполнителя.РольИсполнителя
	|					И СогласованиеИсполнители.ОсновнойОбъектАдресации = РезультатыСогласования.ЗадачаИсполнителя.ОсновнойОбъектАдресации
	|					И СогласованиеИсполнители.ДополнительныйОбъектАдресации = РезультатыСогласования.ЗадачаИсполнителя.ДополнительныйОбъектАдресации)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПользователях КАК СведенияоПользователях
	|		ПО (ВЫБОР
	|				КОГДА РезультатыСогласования.ЗадачаИсполнителя ЕСТЬ NULL 
	|					ТОГДА СогласованиеИсполнители.Исполнитель
	|				КОГДА РезультатыСогласования.ЗадачаИсполнителя.Исполнитель <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|					ТОГДА РезультатыСогласования.ЗадачаИсполнителя.Исполнитель
	|			КОНЕЦ = СведенияоПользователях.Пользователь)
	|ГДЕ
	|	СогласованиеИсполнители.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаИсполнения
	|ИТОГИ ПО
	|	Ссылка";
	Запрос.Параметры.Вставить("МассивОбъектов", МассивОбъектов);
	Запрос.Параметры.Вставить("Неопределено", Неопределено);
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Макет = БизнесПроцессы.Согласование.ПолучитьМакет("ЛистСогласования");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьИсполнителиШапка = Макет.ПолучитьОбласть("ИсполнителиШапка");
	ОбластьИсполнители = Макет.ПолучитьОбласть("Исполнители");
	

	ПервыйДокумент = Истина;
	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;

		// Запомним номер строки с которой начали выводить текущий документ
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);

		Предмет = Выборка.Ссылка.Предмет;
		Если ЗначениеЗаполнено(Предмет) Тогда
			ОбластьШапка.Параметры.Предмет = Предмет.Метаданные().ПредставлениеОбъекта + " """ + Строка(Предмет) + """";
			ТабличныйДокумент.Вывести(ОбластьШапка);
		КонецЕсли;	
 		
		ТабличныйДокумент.Вывести(ОбластьИсполнителиШапка);
		ВыборкаИсполнители = Выборка.Выбрать();
		Пока ВыборкаИсполнители.Следующий() Цикл
			ОбластьИсполнители.Параметры.Заполнить(ВыборкаИсполнители);
			ТабличныйДокумент.Вывести(ОбластьИсполнители);
		КонецЦикла;

		
		// В табличном документе зададим имя области в которую был 
		// выведен объект. Нужно для возможности печати по-комплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции
