
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСБизнесПроцессами.УстановитьФорматДаты(Элементы.ИсторияЦикловДатаИсполнения);
	РаботаСБизнесПроцессами.УстановитьФорматДаты(Элементы.ИсторияИсполнителяДатаИсполнения);
	
	ЗадачаСсылка = Параметры.ЗадачаСсылка;
	БизнесПроцесс = ЗадачаСсылка.БизнесПроцесс;
	
	// предмет
	Предмет = ЗадачаСсылка.Предмет;
	Элементы.ПредметИсторияЦиклов.Гиперссылка = ЗначениеЗаполнено(Предмет);
	Элементы.ПредметИсторияИсполнителя.Гиперссылка = ЗначениеЗаполнено(Предмет);
	ПредметСтрокой = БизнесПроцессыИЗадачиСервер.ПредметСтрокой(Предмет);
	
	ТочкиМаршрута = Новый Массив;
	ТочкиМаршрута.Добавить(БизнесПроцессы.Утверждение.ТочкиМаршрута.Утвердить);
	
	Если ЗадачаСсылка.ТочкаМаршрута = БизнесПроцессы.Утверждение.ТочкиМаршрута.Ознакомиться Тогда 
		
		НайденнаяСтрока = БизнесПроцесс.РезультатыОзнакомлений.Найти(ЗадачаСсылка, "ЗадачаИсполнителя");
		Если НайденнаяСтрока <> Неопределено Тогда 
			НомерИтерации = НайденнаяСтрока.НомерИтерации;
		КонецЕсли;	
		
		ИсторияЦиклов.Параметры.УстановитьЗначениеПараметра("ТочкиМаршрута", ТочкиМаршрута);
		ИсторияЦиклов.Параметры.УстановитьЗначениеПараметра("БизнесПроцесс", БизнесПроцесс);
		ИсторияЦиклов.Параметры.УстановитьЗначениеПараметра("НомерИтерации", НомерИтерации);
		
		Элементы.ГруппаИсторияЦиклов.Видимость = Истина;
		Элементы.ГруппаИсторияИсполнителя.Видимость = Ложь;
		
	ИначеЕсли ЗадачаСсылка.ТочкаМаршрута = БизнесПроцессы.Утверждение.ТочкиМаршрута.Утвердить Тогда 
		
		НайденнаяСтрока = БизнесПроцесс.РезультатыУтверждения.Найти(ЗадачаСсылка, "ЗадачаИсполнителя");
		Если НайденнаяСтрока <> Неопределено Тогда 
			НомерИтерации = НайденнаяСтрока.НомерИтерации;
		КонецЕсли;	
		
		ИсторияИсполнителя.Параметры.УстановитьЗначениеПараметра("ТочкиМаршрута", ТочкиМаршрута);
		ИсторияИсполнителя.Параметры.УстановитьЗначениеПараметра("БизнесПроцесс", БизнесПроцесс);
		Если ЗадачаСсылка.Выполнена Тогда 
			ИсторияИсполнителя.Параметры.УстановитьЗначениеПараметра("НомерИтерации", НомерИтерации); 
		Иначе
			ИсторияИсполнителя.Параметры.УстановитьЗначениеПараметра("НомерИтерации", НомерИтерации - 1);
		КонецЕсли;	
		  
		ИсторияИсполнителя.Параметры.УстановитьЗначениеПараметра("Исполнитель", ЗадачаСсылка.Исполнитель);
		ИсторияИсполнителя.Параметры.УстановитьЗначениеПараметра("РольИсполнителя", ЗадачаСсылка.РольИсполнителя);
		ИсторияИсполнителя.Параметры.УстановитьЗначениеПараметра("ОсновнойОбъектАдресации", ЗадачаСсылка.ОсновнойОбъектАдресации);
		ИсторияИсполнителя.Параметры.УстановитьЗначениеПараметра("ДополнительныйОбъектАдресации", ЗадачаСсылка.ДополнительныйОбъектАдресации);
		
		Элементы.ГруппаИсторияЦиклов.Видимость = Ложь;
		Элементы.ГруппаИсторияИсполнителя.Видимость = Истина;
		
		Если ЗначениеЗаполнено(ЗадачаСсылка.РольИсполнителя) Тогда 
			Заголовок = Заголовок 
				+ " (" + Строка(ЗадачаСсылка.РольИсполнителя) 
				+ ?(ЗначениеЗаполнено(ЗадачаСсылка.ОсновнойОбъектАдресации), ", " + Строка(ЗадачаСсылка.ОсновнойОбъектАдресации), "") 
				+ ?(ЗначениеЗаполнено(ЗадачаСсылка.ДополнительныйОбъектАдресации), ", " + Строка(ЗадачаСсылка.ДополнительныйОбъектАдресации), "") 
				+ " )";
		Иначе
			Заголовок = Заголовок + " (" + Строка(ЗадачаСсылка.Исполнитель) + " )";
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(Предмет) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		БизнесПроцессыИЗадачиКлиент.ОткрытьФормуВыполненияЗадачи(Предмет);
	Иначе	
		ОткрытьЗначение(Предмет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияЦикловВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	БизнесПроцессыИЗадачиКлиент.СписокЗадачВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияИсполнителяВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	БизнесПроцессыИЗадачиКлиент.СписокЗадачВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры
