
////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ОзнакомилсяСервер()
	
	УстановитьПривилегированныйРежим(Истина);
	УтверждениеОбъект = Объект.БизнесПроцесс.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(УтверждениеОбъект.Ссылка);
	УтверждениеОбъект.ПовторитьУтверждение = Ложь;
	НайденнаяСтрока = УтверждениеОбъект.РезультатыОзнакомлений.Найти(Объект.Ссылка, "ЗадачаИсполнителя");
	НайденнаяСтрока.ОтправленоНаПовторноеСогласование = Ложь;
	УтверждениеОбъект.Записать();
	УстановитьПривилегированныйРежим(Ложь);
	
	БизнесПроцессыИЗадачиСервер.ВыполнитьЗадачу(Объект.Ссылка);
	
КонецПроцедуры	

&НаСервере
Процедура ПовторитьСервер()
	
	УстановитьПривилегированныйРежим(Истина);
	УтверждениеОбъект = Объект.БизнесПроцесс.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(УтверждениеОбъект.Ссылка);
	УтверждениеОбъект.ПовторитьУтверждение = Истина;
	НайденнаяСтрока = УтверждениеОбъект.РезультатыОзнакомлений.Найти(Объект.Ссылка, "ЗадачаИсполнителя");
	НайденнаяСтрока.ОтправленоНаПовторноеСогласование = Истина;
	УтверждениеОбъект.Записать();
	УстановитьПривилегированныйРежим(Ложь);
	
	БизнесПроцессыИЗадачиСервер.ВыполнитьЗадачу(Объект.Ссылка);

КонецПроцедуры	


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСБизнесПроцессами.ФормаЗадачиПриСозданииНаСервере(ЭтаФорма, Объект, 
		Элементы.СрокИсполнения, Элементы.ДатаИсполнения, Элементы.Предмет);
	
	// номер итерации	
	НайденнаяСтрока = Объект.БизнесПроцесс.РезультатыОзнакомлений.Найти(Объект.Ссылка, "ЗадачаИсполнителя");
	Если НайденнаяСтрока <> Неопределено Тогда 
		НомерИтерации = НайденнаяСтрока.НомерИтерации;
	КонецЕсли;		
		
	
	// результат утверждения
	РезультатУтверждения = Перечисления.РезультатыУтверждения.Утверждено;
	СтрокиИтерации = Объект.БизнесПроцесс.РезультатыУтверждения.НайтиСтроки(Новый Структура("НомерИтерации", НомерИтерации));
	Для Каждого Строка Из СтрокиИтерации Цикл
		
		РезультатВыполнения = Строка.ЗадачаИсполнителя.РезультатВыполнения;
		УтверждающееЛицо = Строка.ЗадачаИсполнителя.Исполнитель;
		ДатаУтверждения = Строка.ЗадачаИсполнителя.ДатаИсполнения;
		
		Если Строка.РезультатУтверждения = Перечисления.РезультатыУтверждения.НеУтверждено Тогда 
			РезультатУтверждения = Перечисления.РезультатыУтверждения.НеУтверждено;
			Прервать;
		КонецЕсли;	
		
	КонецЦикла;	
	
	
	// цвет надписи
	Если РезультатУтверждения = Перечисления.РезультатыУтверждения.Утверждено Тогда 
		Элементы.РезультатУтверждения.ЦветТекста = ЦветаСтиля.ОтметкаПоложительногоВыполненияЗадачи;
		
	ИначеЕсли РезультатУтверждения = Перечисления.РезультатыУтверждения.НеУтверждено Тогда 
		Элементы.РезультатУтверждения.ЦветТекста = ЦветаСтиля.ОтметкаОтрицательногоВыполненияЗадачи;
		
	КонецЕсли;
	
	// заголовки кнопок
	Если РезультатУтверждения = Перечисления.РезультатыУтверждения.НеУтверждено Тогда 
		Элементы.Ознакомился.Заголовок = "Завершить утверждение";
	Иначе	
		Элементы.Повторить.Видимость = Ложь;
	КонецЕсли;
	
	// Заполнение текста результата выполнения для выполненной задачи
	НайденнаяСтрока = Объект.БизнесПроцесс.РезультатыОзнакомлений.Найти(Объект.Ссылка, "ЗадачаИсполнителя");
	Если НайденнаяСтрока <> Неопределено Тогда 
		Если НайденнаяСтрока.ОтправленоНаПовторноеСогласование Тогда
			Элементы.ТекстРезультатаВыполнения.Заголовок = НСТР("ru = 'Отправлено на повторное утверждение.'");
			Элементы.ТекстРезультатаВыполнения.ЦветТекста = ЦветаСтиля.ОтметкаОтрицательногоВыполненияЗадачи;
		Иначе	
			Элементы.ТекстРезультатаВыполнения.Заголовок = НСТР("ru = 'Ознакомился.'");
			Элементы.ТекстРезультатаВыполнения.ЦветТекста = ЦветаСтиля.ОтметкаПоложительногоВыполненияЗадачи;
		КонецЕсли;
	КонецЕсли;	
	
	Если НомерИтерации <= 1 Тогда 
		Элементы.НомерИтерации.Видимость = Ложь;
		Элементы.История.Видимость = Ложь;
	КонецЕсли;	
			
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПеренаправлениеЗадач") Тогда
		Элементы.Перенаправить.Видимость = Ложь;	
	КонецЕсли;		
		
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	
	ОчиститьСообщения();
	Если Записать() Тогда
		ОповеститьОбИзменении(Объект.Ссылка);
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Задача изменена:'"), 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		Закрыть();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВыполнить(Команда)
	
	Если Записать() Тогда
		ОповеститьОбИзменении(Объект.Ссылка);
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Задача изменена:'"), 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(Объект.Предмет) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		БизнесПроцессыИЗадачиКлиент.ОткрытьФормуВыполненияЗадачи(Объект.Предмет);
	Иначе	
		ОткрытьЗначение(Объект.Предмет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Ознакомился(Команда)
	
	Если Не РаботаСБизнесПроцессамиКлиент.ПроверитьНаличиеЗанятыхФайлов(Объект) Тогда 
		Возврат;
	КонецЕсли;
	
	Если Записать() Тогда 	
		
		ОзнакомилсяСервер();
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Выполнение:'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		
		ОповеститьОбИзменении(Объект.Ссылка);
		Оповестить("ЗадачаВыполнена", Объект.Ссылка);
		Оповестить("ЗадачаИзменена", Объект.Ссылка);
		
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительСтрокойОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСБизнесПроцессамиКлиент.ОткрытьИсполнителя(Объект.Исполнитель);
	
КонецПроцедуры

&НаКлиенте
Процедура Повторить(Команда)
	
	Если Записать() Тогда 
		
		ПараметрыФормы = Новый Структура("Ключ", Объект.БизнесПроцесс);
		Результат = ОткрытьФормуМодально("БизнесПроцесс.Утверждение.Форма.ФормаИзменениеПараметров", ПараметрыФормы, ЭтаФорма);
		Если Результат <> КодВозвратаДиалога.ОК Тогда 
			Возврат;
		КонецЕсли;	
			
		ПовторитьСервер();
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Выполнение:'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		
		ОповеститьОбИзменении(Объект.Ссылка);
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура История(Команда)
	
	ПараметрыФормы = Новый Структура("ЗадачаСсылка", Объект.Ссылка);
	ОткрытьФорму("БизнесПроцесс.Утверждение.Форма.ФормаИсторияУтверждения", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Дополнительно(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ОткрытьДопИнформациюОЗадаче(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Перенаправить(Команда)
	
	Если Объект.Выполнена Тогда
		Предупреждение(НСтр("ru = 'Уже выполненную задачу нельзя перенаправить.'"));
		Возврат;
	КонецЕсли;	
			
	Записать();
	Если БизнесПроцессыИЗадачиКлиент.ПеренаправитьЗадачу(Объект.Ссылка, ЭтаФорма) Тогда
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры
