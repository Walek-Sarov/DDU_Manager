
////////////////////////////////////////////////////////////////////////////////
// Обработчики событий бизнес-процесса
// Процедура ЗаполнитьНаборыЗначенийДоступа заполняет таблицу
// НаборыЗначений(НомерНабора, ВидДоступа, ЗначениеДоступа, Чтение, Добавление, Изменение, Удаление)
// по проверяемому объекту.
//
//  Вызывается из процедуры УправлениеДоступом.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	// Логика ограничения:
	// Чтения:                Автор ИЛИ Исполнитель ИЛИ <исполнитель по адресации>
	// Добавления, Изменения: Автор
	
	// Реквизит ГруппаДоступаИсполнителей содержит либо "Исполнителя" либо 
	// "СправочникСсылка.ГруппыДоступаИсполнителей"
	
	// Чтение, Добавление, Изменение: набор №1.
	Строка = Таблица.Добавить();
	Строка.НомерНабора     = 1;
	Строка.Чтение          = Истина;
	Строка.Добавление      = Истина;
	Строка.Изменение       = Истина;
	Строка.ВидДоступа      = ПланыВидовХарактеристик.ВидыДоступа.Пользователи;
	Строка.ЗначениеДоступа = Автор;
	
	// Чтение: набор №2.
	Строка = Таблица.Добавить();
	Строка.НомерНабора     = 2;
	Строка.Чтение          = Истина;
	Строка.ВидДоступа      = ПланыВидовХарактеристик.ВидыДоступа.Пользователи;
	Строка.ЗначениеДоступа = ГруппаДоступаИсполнителей;
	
	ТекущийНомерНабора = 3;
	
	// Чтение:
	Для каждого Элемент Из ДополнительныеИсполнители Цикл
		Строка = Таблица.Добавить();
		Строка.НомерНабора     = ТекущийНомерНабора;
		Строка.Чтение          = Истина;
		Строка.ВидДоступа      = ПланыВидовХарактеристик.ВидыДоступа.Пользователи;
		Строка.ЗначениеДоступа = Элемент.ГруппаДоступаИсполнителей;
		
		ТекущийНомерНабора = ТекущийНомерНабора + 1;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = ТекущаяДата();
	Автор = ОбщегоНазначения.ТекущийПользователь();
	ДатаНачала = '00010101';
	ДатаЗавершения = '00010101';
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда 
		Дата = ТекущаяДата();
		Автор = ОбщегоНазначения.ТекущийПользователь();
		Важность = Перечисления.ВариантыВажностиЗадачи.Обычная;
	КонецЕсли;	
	
	Если ДанныеЗаполнения <> Неопределено И ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Тогда
		Предмет = ДанныеЗаполнения;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		ЗадачаСсылка = ДанныеЗаполнения;
		Если ЗадачаСсылка.ТочкаМаршрута = БизнесПроцессы.Утверждение.ТочкиМаршрута.Ознакомиться 
		 Или ЗадачаСсылка.ТочкаМаршрута = БизнесПроцессы.Согласование.ТочкиМаршрута.Ознакомиться Тогда 
			Предмет = ЗадачаСсылка.БизнесПроцесс.Предмет;
			Важность = ЗадачаСсылка.БизнесПроцесс.Важность;
			СрокИсполнения = ТекущаяДата();
		КонецЕсли;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Предмет) Тогда 
		Наименование = "Зарегистрировать """ + Строка(Предмет) + """";
	Иначе
		Наименование = "Зарегистрировать ";
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Предмет) И ДелопроизводствоКлиентСервер.ЭтоСсылкаНаДокумент(Предмет) Тогда 
		Если ЗначениеЗаполнено(Предмет.РегистрационныйНомер) Тогда 
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Документ ""%1"" уже зарегистрирован!'"),
				Строка(Предмет));
		КонецЕсли;
	КонецЕсли;	 
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(Предмет) И ДелопроизводствоКлиентСервер.ЭтоСсылкаНаДокумент(Предмет) Тогда 
		Если ЗначениеЗаполнено(Предмет.РегистрационныйНомер) Тогда 
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			     	НСтр("ru = 'Документ ""%1"" уже зарегистрирован!'"),
					Строка(Предмет));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				ЭтотОбъект,
				"Предмет",,
				Отказ);
		КонецЕсли;
	КонецЕсли;		
	
	Если Не БизнесПроцессыИЗадачиПереопределяемый.ЕстьПравоДоступаУчастникаБизнесПроцесса(ЭтотОбъект, Предмет, "ЧтениеПапокИФайлов",  Исполнитель, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации, "Исполнитель") Тогда
		Отказ = Истина;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления <> Ссылка.ПометкаУдаления Тогда
		Если ПометкаУдаления Тогда 
			РаботаСБизнесПроцессами.УдалитьСостоянияБизнесПроцесса(Ссылка);
		Иначе
			ВосстановитьСостоянияБизнесПроцесса();
		КонецЕсли;	
	КонецЕсли;
	
	Если ТипЗнч(Исполнитель) = Тип("СправочникСсылка.РолиИсполнителей") Тогда
		ГруппаДоступаИсполнителей = РегистрыСведений.ИсполнителиЗадач.ГруппаДоступаИсполнителей(
			Исполнитель, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации);
	Иначе		
		ГруппаДоступаИсполнителей = Исполнитель;
	КонецЕсли;		
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Обработчики событий элементов карты маршрута

Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	ДатаНачала = ТекущаяДата();
	Записать();
	
	Если ЗначениеЗаполнено(Предмет) И ДелопроизводствоКлиентСервер.ЭтоСсылкаНаДокумент(Предмет) Тогда 
		Делопроизводство.ЗаписатьСостояниеДокумента(
			Предмет, 
			ДатаНачала, 
			Перечисления.СостоянияДокументов.НаРегистрации, 
			Ссылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗарегистрироватьПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Задача = Задачи.ЗадачаИсполнителя.СоздатьЗадачу();
	Задача.Дата  	= ТекущаяДата();
	Задача.Автор 	= Автор;
	Задача.Описание = Описание;
	Задача.Предмет 	= Предмет;
	Задача.Важность = Важность;
	
	Задача.Наименование   = Наименование;
	Задача.СрокИсполнения = СрокИсполнения;
	Задача.БизнесПроцесс  = ЭтотОбъект.Ссылка;
	Задача.ТочкаМаршрута  = ТочкаМаршрутаБизнесПроцесса;
	
	Если ТипЗнч(Исполнитель) = Тип("СправочникСсылка.Пользователи") Тогда
		Задача.Исполнитель = Исполнитель;
	Иначе
		Задача.РольИсполнителя = Исполнитель;
		Задача.ОсновнойОбъектАдресации = ОсновнойОбъектАдресации;
		Задача.ДополнительныйОбъектАдресации = ДополнительныйОбъектАдресации;
	КонецЕсли;
	
	ФормируемыеЗадачи.Добавить(Задача);
	
КонецПроцедуры

Процедура ОзнакомитьсяПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	// для вложенного бп
	Если ЗначениеЗаполнено(ВедущаяЗадача) Тогда
		Возврат;
	КонецЕсли;
	
	Задача = Задачи.ЗадачаИсполнителя.СоздатьЗадачу();
	Задача.Дата  	= ТекущаяДата();
	Задача.Автор 	= Автор;
	Задача.Предмет 	= Предмет;
	Задача.Важность = Важность;
	
	Задача.Исполнитель 	  = Автор;
	Задача.СрокИсполнения = ТекущаяДата();
	Задача.БизнесПроцесс  = Ссылка;
	Задача.ТочкаМаршрута  = ТочкаМаршрутаБизнесПроцесса;
	
	Если ЗначениеЗаполнено(Предмет) Тогда 
		Задача.Наименование = НСтр("ru = 'Ознакомиться: зарегистрирован ""'") + Строка(Предмет) + """";
	Иначе
		Задача.Наименование = НСтр("ru = 'Ознакомиться: '") + Наименование;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Предмет) И ДелопроизводствоКлиентСервер.ЭтоСсылкаНаДокумент(Предмет) Тогда 
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Документ зарегистрирован %1 под номером %2'"),
			Формат(Предмет.ДатаРегистрации, "ДЛФ=D"),
			Предмет.РегистрационныйНомер);
			
		Если ТипЗнч(Предмет) = Тип("СправочникСсылка.ИсходящиеДокументы") И Предмет.Отправлен Тогда
			ТекстСообщения = ТекстСообщения + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСТР("ru = ' и отправлен получателю %1'"),
					Формат(Предмет.ДатаОтправки, "ДЛФ=D"));
		КонецЕсли;	
		
		Задача.Описание = ТекстСообщения 
			+ ?(ПустаяСтрока(Описание), "", Символы.ПС + Символы.ПС + Описание);
	Иначе	
		Задача.Описание = Описание;
	КонецЕсли;	
	
	ФормируемыеЗадачи.Добавить(Задача);
	
КонецПроцедуры

Процедура ЗавершениеПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	ДатаЗавершения = ТекущаяДата();
	Записать();
	
КонецПроцедуры

Процедура ОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	
	Результат = Истина;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры

Процедура ИзменитьРеквизитыНевыполненныхЗадач() Экспорт 

	НачатьТранзакцию();
	Попытка
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Задачи.Ссылка
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК Задачи
		|ГДЕ
		|	Задачи.БизнесПроцесс = &БизнесПроцесс
		|	И Задачи.ПометкаУдаления = ЛОЖЬ
		|	И Задачи.Выполнена = ЛОЖЬ";
		
		Запрос.УстановитьПараметр("БизнесПроцесс", Ссылка);
		Результат = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ЗадачаОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ЗаблокироватьДанныеДляРедактирования(ЗадачаОбъект.Ссылка);
			ЗадачаОбъект.Важность = Важность;
			ЗадачаОбъект.СрокИсполнения = СрокИсполнения;
			ЗадачаОбъект.Наименование = Наименование;
			ЗадачаОбъект.Автор = Автор;
			ЗадачаОбъект.Записать();
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры 

Процедура ВосстановитьСостоянияБизнесПроцесса()
	
	Если ЗначениеЗаполнено(ДатаНачала) Тогда 
		Если ЗначениеЗаполнено(Предмет) И ДелопроизводствоКлиентСервер.ЭтоСсылкаНаДокумент(Предмет) Тогда 
			Делопроизводство.ЗаписатьСостояниеДокумента(
				Предмет, 
				ДатаНачала, 
				Перечисления.СостоянияДокументов.НаРегистрации, 
				Ссылка);
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры	
