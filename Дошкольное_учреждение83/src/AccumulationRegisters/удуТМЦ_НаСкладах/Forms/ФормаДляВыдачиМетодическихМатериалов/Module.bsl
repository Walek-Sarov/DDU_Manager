
&НаСервере
Функция ПолучитьКоличествоНаРуках(УчетнаяЕдиница, ИнвентарныйНомер)
	Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	удуМетодическиеМатериалыНаРукахОстатки.УчетнаяЕдиница,
			|	удуМетодическиеМатериалыНаРукахОстатки.ИнвентарныйНомер,
			|	СУММА(удуМетодическиеМатериалыНаРукахОстатки.КоличествоОстаток) КАК КоличествоОстаток
			|ИЗ
			|	РегистрНакопления.удуМетодическиеМатериалыНаРуках.Остатки КАК удуМетодическиеМатериалыНаРукахОстатки
			|ГДЕ
			|	удуМетодическиеМатериалыНаРукахОстатки.УчетнаяЕдиница = &УчетнаяЕдиница
			|	И удуМетодическиеМатериалыНаРукахОстатки.ИнвентарныйНомер = &ИнвентарныйНомер
			|
			|СГРУППИРОВАТЬ ПО
			|	удуМетодическиеМатериалыНаРукахОстатки.УчетнаяЕдиница,
			|	удуМетодическиеМатериалыНаРукахОстатки.ИнвентарныйНомер");
			
		Запрос.Параметры.Вставить("УчетнаяЕдиница", УчетнаяЕдиница);
		Запрос.Параметры.Вставить("ИнвентарныйНомер", ИнвентарныйНомер);
			
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда			
			Возврат Выборка.Количество();
		Иначе 			
			Возврат 0;						
		КонецЕсли;
КонецФункции
	

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

		СтандартнаяОбработка = Ложь;
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		Результат = Новый Структура("Номенклатура,ИнвентарныйНомер,ДоступноеКоличество", ТекущиеДанные.Номенклатура, ТекущиеДанные.ИнвентарныйНомер, ТекущиеДанные.КоличествоОстаток);
		
		// Проверить наличие на полке
		КоличествоНаРуках = ПолучитьКоличествоНаРуках(ТекущиеДанные.Номенклатура, ТекущиеДанные.ИнвентарныйНомер);
		Результат.ДоступноеКоличество = Результат.ДоступноеКоличество - КоличествоНаРуках;
		
		Если Результат.ДоступноеКоличество < 1 Тогда
			Вопрос("Все экземпляры выбранного методического материала находятся на руках.", РежимДиалогаВопрос.ОК);
			Возврат;
		КонецЕсли; 	
		
		Закрыть(Результат);

КонецПроцедуры

// Отбор по наименованию
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	ЭлементыОтбора = Список.Отбор.Элементы;
	
	// наименование
	Если Не ЗначениеЗаполнено(ПараметрыОтбора["УчетнаяЕдиница"]) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьОтборУСписка(Список.Отбор,
			Новый ПолеКомпоновкиДанных("УчетнаяЕдиница.Наименование"));
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаНаСодержит(
			Список.Отбор,
			Новый ПолеКомпоновкиДанных("УчетнаяЕдиница.Наименование"),
			ПараметрыОтбора["УчетнаяЕдиница"]);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьОтбор()
	
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("УчетнаяЕдиница",ОтборНаименование);
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаименованиеПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

