////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьОтбор()
	
	ПараметрыОтбора = Новый Соответствие();
	ПараметрыОтбора.Вставить("ПоказыватьЗадачи", ПоказыватьЗадачи);
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	ОбщегоНазначенияКлиентСервер.УдалитьОтборУСписка(Список.Отбор, Новый ПолеКомпоновкиДанных("Выполнена"));
	
	Если ПараметрыОтбора["ПоказыватьЗадачи"] = "Выполненные" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаНаРавенство(Список.Отбор, 
			Новый ПолеКомпоновкиДанных("Выполнена"), Истина);
	КонецЕсли;
	
	Если ПараметрыОтбора["ПоказыватьЗадачи"] = "Не выполненные" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьОтборУСпискаНаРавенство(Список.Отбор, 
			Новый ПолеКомпоновкиДанных("Выполнена"), Ложь);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СгруппироватьПоКолонке(Список, ИмяКолонкиРевизита)
	
	Список.Группировка.Элементы.Очистить();
	Если НЕ ПустаяСтрока(ИмяКолонкиРевизита) Тогда
		ПолеГруппировки = Список.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных(ИмяКолонкиРевизита);
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Список.Параметры.УстановитьЗначениеПараметра("Пользователь", ОбщегоНазначения.ТекущийПользователь());
	
	ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	Элементы.СрокИсполнения.Формат 	= ?(ИспользоватьДатуИВремяВСрокахЗадач, "ДЛФ=DT", "ДЛФ=D");
	Элементы.Дата.Формат 			= ?(ИспользоватьДатуИВремяВСрокахЗадач, "ДЛФ=DT", "ДЛФ=D");
	
	БизнесПроцессыИЗадачиСервер.УстановитьОформлениеЗадач(Список.УсловноеОформление);
	
	ПоказыватьЗадачи = "Не выполненные";
	УстановитьОтбор();
	
	РежимГруппировки = "ИсполнительРоль";
	СгруппироватьПоКолонке(Список, РежимГруппировки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗадачаВыполнена" ИЛИ ИмяСобытия = "ЗадачаИзменена" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьОтборСписка(Список, Настройки);
	СгруппироватьПоКолонке(Список, Настройки["РежимГруппировки"]);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура СгруппироватьПоБезГруппировки(Команда)
	
	РежимГруппировки = "";
	СгруппироватьПоКолонке(Список, РежимГруппировки);
	
КонецПроцедуры

&НаКлиенте
Процедура СгруппироватьПоВажности(Команда)
	
	РежимГруппировки = "Важность";
	СгруппироватьПоКолонке(Список, РежимГруппировки);
	
КонецПроцедуры

&НаКлиенте
Процедура СгруппироватьПоТочкеМаршрута(Команда)
	
	РежимГруппировки = "ТочкаМаршрута";
	СгруппироватьПоКолонке(Список, РежимГруппировки);
	
КонецПроцедуры

&НаКлиенте
Процедура СгруппироватьПоАвтору(Команда)
	
	РежимГруппировки = "Автор";
	СгруппироватьПоКолонке(Список, РежимГруппировки);
	
КонецПроцедуры

&НаКлиенте
Процедура СгруппироватьПоПредмету(Команда)
	
	РежимГруппировки = "Предмет";
	СгруппироватьПоКолонке(Список, РежимГруппировки);
	
КонецПроцедуры

&НаКлиенте
Процедура СгруппироватьПоИсполнителю(Команда)
	
	РежимГруппировки = "ИсполнительРоль";
	СгруппироватьПоКолонке(Список, РежимГруппировки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьЗадачиПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	БизнесПроцессыИЗадачиКлиент.СписокЗадачВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	БизнесПроцессыИЗадачиКлиент.СписокЗадачПередНачаломИзменения(Элемент, Отказ);
	
КонецПроцедуры

