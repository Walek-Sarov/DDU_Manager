
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
// Обновляет заголовок формы и доступность кнопок
//
// Параметры
//  Организация -	СправочникСсылка.Организации - текущая
//					организация формы
//
Процедура ОбновитьВнешнийВидФормы(мОрганизация)
	
	Если мОрганизация.Пустая() Тогда
		Заголовок = "Штатное расписание ";
	Иначе
		Заголовок = "Штатное расписание учреждения:" + " " + мОрганизация;
	КонецЕсли;
	
	Элементы.ПечатьТ3.Доступность = Не мОрганизация.Пустая();
	
КонецПроцедуры // ОбновитьВнешнийВидФормы()

&НаСервере
// Возвращает первое подразделение выбранной организации
//
// Параметры
//
// Возвращаемое значение:
//   СправочникиСсылка.ПодразделенияОрганизаций   – первое подразделение организации.
//
Функция ПервоеПодразделениеОрганизации()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПодразделенияОрганизаций.Ссылка
	|ИЗ
	|	Справочник.удуПодразделенияУчереждения КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Организация = &Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодразделенияОрганизаций.Наименование";
	
	Запрос.УстановитьПараметр("Организация", ?(Организация=Неопределено,Справочники.удуПодразделенияУчереждения.ПустаяСсылка(),Организация));
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат ?(Выборка.Следующий(), Выборка.Ссылка, Справочники.удуПодразделенияУчереждения.ПустаяСсылка());

КонецФункции // ПервоеПодразделениеОрганизации()

&НаСервере
Процедура ОтключитьОтборСписка(ИмяЭлементаОтбора)
	
	МассивДляУдаления=Новый Массив;
	
	Для Каждого ЭлементОтбора из ШтатныеЕдиницы.Отбор.Элементы цикл
		Если ЭлементОтбора.ЛевоеЗначение=Новый ПолеКомпоновкиДанных(ИмяЭлементаОтбора) тогда
			МассивДляУдаления.Добавить(ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЭлементДляУдаления из МассивДляУдаления цикл
		ШтатныеЕдиницы.Отбор.Элементы.Удалить(ЭлементДляУдаления);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСписка(ИмяЭлементаОтбора, Значение, ВидСравнения)
	
	удуОбщегоНазначенияСервер.УстановитьОтборДинамическогоСписка(ШтатныеЕдиницы, ИмяЭлементаОтбора,
	Значение, ВидСравнения);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрСпискаПодразделений()
	
	удуОбщегоНазначенияСервер.УстановитьПараметрДинамическогоСписка(Подразделения, "Организация",
	Организация);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекущимСостояниемСервер(Период)
	
	Набор = РегистрыСведений.удуШтатноеРасписаниеОрганизаций.СоздатьНаборЗаписей();
	Набор.Отбор.Период.Значение		 = Период;
	Набор.Отбор.Период.Использование = Истина;
	
	РегистрыСведений.удуШтатноеРасписаниеОрганизаций.Автозаполнение(Набор,Организация, Период);

	Если Набор.Количество() > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ШтатноеРасписаниеОрганизаций.Период,
		|	ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации,
		|	ШтатноеРасписаниеОрганизаций.Должность,
		|	ШтатноеРасписаниеОрганизаций.КоличествоСтавок,
		|	ШтатноеРасписаниеОрганизаций.МесячнаяСтавка,
		|	ШтатноеРасписаниеОрганизаций.СевернаяНадбавка,
		|	ШтатноеРасписаниеОрганизаций.НадбавкаПоРайонномуКоэффициенту,
		|	ШтатноеРасписаниеОрганизаций.ВидРасчета,
		|ИЗ
		|	РегистрСведений.удуШтатноеРасписаниеОрганизаций КАК ШтатноеРасписаниеОрганизаций
		|ГДЕ
		|	ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации.Организация <> &Организация
		|	И ШтатноеРасписаниеОрганизаций.Период = &Период"; 
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
		    ЗаполнитьЗначенияСвойств(Набор.Добавить(),Выборка)
		КонецЦикла;
		Набор.Записать(Истина);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОтработатьКнопкуИстория()
	
	Если Элементы.ШтатныеЕдиницыИстория.Пометка Тогда
		ШтатныеЕдиницы.ТекстЗапроса="ВЫБРАТЬ
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.Период КАК ДатаНачала,
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации,
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.Должность,
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.КоличествоСтавок,
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.МесячнаяСтавка,
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.СевернаяНадбавка,
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.НадбавкаПоРайонномуКоэффициенту,
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.ВидРасчета
		|ИЗ
		|	РегистрСведений.удуШтатноеРасписаниеОрганизаций КАК РегистрСведенийудуШтатноеРасписаниеОрганизаций
		|";		
		
		ШтатныеЕдиницы.ОсновнаяТаблица="РегистрСведений.удуШтатноеРасписаниеОрганизаций";
		
	Иначе 
		ШтатныеЕдиницы.ТекстЗапроса="ВЫБРАТЬ
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.Период КАК ДатаНачала,
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации,
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.Должность,
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.КоличествоСтавок,
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.МесячнаяСтавка,
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.СевернаяНадбавка,
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.НадбавкаПоРайонномуКоэффициенту,
		|	РегистрСведенийудуШтатноеРасписаниеОрганизаций.ВидРасчета
		|ИЗ
		|	РегистрСведений.удуШтатноеРасписаниеОрганизаций.СрезПоследних(, ) КАК РегистрСведенийудуШтатноеРасписаниеОрганизаций";		
		ШтатныеЕдиницы.ОсновнаяТаблица="РегистрСведений.удуШтатноеРасписаниеОрганизаций.СрезПоследних";
		
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Организация       = Настройки.Получить("Организация");
	
	// Проставляем организацию пользователя по умолчанию
	Если Организация.Пустая() Тогда
		Организация = Константы.удуОсновноеУчреждение.Получить();
		Настройки.Вставить("Организация",Организация);
	КонецЕсли;
	
	УстановитьПараметрСпискаПодразделений();
		
	Если ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
		Элементы.Подразделения.ТекущаяСтрока = ПодразделениеОрганизации;
	КонецЕсли;
	
	ОтключитьОтборСписка("ПодразделениеОрганизации.Организация");
	УстановитьОтборСписка("ПодразделениеОрганизации.Организация", Организация, ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ШтатныеЕдиницыИстория.Пометка =Ложь;
	ОбновитьВнешнийВидФормы(Организация);
	ОтработатьКнопкуИстория();
	
КонецПроцедуры




////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ПечатьТ3(Команда)
	
	СтруктураПараметров=Новый Структура;
	Если Не Организация.Пустая() Тогда
		СтруктураПараметров.Вставить("Организация", Организация);
	КонецЕсли;

	ОтборПоПодразделению=Элементы.ПоПодразделениям.Пометка;
	ТекущееПодразделение = Элементы.Подразделения.ТекущаяСтрока;
	
	Если ОтборПоПодразделению И ЗначениеЗаполнено(ТекущееПодразделение) Тогда
		СтруктураПараметров.Вставить("ПодразделениеОрганизации", ТекущееПодразделение);
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ФормироватьПриОткрытии", Истина);
	
	Форма = ПолучитьФорму("Отчет.удуУнифицированнаяФормаТ3.Форма.ФормаОтчета",СтруктураПараметров,ЭтаФорма);
	
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоПодразделениям(Команда)
	
	НоваяПометка = НЕ Элементы.ПоПодразделениям.Пометка;
	
	Элементы.ПоПодразделениям.Пометка	= НоваяПометка;
	
	Если НоваяПометка Тогда
		
		УстановитьОтборСписка("ПодразделениеОрганизации", ПодразделениеОрганизации, ВидСравненияКомпоновкиДанных.Равно);
		
	Иначе
		
		ОтключитьОтборСписка("ПодразделениеОрганизации");
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТекущимСостоянием(Команда)
	
	Если Организация.Пустая() Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст="Не указана организация!";
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	Период = ТекущаяДата();
	Если Не ВвестиДату(Период, "Дата действия штатного расписания", ЧастиДаты.Дата) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТекущимСостояниемСервер(Период);
	
КонецПроцедуры

&НаКлиенте
Процедура История(Команда)
	
	Элементы.ШтатныеЕдиницыИстория.Пометка = Не Элементы.ШтатныеЕдиницыИстория.Пометка;

	ОтработатьКнопкуИстория();
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбновитьВнешнийВидФормы(Организация);
	УстановитьПараметрСпискаПодразделений();
	
	Элементы.Подразделения.ТекущаяСтрока = ПервоеПодразделениеОрганизации();
	
	
    ОтключитьОтборСписка("ПодразделениеОрганизации.Организация");
	Если Не Организация.Пустая() Тогда
		УстановитьОтборСписка("ПодразделениеОрганизации.Организация", Организация, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;

    ОтключитьОтборСписка("ПодразделениеОрганизации");
	Если Элементы.ПоПодразделениям.Пометка Тогда
		УстановитьОтборСписка("ПодразделениеОрганизации", ПодразделениеОрганизации, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;

КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Подразделения

 &НаКлиенте
Процедура ПодразделенияПриАктивизацииСтроки(Элемент)
	
	ПодразделениеОрганизации=Элементы.Подразделения.ТекущаяСтрока;
	ОтключитьОтборСписка("ПодразделениеОрганизации");
	
	Если Элементы.ПоПодразделениям.Пометка и не ПодразделениеОрганизации=Неопределено Тогда
		УстановитьОтборСписка("ПодразделениеОрганизации", ПодразделениеОрганизации, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ШтатныеЕдиницы

&НаКлиенте
Процедура ШтатныеЕдиницыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Не Копирование Тогда
		Отказ = Истина;
		СтруктураПараметров=Новый Структура;
		СтруктураПараметров.Вставить("Организация",Организация);
		СтруктураПараметров.Вставить("ПодразделениеОрганизации",ПодразделениеОрганизации);
		ФормаЗаписи=ПолучитьФорму("РегистрСведений.удуШтатноеРасписаниеОрганизаций.Форма.ФормаЗаписи",СтруктураПараметров,ЭтаФорма);
		ФормаЗаписи.Открыть();
	КонецЕсли;
	
КонецПроцедуры










