
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура УстановитьЗаголовокФормыЗаписиШтатногоРасписания()
	
	СтрокаОписания = "Штатное расписание организации";
	
	АвтоЗаголовок = Ложь; // заголовок будем писать сами
	Заголовок = СтрокаОписания + ": " + Запись.ПодразделениеОрганизации + " " + Запись.Должность;
	
КонецПроцедуры

&НаСервере
Процедура УдалениеЗаписейРегистраСведенийОштатныхЕдиницах(пПодразделениеОрганизации, пДолжность);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ПодразделениеОрганизации",	пПодразделениеОрганизации);
	Запрос.УстановитьПараметр("Должность", 					пДолжность);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Сведения.ПодразделениеОрганизации,
	|	Сведения.Должность,
	|	Сведения.ПодразделениеОрганизацииНадбавки,
	|	Сведения.ДолжностьНадбавки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|		ШтатноеРасписаниеОрганизаций.Должность КАК Должность,
	|		СведенияОШтатныхЕдиницахОрганизации.Должность КАК ДолжностьНадбавки,
	|		СведенияОШтатныхЕдиницахОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизацииНадбавки
	|	ИЗ
	|		РегистрСведений.удуСведенияОШтатныхЕдиницахОрганизаций КАК СведенияОШтатныхЕдиницахОрганизации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуШтатноеРасписаниеОрганизаций КАК ШтатноеРасписаниеОрганизаций
	|			ПО СведенияОШтатныхЕдиницахОрганизации.ПодразделениеОрганизации = ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации
	|				И СведенияОШтатныхЕдиницахОрганизации.Должность = ШтатноеРасписаниеОрганизаций.Должность
	|	ГДЕ
	|		СведенияОШтатныхЕдиницахОрганизации.ПодразделениеОрганизации = &ПодразделениеОрганизации
	|		И СведенияОШтатныхЕдиницахОрганизации.Должность = &Должность) КАК Сведения
	|ГДЕ
	|	(Сведения.ПодразделениеОрганизации ЕСТЬ NULL 
	|			ИЛИ Сведения.Должность ЕСТЬ NULL )";
	
	НаборЗаписей = РегистрыСведений.удуСведенияОШтатныхЕдиницахОрганизаций.СоздатьНаборЗаписей();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей.Отбор.Должность.Установить(Выборка.ДолжностьНадбавки);
		НаборЗаписей.Отбор.ПодразделениеОрганизации.Установить(Выборка.ПодразделениеОрганизацииНадбавки);
		
		НаборЗаписей.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УдалениеЗаписейРегистраНадбавки(пПериод, пДолжность, пПодразделениеОрганизации);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Период",						пПериод);
	Запрос.УстановитьПараметр("ПодразделениеОрганизации",	пПодразделениеОрганизации);
	Запрос.УстановитьПараметр("Должность", 					пДолжность);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Надбавки.ПодразделениеОрганизации,
	|	Надбавки.Должность,
	|	Надбавки.ПодразделениеОрганизацииНадбавки,
	|	Надбавки.ДолжностьНадбавки,
	|	Надбавки.Период,
	|	Надбавки.ПериодНадбавки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|		ШтатноеРасписаниеОрганизаций.Должность КАК Должность,
	|		НадбавкиПоШтатномуРасписаниюОрганизаций.Должность КАК ДолжностьНадбавки,
	|		НадбавкиПоШтатномуРасписаниюОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизацииНадбавки,
	|		ШтатноеРасписаниеОрганизаций.Период КАК Период,
	|		НадбавкиПоШтатномуРасписаниюОрганизаций.Период КАК ПериодНадбавки
	|	ИЗ
	|		РегистрСведений.удуНадбавкиПоШтатномуРасписаниюОрганизаций КАК НадбавкиПоШтатномуРасписаниюОрганизаций
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуШтатноеРасписаниеОрганизаций КАК ШтатноеРасписаниеОрганизаций
	|			ПО НадбавкиПоШтатномуРасписаниюОрганизаций.ПодразделениеОрганизации = ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации
	|				И НадбавкиПоШтатномуРасписаниюОрганизаций.Должность = ШтатноеРасписаниеОрганизаций.Должность
	|				И НадбавкиПоШтатномуРасписаниюОрганизаций.Период = ШтатноеРасписаниеОрганизаций.Период
	|	ГДЕ
	|		НадбавкиПоШтатномуРасписаниюОрганизаций.ПодразделениеОрганизации = &ПодразделениеОрганизации
	|		И НадбавкиПоШтатномуРасписаниюОрганизаций.Должность = &Должность
	|		И НадбавкиПоШтатномуРасписаниюОрганизаций.Период = &Период) КАК Надбавки
	|ГДЕ
	|	(Надбавки.ПодразделениеОрганизации ЕСТЬ NULL 
	|			ИЛИ Надбавки.Должность ЕСТЬ NULL )";
	
	
	НаборЗаписей = РегистрыСведений.удуНадбавкиПоШтатномуРасписаниюОрганизаций.СоздатьНаборЗаписей();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей.Отбор.Период.Установить(Выборка.ПериодНадбавки);
		НаборЗаписей.Отбор.Должность.Установить(Выборка.ДолжностьНадбавки);
		НаборЗаписей.Отбор.ПодразделениеОрганизации.Установить(Выборка.ПодразделениеОрганизацииНадбавки);
		
		НаборЗаписей.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыНабораЗаписей(Подразделение, Должность, Период = Неопределено)
	
	мНабор=ДанныеФормыВЗначение(НаборЗаписейСведенияОШтатныхЕдиницахОрганизации,Тип("РегистрСведенийНаборЗаписей.удуСведенияОШтатныхЕдиницахОрганизаций"));

	
	мНабор.Отбор.Должность.Значение			= Должность;
	мНабор.Отбор.Должность.Использование	= Истина;

	
	мНабор.Отбор.ПодразделениеОрганизации.Значение			= Подразделение;
	мНабор.Отбор.ПодразделениеОрганизации.Использование	= Истина;
	
	Если Период <> Неопределено Тогда
	мНабор.Отбор.Период.Значение			= Период;
	мНабор.Отбор.Период.Использование	= Истина;
	КонецЕсли;
	
	Для Каждого ЗаписьСведений Из мНабор Цикл
		ЗаписьСведений.ПодразделениеОрганизации	= Подразделение;
		ЗаписьСведений.Должность				= Должность;
		Если Период <> Неопределено Тогда
			ЗаписьСведений.Период				= Период;
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеВДанныеФормы(мНабор,НаборЗаписейСведенияОШтатныхЕдиницахОрганизации);
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНадбавок()
	
	 Запрос=Новый Запрос;
	 Запрос.Текст="ВЫБРАТЬ
	              |	удуНадбавкиПоШтатномуРасписаниюОрганизаций.ВидНадбавки,
	              |	удуНадбавкиПоШтатномуРасписаниюОрганизаций.Показатель1 КАК Размер1,
	              |	удуНадбавкиПоШтатномуРасписаниюОрганизаций.МесячныйРазмер
	              |ИЗ
	              |	РегистрСведений.удуНадбавкиПоШтатномуРасписаниюОрганизаций КАК удуНадбавкиПоШтатномуРасписаниюОрганизаций
	              |ГДЕ
	              |	удуНадбавкиПоШтатномуРасписаниюОрганизаций.Период = &Период
	              |	И удуНадбавкиПоШтатномуРасписаниюОрганизаций.ПодразделениеОрганизации = &ПодразделениеОрганизации
	              |	И удуНадбавкиПоШтатномуРасписаниюОрганизаций.Должность = &Должность";
				  
	Запрос.УстановитьПараметр("Период",Запись.Период);
	Запрос.УстановитьПараметр("ПодразделениеОрганизации",Запись.ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("Должность",Запись.Должность);
	Запрос.УстановитьПараметр("ПустойПоказатель",Справочники.удуПоказателиСхемМотивации.ПустаяСсылка());
	
	ТЗ=Запрос.Выполнить().Выгрузить();
		
	ЗначениеВРеквизитФормы(ТЗ,"ТабличноеПолеНадбавки");
		
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеДляВыбораВидаРасчета(ВыборНадбавок=истина,НастройкиОтбора=истина,Текст="")
	
	Если ВыборНадбавок тогда 	
		Возврат	удуПроцедурыУправленияПерсоналом.ПолучитьОтборыНадбавокСотрудникаИлиДанныеДляОтбора(НастройкиОтбора,Текст);
	Иначе 
		Возврат	удуПроцедурыУправленияПерсоналом.ПолучитьОтборыОсновногоНачисленияСотрудника(НастройкиОтбора,Текст);
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура РассчитатьСуммуВсегоПоСтрокеШтатногоРасписания()
		
	ВсегоПоСтрокеШтатногоРасписания = Запись.МесячнаяСтавка + Запись.СевернаяНадбавка + Запись.НадбавкаПоРайонномуКоэффициенту+ТабличноеПолеНадбавки.Итог("МесячныйРазмер");

КонецПроцедуры

&НаСервере
Процедура УстановитьДатуОкончанияДействия();
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ШтатноеРасписаниеОрганизаций.Период КАК Период
	                      |ИЗ
	                      |	РегистрСведений.удуШтатноеРасписаниеОрганизаций КАК ШтатноеРасписаниеОрганизаций
	                      |ГДЕ
	                      |	ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации = &ПодразделениеОрганизации
	                      |	И ШтатноеРасписаниеОрганизаций.Должность = &Должность
	                      |	И ШтатноеРасписаниеОрганизаций.Период > &Период
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Период";
						  
	Запрос.УстановитьПараметр("ПодразделениеОрганизации", Запись.ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("Должность", Запись.Должность);
	Запрос.УстановитьПараметр("Период", Запись.Период);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Элементы.СрокДействияПо.Заголовок = Формат(Выборка.Период, "ДФ='""по"" дд MMMM ггг ""г""'");
	Иначе 
		Элементы.СрокДействияПо.Заголовок = "по настоящее время";
	КонецЕсли;
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Организация) тогда
		Организация=Параметры.Организация;
	Иначе
		 Организация= Константы.удуОсновноеУчреждение.Получить();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ПодразделениеОрганизации) тогда
		 Запись.ПодразделениеОрганизации=Параметры.ПодразделениеОрганизации;
	КонецЕсли;
	
	ЗаполнитьТаблицуНадбавок();
	
	мПериодДо			= Запись.Период;
	мДолжностьДо		= Запись.Должность;
	мПодразделениеДо	= Запись.ПодразделениеОрганизации;
	
	НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Отбор.Должность.Значение		= Запись.Должность;
	НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Отбор.Должность.Использование	= Истина;
	
	НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Отбор.ПодразделениеОрганизации.Значение			= Запись.ПодразделениеОрганизации;
	НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Отбор.ПодразделениеОрганизации.Использование	= Истина;
	
	мНаборЗаписейСведенияОШтатныхЕдиницахОрганизации=ДанныеФормыВЗначение(НаборЗаписейСведенияОШтатныхЕдиницахОрганизации,Тип("РегистрСведенийНаборЗаписей.удуСведенияОШтатныхЕдиницахОрганизаций"));
	мНаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Прочитать();
	ЗначениеВДанныеФормы(мНаборЗаписейСведенияОШтатныхЕдиницахОрганизации,НаборЗаписейСведенияОШтатныхЕдиницахОрганизации);
	
	
	
	Если НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Количество() > 0 тогда
		ЗаписьСведения 					= НаборЗаписейСведенияОШтатныхЕдиницахОрганизации[0];
		Информация				= ЗаписьСведения.Информация;
		ДолжностныеОбязанности	= ЗаписьСведения.ДолжностныеОбязанности;
		ДолженЗнать				= ЗаписьСведения.ДолженЗнать;
		ТребованияККвалификации	= ЗаписьСведения.ТребованияККвалификации;
	КонецЕсли;
	
	УстановитьЗаголовокФормыЗаписиШтатногоРасписания();
	РассчитатьСуммуВсегоПоСтрокеШтатногоРасписания();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	 УстановитьДатуОкончанияДействия();
	 
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УдалениеЗаписейРегистраНадбавки(мПериодДо, мДолжностьДо, мПодразделениеДо);
	УдалениеЗаписейРегистраСведенийОштатныхЕдиницах(мПодразделениеДо, мДолжностьДо);
	
	УдалениеЗаписейРегистраНадбавки(Запись.Период, Запись.Должность, Запись.ПодразделениеОрганизации);
	УдалениеЗаписейРегистраСведенийОштатныхЕдиницах(Запись.ПодразделениеОрганизации, Запись.Должность);
	
	Если Модифицированность тогда
		СообщениеПользователю=Новый СообщениеПользователю;
		СообщениеПользователю.УстановитьДанные(Запись);
		ТекстСообщения="";

		СообщениеОбОшибке = Ложь;

		ДублируемыеНадбавки = Новый Соответствие;

		Для Каждого ТекНадбавка Из ТабличноеПолеНадбавки Цикл
			Если ЗначениеЗаполнено(ТекНадбавка.ВидНадбавки) тогда
				ДублируемаяНадбавка = ДублируемыеНадбавки[ТекНадбавка.ВидНадбавки];
				Если ДублируемаяНадбавка = Неопределено Тогда
					ДублируемыеНадбавки.Вставить(ТекНадбавка.ВидНадбавки, Истина);
				ИначеЕсли ДублируемаяНадбавка = Истина Тогда
					ТекстСообщения=ТекстСообщения+?(ЗначениеЗаполнено(ТекстСообщения),Символы.ВК,"")+"Вид надбавки """ + ТекНадбавка.ВидНадбавки + """ выбран более одного раза!";
					СообщениеОбОшибке = Истина;
					ДублируемыеНадбавки.Вставить(ТекНадбавка.ВидНадбавки, Ложь);
				КонецЕсли;
			Иначе
				ТекстСообщения=ТекстСообщения+?(ЗначениеЗаполнено(ТекстСообщения),Символы.ВК,"")+"Поле ""Вид надбавки"" не может быть пустым!";
				СообщениеОбОшибке = Истина;
			КонецЕсли;
		КонецЦикла;

		Если СообщениеОбОшибке Тогда
			ТекстСообщения=ТекстСообщения+Символы.ВК+"Запись строки штатного расписания отменена!";
            СообщениеПользователю.Сообщить();
			

			Отказ = Истина;
			Модифицированность = Истина;
			Возврат;
		КонецЕсли;

		НаборЗаписейНадбавки=РегистрыСведений.удуНадбавкиПоШтатномуРасписаниюОрганизаций.СоздатьНаборЗаписей();
		НаборЗаписейНадбавки.Отбор.Период.Установить(Запись.Период);
		НаборЗаписейНадбавки.Отбор.Должность.Установить(Запись.Должность);
		НаборЗаписейНадбавки.Отбор.ПодразделениеОрганизации.Установить(Запись.ПодразделениеОрганизации);
		
		Для Каждого ЭлементКоллекции из ТабличноеПолеНадбавки Цикл 
			ЗаписьНадбавки=НаборЗаписейНадбавки.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНадбавки,Запись,"Период,Должность,ПодразделениеОрганизации");
			ЗаполнитьЗначенияСвойств(ЗаписьНадбавки,ЭлементКоллекции,"ВидНадбавки,МесячныйРазмер");
			ЗаписьНадбавки.Показатель1=ЭлементКоллекции.Размер1;
		КонецЦикла;
		
		НаборЗаписейНадбавки.Записать(Истина);
	КонецЕсли;

	
	Если НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Количество() = 0 тогда
		
		НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Отбор.Должность.Значение		= Запись.Должность;
		НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Отбор.Должность.Использование 	= Истина;
		
		НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Отбор.ПодразделениеОрганизации.Значение	   		= Запись.ПодразделениеОрганизации;
		НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Отбор.ПодразделениеОрганизации.Использование	= Истина;
		
		ЗаписьСведения = НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Добавить();
	Иначе
		ЗаписьСведения = НаборЗаписейСведенияОШтатныхЕдиницахОрганизации[0];
	КонецЕсли;
	
	Если ЗаписьСведения.Информация 				 <> Информация ИЛИ
		ЗаписьСведения.ДолжностныеОбязанности 	 <> ДолжностныеОбязанности ИЛИ
		ЗаписьСведения.ДолженЗнать 			 <> ДолженЗнать ИЛИ
		ЗаписьСведения.ТребованияККвалификации  <> ТребованияККвалификации ИЛИ
		ЗаписьСведения.Должность 				 <> Запись.Должность ИЛИ
		ЗаписьСведения.ПодразделениеОрганизации <> Запись.ПодразделениеОрганизации тогда
		ЗаписьСведения 							= НаборЗаписейСведенияОШтатныхЕдиницахОрганизации[0];
		ЗаписьСведения.Должность				= Запись.Должность;
		ЗаписьСведения.ПодразделениеОрганизации = Запись.ПодразделениеОрганизации;
		ЗаписьСведения.Информация				= Информация;
		ЗаписьСведения.ДолжностныеОбязанности	= ДолжностныеОбязанности;
		ЗаписьСведения.ДолженЗнать				= ДолженЗнать;
		ЗаписьСведения.ТребованияККвалификации	= ТребованияККвалификации;
		мНаборЗаписейСведенияОШтатныхЕдиницахОрганизации=ДанныеФормыВЗначение(НаборЗаписейСведенияОШтатныхЕдиницахОрганизации,Тип("РегистрСведенийНаборЗаписей.удуСведенияОШтатныхЕдиницахОрганизаций"));
		мНаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Записать(Истина);
		ЗначениеВДанныеФормы(мНаборЗаписейСведенияОШтатныхЕдиницахОрганизации,НаборЗаписейСведенияОШтатныхЕдиницахОрганизации);
	КонецЕсли;

КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ФОРМЫ

&НаКлиенте
Процедура ПодразделениеОрганизацииПриИзменении(Элемент)
	
	ЗаполнитьРеквизитыНабораЗаписей(Запись.ПодразделениеОрганизации, Запись.Должность);
	ЗаполнитьТаблицуНадбавок();	
	УстановитьЗаголовокФормыЗаписиШтатногоРасписания();
    РассчитатьСуммуВсегоПоСтрокеШтатногоРасписания();
	
КонецПроцедуры

&НаКлиенте
Процедура ДолжностьПриИзменении(Элемент)
	
	ЗаполнитьРеквизитыНабораЗаписей(Запись.ПодразделениеОрганизации, Запись.Должность);
	УстановитьЗаголовокФормыЗаписиШтатногоРасписания();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидРасчетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НастройкиОтбора=ПолучитьДанныеДляВыбораВидаРасчета(Ложь);
	удуДокументыКадровогоУчетаКлиент.ОткрытьФормуВыбораОсновныеНачисленияОрганизаций(Элемент,НастройкиОтбора);
	СтандартнаяОбработка=Ложь;

КонецПроцедуры

&НаКлиенте
Процедура МесячнаяСтавкаПриИзменении(Элемент)
	
	РассчитатьСуммуВсегоПоСтрокеШтатногоРасписания();
	
КонецПроцедуры

&НаКлиенте
Процедура СевернаяНадбавкаПриИзменении(Элемент)
	РассчитатьСуммуВсегоПоСтрокеШтатногоРасписания();
КонецПроцедуры

&НаКлиенте
Процедура НадбавкаПоРайонномуКоэффициентуПриИзменении(Элемент)
	РассчитатьСуммуВсегоПоСтрокеШтатногоРасписания();
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	УстановитьДатуОкончанияДействия();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ТабличноеПолеНадбавки

&НаКлиенте
Процедура ТабличноеПолеНадбавкиПриИзменении(Элемент)
	
	Модифицированность=Истина;
	РассчитатьСуммуВсегоПоСтрокеШтатногоРасписания();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ ТабличноеПолеНадбавки

&НаКлиенте
Процедура ТабличноеПолеНадбавкиВидНадбавкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НастройкиОтбора=ПолучитьДанныеДляВыбораВидаРасчета();
	удуДокументыКадровогоУчетаКлиент.ОткрытьФормуВыбораОсновныеНачисленияОрганизаций(Элемент,НастройкиОтбора);
	СтандартнаяОбработка=Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличноеПолеНадбавкиВидНадбавкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ДанныеВыбора=ПолучитьДанныеДляВыбораВидаРасчета(,Ложь,Текст+"%");
	СтандартнаяОбработка=Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ТабличноеПолеНадбавкиВидНадбавкиОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ДанныеВыбора=ПолучитьДанныеДляВыбораВидаРасчета(,Ложь,Текст+"%");
	СтандартнаяОбработка=Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличноеПолеНадбавкиВидНадбавкиОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
КонецПроцедуры














