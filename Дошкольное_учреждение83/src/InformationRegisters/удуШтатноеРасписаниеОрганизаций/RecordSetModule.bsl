Перем мНазначитьПорядок Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ 


Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	
	Для Каждого Запись Из ЭтотОбъект Цикл
		Ошибка = Ложь;
		Если Не ЗначениеЗаполнено(Запись.Период) Тогда
			
			СрокаСообщенияОбОшибке = "Для строки штатного расписания не указана дата, с которой она действует.";
			Отказ=Истина;
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст=СрокаСообщенияОбОшибке;
			СообщениеПользователю.Сообщить();
			
		КонецЕсли;
		Если Запись.ПодразделениеОрганизации.Пустая() Тогда
			
			СрокаСообщенияОбОшибке = "Для строки штатного расписания не указано подразделение.";
			Отказ=Истина;
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст=СрокаСообщенияОбОшибке;
			СообщениеПользователю.Сообщить();
			
		КонецЕсли;
		Если Запись.Должность.Пустая() Тогда
			
			СрокаСообщенияОбОшибке = "Для строки штатного расписания не указана должность.";
			Отказ=Истина;
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст=СрокаСообщенияОбОшибке;
			СообщениеПользователю.Сообщить();
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Запись.ВидРасчета) Тогда
			СрокаСообщенияОбОшибке="Для строки штатного расписания не указан вид расчета";
			Отказ=Истина;
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст=СрокаСообщенияОбОшибке;
			СообщениеПользователю.Сообщить();
		КонецЕсли;

		
		
	КонецЦикла;
	
	Если Отказ Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст="Элемент не записан!";
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	
	// заполнить организацию в наборе записей
	ПодразделенияМассив = Новый Массив;
	ПодразделенияСоответствие = Новый Соответствие;
	Для Каждого ТекущаяЗапись Из ЭтотОбъект Цикл
		Если ПодразделенияСоответствие[ТекущаяЗапись.ПодразделениеОрганизации] = НеОпределено Тогда
			ПодразделенияСоответствие[ТекущаяЗапись.ПодразделениеОрганизации] = 0;
			ПодразделенияМассив.Добавить(ТекущаяЗапись.ПодразделениеОрганизации);
		КонецЕсли;
	КонецЦикла;
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПодразделенияОрганизаций.Ссылка,
	                      |	ПодразделенияОрганизаций.Организация КАК Организация
	                      |ИЗ
	                      |	Справочник.удуПодразделенияУчереждения КАК ПодразделенияОрганизаций
	                      |ГДЕ
	                      |	ПодразделенияОрганизаций.Ссылка В(&ПодразделенияМассив)");
						  
	Запрос.УстановитьПараметр("ПодразделенияМассив", ПодразделенияМассив);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПодразделенияСоответствие[Выборка.Ссылка] = Выборка.Организация;
	КонецЦикла;
	Для Каждого ТекущаяЗапись Из ЭтотОбъект Цикл
		ТекущаяЗапись.Организация = ПодразделенияСоответствие[ТекущаяЗапись.ПодразделениеОрганизации];
	КонецЦикла;

	ЗаполнитьПорядок = Ложь;
	Для Каждого Стока Из ЭтотОбъект Цикл
		Если Стока.Порядок = 0 Тогда
			ЗаполнитьПорядок = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Если мНазначитьПорядок И ЭтотОбъект.Количество() <> 0 и ЗаполнитьПорядок Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НаборЗаписей.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	НаборЗаписей.Должность КАК Должность,
		|	НаборЗаписей.Организация КАК Организация
		|ПОМЕСТИТЬ ВТНаборЗаписей
		|ИЗ
		|	&НаборЗаписей КАК НаборЗаписей
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ПодразделениеОрганизации,
		|	Должность
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НаборЗаписей.Организация КАК Организация,
		|	НаборЗаписей.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	НаборЗаписей.Должность КАК Должность,
		|	ВЫБОР
		|		КОГДА Регистр.Порядок ЕСТЬ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА РегистрПоОрганизации.Порядок ЕСТЬ NULL 
		|						ТОГДА 1
		|					ИНАЧЕ РегистрПоОрганизации.Порядок + 1
		|				КОНЕЦ
		|		ИНАЧЕ Регистр.Порядок
		|	КОНЕЦ КАК Порядок
		|ИЗ
		|	ВТНаборЗаписей КАК НаборЗаписей
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.удуШтатноеРасписаниеОрганизаций КАК Регистр
		|		ПО НаборЗаписей.Организация = Регистр.Организация
		|			И НаборЗаписей.ПодразделениеОрганизации = Регистр.ПодразделениеОрганизации
		|			И НаборЗаписей.Должность = Регистр.Должность
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			РегистрПоОрганизации.Организация КАК Организация,
		|			МАКСИМУМ(РегистрПоОрганизации.Порядок) КАК Порядок
		|		ИЗ
		|			РегистрСведений.удуШтатноеРасписаниеОрганизаций КАК РегистрПоОрганизации
		|		ГДЕ
		|			РегистрПоОрганизации.Организация В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТНаборЗаписей.Организация
		|					ИЗ
		|						ВТНаборЗаписей)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			РегистрПоОрганизации.Организация) КАК РегистрПоОрганизации
		|		ПО НаборЗаписей.Организация = РегистрПоОрганизации.Организация");
		Запрос.УстановитьПараметр("НаборЗаписей", ЭтотОбъект);
		Выборка = Запрос.Выполнить().Выбрать();
		СтруктураПоиска = Новый Структура("ПодразделениеОрганизации, Должность, Организация");

		Для Каждого ТекущаяЗапись Из ЭтотОбъект Цикл
			Выборка.Сбросить();
			СтруктураПоиска.ПодразделениеОрганизации = ТекущаяЗапись.ПодразделениеОрганизации;
			СтруктураПоиска.Должность = ТекущаяЗапись.Должность;
			СтруктураПоиска.Организация = ТекущаяЗапись.Организация;
			Выборка.НайтиСледующий(СтруктураПоиска);
			ТекущаяЗапись.Порядок = Выборка.Порядок;
		КонецЦикла;
	КонецЕсли;

	
	
	
	
	
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

КонецПроцедуры


мНазначитьПорядок = Истина;