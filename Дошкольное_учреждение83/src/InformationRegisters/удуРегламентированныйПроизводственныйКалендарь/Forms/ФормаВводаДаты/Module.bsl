
&НаСервере
Функция ПолучитьИзХранилища(АдресВХранилище)
	
	Возврат ПолучитьИзВременногоХранилища(АдресВХранилище);
		
КонецФункции

&НаСервере
Функция ПроверитьПравильностьВыбораДатыСервер(ТекстПредупреждения,ВыбраннаяДата,ВыбраннаяДатаПереноса)
	
	ДеньНеделиВыбраннойДаты = ДеньНедели(ВыбраннаяДата);
	ДеньНеделиВыбраннойДатыПереноса = ДеньНедели(ВыбраннаяДатаПереноса);
	ВыбраннаяДатаЭтоВыходной = (ДеньНеделиВыбраннойДаты = 6) Или (ДеньНеделиВыбраннойДаты = 7);
	ВыбраннаяДатаПереносаЭтоВыходной = (ДеньНеделиВыбраннойДатыПереноса = 6) ИЛИ (ДеньНеделиВыбраннойДатыПереноса = 7); 
	
	ТЗРегистра=ТаблицаРегистра.Выгрузить();
	
	СтрокаВыбраннойДаты = ТЗРегистра.Найти(ВыбраннаяДата, "ДатаКалендаря");
	Если СтрокаВыбраннойДаты <> Неопределено Тогда
		ВыбраннаяДатаЭтоПраздник = 	СтрокаВыбраннойДаты.ВидДня = Перечисления.удуВидыДнейПроизводственногоКалендаря.Праздник;
	Иначе
		ВыбраннаяДатаЭтоПраздник = Ложь;
	КонецЕсли;
	СтрокаВыбраннойДатыПереноса = ТЗРегистра.Найти(ВыбраннаяДатаПереноса, "ДатаКалендаря");
	Если СтрокаВыбраннойДатыПереноса <> Неопределено Тогда
		ВыбраннаяДатаПереносаЭтоПраздник = СтрокаВыбраннойДатыПереноса.ВидДня = Перечисления.удуВидыДнейПроизводственногоКалендаря.Праздник;
	Иначе
		ВыбраннаяДатаПереносаЭтоПраздник = Ложь;
	КонецЕсли;
	
	НачальнаяЧастьСтрокиПредупреждения = формат(ВыбраннаяДата, "ДФ = ""д ММММ, дддд""")+" на "+
			формат(ВыбраннаяДатаПереноса, "ДФ = ""д ММММ, дддд""")+".";
			
	Если (ВыбраннаяДатаЭтоВыходной И ВыбраннаяДатаПереносаЭтоВыходной) 

		ИЛИ (НЕ ВыбраннаяДатаЭтоВыходной И НЕ ВыбраннаяДатаПереносаЭтоВыходной
			И НЕ ВыбраннаяДатаПереносаЭтоПраздник) Тогда
		
		ТекстПредупреждения="Вы выполняете перенос "+НачальнаяЧастьСтрокиПредупреждения + " При переносе "+
			?(ВыбраннаяДатаЭтоВыходной, "праздничного дня вы можете выбрать только рабочий день.",
			"рабочего дня вы можете выбрать только праздничный день.");
		Возврат Ложь;
	КонецЕсли;

	Для Каждого СтрокаТаблицы Из ТаблицаПеренесенныхДней Цикл
		
		ВыбраннаяДатаПереносаРабочийДень = СтрокаТаблицы.РабочийДень = ВыбраннаяДатаПереноса;
		ВыбраннаяДатаРабочийДень = СтрокаТаблицы.РабочийДень = ВыбраннаяДата;
		ВыбраннаяДатаПереносаВыходнойДень = СтрокаТаблицы.ВыходнойДень = ВыбраннаяДатаПереноса;
		ВыбраннаяДатаВыходнойДень = СтрокаТаблицы.ВыходнойДень = ВыбраннаяДата;
		
		Если (ВыбраннаяДатаПереносаРабочийДень И НЕ ВыбраннаяДатаВыходнойДень)
			ИЛИ (ВыбраннаяДатаПереносаВыходнойДень И НЕ ВыбраннаяДатаРабочийДень)
			ИЛИ (ВыбраннаяДатаВыходнойДень И НЕ ВыбраннаяДатаПереносаРабочийДень)
			ИЛИ (ВыбраннаяДатаРабочийДень И НЕ ВыбраннаяДатаПереносаВыходнойДень) Тогда
			
			ТекстПредупреждения="Указанный день уже участвовал в переносе:"+Символы.ПС+НачальнаяЧастьСтрокиПредупреждения;
			Возврат Ложь;
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
	
КонецФункции

&НаКлиенте
Функция ПроверитьПравильностьВыбораДаты()
	
	ВыбраннаяДата = ИсходнаяДата;
	ВыбраннаяДатаПереноса = КалендарнаяДата;
	Отказ=Истина;
	
	Если ВыбраннаяДата = ВыбраннаяДатаПереноса Тогда
		Предупреждение("Выбраны одинаковые даты!");
		Возврат Ложь;
	КонецЕсли;
	
	ГодВыбраннойДаты = Год(ВыбраннаяДата);
	
	Если (ГодВыбраннойДаты <> Год(ВыбраннаяДатаПереноса)) Тогда
		Предупреждение("Выбираемая дата должна быть из "+Строка(ГодВыбраннойДаты)+" года");
		Возврат Ложь;
	КонецЕсли;
	
	ТекстПредупреждения="";
	
	Отказ=ПроверитьПравильностьВыбораДатыСервер(ТекстПредупреждения,ВыбраннаяДата,ВыбраннаяДатаПереноса);
	
	Если ЗначениеЗаполнено(ТекстПредупреждения) тогда
		Предупреждение(ТекстПредупреждения);
	КонецЕсли;		
	 
	Возврат Отказ;

КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	  КалендарнаяДата=Параметры.КалендарнаяДата;
	  Пояснение=Параметры.ТекстПояснения;
	  ЗначениеВДанныеФормы(ПолучитьИзХранилища(Параметры.ТаблицаРегистраАдрес),ТаблицаРегистра);
	  ЗначениеВДанныеФормы(ПолучитьИзХранилища(Параметры.ТаблицаПеренесенныхДнейАдрес),ТаблицаПеренесенныхДней);
	    
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИсходнаяДата = КалендарнаяДата;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	Если ПроверитьПравильностьВыбораДаты() Тогда
		Закрыть(КалендарнаяДата);
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура КалендарнаяДатаВыбор(Элемент, ВыбраннаяДата)
	
	Если ПроверитьПравильностьВыбораДаты() Тогда
		Закрыть(КалендарнаяДата);
	КонецЕсли;
	
КонецПроцедуры

