
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
Процедура ОбновитьВнешнийВидФормы(мОрганизация)
	
	Если мОрганизация.Пустая() Тогда
		Заголовок = "Дополнительная информация о штатных единицах организаций";
	Иначе
		Заголовок = "Дополнительная информация о штатных единицах организации:" + " " + мОрганизация;
	КонецЕсли;
	
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()


&НаСервере
Процедура УстановитьПараметрСпискаПодразделений()
	
	удуОбщегоНазначенияСервер.УстановитьПараметрДинамическогоСписка(Подразделения, "Организация",
	Организация);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОрганизациюПоУмолчанию()
	
	Возврат Константы.удуОсновноеУчреждение.Получить();
	
КонецФункции

&НаСервере
Процедура ОтключитьОтборСписка(ИмяЭлементаОтбора)
	
	МассивДляУдаления=Новый Массив;
	
	Для Каждого ЭлементОтбора из ШтатныеЕдиницы.Отбор.Элементы цикл
		Если ЭлементОтбора.ЛевоеЗначение=Новый ПолеКомпоновкиДанных(ИмяЭлементаОтбора) тогда
			МассивДляУдаления.Добавить(ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЭлементДляУдаления из МассивДляУдаления цикл
		ШтатныеЕдиницы.Отбор.Элементы.Удалить(ЭлементДляУдаления);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСписка(ИмяЭлементаОтбора, Значение, ВидСравнения)
	
	удуОбщегоНазначенияСервер.УстановитьОтборДинамическогоСписка(ШтатныеЕдиницы, ИмяЭлементаОтбора,
	Значение, ВидСравнения);
	
КонецПроцедуры





////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ


&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Организация       = Настройки.Получить("Организация");
	
	// проставляем организацию пользователя по умолчанию
	Если Организация.Пустая() Тогда
		Организация = Константы.удуОсновноеУчреждение.Получить();
		Настройки.Вставить("Организация",Организация);
	КонецЕсли;
	
	УстановитьПараметрСпискаПодразделений();
	Если Организация.Пустая() тогда
		 ОтключитьОтборСписка("ПодразделениеОрганизации");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьВнешнийВидФормы(Организация);
	
КонецПроцедуры


&НаКлиенте
Процедура ПриПовторномОткрытии(СтандартнаяОбработка)
	
	Если Организация.Пустая() Тогда
		Организация = ПолучитьОрганизациюПоУмолчанию();
	КонецЕсли;
	
	УстановитьПараметрСпискаПодразделений();
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

&НаКлиенте
// Процедура прописывает заголовок формы 
//
// Параметры:
//  Элемент - элемент формы, который отображает организацию
//  
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбновитьВнешнийВидФормы(Организация);
	УстановитьПараметрСпискаПодразделений();
	Если Организация.Пустая() тогда
		 ОтключитьОтборСписка("ПодразделениеОрганизации");
	КонецЕсли;

	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ событий табличных полей

&НаКлиенте
// Процедура обеспечивает отбор по подразделению в списке 
// должностей. 
//
// Параметры:
//  Элемент      - элемент формы, который отображает подразделение
//  
Процедура ПодразделенияПриАктивизацииСтроки(Элемент)
	
	ПодразделениеОрганизации=Элементы.Подразделения.ТекущаяСтрока;
	ОтключитьОтборСписка("ПодразделениеОрганизации");
	Если не ПодразделениеОрганизации=Неопределено тогда
		УстановитьОтборСписка("ПодразделениеОрганизации", ПодразделениеОрганизации, ВидСравненияКомпоновкиДанных.Равно);
    КонецЕсли;
		
КонецПроцедуры // ПодразделенияПриАктивизацииСтроки()

&НаКлиенте
// Процедура запрещает ввод штатной единицы при неуказанном подразделении
// информации 
//
// Параметры:
//  Элемент      - элемент формы, который отображает список штатных
//				   единиц.
//  
Процедура ШтатныеЕдиницыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если НЕ ЗначениеЗаполнено(Элементы.Подразделения.ТекущаяСтрока) тогда
		Предупреждение("Не выбрано подразделение!");
		Отказ = Истина;
	КонецЕсли;	

КонецПроцедуры






