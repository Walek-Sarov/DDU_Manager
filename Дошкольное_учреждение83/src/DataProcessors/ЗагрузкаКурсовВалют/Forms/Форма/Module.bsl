////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Установка даты начала и конца для загрузки курсов по умолчанию
	ТекущаяДата = ТекущаяДатаСеанса();
	Объект.НачалоПериодаЗагрузки = НачалоМесяца(ТекущаяДата);
	Объект.ОкончаниеПериодаЗагрузки = ТекущаяДата;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(РезультатВыбора, ИсточникВыбора)
	
	// Выбор валюты в форме выбора
	Если ТипЗнч(РезультатВыбора) = Тип("СправочникСсылка.Валюты") Тогда
		
		Если Объект.СписокВалют.НайтиСтроки(Новый Структура("Валюта", РезультатВыбора)).Количество() = 0 Тогда
			ДобавитьВалютуВСписок(РезультатВыбора);
		Иначе
			Предупреждение(НСтр("ru = 'Валюта уже присутствует в списке'"));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ СписокВалют

&НаКлиенте
Процедура СписокВалютПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	// Форма выбора валют в режиме выбора
	ПараметрыФорма = Новый Структура("ЗагружаемыеВалюты", Истина);
	ОткрытьФорму("Справочник.Валюты.ФормаВыбора", ПараметрыФорма, ЭтаФорма);
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВалютВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьЗначение(Элементы.СписокВалют.ТекущиеДанные.Валюта);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КомандаОчиститьВыполнить()
	
	// Очищает список валют
	Объект.СписокВалют.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьСписокВалютВыполнить()
	
	// Заполнение списка валют
	ЗаполнитьВалюты();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодборВалютВыполнить()
	
	// Вызывает форму выбора валют в режиме подбора
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе, Отбор", Ложь, Новый Структура("ЗагружаетсяИзИнтернета", Истина));
	ОткрытьФорму("Справочник.Валюты.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКурсыВалют()
	
	// Загрузка курсов
	
	ОчиститьСообщения();
	
	Если Не ЗначениеЗаполнено(Объект.НачалоПериодаЗагрузки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не задана дата начала периода загрузки.'"),
			,
			"Объект.НачалоПериодаЗагрузки"
		);
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ОкончаниеПериодаЗагрузки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не задана дата окончания периода загрузки.'"),
			,
			"Объект.ОкончаниеПериодаЗагрузки"
		);
		Возврат;
	КонецЕсли;
	
	Если Объект.СписокВалют.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Для загрузки курсов с веб-сервера РБК необходимо добавить в список хотя бы одну валюту.'"),
			,
			"Объект.СписокВалют"
		);
		Возврат;
	КонецЕсли;
	
	Состояние(НСтр("ru = 'Загружаются курсы валют...'"));
	СтатусОперации = ЗагрузитьКурсыСРБК();
	
	Если СтатусОперации Тогда
		ПараметрыЗаписи = Неопределено;
		МассивОбновляемыхВалют = Новый Массив;
		Для Каждого СтрокаТаблицы Из Объект.СписокВалют Цикл
			МассивОбновляемыхВалют.Добавить(СтрокаТаблицы.Валюта);
		КонецЦикла;
		Оповестить("Запись_ЗагрузкаКурсовВалют", ПараметрыЗаписи, МассивОбновляемыхВалют);
		ТекстСообщенияОЗавершенииЗагрузки = НСтр("ru = 'Загрузка курсов валют завершена.'");
		Состояние(ТекстСообщенияОЗавершенииЗагрузки);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Функция ЗагрузитьКурсыСРБК()
	
	#Если ВебКлиент Тогда
		Результат = ЗагрузитьКурсыСРБК_Сервер(
			Объект.СписокВалют,
			Объект.НачалоПериодаЗагрузки,
			Объект.ОкончаниеПериодаЗагрузки
		);
	#Иначе
		Результат = РаботаСКурсамиВалютКлиентСервер.ЗагрузитьКурсыВалютПоПараметрам(
			Объект.СписокВалют,
			Объект.НачалоПериодаЗагрузки,
			Объект.ОкончаниеПериодаЗагрузки
		);
	#КонецЕсли
	
	ЕстьУспешноЗагруженныеКурсы = Ложь;
	
	Для Каждого СостояниеЗагрузки Из Результат Цикл
		Если СостояниеЗагрузки.СтатусОперации Тогда
			ЕстьУспешноЗагруженныеКурсы = Истина;
		Иначе
			Индекс = Объект.СписокВалют.Индекс(Объект.СписокВалют.НайтиСтроки(Новый Структура("Валюта", СостояниеЗагрузки.Валюта))[0]);
			ИмяПоля = СтрЗаменить("СписокВалют[x].Валюта", "x", Строка(Индекс));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СостояниеЗагрузки.Сообщение,, ИмяПоля, "Объект");
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьУспешноЗагруженныеКурсы Тогда
		ОбновитьСведенияВСпискеВалют();
	КонецЕсли;
	
	Возврат ЕстьУспешноЗагруженныеКурсы;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗагрузитьКурсыСРБК_Сервер(знач СписокВалют, знач НачалоПериодаЗагрузки, знач ОкончаниеПериодаЗагрузки)
	
	Возврат РаботаСКурсамиВалютКлиентСервер.ЗагрузитьКурсыВалютПоПараметрам(
		СписокВалют, 
		НачалоПериодаЗагрузки, 
		ОкончаниеПериодаЗагрузки
	);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьВалюты()
	
	// Заполнение табличной части списком валют, курс которых не зависит от курса других валют
	ОкончаниеПериодаЗагрузки = Объект.ОкончаниеПериодаЗагрузки;
	СписокВалют = Объект.СписокВалют;
	СписокВалют.Очистить();
	
	ЗагружаемыеВалюты = РаботаСКурсамиВалют.ПолучитьМассивЗагружаемыхВалют();
	
	Для Каждого ЭлементВалюта Из ЗагружаемыеВалюты Цикл
		ДобавитьВалютуВСписок(ЭлементВалюта);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВалютуВСписок(Валюта)
	
	// Добавление записи в список валют
	НоваяСтрока = Объект.СписокВалют.Добавить();
	
	// Заполнение информации о курсе на основе ссылки валюты
	ЗаполнитьДанныеСтрокиТаблицыНаОсновеВалюты(НоваяСтрока, Валюта);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСведенияВСпискеВалют()
	
	// Обновление записей о курсах валют в списке.
	
	Для Каждого СтрокаДанных Из Объект.СписокВалют Цикл
		СсылкаНаВалюту = СтрокаДанных.Валюта;
		ЗаполнитьДанныеСтрокиТаблицыНаОсновеВалюты(СтрокаДанных, СсылкаНаВалюту);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеСтрокиТаблицыНаОсновеВалюты(ТекСтрока, СсылкаНаВалюту);
	
	// Заполнение информации о курсе на основе ссылки валюты
	
	ТекСтрока.Валюта = СсылкаНаВалюту;
	ТекСтрока.КодВалюты = СсылкаНаВалюту.Код;
	
	ДанныеКурса = РаботаСКурсамиВалют.ЗаполнитьДанныеКурсаДляВалюты(СсылкаНаВалюту);
	
	Если ТипЗнч(ДанныеКурса) = Тип ("Структура") Тогда
		ТекСтрока.ДатаКурса = ДанныеКурса.ДатаКурса;
		ТекСтрока.Курс      = ДанныеКурса.Курс;
		ТекСтрока.Кратность = ДанныеКурса.Кратность;
	КонецЕсли;
	
КонецПроцедуры
