&НаСервере
Функция КорректноЗаполненыПоля()	
	ОтчетОбъект = РеквизитФормыВЗначение("Объект");	
	КорректностьЗаполнения = ОтчетОбъект.ПроверитьЗаполнение();
	
	Если ИмеютсяСведенияОМестеРаботы Тогда
		Если Не ЗначениеЗаполнено(ОтчетОбъект.РодительМестоРаботыОбучения) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'При установленном признаке ""Имеются сведения о месте работы""," + 
			" реквизит: " + ?(ОтчетОбъект.РодительРаботает = 1, """Место работы""", """Место обучения""") + " обязателен к заполнению!'");			
			Сообщение.Поле = НСтр("ru = 'РодительМестоРаботыОбучения'");
			Сообщение.УстановитьДанные(ОтчетОбъект);
			Сообщение.Сообщить();
			
			КорректностьЗаполнения = Ложь;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ОтчетОбъект.РодительДолжностьКласс) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'При установленном признаке ""Имеются сведения о месте работы""," + 
			" реквизит: " + ?(ОтчетОбъект.РодительРаботает = 1, """Занимаемая должность""", """Группа (класс)""") + " обязателен к заполнению!'");			
			Сообщение.Поле = НСтр("ru = 'РодительДолжностьКласс'");
			Сообщение.УстановитьДанные(ОтчетОбъект);
			Сообщение.Сообщить();
			
			КорректностьЗаполнения = Ложь;
		КонецЕсли;		
	КонецЕсли;
	
	Возврат КорректностьЗаполнения
КонецФункции	
	
&НаСервере
Функция ПолучитьВидКонтактнойИнформации(ТипИнформации)
	Если ТипИнформации = "АдресПроживания" Тогда
		Возврат Справочники.ВидыКонтактнойИнформации.АдресМестаПроживанияРодителя;
	ИначеЕсли ТипИнформации = "ДомашнийТелефон" Тогда
		Возврат Справочники.ВидыКонтактнойИнформации.ДомашнийТелефонРодителя;
	ИначеЕсли ТипИнформации = "МобильныйТелефон" Тогда
		Возврат Справочники.ВидыКонтактнойИнформации.МобильныйТелефонРодителя;
	Иначе
		Возврат Неопределено
	КонецЕсли;		
КонецФункции

&НаСервере
Функция НайтиСведенияВБазеДанных(СтрокаДляПоиска, ОбъектПоиска)
	ТекстЗапроса = "ВЫБРАТЬ
	               |	СправочникДляПоиска.Ссылка
	               |ИЗ
	               |	Справочник." + ОбъектПоиска + " КАК СправочникДляПоиска
	               |ГДЕ
	               |	(НЕ СправочникДляПоиска.ПометкаУдаления)
	               |	И СправочникДляПоиска.Наименование ПОДОБНО &ПараметрНаименование";
				   
	Запрос = новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ПараметрНаименование", СтрокаДляПоиска);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Булево(Результат.Количество() > 0);
КонецФункции

&НаКлиенте
Процедура КомандаСформировать(Команда)
	// Вставить содержимое обработчика.
	ОчиститьСообщения();
	Если КорректноЗаполненыПоля() Тогда 	
		ФИОДляПоискаРебенка = СокрЛП(Объект.РебенокФамилия) + " " + СокрЛП(Объект.РебенокИмя) + " " + СокрЛП(Объект.РебенокОтчество);
		Если НайтиСведенияВБазеДанных(ФИОДляПоискаРебенка, "удуДети") Тогда
			Если Вопрос("Ребенок: " + ФИОДляПоискаРебенка + " уже зарегистрирован в БД. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		ФИОДляПоискаРодителя = СокрЛП(Объект.РодительФамилия) + " " + СокрЛП(Объект.РодительИмя) + " " + СокрЛП(Объект.РодительОтчество);
		Если НайтиСведенияВБазеДанных(ФИОДляПоискаРодителя, "удуРодители") Тогда
			Если Вопрос("Родитель: " + ФИОДляПоискаРодителя + " уже зарегистрирован в БД. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		
		ПередаваемыеПараметры = Новый Структура();
		ПередаваемыеПараметры.Вставить("ФИОРебенка", Строка(СокрЛП(Объект.РебенокФамилия) + " " + СокрЛП(Объект.РебенокИмя) + " " + СокрЛП(Объект.РебенокОтчество)
							+ " (" + Строка(Объект.РебенокПол) + " д.р.: " + Формат(Объект.РебенокДатаРождения, "ДЛФ=D") + ")"));
		ПередаваемыеПараметры.Вставить("ФИОРодителя", Строка(СокрЛП(Объект.РодительФамилия) + " " + СокрЛП(Объект.РодительИмя) + " " + СокрЛП(Объект.РодительОтчество)
							+ " (" + Строка(Объект.СтепеньРодства) + ")"));
		ПередаваемыеПараметры.Вставить("ГруппаЖелаемая", Строка(Объект.ГруппаЖелаемая));
		ПередаваемыеПараметры.Вставить("ПериодЗачисленияДатаЗаявки", "на " + СокрЛП(Объект.ПериодЗачисления) + " год, дата подачи заявки: " + Формат(Объект.ДатаРегистрацииЗаявки, "ДЛФ=D"));
		
		ПараметрСведенияОЛьготах = "";
		Для Каждого СтрокаЛьгот Из Объект.ЛьготыПоЗаявке Цикл
			ПараметрСведенияОЛьготах = ПараметрСведенияОЛьготах + Строка(СтрокаЛьгот.Льгота) + ", ";		
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ПараметрСведенияОЛьготах) Тогда
		    ПередаваемыеПараметры.Вставить("СведенияОЛьготах", "Льготы по заявке: (" + ПараметрСведенияОЛьготах + ",)");	
		Иначе
			ПередаваемыеПараметры.Вставить("СведенияОЛьготах", ПараметрСведенияОЛьготах);	
		КонецЕсли;
		ПередаваемыеПараметры.Вставить("Учреждение", Объект.Учреждение);
		
		ОткрытьФормуМодально("Обработка.удуБыстраяРегистрацияЗаявкиНаЗачисление.Форма.ФормаПодтверждения", ПередаваемыеПараметры, ЭтаФорма);		
	Иначе
		Вопрос("Заполнены не все обязательные поля (см. текст в окне сообщений)!", РежимДиалогаВопрос.ОК);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПериодЗачисленияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ТекущийГод = Год(ТекущаяДата());
	
	СтандартнаяОбработка = Ложь;
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(Формат(ТекущийГод - 1, "ЧГ=0") + "/" + Формат(ТекущийГод, "ЧГ=0"));
	СписокВыбора.Добавить(Формат(ТекущийГод, "ЧГ=0") + "/" + Формат(ТекущийГод + 1, "ЧГ=0"));
	СписокВыбора.Добавить(Формат(ТекущийГод + 1, "ЧГ=0") + "/" + Формат(ТекущийГод + 2, "ЧГ=0"));
	СписокВыбора.Добавить(Формат(ТекущийГод + 2, "ЧГ=0") + "/" + Формат(ТекущийГод + 3, "ЧГ=0"));
	СписокВыбора.Добавить(Формат(ТекущийГод + 3, "ЧГ=0") + "/" + Формат(ТекущийГод + 4, "ЧГ=0"));
	
	НайденноеЗначение = СписокВыбора.НайтиПоЗначению(Элемент.ВыделенныйТекст);
	Если НайденноеЗначение <> Неопределено Тогда
		ВыбранноеЗначение = ВыбратьИзСписка(СписокВыбора, Элемент, НайденноеЗначение);
	Иначе
		ВыбранноеЗначение = ВыбратьИзСписка(СписокВыбора, Элемент);
	КонецЕсли;
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		Объект.ПериодЗачисления = ВыбранноеЗначение.Значение;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура РодительАдресПроживанияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	
	ИмяФормыРедактирования =  "ОбщаяФорма.ВводАдреса";
	
	ПараметрЗначенияПолей = ЗначенияПолейАдресаПроживанияРодителя;
	ПараметрВид = ПолучитьВидКонтактнойИнформации("АдресПроживания");
	
	Пар = Новый Структура;
	Пар.Вставить("ЗначенияПолей",                ПараметрЗначенияПолей);
	Пар.Вставить("Вид",                          ПараметрВид);
	Пар.Вставить("БылиВнесеныИзменения",         Ложь);
	Пар.Вставить("Представление",                Элемент.ТекстРедактирования);
	Пар.Вставить("РедактированиеТолькоВДиалоге", Не Элемент.РедактированиеТекста);
	Пар.Вставить("АдресТолькоРоссийский",        Истина);
	Пар.Вставить("КраткийАдрес",        		 Ложь);
	
	Результат = ОткрытьФормуМодально(ИмяФормыРедактирования, Пар);
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Объект.РодительАдресПроживания = Результат.Представление;
		ЗначенияПолейАдресаПроживанияРодителя = Результат.ЗначенияПолей;
		Модифицированность      	= Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РодительТелефонДомашнийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ИмяФормыРедактирования =  "ОбщаяФорма.ВводТелефона";
	
	ПараметрЗначенияПолей = ЗначенияПолейДомашнегоТелефонаРодителя;
	ПараметрВид = ПолучитьВидКонтактнойИнформации("ДомашнийТелефон");
	
	Пар = Новый Структура;
	Пар.Вставить("ЗначенияПолей",                ПараметрЗначенияПолей);
	Пар.Вставить("Вид",                          ПараметрВид);
	Пар.Вставить("БылиВнесеныИзменения",         Ложь);
	Пар.Вставить("Представление",                Элемент.ТекстРедактирования);
	Пар.Вставить("РедактированиеТолькоВДиалоге", Не Элемент.РедактированиеТекста);
	Пар.Вставить("АдресТолькоРоссийский",        Истина);
	Пар.Вставить("КраткийАдрес",        		 Ложь);
	
	Результат = ОткрытьФормуМодально(ИмяФормыРедактирования, Пар);
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Объект.РодительТелефонДомашний = Результат.Представление;
		ЗначенияПолейДомашнегоТелефонаРодителя = Результат.ЗначенияПолей;
		Модифицированность      	= Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура РодительТелефонМобильныйНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ИмяФормыРедактирования =  "ОбщаяФорма.ВводТелефона";
	
	ПараметрЗначенияПолей = ЗначенияПолейМобильногоТелефонаРодителя;
	ПараметрВид = ПолучитьВидКонтактнойИнформации("МобильныйТелефон");
	
	Пар = Новый Структура;
	Пар.Вставить("ЗначенияПолей",                ПараметрЗначенияПолей);
	Пар.Вставить("Вид",                          ПараметрВид);
	Пар.Вставить("БылиВнесеныИзменения",         Ложь);
	Пар.Вставить("Представление",                Элемент.ТекстРедактирования);
	Пар.Вставить("РедактированиеТолькоВДиалоге", Не Элемент.РедактированиеТекста);
	Пар.Вставить("АдресТолькоРоссийский",        Истина);
	Пар.Вставить("КраткийАдрес",        		 Ложь);
	
	Результат = ОткрытьФормуМодально(ИмяФормыРедактирования, Пар);
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Объект.РодительТелефонМобильный = Результат.Представление;
		ЗначенияПолейМобильногоТелефонаРодителя = Результат.ЗначенияПолей;
		Модифицированность      	= Истина;
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.ДатаРегистрацииЗаявки = ТекущаяДата();
	Объект.РебенокПол = Перечисления.удуПол.Мальчик;
	ИмеютсяСведенияОМестеРаботы = Ложь;
	Объект.РодительРаботает = 1;
	Объект.Учреждение = Константы.удуОсновноеУчреждение.Получить();
	Элементы.РодительРаботает.Доступность = ИмеютсяСведенияОМестеРаботы;
	Элементы.РодительМестоРаботыОбучения.Доступность = ИмеютсяСведенияОМестеРаботы;
	Элементы.РодительДолжностьКласс.Доступность = ИмеютсяСведенияОМестеРаботы;	
	Элементы.РодительМестоРаботыОбучения.Заголовок = "Место работы";
	Элементы.РодительДолжностьКласс.Заголовок = "Занимаемая должность";
КонецПроцедуры


&НаКлиенте
Процедура ИмеютсяСведенияОМестеРаботыПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Элементы.РодительРаботает.Доступность = ИмеютсяСведенияОМестеРаботы;
	Элементы.РодительМестоРаботыОбучения.Доступность = ИмеютсяСведенияОМестеРаботы;
	Элементы.РодительДолжностьКласс.Доступность = ИмеютсяСведенияОМестеРаботы;
КонецПроцедуры


&НаКлиенте
Процедура РодительРаботаетПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Если Объект.РодительРаботает = 1 Тогда
		Элементы.РодительМестоРаботыОбучения.Заголовок = "Место работы";
		Элементы.РодительДолжностьКласс.Заголовок = "Занимаемая должность";
	Иначе
		Элементы.РодительМестоРаботыОбучения.Заголовок = "Место обучения";
		Элементы.РодительДолжностьКласс.Заголовок = "Группа (класс)";		
	КонецЕсли;
		
КонецПроцедуры

