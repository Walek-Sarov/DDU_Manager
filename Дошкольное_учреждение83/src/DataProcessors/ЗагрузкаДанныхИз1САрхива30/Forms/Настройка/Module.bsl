&НаСервере
Перем СообщениеОбОшибке;

Функция СоздатьСоединениеСБазойДанных()
	
	Соединение = Новый COMОбъект ("ADODB.Connection");
	Если ФорматБазыДанных = 0 Тогда
		Соединение.Open("Driver={Microsoft Access Driver (*.mdb)};Dbq=" + ФайлMDB);
	Иначе
		СтрокаСоединения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"Provider=sqloledb;Data Source=%1;Initial Catalog=%2;User Id=%3;Password=%4;",
				ИмяSQLСервера, ИмяБазы, ИмяПользователяБазыДанных, Пароль);
		Соединение.Open (СтрокаСоединения);
	КонецЕсли;
	
	Возврат Соединение;
	
КонецФункции

&НаКлиенте
Процедура DocbaseНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбораФайла =	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораФайла.Заголовок = "Выбор каталога сервера";
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		КаталогСервера = ДиалогВыбораФайла.Каталог;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьДанныеПользователяИБДляЗаписи(ИмяПользователя)
	
	СообщениеОбОшибке = "";
	Пароль1СПредприятия = "";
	ПользовательИБ = Новый Структура;
	
	ПользовательИБ.Вставить("Имя",						ИмяПользователя);
	ПользовательИБ.Вставить("ПолноеИмя",				ИмяПользователя);
	ПользовательИБ.Вставить("АутентификацияСтандартная",Истина);
	ПользовательИБ.Вставить("АутентификацияОС",			Ложь);
	ПользовательИБ.Вставить("ПользовательОС",			"");
	ПользовательИБ.Вставить("ПоказыватьВСпискеВыбора",	Истина);
	ПользовательИБ.Вставить("ЗапрещеноИзменятьПароль",	Ложь);
	ПользовательИБ.Вставить("РежимЗапуска", РежимЗапускаКлиентскогоПриложения.Авто);
	ПользовательИБ.Вставить("Пароль", Пароль1СПредприятия);
		
	// Находим язык по имени и присваиваем его пользователю.
	ПользовательИБ.Вставить("Язык", ТекущийЯзык());
	
	Возврат ПользовательИБ;
	
КонецФункции

&НаСервере
Процедура ЗагрузкаПользователей()
	
	Справочник = Справочники.Пользователи;

	СоответсвиеИдентификатораПользователяСсылке = Новый ТаблицаЗначений;
	СоответсвиеИдентификатораПользователяСсылке.Колонки.Добавить("Идентификатор");
	СоответсвиеИдентификатораПользователяСсылке.Колонки.Добавить("Ссылка");

	Соединение = СоздатьСоединениеСБазойДанных();
	
	Recordset = Новый COMОбъект ("ADODB.Recordset");
	Recordset.Open ("select * from UserGroupInfo", Соединение, 0, 1);
	Пока НЕ Recordset.EOF Цикл
		hUG = Recordset.Fields("hUG").Value;
		Группа = Recordset.Fields("AsGroup").Value;
		ИмяПользователя = Recordset.Fields("Name").Value;
		
		Если Группа = 0 Тогда 
			ДанныеПользователяИБ = ПодготовитьДанныеПользователяИБДляЗаписи(ИмяПользователя);

			Идентификатор = Пользователи.ЗаписатьПользователяИБ(ИмяПользователя,
																ДанныеПользователяИБ,
																СообщениеОбОшибке);
										
			Если Идентификатор = Неопределено Тогда
				СообщениеПользователю = Новый СообщениеПользователю;
				СообщениеПользователю.Текст="Ошибка";
				СообщениеПользователю.Сообщить();
			Иначе 
				// Если пользователь с таким именем уже есть то не создаем его
				НовыйПользователь = Справочники.Пользователи.НайтиПоНаименованию(ИмяПользователя);
				Если НовыйПользователь = Неопределено Или НовыйПользователь.Пустая() Тогда
					НовыйПользователь = Справочник.СоздатьЭлемент();
					НовыйПользователь.ИдентификаторПользователяИБ = Идентификатор;
					НовыйПользователь.Наименование = ИмяПользователя;
					НовыйПользователь.Записать();
				КонецЕсли;
				
				НоваяСтрока = СоответсвиеИдентификатораПользователяСсылке.Добавить();
				НоваяСтрока.Идентификатор = Recordset.Fields("hUG").Value;
				НоваяСтрока.Ссылка = НовыйПользователь.Ссылка;
			КонецЕсли;
		КонецЕсли;
		
		Recordset.MoveNext();
	КонецЦикла;
	
	АдресСоответсвиеИдентификатораПользователяСсылке = ПоместитьВоВременноеХранилище(СоответсвиеИдентификатораПользователяСсылке, ЭтаФорма.УникальныйИдентификатор);
	
	Соединение.Close();

КонецПроцедуры

&НаСервере
Функция  ПолучитьВидДокумента( Тип,  ВидДокумента)
	
	Если Тип =  1 Тогда
		Спр = Справочники.ВидыВходящихДокументов;
	ИначеЕсли Тип =  2 Тогда
		Спр =  Справочники.ВидыИсходящихДокументов;
	ИначеЕсли Тип =  3 Тогда
		Спр =  Справочники.ВидыВнутреннихДокументов;
	КонецЕсли;
	
	Ссылка = Спр.НайтиПоНаименованию(ВидДокумента);
	
	Если  Ссылка = Спр.ПустаяСсылка() Тогда
		Элемент = Спр.СоздатьЭлемент();
		Элемент.Наименование = ВидДокумента;
		Элемент.Записать();
		Ссылка = Элемент.Ссылка;
	КонецЕсли;

	Возврат Ссылка;
	
КонецФункции

&НаСервере
Функция  ПолучитьКорреспондента(ИмяКорреспондента)
	
	Спр = Справочники.Корреспонденты;
	Ссылка = Спр.НайтиПоНаименованию(ИмяКорреспондента);
	
	Если  Ссылка = Спр.ПустаяСсылка() Тогда
		Элемент = Спр.СоздатьЭлемент();
		Элемент.Наименование = ИмяКорреспондента;
		Элемент.ВидКорреспондента = Перечисления.ВидыКорреспондентов.ЮрЛицо;
		Элемент.Записать();
		Ссылка = Элемент.Ссылка;
	КонецЕсли;

	Возврат Ссылка;
	
КонецФункции
	
&НаСервере
Процедура ЗагрузкаПодверсии()
	
	Справочник = Справочники.ВерсииФайлов;
	
	СоответствиеИдентификатораВерсииФайлаСcылке = Новый ТаблицаЗначений;
	СоответствиеИдентификатораВерсииФайлаСcылке.Колонки.Добавить("Идентификатор");
	СоответствиеИдентификатораВерсииФайлаСcылке.Колонки.Добавить("Ссылка");
	
	СоответствиеИдентификатораФайлаСcылке = Новый ТаблицаЗначений;
	СоответствиеИдентификатораФайлаСcылке = ПолучитьИзВременногоХранилища(АдресСоответствиеИдентификатораФайлаСcылке);
		
	СоответсвиеИдентификатораПользователяСсылке = Новый ТаблицаЗначений;
	СоответсвиеИдентификатораПользователяСсылке = ПолучитьИзВременногоХранилища(АдресСоответсвиеИдентификатораПользователяСсылке);
	
	СоответсвиеИдентификатораПапкиСсылке = Новый ТаблицаЗначений;
	СоответсвиеИдентификатораПапкиСсылке = ПолучитьИзВременногоХранилища(АдресСоответсвиеИдентификатораПапкиСсылке);
		
	Соединение = СоздатьСоединениеСБазойДанных();
	Recordset = Новый COMОбъект ("ADODB.Recordset");
	Запрос ="select
			| 	hDocument,
			| 	hSubVersion,
			| 	hParentVersion,
			| 	SubVersionName,
			| 	SubVersionFile,
			| 	SubVersionFileSize,
			| 	hCreator,
			| 	Created,
			| 	Modified,
			|   UserComment,
			|   Edition,
			|   RealFileName,
			|	FileVolumePath
			| from
			|   SubVersion
			|";
	Recordset.Open ( Запрос	, Соединение, 0, 1);
	Пока НЕ Recordset.EOF Цикл
		
		Идентификатора = Recordset.Fields("hDocument").Value;
		
		Владелец = СоответствиеИдентификатораФайлаСcылке.Найти(Идентификатора, "Идентификатор");
		Если  Владелец = Неопределено Тогда
			Recordset.MoveNext();
			Продолжить;
		КонецЕсли;
		
		НоваяВерсияВладелец = Владелец.Ссылка;
		
		НоваяВерсияПолноеНаименование = Recordset.Fields("SubVersionName").Value;
		НоваяВерсияНаименование = Recordset.Fields("SubVersionName").Value;
		
		SubVersionFile = Recordset.Fields("SubVersionFile").Value;
		
		Том = Recordset.Fields("FileVolumePath").Value;
		Имяфайла = КаталогСервера + "\" + SubVersionFile;
		Если Том <> "DOCBASE\" Тогда
			ИмяФайла = Том + SubVersionFile;
		КонецЕсли;	
		
		Файл = Новый Файл(Имяфайла);
		НоваяВерсияИмяБезРасширения = Файл.ИмяБезРасширения;
     	НоваяВерсияРасширение = РасширениеБезТочки(Файл.Расширение);
		
		НоваяВерсияРазмер = Recordset.Fields("SubVersionFileSize").Value;
		
		Идентификатор = Recordset.Fields("hCreator").Value;
		НайденнаяСсылка = СоответсвиеИдентификатораПользователяСсылке.Найти(Идентификатор,"Идентификатор"); 
		НоваяВерсияАвтор = НайденнаяСсылка.Ссылка;
		
		НоваяВерсияДатаСоздания = Recordset.Fields("Created").Value;
		НоваяВерсияДатаМодификацииУниверсальная = Recordset.Fields("Modified").Value;
		НоваяВерсияКомментарий = Recordset.Fields("UserComment").Value;
		НоваяВерсияНомерВерсии = Recordset.Fields("Edition").Value;
		
		Данные = Новый ДвоичныеДанные(Имяфайла);
		
		// Поместим Файл в ВременноеХранилище
		АдресВременногоХранилищаФайла = ПоместитьВоВременноеХранилище(Данные);
		
		НоваяВерсия = РаботаСФайлами.СоздатьВерсию(
			НоваяВерсияДатаМодификацииУниверсальная,
			НоваяВерсияДатаМодификацииУниверсальная,
			НоваяВерсияВладелец, 
			НоваяВерсияИмяБезРасширения, 
			НоваяВерсияРазмер, 
			НоваяВерсияРасширение, 
			АдресВременногоХранилищаФайла, 
			"",
			Ложь, // ЭтоВебКлиент
			Неопределено, // СсылкаНаВерсиюИсточник
			НоваяВерсияДатаСоздания,
			НоваяВерсияАвтор,
			НоваяВерсияКомментарий,
			НоваяВерсияНомерВерсии
			);
			
		УдалитьИзВременногоХранилища(АдресВременногоХранилищаФайла);	
					
		НоваяСтрока = СоответствиеИдентификатораВерсииФайлаСcылке.Добавить();
		НоваяСтрока.Идентификатор = Строка(Recordset.Fields("hDocument").Value) + "-" + Строка(Recordset.Fields("hSubVersion").Value);
		НоваяСтрока.Ссылка = НоваяВерсия.Ссылка;		
		
		Recordset.MoveNext();

	КонецЦикла;
	Recordset.Close();
	
	// Устаналиваем владельца и родительскую версию
	Recordset.Open ( Запрос	, Соединение, 0, 1);
	Пока НЕ Recordset.EOF Цикл
		
		ИдентификаторВерсии = Строка(Recordset.Fields("hDocument").Value) + "-" + Строка(Recordset.Fields("hSubVersion").Value);
		НайденнаяСсылкаВерсии = СоответствиеИдентификатораВерсииФайлаСcылке.Найти(ИдентификаторВерсии, "Идентификатор"); 
		
		ИдентификаторФайла = Recordset.Fields("hDocument").Value;
		НайденнаяСсылкаФайла = СоответствиеИдентификатораФайлаСcылке.Найти(ИдентификаторФайла, "Идентификатор"); 
		
		ИдентификаторРодительскойВерсии = Строка(Recordset.Fields("hDocument").Value) + "-" + Строка(Recordset.Fields("hParentVersion").Value);
		НайденнаяСсылкаРодВерсии = СоответствиеИдентификатораВерсииФайлаСcылке.Найти(ИдентификаторРодительскойВерсии, "Идентификатор"); 
		
		Элемент = НайденнаяСсылкаВерсии.Ссылка.ПолучитьОбъект();
		
		Элемент.Владелец = НайденнаяСсылкаФайла.Ссылка;
		Если НайденнаяСсылкаРодВерсии <> Неопределено Тогда
			Элемент.РодительскаяВерсия = НайденнаяСсылкаРодВерсии.Ссылка;
		КонецЕсли;	
		Элемент.Записать();
	
		Recordset.MoveNext();
		
	КонецЦикла;
	
	Recordset.Close();
	
	// Дописывание ТекущаяВерсия в Файлы
	Запрос ="select
			| 	hDocument,
			|	hCurrentSubVersion
			| from
			|   DocumentInfo
			|";

	Recordset.Open ( Запрос	, Соединение, 0, 1);
	Пока НЕ Recordset.EOF Цикл
		
		Идентификатор = Recordset.Fields("hDocument").Value;
		НайденнаяСсылка = СоответствиеИдентификатораФайлаСcылке.Найти(Идентификатор, "Идентификатор"); 
		
		Если НайденнаяСсылка <> Неопределено Тогда
			Элемент = НайденнаяСсылка.Ссылка.ПолучитьОбъект();
		
			Идентификатор = Строка(Recordset.Fields("hDocument").Value) + "-" + Строка(Recordset.Fields("hCurrentSubVersion").Value);
			НайденнаяСсылка = СоответствиеИдентификатораВерсииФайлаСcылке.Найти(Идентификатор, "Идентификатор"); 
			
			Элемент.ТекущаяВерсия =  НайденнаяСсылка.Ссылка;
			
			ВерсияОбъект = Элемент.ТекущаяВерсия.ПолучитьОбъект();
			Элемент.ТекстХранилище = ВерсияОбъект.ТекстХранилище;
			
			Элемент.Записать();
		КонецЕсли;
		Recordset.MoveNext();
	КонецЦикла;
	
	Recordset.Close();
	
	Соединение.Close();
	
	СоответствиеИдентификатораВерсииФайлаСcылке = ПоместитьВоВременноеХранилище(СоответсвиеИдентификатораПапкиСсылке, ЭтаФорма.УникальныйИдентификатор);
	АдресСоответствиеИдентификатораФайлаСcылке = ПоместитьВоВременноеХранилище(СоответствиеИдентификатораФайлаСcылке, ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаВходящиеДокументы(МассивСвязей)
	
	Справочник = Справочники.ВходящиеДокументы;
	
	НеопределенногоВида = "Неопределен";
	
	СоответствиеИдентификатораДокументаСcылке = Новый ТаблицаЗначений;
	СоответствиеИдентификатораДокументаСcылке.Колонки.Добавить("Идентификатор");
	СоответствиеИдентификатораДокументаСcылке.Колонки.Добавить("Ссылка");
	
	СоответсвиеИдентификатораПользователяСсылке = Новый ТаблицаЗначений;
	СоответсвиеИдентификатораПользователяСсылке = ПолучитьИзВременногоХранилища(АдресСоответсвиеИдентификатораПользователяСсылке);
	
	
	Соединение = СоздатьСоединениеСБазойДанных();
	Recordset = Новый COMОбъект ("ADODB.Recordset");
	Запрос ="select
			| 	hDocument,
			| 	DocumentName,
			| 	Created,
			| 	DocDescr,
			| 	RegNum,
			| 	DocumentType,
			| 	Sender,
			| 	SenderDate,
			| 	SenderRegNum,
			|	ShortComment,
			|   MasterDocRegNum
			| from
			|   DocumentInfo
			| where
			|   Category = 1
			|";
	Recordset.Open ( Запрос	, Соединение, 0, 1);
	Пока НЕ Recordset.EOF Цикл
		НовыйДокумент = Справочники.ВходящиеДокументы.СоздатьЭлемент();
		НовыйДокумент.Заголовок = Recordset.Fields("DocumentName").Value;
		НовыйДокумент.ДатаСоздания = Recordset.Fields("Created").Value;
		НовыйДокумент.ДатаРегистрации = Recordset.Fields("Created").Value;
		
		НовыйДокумент.Содержание = Recordset.Fields("ShortComment").Value;
		РазмерМемо = Recordset.Fields("DocDescr").ActualSize;
		Если РазмерМемо > 0 Тогда
			НовыйДокумент.Содержание = Recordset.Fields("DocDescr").GetChunk(РазмерМемо);
		КонецЕсли;
		
		НовыйДокумент.РегистрационныйНомер = Recordset.Fields("RegNum").Value;
		ВидДокумента = Recordset.Fields("DocumentType").Value;
		Если ПустаяСтрока(ВидДокумента) Тогда
			ВидДокумента = НеопределенногоВида;
		КонецЕсли;
		НовыйДокумент.ВидДокумента = ПолучитьВидДокумента( 1,  ВидДокумента);
		
		ИмяКорреспондента = Recordset.Fields("Sender").Value;
		Если ПустаяСтрока(ИмяКорреспондента) Тогда
			ИмяКорреспондента = НеопределенногоВида;
		КонецЕсли;
		НовыйДокумент.Отправитель = ПолучитьКорреспондента(ИмяКорреспондента);
		
		НовыйДокумент.ИсходящаяДата = Recordset.Fields("SenderDate").Value;
		НовыйДокумент.ИсходящийНомер = Recordset.Fields("SenderRegNum").Value;
		
		НовыйДокумент.ГрифДоступа = ГрифВходящих;
		
		НовыйДокумент.Записать();
		
		Делопроизводство.ЗаписатьСостояниеДокумента(
			НовыйДокумент.Ссылка, 
			ТекущаяДата(), 
			Перечисления.СостоянияДокументов.Зарегистрирован, 
			ОбщегоНазначения.ТекущийПользователь());
		
		НоваяСтрока = СоответствиеИдентификатораДокументаСcылке.Добавить();
		НоваяСтрока.Идентификатор = Recordset.Fields("hDocument").Value;
		НоваяСтрока.Ссылка = НовыйДокумент.Ссылка;		
		
		ВОтветНа = Recordset.Fields("MasterDocRegNum").Value;
		Если Не ПустаяСтрока(ВОтветНа) Тогда 
			СвязьДокументов = Новый Структура();
			СвязьДокументов.Вставить("Документ", НовыйДокумент.Ссылка);
			СвязьДокументов.Вставить("ТипДокумента", "Входящий");
			СвязьДокументов.Вставить("ВОтветНа", ВОтветНа);
			МассивСвязей.Добавить(СвязьДокументов);
		КонецЕсли;
		
		Recordset.MoveNext();
		
	КонецЦикла;
	Recordset.Close();

	Соединение.Close();
	
	АдресСоответствиеИдентификатораДокументаСcылке = ПоместитьВоВременноеХранилище(СоответствиеИдентификатораДокументаСcылке, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаИсходящиеДокументы(МассивСвязей)
	
	Справочник = Справочники.ВходящиеДокументы;
	
	НеопределенногоВида = "Неопределен";
	
	СоответствиеИдентификатораДокументаСcылке = Новый ТаблицаЗначений;
	СоответствиеИдентификатораДокументаСcылке = ПолучитьИзВременногоХранилища(АдресСоответствиеИдентификатораДокументаСcылке);

	СоответсвиеИдентификатораПользователяСсылке = Новый ТаблицаЗначений;
	СоответсвиеИдентификатораПользователяСсылке = ПолучитьИзВременногоХранилища(АдресСоответсвиеИдентификатораПользователяСсылке);
	

	Соединение = СоздатьСоединениеСБазойДанных();
	Recordset = Новый COMОбъект ("ADODB.Recordset");
	Запрос ="select
			| 	hDocument,
			| 	hAuthor,
			| 	DocumentName,
			| 	Created,
			| 	DocDescr,
			| 	RegNum,
			| 	DocumentType,
			| 	Sender,
			| 	SenderDate,
			| 	SenderRegNum,
			|	ShortComment,
			|   MasterDocRegNum
			| from
			|   DocumentInfo
			| where
			|   Category = 2
			|";
	Recordset.Open ( Запрос	, Соединение, 0, 1);
	
	Пока НЕ Recordset.EOF Цикл
		НовыйДокумент = Справочники.ИсходящиеДокументы.СоздатьЭлемент();
		НовыйДокумент.Заголовок = Recordset.Fields("DocumentName").Value;
		
		Автор = Recordset.Fields("hAuthor").Value;
		НовыйДокумент.Зарегистрировал = СоответсвиеИдентификатораПользователяСсылке.Найти(Автор, "Идентификатор");
		
		НовыйДокумент.ДатаСоздания = Recordset.Fields("Created").Value;
		НовыйДокумент.ДатаРегистрации = Recordset.Fields("Created").Value;
		
		НовыйДокумент.Содержание = Recordset.Fields("ShortComment").Value;
		РазмерМемо = Recordset.Fields("DocDescr").ActualSize;
		Если РазмерМемо > 0 Тогда
			НовыйДокумент.Содержание = Recordset.Fields("DocDescr").GetChunk(РазмерМемо);
		КонецЕсли;
		
		НовыйДокумент.РегистрационныйНомер = Recordset.Fields("RegNum").Value;
		ВидДокумента = Recordset.Fields("DocumentType").Value;
		Если ПустаяСтрока(ВидДокумента) Тогда
			ВидДокумента = НеопределенногоВида;
		КонецЕсли;
		НовыйДокумент.ВидДокумента = ПолучитьВидДокумента( 2,  ВидДокумента);
		
		ИмяКорреспондента = Recordset.Fields("Sender").Value;
		Если ПустаяСтрока(ИмяКорреспондента) Тогда
			ИмяКорреспондента = НеопределенногоВида;
		КонецЕсли;
		НовыйДокумент.Получатель = ПолучитьКорреспондента(ИмяКорреспондента);
		
		НовыйДокумент.Отправлен = Истина;
		НовыйДокумент.ДатаОтправки = Recordset.Fields("Created").Value;
		
		НовыйДокумент.ГрифДоступа = ГрифИсходящих;
		НовыйДокумент.Записать();
		Делопроизводство.ЗаписатьСостояниеДокумента(
			НовыйДокумент.Ссылка, 
			ТекущаяДата(), 
			Перечисления.СостоянияДокументов.Зарегистрирован, 
			ОбщегоНазначения.ТекущийПользователь());
		
		НоваяСтрока = СоответствиеИдентификатораДокументаСcылке.Добавить();
		НоваяСтрока.Идентификатор = Recordset.Fields("hDocument").Value;
		НоваяСтрока.Ссылка = НовыйДокумент.Ссылка;		
		
		ВОтветНа = Recordset.Fields("MasterDocRegNum").Value;
		Если Не ПустаяСтрока(ВОтветНа) Тогда
			СвязьДокументов = Новый Структура();
			СвязьДокументов.Вставить("Документ", НовыйДокумент.Ссылка);
			СвязьДокументов.Вставить("ТипДокумента", "Исходящий");
			СвязьДокументов.Вставить("ВОтветНа", ВОтветНа);
			МассивСвязей.Добавить(СвязьДокументов);
		КонецЕсли;
		
		Recordset.MoveNext();
		
	КонецЦикла;
	
	Recordset.Close();
	
	Соединение.Close();

КонецПроцедуры

&НаСервере
Процедура ЗагрузкаФайлы()
	
	Справочник = Справочники.Файлы;
	
	НеопределенногоВида = "Неопределен";
	
	СоответствиеИдентификатораДокументаСcылке = Новый ТаблицаЗначений;
	СоответствиеИдентификатораДокументаСcылке = ПолучитьИзВременногоХранилища(АдресСоответствиеИдентификатораДокументаСcылке);
	
	СоответствиеИдентификатораФайлаСcылке = Новый ТаблицаЗначений;
	СоответствиеИдентификатораФайлаСcылке.Колонки.Добавить("Идентификатор");
	СоответствиеИдентификатораФайлаСcылке.Колонки.Добавить("Ссылка");
	
	СоответсвиеИдентификатораПользователяСсылке = Новый ТаблицаЗначений;
	СоответсвиеИдентификатораПользователяСсылке = ПолучитьИзВременногоХранилища(АдресСоответсвиеИдентификатораПользователяСсылке);
	
	СоответсвиеИдентификатораПапкиСсылке = Новый ТаблицаЗначений;
	СоответсвиеИдентификатораПапкиСсылке = ПолучитьИзВременногоХранилища(АдресСоответсвиеИдентификатораПапкиСсылке);
	
	Соединение = СоздатьСоединениеСБазойДанных();
	Recordset = Новый COMОбъект ("ADODB.Recordset");
	Запрос ="select
			| 	hDocument,
			| 	DocumentName,
			| 	Created,
			| 	DocDescr,
			|	hCurrentSubVersion,
			|   hParentFolder,
			|   hAuthor,
			|   Category,
			|	ShortComment
			| from
			|   DocumentInfo
			|";
	Recordset.Open ( Запрос	, Соединение, 0, 1);
	Пока НЕ Recordset.EOF Цикл
		
		ТекущаяВерсия = Recordset.Fields("hCurrentSubVersion").Value;
		Если ТекущаяВерсия <> Null Тогда
			
			НовыйДокумент = Справочники.Файлы.СоздатьЭлемент();
			НовыйДокумент.ПолноеНаименование = Recordset.Fields("DocumentName").Value;
			НовыйДокумент.Наименование = Recordset.Fields("DocumentName").Value;
			НовыйДокумент.ДатаСоздания = Recordset.Fields("Created").Value;
			НовыйДокумент.Описание = Recordset.Fields("ShortComment").Value;
			РазмерМемо = Recordset.Fields("DocDescr").ActualSize;
			Если РазмерМемо > 0 Тогда
				НовыйДокумент.Описание = Recordset.Fields("DocDescr").GetChunk(РазмерМемо);
			КонецЕсли;
			
			КатегорияФайла = Recordset.Fields("Category").Value;
			Если КатегорияФайла = 1 ИЛИ КатегорияФайла = 2 Тогда // Входящий или Исходящий документ
				
				Идентификатор = Recordset.Fields("hDocument").Value;
				НайденнаяСсылка = СоответствиеИдентификатораДокументаСcылке.Найти(Идентификатор, "Идентификатор"); 
				Если   Идентификатор <>  Null  Тогда
					НовыйДокумент.ВладелецФайла = НайденнаяСсылка.Ссылка;
				КонецЕсли;
				
			ИначеЕсли КатегорияФайла = 3 Тогда // Папка файлов	
				
				Идентификатор = Recordset.Fields("hParentFolder").Value;
				НайденнаяСсылка = СоответсвиеИдентификатораПапкиСсылке.Найти(Идентификатор, "Идентификатор"); 
				Если   Идентификатор <>  Null  Тогда
					НайденнаяСсылка = СоответсвиеИдентификатораПапкиСсылке.Найти(Идентификатор, "Идентификатор"); 
					НовыйДокумент.ВладелецФайла = НайденнаяСсылка.Ссылка;
				КонецЕсли;
				
			КонецЕсли;	

			Идентификатор = Recordset.Fields("hAuthor").Value;
			НайденнаяСсылкаАвтор = СоответсвиеИдентификатораПользователяСсылке.Найти(Идентификатор,"Идентификатор"); 
			НовыйДокумент.Автор = НайденнаяСсылкаАвтор.Ссылка;
			
			НовыйДокумент.ХранитьВерсии = Истина;
			
			НовыйДокумент.Записать();
			
			НоваяСтрока = СоответствиеИдентификатораФайлаСcылке.Добавить();
			НоваяСтрока.Идентификатор = Recordset.Fields("hDocument").Value;
			НоваяСтрока.Ссылка = НовыйДокумент.Ссылка;
			
		КонецЕсли;
			
		Recordset.MoveNext();
		
	КонецЦикла;
	
	Recordset.Close();

	Соединение.Close();
	
	АдресСоответствиеИдентификатораФайлаСcылке = ПоместитьВоВременноеХранилище(СоответствиеИдентификатораФайлаСcылке, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаРабочиеКаталогиФайлов()
	
	Регистр = РегистрыСведений.РабочиеКаталогиФайлов;
	
	СоответсвиеИдентификатораПапкиСсылке = Новый ТаблицаЗначений;
	СоответсвиеИдентификатораПапкиСсылке = ПолучитьИзВременногоХранилища(АдресСоответсвиеИдентификатораПапкиСсылке);

	СоответсвиеИдентификатораПользователяСсылке = Новый ТаблицаЗначений;
	СоответсвиеИдентификатораПользователяСсылке = ПолучитьИзВременногоХранилища(АдресСоответсвиеИдентификатораПользователяСсылке);

	Соединение = СоздатьСоединениеСБазойДанных();
	Recordset = Новый COMОбъект ("ADODB.Recordset");
	Запрос ="select
			| 	hFolder,
			| 	hUser,
			| 	path
			| from
			|   FolderWorkingDir";
			
	Recordset.Open ( Запрос	, Соединение, 0, 1);
	НаборЗаписей = Регистр.СоздатьНаборЗаписей();
	Пока НЕ Recordset.EOF Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		
		Идентификатор = Recordset.Fields("hFolder").Value;
		НайденнаяСсылка = СоответсвиеИдентификатораПапкиСсылке.Найти(Идентификатор, "Идентификатор"); 
		НоваяЗапись.Папка = НайденнаяСсылка.Ссылка;

		Идентификатор = Recordset.Fields("hUser").Value;
		НайденнаяСсылка = СоответсвиеИдентификатораПользователяСсылке.Найти(Идентификатор, "Идентификатор"); 
		НоваяЗапись.Пользователь = НайденнаяСсылка.Ссылка;

		НоваяЗапись.Путь = Recordset.Fields("path").Value;
		
		Recordset.MoveNext();
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
    Recordset.Close();
	Соединение.Close();
	
КонецПроцедуры

&НаСервере
Процедура  ЗагрузкаПапок()
	
	Справочник = Справочники.ПапкиФайлов;
	
	СоответствиеИдентификатораДокументаСcылке = Новый ТаблицаЗначений;
	СоответствиеИдентификатораДокументаСcылке = ПолучитьИзВременногоХранилища(АдресСоответствиеИдентификатораДокументаСcылке);
	
	СоответсвиеИдентификатораПользователяСсылке = Новый ТаблицаЗначений;
	СоответсвиеИдентификатораПользователяСсылке = ПолучитьИзВременногоХранилища(АдресСоответсвиеИдентификатораПользователяСсылке);
	
	СоответсвиеИдентификатораПапкиСсылке = Новый ТаблицаЗначений;
	СоответсвиеИдентификатораПапкиСсылке.Колонки.Добавить("Идентификатор");
	СоответсвиеИдентификатораПапкиСсылке.Колонки.Добавить("Ссылка");
	  	
	Соединение = СоздатьСоединениеСБазойДанных();
	Recordset = Новый COMОбъект ("ADODB.Recordset");
	Запрос ="select
			| 	hFolder,
			| 	Name,
			| 	hParentFolder,
			| 	FolderDescr,
			|	hAuthor,
			| 	CreationDate
			|from
			|   FolderInfo
			|";
	Recordset.Open ( Запрос	, Соединение, 0, 1);
	Пока НЕ Recordset.EOF Цикл
		НовыйДокумент = Справочник.СоздатьЭлемент();
		НовыйДокумент.Описание = Recordset.Fields("FolderDescr").Value;
		НовыйДокумент.Наименование = Recordset.Fields("Name").Value;
		НовыйДокумент.ДатаСоздания = Recordset.Fields("CreationDate").Value;
		
		Идентификатор = Recordset.Fields("hAuthor").Value;
		Если   Идентификатор <>  Null  Тогда
			НайденнаяСсылка = СоответсвиеИдентификатораПользователяСсылке.Найти(Идентификатор, "Идентификатор"); 
			НовыйДокумент.Ответственный = НайденнаяСсылка.Ссылка;
		КонецЕсли;
		
		НовыйДокумент.Записать();
		
		НоваяСтрока = СоответсвиеИдентификатораПапкиСсылке.Добавить();
		НоваяСтрока.Идентификатор = Recordset.Fields("hFolder").Value;
		НоваяСтрока.Ссылка = НовыйДокумент.Ссылка;
	
		Recordset.MoveNext();
	КонецЦикла;
	
	Recordset.Close();
	
	Recordset.Open ( Запрос	, Соединение, 0, 1);
	Пока НЕ Recordset.EOF Цикл
		
		Наименование = Recordset.Fields("Name").Value;
		Идентификатор = Recordset.Fields("hFolder").Value;
		НайденнаяСсылка = СоответсвиеИдентификатораПапкиСсылке.Найти(Идентификатор, "Идентификатор"); 
				
		ИдентификаторРодитель = Recordset.Fields("hParentFolder").Value;
		НайденнаяСсылкаРодитель = СоответсвиеИдентификатораПапкиСсылке.Найти(ИдентификаторРодитель, "Идентификатор"); 
		Если НайденнаяСсылкаРодитель <> Неопределено Тогда
			Эдемент = НайденнаяСсылка.Ссылка.ПолучитьОбъект();
			Эдемент.Родитель = НайденнаяСсылкаРодитель.Ссылка;
			Эдемент.Записать();
		КонецЕсли;
	
		Recordset.MoveNext();
	КонецЦикла;
	
	Recordset.Close();
	
	Соединение.Close();
	
	АдресСоответсвиеИдентификатораПапкиСсылке = ПоместитьВоВременноеХранилище(СоответсвиеИдентификатораПапкиСсылке, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПользователей(Команда)
	ЗагрузкаПользователей();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВходящиеДокументы(Команда)
	МассивСвязей = Новый Массив();
	ЗагрузкаВходящиеДокументы(МассивСвязей);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИсходящиеДокументы(Команда)
	МассивСвязей = Новый Массив();
	ЗагрузкаИсходящиеДокументы(МассивСвязей);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПодверсии(Команда)
	ЗагрузкаПодверсии();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлы(Команда)
	ЗагрузкаФайлы();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПапки(Команда)
	ЗагрузкаПапок();
КонецПроцедуры


&НаКлиенте
Процедура ЗанрузкаРабочихКаталоговФайлов(Команда)
	ЗагрузкаРабочиеКаталогиФайлов();
КонецПроцедуры

&НаКлиенте
Процедура ФорматБазыДанныхПриИзменении(Элемент)
	УстановитьВидимостьПолей();
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПолей()
	
	Если ФорматБазыДанных = 0 Тогда
		Элементы.ИмяSQLСервера.Видимость = Ложь;
		Элементы.ИмяБазы.Видимость = Ложь;
		Элементы.ИмяПользователя.Видимость = Ложь;
		Элементы.Пароль.Видимость = Ложь;
		Элементы.ПутьКФайлуMDB.Видимость = Истина;
	Иначе	
		Элементы.ИмяSQLСервера.Видимость = Истина;
		Элементы.ИмяБазы.Видимость = Истина;
		Элементы.ИмяПользователя.Видимость = Истина;
		Элементы.Пароль.Видимость = Истина;
		Элементы.ПутьКФайлуMDB.Видимость = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

Функция НайтиИсходящийПоРегНомеру(РегНомер)
	
	Возврат Справочники.ИсходящиеДокументы.НайтиПоРеквизиту("РегистрационныйНомер", РегНомер);
	
КонецФункции	

Функция НайтиВходящийПоРегНомеру(РегНомер)
	
	Возврат Справочники.ВходящиеДокументы.НайтиПоРеквизиту("РегистрационныйНомер", РегНомер);
	
КонецФункции	

&НаСервере
Процедура УстановитьСвязи(МассивСвязей)
	
	Для каждого Связь Из МассивСвязей Цикл
		
		Документ = Связь.Документ.ПолучитьОбъект();
		
		ВОтветНа = "";
		
		Если Связь.ТипДокумента = "Входящий" Тогда
			ВОтветНа = НайтиИсходящийПоРегНомеру(Связь.ВОтветНа);
		Иначе	
			ВОтветНа = НайтиВходящийПоРегНомеру(Связь.ВОтветНа);
		КонецЕсли;	
		
		Документ.ВОтветНа = ВОтветНа;
		
		Документ.Записать();
		
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	
	Состояние("Выполняется загрузка пользователей");
	ЗагрузкаПользователей();
	
	МассивСвязей = Новый Массив();
	Состояние("Выполняется загрузка входящих документов");
	ЗагрузкаВходящиеДокументы(МассивСвязей);	
	
	Состояние("Выполняется загрузка исходящих документов");
	ЗагрузкаИсходящиеДокументы(МассивСвязей);
	
	УстановитьСвязи(МассивСвязей);
	
	Состояние("Выполняется загрузка папок");
	ЗагрузкаПапок();
	
	Состояние("Выполняется загрузка файлов");
	ЗагрузкаФайлы();
	
	Состояние("Выполняется загрузка версий файлов");
	ЗагрузкаПодверсии();
	
	Состояние("Выполняется загрузка рабочих каталогов пользователей");
	ЗагрузкаРабочиеКаталогиФайлов();
	
	Предупреждение("Загрузка данных из 1С:Архива 3.0 успешно завершена!");
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуMDBНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбораФайла =	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = "Выбор файла базы данных";
	ДиалогВыбораФайла.Фильтр = "Файлы MS Access (MDB)|*.mdb";
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ФайлMDB = ДиалогВыбораФайла.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьВидимостьПолей();
	
КонецПроцедуры

&НаСервере
Функция РасширениеБезТочки(стрРасширение)
	Расширение = НРег(СокрЛП(стрРасширение));
	Если Сред(Расширение, 1, 1) = "." Тогда
		Расширение = Сред(Расширение, 2);
	КонецЕсли;
	Возврат Расширение;
КонецФункции // РасширениеБезТочки()
