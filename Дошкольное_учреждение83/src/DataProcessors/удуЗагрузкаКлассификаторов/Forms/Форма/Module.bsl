&НаКлиенте
Процедура ПодготовитьТаблицуИзЕхел()
	ОбъектЕксел = Новый COMОбъект("Excel.Application");
	РабочаяКнигаЕксел = ОбъектЕксел.Workbooks.Add(ФайлЗагрузки);	
	КоллСтрок = 1;	
	Пока ЗначениеЗаполнено(ОбъектЕксел.Cells(КоллСтрок, 1).Value) Цикл
		НоваяСтрокаКлассификатора = тзКлассификатора.Добавить();
		НоваяСтрокаКлассификатора.Код = СокрЛП(ОбъектЕксел.Cells(КоллСтрок, 1).Formula);
		НоваяСтрокаКлассификатора.КодГруппы = "";
		МассивКодов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(НоваяСтрокаКлассификатора.Код, ".");			
		Для Сч = 0 По МассивКодов.Количество() - 2 Цикл
			НоваяСтрокаКлассификатора.КодГруппы = НоваяСтрокаКлассификатора.КодГруппы + Строка(МассивКодов[Сч]) + ".";
		КонецЦикла;
		Попытка
			НоваяСтрокаКлассификатора.КодГруппы = Лев(НоваяСтрокаКлассификатора.КодГруппы, СтрДлина(НоваяСтрокаКлассификатора.КодГруппы) - 1);
		Исключение
		КонецПопытки;		
		НоваяСтрокаКлассификатора.Наименование = СокрЛП(ОбъектЕксел.Cells(КоллСтрок, 2).Value);
		КоллСтрок = КоллСтрок + 1;
	КонецЦикла;
	РабочаяКнигаЕксел.Close();
	ОбъектЕксел.Quit(); 	
КонецПроцедуры

&НаСервере
Процедура УстановитьКодировкуНаСервере(ДБФ)
	
	Если ДБФ <> Неопределено Тогда
		ДБФ.Кодировка = КодировкаXBase.OEM;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьТаблицуИзДБФ()	
	ДБФ = Новый XBase;
	ДБФ.ОткрытьФайл(ФайлЗагрузки);
	
	#Если ВебКлиент Тогда
		УстановитьКодировкуНаСервере(ДБФ);
	#Иначе		
		ДБФ.Кодировка = КодировкаXBase.OEM;
	#КонецЕсли
	
	Если ДБФ.Открыта() Тогда
		ДБФ.Первая();
		Пока ДБФ.Следующая() Цикл
			Попытка
				Если Не ЗначениеЗаполнено(ДБФ.KOD) Тогда
					Продолжить;
				КонецЕсли;
			Исключение
			КонецПопытки;				
			НоваяСтрокаКлассификатора = тзКлассификатора.Добавить();
			Попытка
				НоваяСтрокаКлассификатора.Код = СокрЛП(ДБФ.KOD);				
			Исключение
				НоваяСтрокаКлассификатора.Код = СокрЛП(ДБФ.OKPO);
			КонецПопытки;
			
			НоваяСтрокаКлассификатора.КодГруппы = "";
			МассивКодов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(НоваяСтрокаКлассификатора.Код, ".");			
			Для Сч = 0 По МассивКодов.Количество() - 2 Цикл
				НоваяСтрокаКлассификатора.КодГруппы = НоваяСтрокаКлассификатора.КодГруппы + Строка(МассивКодов[Сч]) + ".";
			КонецЦикла;
			Попытка
				НоваяСтрокаКлассификатора.КодГруппы = Лев(НоваяСтрокаКлассификатора.КодГруппы, СтрДлина(НоваяСтрокаКлассификатора.КодГруппы) - 1);
			Исключение
			КонецПопытки;
			
			Попытка
				НоваяСтрокаКлассификатора.Наименование = СокрЛП(ДБФ.NAME);
			Исключение
				Попытка
					НоваяСтрокаКлассификатора.Наименование = СокрЛП(ДБФ.NAME1);
				Исключение
					НоваяСтрокаКлассификатора.Наименование = СокрЛП(ДБФ.NAME11);
				КонецПопытки;
			КонецПопытки;
		КонецЦикла;
	Иначе
		Вопрос("Не удалось открыть файл загрузки", РежимДиалогаВопрос.ОК);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыполнитьЗагрузку(Команда)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(ФайлЗагрузки) Тогда
		тзКлассификатора.Очистить();
		Если ФорматЗагрузки = 1 Тогда
			ПодготовитьТаблицуИзЕхел();
		Иначе
			ПодготовитьТаблицуИзДБФ();
		КонецЕсли;		
		
		ПодчиненныеЭлементы.ПолеИндикаторСостояния.Видимость = Истина;
		ПодчиненныеЭлементы.ПолеИндикаторСостояния.МинимальноеЗначение = 0;
		ПодчиненныеЭлементы.ПолеИндикаторСостояния.МаксимальноеЗначение = тзКлассификатора.Количество();
		РеквизитИндикаторСостояния = 0;
		
		Если СокрЛП(Объект.ВидКлассификатора) = "ОКОГУ" Тогда
			ОсуществитьЗагрузкуОКОГУ();			
		ИначеЕсли СокрЛП(Объект.ВидКлассификатора) = "ОКОПФ" Тогда
			ОсуществитьЗагрузкуОКОПФ();
		ИначеЕсли СокрЛП(Объект.ВидКлассификатора) = "ОКФС" Тогда
			ОсуществитьЗагрузкуОКФС();
		ИначеЕсли СокрЛП(Объект.ВидКлассификатора) = "ОКВЭД" Тогда
			ОсуществитьЗагрузкуОКВЭД();
		КонецЕсли;	
		ПодчиненныеЭлементы.ПолеИндикаторСостояния.Видимость = Ложь;
		// обновляем список в форме, если имеется
		СписокНаФорме = ВладелецФормы.Элементы.Найти("Список");
		Если СписокНаФорме <> Неопределено Тогда
			СписокНаФорме.Обновить();
		КонецЕсли;
		// обновляем дерево в форме, если имеется
		ДеревоНаФорме = ВладелецФормы.Элементы.Найти("Дерево");
		Если ДеревоНаФорме <> Неопределено Тогда
			ДеревоНаФорме.Обновить();
		КонецЕсли;		
	Иначе
		Вопрос("Не выбран файл загрузки!!!", РежимДиалогаВопрос.ОК);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолеФайлЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = "Выберите " + ?(ФорматЗагрузки = 0, "DBF", "Excel") + "-файл, со справочником " + СокрЛП(Объект.ВидКлассификатора);		
	Если ФорматЗагрузки = 1 Тогда
		ДиалогВыбораФайла.Фильтр = "Файлы электронных таблиц (*.xls)|*.xls";
	Иначе
		ДиалогВыбораФайла.Фильтр = "Файлы электронных таблиц (*.dbf)|*.dbf";
	КонецЕсли;
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ФайлЗагрузки = ДиалогВыбораФайла.ПолноеИмяФайла;		
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ОсуществитьЗагрузкуОКОГУ()
	
	// загрузка классификатора ОКОГУ
	Для Каждого СтрокаКлассификатора Из тзКлассификатора Цикл
		Если РежимСинхронизацииЭлементов = 0 Тогда
			НайденныйЭлемент = Справочники.удуОКОГУ.НайтиПоКоду(СокрЛП(СтрокаКлассификатора.Код));
		Иначе
			НайденныйЭлемент = Справочники.удуОКОГУ.НайтиПоНаименованию(СокрЛП(СтрокаКлассификатора.Наименование));				
		КонецЕсли; 				
		Если НайденныйЭлемент <> Справочники.удуОКОГУ.ПустаяСсылка() Тогда
			НайденныйОбъект = НайденныйЭлемент.ПолучитьОбъект();
			Если РежимЗаписиОбъектов = 0 Тогда
				Если Не РежимСинхронизацииЭлементов = 0 Тогда
					НайденныйОбъект.Код = СокрЛП(СтрокаКлассификатора.Код);
				Иначе					
					НайденныйОбъект.Наименование = СокрЛП(СтрокаКлассификатора.Наименование);
				КонецЕсли;
				Попытка
					НайденныйОбъект.Записать();
				Исключение
					Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст="Не удалось записать элемент с кодом """+СокрЛП(СтрокаКлассификатора.Код)+""" и наименованием """+СокрЛП(СтрокаКлассификатора.Наименование)+""". Возможно элемент с таким кодом уже есть в справочнике.";
					Сообщение.Сообщить();
				КонецПопытки;
				РеквизитИндикаторСостояния = РеквизитИндикаторСостояния + 1;				
			КонецЕсли;
		Иначе 
			НовыйЭлементОКОГУ = Справочники.удуОКОГУ.СоздатьЭлемент();
			НовыйЭлементОКОГУ.Код = СокрЛП(СтрокаКлассификатора.Код);
			НовыйЭлементОКОГУ.Наименование = СокрЛП(СтрокаКлассификатора.Наименование);
			Попытка
				НовыйЭлементОКОГУ.Записать();
			Исключение
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст="Не удалось записать элемент с кодом """+СокрЛП(СтрокаКлассификатора.Код)+""" и наименованием """+СокрЛП(СтрокаКлассификатора.Наименование)+""". Возможно элемент с таким кодом уже есть в справочнике.";
				Сообщение.Сообщить();
			КонецПопытки;
			РеквизитИндикаторСостояния = РеквизитИндикаторСостояния + 1;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ОсуществитьЗагрузкуОКОПФ()	
	
	// загрузка классификатора ОКОПФ
	Для Каждого СтрокаКлассификатора Из тзКлассификатора Цикл
		Если РежимСинхронизацииЭлементов = 0 Тогда
			НайденныйЭлемент = Справочники.удуОКОПФ.НайтиПоКоду(СокрЛП(СтрокаКлассификатора.Код));
		Иначе
			НайденныйЭлемент = Справочники.удуОКОПФ.НайтиПоНаименованию(СокрЛП(СтрокаКлассификатора.Наименование));
		КонецЕсли; 				
		Если НайденныйЭлемент <> Справочники.удуОКОПФ.ПустаяСсылка() Тогда
			НайденныйОбъект = НайденныйЭлемент.ПолучитьОбъект();
			Если РежимЗаписиОбъектов = 0 Тогда
				Если РежимСинхронизацииЭлементов = 0 Тогда
					НайденныйОбъект.Наименование = СокрЛП(СтрокаКлассификатора.Наименование);
				Иначе
					НайденныйОбъект.Код = СокрЛП(СтрокаКлассификатора.Код);
				КонецЕсли;
				Попытка
					НайденныйОбъект.Записать();
				Исключение
					Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст="Не удалось записать элемент с кодом """+СокрЛП(СтрокаКлассификатора.Код)+""" и наименованием """+СокрЛП(СтрокаКлассификатора.Наименование)+""". Возможно элемент с таким кодом уже есть в справочнике.";
					Сообщение.Сообщить();
				КонецПопытки;
				РеквизитИндикаторСостояния = РеквизитИндикаторСостояния + 1;
			КонецЕсли;
		Иначе 
			НовыйЭлементОКОПФ = Справочники.удуОКОПФ.СоздатьЭлемент();
			НовыйЭлементОКОПФ.Код = СокрЛП(СтрокаКлассификатора.Код);
			НовыйЭлементОКОПФ.Наименование = СокрЛП(СтрокаКлассификатора.Наименование);
			Попытка
				НовыйЭлементОКОПФ.Записать();
			Исключение
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст="Не удалось записать элемент с кодом """+СокрЛП(СтрокаКлассификатора.Код)+""" и наименованием """+СокрЛП(СтрокаКлассификатора.Наименование)+""". Возможно элемент с таким кодом уже есть в справочнике.";
				Сообщение.Сообщить();
			КонецПопытки;
			РеквизитИндикаторСостояния = РеквизитИндикаторСостояния + 1;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОсуществитьЗагрузкуОКФС()	
	
	// загрузка классификатора ОКФС
	Для Каждого СтрокаКлассификатора Из тзКлассификатора Цикл
		Если РежимСинхронизацииЭлементов = 0 Тогда
			НайденныйЭлемент = Справочники.удуОКФС.НайтиПоКоду(СокрЛП(СтрокаКлассификатора.Код));
		Иначе
			НайденныйЭлемент = Справочники.удуОКФС.НайтиПоНаименованию(СокрЛП(СтрокаКлассификатора.Наименование));				
		КонецЕсли; 				
		Если НайденныйЭлемент <> Справочники.удуОКФС.ПустаяСсылка() Тогда
			НайденныйОбъект = НайденныйЭлемент.ПолучитьОбъект();
			Если РежимЗаписиОбъектов = 0 Тогда
				Если РежимСинхронизацииЭлементов = 0 Тогда
					НайденныйОбъект.Наименование = СокрЛП(СтрокаКлассификатора.Наименование);
				Иначе
					НайденныйОбъект.Код = СокрЛП(СтрокаКлассификатора.Код);
				КонецЕсли;
				Попытка
					НайденныйОбъект.Записать();
				Исключение
					Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст="Не удалось записать элемент с кодом """+СокрЛП(СтрокаКлассификатора.Код)+""" и наименованием """+СокрЛП(СтрокаКлассификатора.Наименование)+""". Возможно элемент с таким кодом уже есть в справочнике.";
					Сообщение.Сообщить();
				КонецПопытки;
				РеквизитИндикаторСостояния = РеквизитИндикаторСостояния + 1;
			КонецЕсли;
		Иначе 
			НовыйЭлементОКФС = Справочники.удуОКФС.СоздатьЭлемент();
			НовыйЭлементОКФС.Код = СокрЛП(СтрокаКлассификатора.Код);
			НовыйЭлементОКФС.Наименование = СокрЛП(СтрокаКлассификатора.Наименование);
			Попытка
				НовыйЭлементОКФС.Записать();
			Исключение
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст="Не удалось записать элемент с кодом """+СокрЛП(СтрокаКлассификатора.Код)+""" и наименованием """+СокрЛП(СтрокаКлассификатора.Наименование)+""". Возможно элемент с таким кодом уже есть в справочнике.";
				Сообщение.Сообщить();
			КонецПопытки;
			РеквизитИндикаторСостояния = РеквизитИндикаторСостояния + 1;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОсуществитьЗагрузкуОКВЭД()	
	// загрузка классификатора ОКВЭД
	ВременнаяТЗ = тзКлассификатора.Выгрузить();	
	МассивГрупп = ВременнаяТЗ.ВыгрузитьКолонку("КодГруппы");
	Для Каждого СтрокаКлассификатора Из тзКлассификатора Цикл
		Если РежимСинхронизацииЭлементов = 0 Тогда
			НайденныйЭлемент = Справочники.удуОКВЭД.НайтиПоКоду(СокрЛП(СтрокаКлассификатора.Код));
		Иначе
			НайденныйЭлемент = Справочники.удуОКВЭД.НайтиПоНаименованию(СокрЛП(СтрокаКлассификатора.Наименование));				
		КонецЕсли; 				
		Если НайденныйЭлемент <> Справочники.удуОКВЭД.ПустаяСсылка() Тогда
			НайденныйОбъект = НайденныйЭлемент.ПолучитьОбъект();
			Если РежимЗаписиОбъектов = 0 Тогда
				Если Не РежимСинхронизацииЭлементов = 0 Тогда
					НайденныйОбъект.Код = СокрЛП(СтрокаКлассификатора.Код);
				Иначе
					НайденныйОбъект.Наименование = СокрЛП(СтрокаКлассификатора.Наименование);					
				КонецЕсли;
				НайденныйОбъект.Родитель = Справочники.удуОКВЭД.НайтиПоКоду(СокрЛП(СтрокаКлассификатора.КодГруппы));
				Попытка
					НайденныйОбъект.Записать();
				Исключение
					Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст="Не удалось записать элемент с кодом """+СокрЛП(СтрокаКлассификатора.Код)+""" и наименованием """+СокрЛП(СтрокаКлассификатора.Наименование)+""". Возможно элемент с таким кодом уже есть в справочнике.";
					Сообщение.Сообщить();
				КонецПопытки;
				РеквизитИндикаторСостояния = РеквизитИндикаторСостояния + 1;				
			КонецЕсли;
		Иначе 
			Если МассивГрупп.Найти(СокрЛП(СтрокаКлассификатора.Код)) = Неопределено Тогда					
				НовыйЭлементОКВЭД = Справочники.удуОКВЭД.СоздатьЭлемент();
				НовыйЭлементОКВЭД.Код = СокрЛП(СтрокаКлассификатора.Код);
				НовыйЭлементОКВЭД.Наименование = СокрЛП(СтрокаКлассификатора.Наименование);
				НовыйЭлементОКВЭД.Родитель = Справочники.удуОКВЭД.НайтиПоКоду(СокрЛП(СтрокаКлассификатора.КодГруппы));
				Попытка
					НовыйЭлементОКВЭД.Записать();
				Исключение
					Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст="Не удалось записать элемент с кодом """+СокрЛП(СтрокаКлассификатора.Код)+""" и наименованием """+СокрЛП(СтрокаКлассификатора.Наименование)+""". Возможно элемент с таким кодом уже есть в справочнике.";
					Сообщение.Сообщить();
				КонецПопытки;
				РеквизитИндикаторСостояния = РеквизитИндикаторСостояния + 1;				
			Иначе
				НовыйЭлементОКВЭД = Справочники.удуОКВЭД.СоздатьГруппу();
				НовыйЭлементОКВЭД.Код = СокрЛП(СтрокаКлассификатора.Код);
				НовыйЭлементОКВЭД.Наименование = СокрЛП(СтрокаКлассификатора.Наименование);
				НовыйЭлементОКВЭД.Родитель = Справочники.удуОКВЭД.НайтиПоКоду(СокрЛП(СтрокаКлассификатора.КодГруппы));
				Попытка
					НовыйЭлементОКВЭД.Записать();
				Исключение
					Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст="Не удалось записать элемент с кодом """+СокрЛП(СтрокаКлассификатора.Код)+""" и наименованием """+СокрЛП(СтрокаКлассификатора.Наименование)+""". Возможно элемент с таким кодом уже есть в справочнике.";
					Сообщение.Сообщить();
				КонецПопытки;
				РеквизитИндикаторСостояния = РеквизитИндикаторСостояния + 1;				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;		
	
КонецПроцедуры