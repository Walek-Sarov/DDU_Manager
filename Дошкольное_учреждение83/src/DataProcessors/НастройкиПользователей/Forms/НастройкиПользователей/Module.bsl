///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПользовательСсылка = Пользователи.ТекущийПользователь();
	ТекущийПользователь = Обработки.НастройкиПользователей.ИмяПользователяИБ(ПользовательСсылка);
	
	Если Параметры.Пользователь <> Неопределено Тогда
		
		ИдентификаторПользователяИБ = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Параметры.Пользователь, "ИдентификаторПользователяИБ");
		УстановитьПривилегированныйРежим(Истина);
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ИдентификаторПользователяИБ);
		УстановитьПривилегированныйРежим(Ложь);
		Если ПользовательИБ = Неопределено Тогда
			Элементы.ОтчетИлиПредупреждение.ТекущаяСтраница = Элементы.ОтображатьПредупреждение;
			Возврат;
		КонецЕсли;
		
		ПользовательСсылка = Параметры.Пользователь;
		Элементы.ГруппаЗакрыть.Видимость = Ложь;
		Элементы.ПользовательСсылка.Видимость = Ложь;
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Настройки пользователя: %1'"), ПользовательСсылка.Наименование);
		Пользователь = Обработки.НастройкиПользователей.ИмяПользователяИБ(ПользовательСсылка);
	Иначе
		ПользовательСсылка = Пользователи.ТекущийПользователь();
		Пользователь = Обработки.НастройкиПользователей.ИмяПользователяИБ(ПользовательСсылка);
	КонецЕсли;
	
	ИспользоватьВнешнихПользователей = ПолучитьФункциональнуюОпцию("ИспользоватьВнешнихПользователей");
	ОбщегоНазначенияПереопределяемый.ИмяФормыПерсональныхНастроек(ИмяФормыПерсональныхНастроек);
	
	ВыбраннаяСтраницаНастроек = Элементы.ВидыНастроек.ТекущаяСтраница.Имя;
	ЗаполнитьСпискиНастроек();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Настройки);
	
	ПоискСписокВыбора = Настройки.Получить("ПоискСписокВыбора");
	Если ТипЗнч(ПоискСписокВыбора) = Тип("Массив") Тогда
		Элементы.Поиск.СписокВыбора.ЗагрузитьЗначения(ПоискСписокВыбора);
	КонецЕсли;
	Поиск = "";
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить("ПоискСписокВыбора", Элементы.Поиск.СписокВыбора.ВыгрузитьЗначения());
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ВРег(ИмяСобытия) = ВРег("ВыборПользователя") Тогда
		
		ПользователиПриемник = Параметр.ПользователиПриемник;
		
		Если Параметр.КопироватьВсе Тогда
			
			МассивНастроек = Новый Массив;
			ИменаНастроек = "";
			Для Каждого Настройка Из КопируемыеНастройки Цикл 
				
					ИменаНастроек = ИменаНастроек + НРег(Настройка.Представление) + ", ";
					МассивНастроек.Добавить(Настройка.Значение);
				
			КонецЦикла;
				
			ИменаНастроек = Лев(ИменаНастроек, СтрДлина(ИменаНастроек)-2);
			
			Если МассивНастроек.Количество() = 6 Тогда
				ТекстПояснения = НСтр("ru = 'Скопированы все настройки'");
			Иначе
				ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Скопированы настройки: %1'"), ИменаНастроек);
			КонецЕсли;
			
			Состояние(НСтр("ru = 'Выполняется копирование настроек'"));
			
			СкопироватьВсеНастройкиНаСервере(Пользователь, ПользователиПриемник, МассивНастроек);
			
			ПоказатьОповещениеПользователя(НСтр("ru = 'Копирование настроек'"), , ТекстПояснения);
			
			Возврат;
		КонецЕсли;
		
		Если Параметр.ОчисткаНастроек Тогда
			
			ДеревоНастроек = ТаблицаФормыВыбраннойСтраницыНастроек();
			КоличествоНастроек = КоличествоСкопированныхИлиУдаленныхНастроек(ДеревоНастроек);
			
			УдалитьНаСервере(ПользователиПриемник, Истина);
			
			ОповещениеОбУдалении(КоличествоНастроек);
			Возврат;
			
		КонецЕсли;
		
		ДеревоНастроек = ТаблицаФормыВыбраннойСтраницыНастроек();
		КоличествоНастроек = КоличествоСкопированныхИлиУдаленныхНастроек(ДеревоНастроек);
		
		Состояние(НСтр("ru = 'Выполняется копирование настроек'"));
		
		СкопироватьНаСервере(ПользователиПриемник);
		ТекстПояснения = НСтр("ru = 'Скопировано настроек: %1'");
		ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПояснения, КоличествоНастроек);
		ПоказатьОповещениеПользователя(НСтр("ru = 'Копирование настроек'"), , ТекстПояснения);
		
	ИначеЕсли ВРег(ИмяСобытия) = ВРег("СкопированыНастройки") Тогда
		ЗаполнитьСпискиНастроек();
		РазвернутьДеревоЗначений();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательСсылкаПриИзменении(Элемент)
	
	Если ПустаяСтрока(Элемент.ВыделенныйТекст) Тогда
		Возврат;
	КонецЕсли;
	ПолучитьИмяПользователяИОбновить();
	
	РазвернутьДеревоЗначений();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ВыбраннаяСтраницаНастроек = ТекущаяСтраница.Имя;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Поиск) Тогда
		СписокВыбора = Элементы.Поиск.СписокВыбора;
		ЭлементСписка = СписокВыбора.НайтиПоЗначению(Поиск);
		Если ЭлементСписка = Неопределено Тогда
			СписокВыбора.Вставить(0, Поиск);
			Если СписокВыбора.Количество() > 10 Тогда
				СписокВыбора.Удалить(10);
			КонецЕсли;
		Иначе
			Индекс = СписокВыбора.Индекс(ЭлементСписка);
			Если Индекс <> 0 Тогда
				СписокВыбора.Сдвинуть(Индекс, -Индекс);
			КонецЕсли;
		КонецЕсли;
		ТекущийЭлемент = Элементы.Поиск;
	КонецЕсли;
	
	ЗаполнитьСпискиНастроек();
	РазвернутьДеревоЗначений();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательСсылкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОтбора = Новый Структура("ДоступКИнформационнойБазеРазрешен, РежимВыбора", Истина, Истина);

	Если ИспользоватьВнешнихПользователей Тогда
		ВыборТипаПользователей = Новый СписокЗначений;
		ВыборТипаПользователей.Добавить("ВнешниеПользователи", "Внешние пользователи");
		ВыборТипаПользователей.Добавить("Пользователи", "Пользователи");
		
		ВыбранныйВариант = ВыборТипаПользователей.ВыбратьЭлемент();
		Если ВыбранныйВариант = Неопределено Тогда
			Возврат;
		КонецЕсли;
		Если ВыбранныйВариант.Значение = "Пользователи" Тогда
			ОткрытьФорму("Справочник.Пользователи.Форма.ФормаСписка", ПараметрыОтбора, Элементы.ПользовательСсылка);
		ИначеЕсли ВыбранныйВариант.Значение = "ВнешниеПользователи" Тогда
			ОткрытьФорму("Справочник.ВнешниеПользователи.Форма.ФормаСписка", ПараметрыОтбора, Элементы.ПользовательСсылка);
		КонецЕсли;
	Иначе
		ОткрытьФорму("Справочник.Пользователи.Форма.ФормаСписка", ПараметрыОтбора, Элементы.ПользовательСсылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтчетовИВнешнийВидПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Не Копирование Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СкопироватьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПередУдалением(Элемент, Отказ)
	
	ТекстВопроса = НСтр("ru = 'Удалить выбранные настройки?'");
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
		
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	УдалитьНаСервере();
	
	ВыделенныеСтроки = Элемент.ВыделенныеСтроки;
	КоличествоНастроек = КоличествоСкопированныхИлиУдаленныхНастроек(Элемент);
	
	УдалитьНастройкиИЗДереваЗначений(ВыделенныеСтроки);
	
	ОповещениеОбУдалении(КоличествоНастроек);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьОтчетИлиФорму();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьСпискиНастроек();
	РазвернутьДеревоЗначений();
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьДругим(Команда)
	
	СкопироватьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьВсеНастройки(Команда)
	
	ТипПользователя = ТипЗнч(ПользовательСсылка);
	КопируемыеНастройки.Очистить();
	КопируемыеНастройки.Добавить("НастройкиОтчетов", НСтр("ru='Настройки отчетов'"));
	КопируемыеНастройки.Добавить("НастройкиВнешнегоВида", НСтр("ru='Настройки внешнего вида'"));
	КопируемыеНастройки.Добавить("ДанныеФорм", НСтр("ru='Данные форм'"));
	КопируемыеНастройки.Добавить("ПерсональныеНастройки", НСтр("ru='Персональные настройки'"));
	КопируемыеНастройки.Добавить("Избранное", НСтр("ru='Избранное'"));
	КопируемыеНастройки.Добавить("НастройкиПечати", НСтр("ru='Настройки печати'"));
	
	ПараметрыФормы = Новый Структура("Пользователь, ТипПользователя, КопироватьВсе", 
										ПользовательСсылка, ТипПользователя, Истина);
	ОткрытьФорму("Обработка.НастройкиПользователей.Форма.ВыборПользователей", ПараметрыФормы);

	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройкиОтчетов(Команда)
	
	ТипПользователя = ТипЗнч(ПользовательСсылка);
	КопируемыеНастройки.Очистить();
	КопируемыеНастройки.Добавить("НастройкиОтчетов", НСтр("ru='Настройки отчетов'"));
	
	ПараметрыФормы = Новый Структура("Пользователь, ТипПользователя, КопироватьВсе", 
										ПользовательСсылка, ТипПользователя, Истина);
	ОткрытьФорму("Обработка.НастройкиПользователей.Форма.ВыборПользователей", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройкиВнешнегоВида(Команда)
	
	ТипПользователя = ТипЗнч(ПользовательСсылка);
	КопируемыеНастройки.Очистить();
	КопируемыеНастройки.Добавить("НастройкиВнешнегоВида", НСтр("ru='Настройки внешнего вида'"));
	
	ПараметрыФормы = Новый Структура("Пользователь, ТипПользователя, КопироватьВсе", 
										ПользовательСсылка, ТипПользователя, Истина);
	ОткрытьФорму("Обработка.НастройкиПользователей.Форма.ВыборПользователей", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройкиотчетовИВнешнегоВида(Команда)
	
	ТипПользователя = ТипЗнч(ПользовательСсылка);
	КопируемыеНастройки.Очистить();
	КопируемыеНастройки.Добавить("НастройкиОтчетов", НСтр("ru='Настройки отчетов'"));
	КопируемыеНастройки.Добавить("НастройкиВнешнегоВида", НСтр("ru='Настройки внешнего вида'"));
	
	ПараметрыФормы = Новый Структура("Пользователь, ТипПользователя, КопироватьВсе", 
										ПользовательСсылка, ТипПользователя, Истина);
	ОткрытьФорму("Обработка.НастройкиПользователей.Форма.ВыборПользователей", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	
	ДеревоНастроек = ТаблицаФормыВыбраннойСтраницыНастроек();
	ВыделенныеСтроки = ДеревоНастроек.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		
		Предупреждение(НСтр("ru = 'Необходимо выбрать настройки, которые требуется удалить.'"));
		Возврат;
		
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Удалить выделенные настройки?'");
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоНастроек = КоличествоСкопированныхИлиУдаленныхНастроек(ДеревоНастроек);
	
	УдалитьНаСервере();
	
	УдалитьНастройкиИЗДереваЗначений(ВыделенныеСтроки);
	
	ОповещениеОбУдалении(КоличествоНастроек);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьНастройкиВыбраннымПользователям(Команда)
	
	ДеревоНастроек = ТаблицаФормыВыбраннойСтраницыНастроек();
	ВыделенныеСтроки = ДеревоНастроек.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		
		Предупреждение(НСтр("ru = 'Необходимо выбрать настройки, которые требуется удалить.'"));
		Возврат;
		
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Удалить выделенные настройки?
		|Откроется окно выбора пользователей, которым необходимо очистить настройки.'");
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ТипПользователя = ТипЗнч(ПользовательСсылка);
	ПараметрыФормы = Новый Структура("Пользователь, ТипПользователя, КопироватьВсе, ОчисткаНастроек",
										ПользовательСсылка, ТипПользователя, Ложь, Истина);
	ОткрытьФорму("Обработка.НастройкиПользователей.Форма.ВыборПользователей", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВсеНастройки(Команда)
	
	ТекстВопроса = НСтр("ru = 'Очистить все настройки у пользователя ""%1""?'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ТекстВопроса, ПользовательСсылка);
	КнопкиВопроса = Новый СписокЗначений;
	КнопкиВопроса.Добавить(НСтр("ru='Очистить'"));
	КнопкиВопроса.Добавить(НСтр("ru='Отмена'"));
	Ответ = Вопрос(ТекстВопроса, КнопкиВопроса,, КнопкиВопроса[1].Значение);
	Если Ответ = КнопкиВопроса[1].Значение Тогда
		Возврат;
	КонецЕсли;
	
	Если Ответ = КнопкиВопроса[0].Значение Тогда
		ТекстПояснения = НСтр("ru = 'Очищены все настройки пользователя ""%1""'");
		ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПояснения, ПользовательСсылка);
		ОчиститьВсе = Истина;
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Очистка настроек'"), , ТекстПояснения);
	
	ОчищаемыеНастройки = Новый Массив;
	ОчищаемыеНастройки.Добавить("НастройкиОтчетов");
	ОчищаемыеНастройки.Добавить("НастройкиВнешнегоВида");
	ОчищаемыеНастройки.Добавить("ДанныеФорм");
	ОчищаемыеНастройки.Добавить("ПерсональныеНастройки");
	ОчищаемыеНастройки.Добавить("Избранное");
	ОчищаемыеНастройки.Добавить("НастройкиПечати");
	
	ОчиститьВсеНастройкиНаСервере(ОчищаемыеНастройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьНастройкиОтчетовИВнешнегоВида(Команда)
	
	ТекстВопроса = НСтр("ru = 'Очистить все настройки отчетов и внешнего вида у пользователя ""%1""?'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ТекстВопроса, ПользовательСсылка);
	КнопкиВопроса = Новый СписокЗначений;
	КнопкиВопроса.Добавить(НСтр("ru='Очистить'"));
	КнопкиВопроса.Добавить(НСтр("ru='Отмена'"));
	Ответ = Вопрос(ТекстВопроса, КнопкиВопроса,, КнопкиВопроса[1].Значение);
	Если Ответ = КнопкиВопроса[1].Значение Тогда
		Возврат;
	КонецЕсли;
	
	Если Ответ = КнопкиВопроса[0].Значение Тогда
		ТекстПояснения = НСтр("ru = 'Очищены все настройки отчетов и внешнего вида у пользователя ""%1""'");
		ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПояснения, ПользовательСсылка);
		ОчиститьВсе = Истина;
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Очистка настроек'"), , ТекстПояснения);
	
	ОчищаемыеНастройки = Новый Массив;
	ОчищаемыеНастройки.Добавить("НастройкиОтчетов");
	ОчищаемыеНастройки.Добавить("НастройкиВнешнегоВида");
	ОчищаемыеНастройки.Добавить("ДанныеФорм");
	
	ОчиститьВсеНастройкиНаСервере(ОчищаемыеНастройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройку(Команда)
	
	ОткрытьОтчетИлиФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьНастройкиВсехПользователей(Команда)
	
	ТекстВопроса = НСтр("ru = 'Сейчас будут очищены все настройки всех пользователей.
	|Продолжить?'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ТекстВопроса, ПользовательСсылка);
	КнопкиВопроса = Новый СписокЗначений;
	КнопкиВопроса.Добавить(НСтр("ru='Очистить все'"));
	КнопкиВопроса.Добавить(НСтр("ru='Отмена'"));
	Ответ = Вопрос(ТекстВопроса, КнопкиВопроса,, КнопкиВопроса[1].Значение);
	
	Если Ответ = КнопкиВопроса[1].Значение Тогда
		Возврат;
	КонецЕсли;

	ПоказатьОповещениеПользователя(НСтр("ru = 'Очистка настроек'"), , 
		НСтр("ru='Очищены все настройки всех пользователя'"));
	ОчиститьНастройкиВсехПользователейНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьОт(Команда)
	
	ПараметрыФормы = Новый Структура("Пользователь", ПользовательСсылка);
	ОткрытьФорму("Обработка.НастройкиПользователей.Форма.КопированиеНастроекПользователей", ПараметрыФормы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для вывода списков настроек

&НаСервере
Процедура ЗаполнитьСпискиНастроек()
	
	Обработки.НастройкиПользователей.ЗаполнитьСпискиНастроек(ЭтаФорма);
	РассчитатьКоличествоНастроек();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для расчета количества настроек

&НаСервере
Процедура РассчитатьКоличествоНастроек()
	
	НастройкиОтчетовДерево = РеквизитФормыВЗначение("НастройкиОтчетов");
	ВнешнийВидДерево = РеквизитФормыВЗначение("ВнешнийВид");
	ПрочиеНастройкиДерево = РеквизитФормыВЗначение("ПрочиеНастройки");
	СписокНастроек = НастройкиОтчетовДерево.Строки;

	КоличествоНастроек = КоличествоНастроекВДереве(СписокНастроек);
	
	Если Не КоличествоНастроек = 0 Тогда
		Элементы.НастройкиОтчетовСтраница.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Настройки отчетов (%1)'"), КоличествоНастроек);
	Иначе 
		Элементы.НастройкиОтчетовСтраница.Заголовок = НСтр("ru='Настройки отчетов'");
	КонецЕсли;
	
	КоличествоНастроекОтчетов = КоличествоНастроек;
	СписокНастроек = ВнешнийВидДерево.Строки;
	КоличествоНастроек = КоличествоНастроекВДереве(СписокНастроек);
	
	Если Не КоличествоНастроек = 0 Тогда
		Элементы.ВнешнийВидСтраница.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Внешний вид (%1)'"), КоличествоНастроек);
	Иначе 
		Элементы.ВнешнийВидСтраница.Заголовок = НСтр("ru='Внешний вид'");
	КонецЕсли; 
	
	КоличествоНастроекВнешнегоВида = КоличествоНастроек;
	СписокНастроек = ПрочиеНастройкиДерево.Строки;
	КоличествоНастроек = КоличествоНастроекВДереве(СписокНастроек);
	
	Если Не КоличествоНастроек = 0 Тогда
		Элементы.ПрочиеНастройкиСтраница.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Прочие настройки (%1)'"), КоличествоНастроек);
	Иначе
		Элементы.ПрочиеНастройкиСтраница.Заголовок = НСтр("ru='Прочие настройки'");
	КонецЕсли;
	
	КоличествоПрочихНастроек = КоличествоНастроек;
	ВсегоНастроек = КоличествоПрочихНастроек + КоличествоНастроекОтчетов;
	
КонецПроцедуры

&НаСервере
Функция КоличествоНастроекВДереве(СписокНастроек)
	
	КоличествоНастроек = 0;
	Для Каждого Настройка Из СписокНастроек Цикл
		КоличествоПодчиненныхНастроек = Настройка.Строки.Количество();
		Если КоличествоПодчиненныхНастроек = 0 Тогда
			КоличествоНастроек = КоличествоНастроек + 1;
		Иначе
			КоличествоНастроек = КоличествоНастроек + КоличествоПодчиненныхНастроек;
		КонецЕсли;
	КонецЦикла;
	
	Возврат КоличествоНастроек;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции, отвечающие за копирование, удаление и очиству настроек

&НаСервере
Процедура СкопироватьНаСервере(ПользователиПриемник)
	
	Результат = МассивВыделенныхНастроек();
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Если ВыбраннаяСтраницаНастроек = "НастройкиОтчетовСтраница" Тогда
		Обработка.СкопироватьНастройкиОтчетовИПерсональныеНастройки(ХранилищеПользовательскихНастроекОтчетов,
			Пользователь, ПользователиПриемник, Результат.МассивНастроек);
	ИначеЕсли ВыбраннаяСтраницаНастроек = "ВнешнийВидСтраница" Тогда
		Обработка.СкопироватьНастройкиВнешнегоВида(Пользователь, ПользователиПриемник, Результат.МассивНастроек);
	Иначе
		
		Если Результат.МассивПерсональныхНастроек.Количество() <> 0 Тогда
			Обработка.СкопироватьНастройкиОтчетовИПерсональныеНастройки(ХранилищеОбщихНастроек,
				Пользователь, ПользователиПриемник, Результат.МассивПерсональныхНастроек);
		КонецЕсли;
		
		Обработка.СкопироватьНастройкиВнешнегоВида(Пользователь, ПользователиПриемник, Результат.МассивНастроек);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СкопироватьВсеНастройкиНаСервере(Пользователь, ПользователиПриемник, МассивНастроек)
	
	Обработки.НастройкиПользователей.СкопироватьНастройкиПользователей(
		Пользователь, ПользователиПриемник, МассивНастроек);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьНаСервере(Пользователи = Неопределено, ВыбраннымПользователям = Ложь)
	
	Результат = МассивВыделенныхНастроек();
	НазваниеХранилища = ХранилищеНастроекДляВыбраннойСтраницы();
	Обработка = РеквизитФормыВЗначение("Объект");
	
	Если ВыбраннымПользователям Тогда
		
		Обработка.УдалитьНастройкиВыбраннымПользователям(Пользователи, Результат.МассивНастроек, НазваниеХранилища);
		Если Результат.МассивПерсональныхНастроек.Количество() <> 0 Тогда
			Обработка.УдалитьНастройкиВыбраннымПользователям(Пользователи,
				Результат.МассивПерсональныхНастроек, "ХранилищеОбщихНастроек");
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Обработка.УдалитьНастройки(Пользователь, Результат.МассивНастроек, НазваниеХранилища);
	Если Результат.МассивПерсональныхНастроек.Количество() <> 0 Тогда
		Обработка.УдалитьНастройки(Пользователь, Результат.МассивПерсональныхНастроек, "ХранилищеОбщихНастроек");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьВсеНастройкиНаСервере(ОчищаемыеНастройки)
	
	МассивПользователей = Новый Массив;
	МассивПользователей.Добавить(ПользовательСсылка);
	Обработки.НастройкиПользователей.УдалитьНастройкиПользователей(ОчищаемыеНастройки, МассивПользователей);
	
	ЗаполнитьСпискиНастроек();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНастройкиВсехПользователейНаСервере()
	
	ОчищаемыеНастройки = Новый Массив;
	ОчищаемыеНастройки.Добавить("НастройкиОтчетов");
	ОчищаемыеНастройки.Добавить("НастройкиВнешнегоВида");
	ОчищаемыеНастройки.Добавить("ПерсональныеНастройки");
	ОчищаемыеНастройки.Добавить("ДанныеФорм");
	ОчищаемыеНастройки.Добавить("Избранное");
	ОчищаемыеНастройки.Добавить("НастройкиПечати");
	
	Обработка = РеквизитФормыВЗначение("Объект");
	МассивПользователей = Новый Массив;
	ТаблицаПользователей = Новый ТаблицаЗначений;
	ТаблицаПользователей.Колонки.Добавить("Пользователь");
	ТаблицаПользователей = Обработка.ПользователиДляКопирования("", ТаблицаПользователей, ИспользоватьВнешнихПользователей);
	
	Для Каждого СтрокаТаблицы Из ТаблицаПользователей Цикл
		МассивПользователей.Добавить(СтрокаТаблицы.Пользователь);
	КонецЦикла;
	
	Обработки.НастройкиПользователей.УдалитьНастройкиПользователей(ОчищаемыеНастройки, МассивПользователей);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНастройкиИЗДереваЗначений(ВыделенныеСтроки)
	
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		
		Если ВыбраннаяСтраницаНастроек = "НастройкиОтчетовСтраница" Тогда
			УдалитьСтрокуНастроек(НастройкиОтчетов, ВыделеннаяСтрока);
		ИначеЕсли ВыбраннаяСтраницаНастроек = "ВнешнийВидСтраница" Тогда
			УдалитьСтрокуНастроек(ВнешнийВид, ВыделеннаяСтрока);
		Иначе
			УдалитьСтрокуНастроек(ПрочиеНастройки, ВыделеннаяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	РассчитатьКоличествоНастроек();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции

&НаКлиенте
Процедура ОткрытьОтчетИлиФорму()

	ЭлементДереваЗначений = ТекущийЭлемент;
	
	Если Пользователь <> ТекущийПользователь Тогда
		ТекстПредупреждения = НСтр("ru = 'Для просмотра настроек другого пользователя необходимо запустить программу от его имени 
			|и открыть нужный отчет или форму.'");
		Предупреждение(ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Если ЭлементДереваЗначений.Имя = "НастройкиОтчетовДерево" Тогда
		
		КлючОбъекта = ЭлементДереваЗначений.ТекущиеДанные.Ключи[0].Значение;
		КлючОбъектаМассивСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КлючОбъекта, "/");
		КлючВарианта = КлючОбъектаМассивСтрок[1];
		ПараметрыОтчета = Новый Структура("КлючВарианта, КлючПользовательскихНастроек", КлючВарианта, "");
		
		Если ЭлементДереваЗначений.ТекущиеДанные.Тип = "НастройкаОтчета" Тогда
			КлючПользовательскихНастроек = ЭлементДереваЗначений.ТекущиеДанные.Ключи[0].Представление;
			ПараметрыОтчета.Вставить("КлючПользовательскихНастроек", КлючПользовательскихНастроек);
		КонецЕсли;
		
		ОткрытьФорму(КлючОбъектаМассивСтрок[0] + ".Форма", ПараметрыОтчета);
		Возврат;
		
	ИначеЕсли ЭлементДереваЗначений.Имя = "ВнешнийВид" Тогда
		
		Для Каждого КлючОбъекта Из ЭлементДереваЗначений.ТекущиеДанные.Ключи Цикл
			
			Если КлючОбъекта.Пометка = Истина Тогда
				
				ОткрытьФорму(КлючОбъекта.Значение);
				Возврат;
			Иначе
				РодительЭлемента = ЭлементДереваЗначений.ТекущиеДанные.ПолучитьРодителя();
				
				Если ЭлементДереваЗначений.ТекущиеДанные.Настройка = НСтр("ru='Рабочий стол'") Тогда
					Предупреждение(НСтр("ru = 'Для просмотра настроек рабочего стола перейдите к разделу ""Рабочий стол""
						|в командном интерфейсе программы.'"));
					Возврат;
				КонецЕсли;
				
				Если ЭлементДереваЗначений.ТекущиеДанные.Настройка = НСтр("ru='Командный интерфейс'") Тогда
					Предупреждение(НСтр("ru = 'Для просмотра настроек командного интерфейса выберите нужный раздел
						|командного интерфейса программы.'"));
					Возврат;
				КонецЕсли;
				
				Если РодительЭлемента <> Неопределено Тогда
					ТекстПредупреждения = НСтр("ru = 'Для просмотра данной настройки необходимо открыть ""%1""
						|и затем перейти к форме ""%2"".'");
					ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПредупреждения,
						РодительЭлемента.Настройка, ЭлементДереваЗначений.ТекущиеДанные.Настройка);
					Предупреждение(ТекстПредупреждения);
					Возврат;
				КонецЕсли;
				
			КонецЕсли;
				
		КонецЦикла;
		
		Предупреждение(НСтр("ru = 'Данную настройку невозможно просмотреть.'"));
		Возврат;
		
	ИначеЕсли ЭлементДереваЗначений.Имя = "ПрочиеНастройки" Тогда
		
		Если ЭлементДереваЗначений.ТекущиеДанные.Тип = "ПерсональныеНастройки"
			И ИмяФормыПерсональныхНастроек <> "" Тогда
			ОткрытьФорму(ИмяФормыПерсональныхНастроек);
			Возврат;
		КонецЕсли;
		
		Предупреждение(НСтр("ru = 'Данную настройку невозможно просмотреть.'"));
		Возврат;
		
	КонецЕсли;
	
	Предупреждение(НСтр("ru = 'Выберите настройку для просмотра.'"));
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДеревоЗначений()
	
	Строки = НастройкиОтчетов.ПолучитьЭлементы();
	Для Каждого Строка Из Строки Цикл 
		Элементы.НастройкиОтчетовДерево.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
	Строки = ВнешнийВид.ПолучитьЭлементы();
	Для Каждого Строка Из Строки Цикл 
		Элементы.ВнешнийВид.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ТаблицаФормыВыбраннойСтраницыНастроек()
	
	Если ВыбраннаяСтраницаНастроек = "НастройкиОтчетовСтраница" Тогда
		Возврат Элементы.НастройкиОтчетовДерево;
	ИначеЕсли ВыбраннаяСтраницаНастроек = "ВнешнийВидСтраница" Тогда
		Возврат Элементы.ВнешнийВид;
	Иначе
		Возврат Элементы.ПрочиеНастройки;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция КоличествоСкопированныхИлиУдаленныхНастроек(ДеревоНастроек)
	
	ВыделенныеСтроки = ДеревоНастроек.ВыделенныеСтроки;
	// Переносим массив выделенных строк в список значений, чтобы отсортировать выбранные строки
	СписокВыделенныхСтрок = Новый СписокЗначений;
	Для Каждого Элемент Из ВыделенныеСтроки Цикл
		СписокВыделенныхСтрок.Добавить(Элемент);
	КонецЦикла;
	
	СписокВыделенныхСтрок.СортироватьПоЗначению();
	Если ВыбраннаяСтраницаНастроек = "НастройкиОтчетовСтраница" Тогда
		ТекущееДеревоЗначений = НастройкиОтчетов;
	ИначеЕсли ВыбраннаяСтраницаНастроек = "ВнешнийВидСтраница" Тогда
		ТекущееДеревоЗначений = ВнешнийВид;
	Иначе
		ТекущееДеревоЗначений = ПрочиеНастройки;
	КонецЕсли;
	КоличествоНастроек = 0;
	Для Каждого ВыделеннаяСтрока Из СписокВыделенныхСтрок Цикл
		ЭлементДерева = ТекущееДеревоЗначений.НайтиПоИдентификатору(ВыделеннаяСтрока.Значение);
		КоличествоПодчиненныхЭлементов = ЭлементДерева.ПолучитьЭлементы().Количество();
		РодительЭлемента = ЭлементДерева.ПолучитьРодителя();
		Если Не КоличествоПодчиненныхЭлементов = 0 Тогда
			КоличествоНастроек = КоличествоНастроек + КоличествоПодчиненныхЭлементов;
			ЭлементВерхнегоУровня = ЭлементДерева;
		ИначеЕсли КоличествоПодчиненныхЭлементов = 0
			И РодительЭлемента = Неопределено Тогда
			КоличествоНастроек = КоличествоНастроек + 1;
		Иначе
			
			Если Не РодительЭлемента = ЭлементВерхнегоУровня Тогда
				КоличествоНастроек = КоличествоНастроек + 1;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;

	Возврат КоличествоНастроек;
КонецФункции

&НаКлиенте
Процедура УдалитьСтрокуНастроек(ДеревоНастроек, ВыделеннаяСтрока)
	
	ЭлементНастроек = ДеревоНастроек.НайтиПоИдентификатору(ВыделеннаяСтрока);
	Если ЭлементНастроек = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РодительЭлементаНастроек = ЭлементНастроек.ПолучитьРодителя();
	Если Не РодительЭлементаНастроек = Неопределено Тогда
		КоличествоПодчиненныхСтрок = РодительЭлементаНастроек.ПолучитьЭлементы().Количество();
		Если КоличествоПодчиненныхСтрок = 1 Тогда
			ДеревоНастроек.ПолучитьЭлементы().Удалить(РодительЭлементаНастроек);
		Иначе
			РодительЭлементаНастроек.ПолучитьЭлементы().Удалить(ЭлементНастроек);
		КонецЕсли;
	Иначе
		ДеревоНастроек.ПолучитьЭлементы().Удалить(ЭлементНастроек);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОбУдалении(КоличествоНастроек)
	
	ТекстПояснения = НСтр("ru = 'Удалено настроек: %1'");
	ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПояснения, КоличествоНастроек);
	ПоказатьОповещениеПользователя(НСтр("ru = 'Удаление настроек'"), , ТекстПояснения);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройки()
	
	ДеревоНастроек = ТаблицаФормыВыбраннойСтраницыНастроек();
	Если ДеревоНастроек.ВыделенныеСтроки.Количество() = 0 Тогда
		Предупреждение(НСтр("ru = 'Необходимо выбрать настройки, которые требуется скопировать.'"));
		Возврат;
	КонецЕсли; 
	
	ТипПользователя = ТипЗнч(ПользовательСсылка);
	ПараметрыФормы = Новый Структура("Пользователь, ТипПользователя, КопироватьВсе", 
										ПользовательСсылка, ТипПользователя, Ложь);
	ОткрытьФорму("Обработка.НастройкиПользователей.Форма.ВыборПользователей", ПараметрыФормы);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьИмяПользователяИОбновить()
	
	Пользователь = Обработки.НастройкиПользователей.ИмяПользователяИБ(ПользовательСсылка);
	ЗаполнитьСпискиНастроек();
	
КонецПроцедуры

&НаСервере
Функция ДеревоНастроекДляВыбраннойСтраницы()
	
	Если ВыбраннаяСтраницаНастроек = "НастройкиОтчетовСтраница" Тогда
		Возврат НастройкиОтчетов;
	ИначеЕсли ВыбраннаяСтраницаНастроек = "ВнешнийВидСтраница" Тогда
		Возврат ВнешнийВид;
	Иначе
		Возврат ПрочиеНастройки;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ХранилищеНастроекДляВыбраннойСтраницы()
	
	Если ВыбраннаяСтраницаНастроек = "НастройкиОтчетовСтраница" Тогда
		Возврат "ХранилищеПользовательскихНастроекОтчетов";
	ИначеЕсли ВыбраннаяСтраницаНастроек = "ВнешнийВидСтраница"
		Или ВыбраннаяСтраницаНастроек = "ПрочиеНастройкиСтраница" Тогда
		Возврат "ХранилищеСистемныхНастроек";
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ВыделенныеЭлементыНастроек()
	Если ВыбраннаяСтраницаНастроек = "НастройкиОтчетовСтраница" Тогда
		Возврат Элементы.НастройкиОтчетовДерево.ВыделенныеСтроки;
	ИначеЕсли ВыбраннаяСтраницаНастроек = "ВнешнийВидСтраница" Тогда
		Возврат Элементы.ВнешнийВид.ВыделенныеСтроки;
	Иначе
		Возврат Элементы.ПрочиеНастройки.ВыделенныеСтроки;
	КонецЕсли;
КонецФункции

&НаСервере
Функция МассивВыделенныхНастроек()
	
	ДеревоНастроек = ДеревоНастроекДляВыбраннойСтраницы();
	МассивНастроек = Новый Массив;
	МассивПерсональныхНастроек = Новый Массив;
	
	ВыделенныеЭлементы = ВыделенныеЭлементыНастроек();
	
	Для Каждого ВыделенныйЭлемент Из ВыделенныеЭлементы Цикл
		ВыделеннаяНастройка = ДеревоНастроек.НайтиПоИдентификатору(ВыделенныйЭлемент);
		
		Если ВыделеннаяНастройка.Тип = "ПерсональныеНастройки" Тогда
			МассивПерсональныхНастроек.Добавить(ВыделеннаяНастройка.Ключи);
			Продолжить;
		КонецЕсли;
		
		МассивНастроек.Добавить(ВыделеннаяНастройка.Ключи);
	КонецЦикла;
	
	Возврат Новый Структура("МассивПерсональныхНастроек, МассивНастроек",
			МассивПерсональныхНастроек, МассивНастроек);
	
КонецФункции

