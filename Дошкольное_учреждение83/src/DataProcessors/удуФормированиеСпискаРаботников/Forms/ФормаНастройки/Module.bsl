////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Функция ПоместитьВХранилище(ДанныеДляХранилища)
	Возврат ПоместитьВоВременноеХранилище(ДанныеДляХранилища, УникальныйИдентификатор);
КонецФункции

&НаСервере
Функция ПроверитьВозможностьРедактирования(ПолеКомпоновки)
	
	ЭлементСписка=СтруктураНедоступногоОтбора.НайтиПоЗначению(ПолеКомпоновки);
	ЗначениеДляВозврата = ?(ЭлементСписка=Неопределено,истина,Ложь);
			
	Возврат ЗначениеДляВозврата;
	
КонецФункции

&НаСервере
Функция ПолучитьСписокРаботниковСервер()
	
	ТЗРаботники=Обработки.удуФормированиеСпискаРаботников.ПолучитьСписокРаботников(Объект);
	АдресДанныхПоРаботникам=ПоместитьВХранилище(ТЗРаботники);

	Возврат АдресДанныхПоРаботникам;
	
КонецФункции



 &НаСервере
 // Инициализирует обработку для подготовки списка работников, отобранного по указанным пользователем критериям.
//
// ДатаАктуальности - дата, по состоянию на которую осматривается список работников
// Организация - ссылка на организацию (может быть в том числе обособленным подразделением), если передана пустая ссылка, выбираются 
//					работники всех организаций
// Подразделение - ссылка на подразделение, если передана пустая ссылка, выбираются 
//					работники всех подразделений
// 
Процедура ИнициализироватьОтборСпискаРаботников(ДатаАктуальности, Организация = Неопределено, Подразделение = Неопределено)
	
		
	Обработки.удуФормированиеСпискаРаботников.ЗаполнитьНачальныеНастройки(Объект);
	 
	Объект.КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
	
	// Переданную организацию пропишем независимо от сохраненных ранее настроек отбора
		
		ЭлементПараметрыДанных=Объект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ГоловнаяОрганизация");
		ЭлементПараметрыДанных.Использование=Истина;
		ЭлементПараметрыДанных.Значение=?(Организация=Неопределено,Справочники.удуУчреждения.ПустаяСсылка(),Организация);
				
		удуУправлениеОтчетами.УстановитьОтбор(Объект.КомпоновщикНастроек.Настройки, "Организация", ?(Организация=Неопределено,Справочники.удуУчреждения.ПустаяСсылка(),Организация),
		ВидСравненияКомпоновкиДанных.Равно,"", ЗначениеЗаполнено(Организация));
		
		Если ЗначениеЗаполнено(Организация) тогда
			 СтруктураНедоступногоОтбора.Добавить(Новый ПолеКомпоновкиДанных("Организация"));
		КонецЕсли;
		
		удуУправлениеОтчетами.УстановитьОтбор(Объект.КомпоновщикНастроек.Настройки, "Подразделение", ?(Подразделение=Неопределено,Справочники.удуПодразделенияУчереждения.ПустаяСсылка(),Подразделение),
		ВидСравненияКомпоновкиДанных.Равно,"", ЗначениеЗаполнено(Подразделение));
				
		Если ЗначениеЗаполнено(Подразделение) Тогда
			СтруктураНедоступногоОтбора.Добавить(Новый ПолеКомпоновкиДанных("Подразделение"));
		КонецЕсли;
		
		удуУправлениеОтчетами.УстановитьОтбор(Объект.КомпоновщикНастроек.Настройки, "Должность", Справочники.Должности.ПустаяСсылка(),ВидСравненияКомпоновкиДанных.Равно,"", Ложь);
		удуУправлениеОтчетами.УстановитьОтбор(Объект.КомпоновщикНастроек.Настройки, "Сотрудник", Справочники.удуСотрудникиОрганизаций.ПустаяСсылка(),ВидСравненияКомпоновкиДанных.ВСписке,"", Ложь);
		
	
КонецПроцедуры  


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем ДатаАктуальности;
	Перем Организация;
	Перем Подразделение;
	Перем НеПоказыватьУволенных;
	Перем ДатаУволенных;
	Перем ВключатьУволенных;
	
	
	СтруктураНачальногоЗаполнения=ПолучитьИзВременногоХранилища(Параметры.АдресДанныхНачальногоЗаполнения);
	СтруктураНачальногоЗаполнения.Свойство("ДатаАктуальности",ДатаАктуальности);
	СтруктураНачальногоЗаполнения.Свойство("Организация",Организация);
	СтруктураНачальногоЗаполнения.Свойство("Подразделение",Подразделение);
	СтруктураНачальногоЗаполнения.Свойство("НеПоказыватьУволенных",НеПоказыватьУволенных);
	СтруктураНачальногоЗаполнения.Свойство("ДатаУволенных",ДатаУволенных);
	СтруктураНачальногоЗаполнения.Свойство("ВключатьУволенных",ВключатьУволенных);
	
	
	Объект.ДатаАктуальности		= ДатаАктуальности;
	Объект.ДатаУволенных			= ?(ДатаУволенных = Неопределено, НачалоГода(ДатаАктуальности), ДатаУволенных);
	Объект.ВключатьУволенных	    = ?(ВключатьУволенных=Неопределено,Объект.ВключатьУволенных,ВключатьУволенных);
	Объект.Организация = ?(Организация=Неопределено,Объект.Организация,Организация);
	
	
	НеПоказыватьУволенных=?(НеПоказыватьУволенных=Неопределено,Ложь,НеПоказыватьУволенных);
	
	СтруктураНедоступногоОтбора.Очистить();
		
	ИнициализироватьОтборСпискаРаботников(ДатаАктуальности, Организация, Подразделение);
	
	Элементы.ГруппаПоУволенным.Видимость = не НеПоказыватьУволенных;


	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ВыполнитьПодбор(Команда)
	
	АдресСписка = ПолучитьСписокРаботниковСервер();
	
	СтруктураВыбора=Новый Структура("Команда,АдресДанных,ДатаАктуальности","ЗаполнитьСписокРаботников",АдресСписка,Объект.ДатаАктуальности);
		
	ОповеститьОВыборе(СтруктураВыбора);
	
	Если Открыта() Тогда
		Закрыть();
	КонецЕсли;

КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ КомпоновщикНастроекНастройкиОтбор

&НаКлиенте
Процедура КомпоновщикНастроекНастройкиОтборПередНачаломИзменения(Элемент, Отказ)
	
	СтрокаТЧ=Элементы.КомпоновщикНастроекНастройкиОтбор.ТекущиеДанные;
	Отказ=не ПроверитьВозможностьРедактирования(СтрокаТЧ.ЛевоеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекНастройкиОтборПередУдалением(Элемент, Отказ)
	
	Отказ= не ПроверитьВозможностьРедактирования(Элемент.ТекущиеДанные.ЛевоеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекНастройкиОтборЛевоеЗначениеПриИзменении(Элемент)
	
	Идентификатор=Элементы.КомпоновщикНастроекНастройкиОтбор.ТекущаяСтрока;
	ЭлементОтбора=Объект.КомпоновщикНастроек.Настройки.Отбор.ПолучитьОбъектПоИдентификатору(Идентификатор);		 
			 
			 
	Если не ПроверитьВозможностьРедактирования(ЭлементОтбора.ЛевоеЗначение) тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст="Отбор по полю """+строка(ЭлементОтбора.ЛевоеЗначение)+""" уже установлен";
		СообщениеПользователю.Сообщить();
		ЭлементОтбора.ЛевоеЗначение=Новый ПолеКомпоновкиДанных(мПолеКомпоновки);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекНастройкиОтборПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока тогда
		мПолеКомпоновки="";
	Иначе 
		мПолеКомпоновки=Элемент.ТекущиеДанные.ЛевоеЗначение;
	КонецЕсли;
	
КонецПроцедуры



