///////////////////////////////////////////////////////////////////////////////////
// РаботаВМоделиСервисаПовтИсп.
//
///////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает массив сериализуемых структурных типов, поддерживаемых в настоящее время.
//
// Возвращаемое значение:
// Фиксированный массив элементов типа Тип
//
Функция СериализуемыеСтруктурныеТипы() Экспорт
	
	МассивТипов = Новый Массив;
	
	МассивТипов.Добавить(Тип("Структура"));
	МассивТипов.Добавить(Тип("ФиксированнаяСтруктура"));
	МассивТипов.Добавить(Тип("Массив"));
	МассивТипов.Добавить(Тип("ФиксированныйМассив"));
	МассивТипов.Добавить(Тип("Соответствие"));
	МассивТипов.Добавить(Тип("ФиксированноеСоответствие"));
	МассивТипов.Добавить(Тип("КлючИЗначение"));
	МассивТипов.Добавить(Тип("ТаблицаЗначений"));
	
	Возврат Новый ФиксированныйМассив(МассивТипов);
	
КонецФункции

// Возвращает конечную точку для отправки сообщений в менеджер сервиса.
//
// Возвращаемое значение:
//  ПланОбменСсылка.ОбменСообщениями - узел соответствующий менеджеру сервиса
//
Функция КонечнаяТочкаМенеджераСервиса() Экспорт
	
	// СтандартныеПодсистемы.РаботаВМоделиСервиса.УдаленноеАдминистрирование
	УстановитьПривилегированныйРежим(Истина);
	Возврат Константы.КонечнаяТочкаМенеджераСервиса.Получить();
	// Конец СтандартныеПодсистемы.РаботаВМоделиСервиса.УдаленноеАдминистрирование
	
	ВызватьИсключение(НСтр("ru = 'Для получения конечной точки Менеджера сервиса
                            |необходимо внедрение подсистемы РаботаВМоделиСервиса.УдаленноеАдминистрирование'"));
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////////
// Функции, возвращающие типы сообщений и имена содержащих их пакетов

// Возвращает имя пакета удаленного администрирования.
//
// Возвращаемое значение:
// Строка.
//
Функция ПакетУдаленноеАдминистрирование() Экспорт
	
	Возврат "http://www.1c.ru/SaaS/RemoteAdministration/App/1.0.2.1";
	
КонецФункции

// Возвращает имя пакета контроля удаленного администрирования.
//
// Возвращаемое значение:
// Строка.
//
Функция ПакетКонтрольУдаленногоАдминистрирования() Экспорт
	
	Возврат "http://www.1c.ru/SaaS/RemoteAdministration/Control/1.0.2.1";
	
КонецФункции

// Возвращает тип сообщения ОбновитьПользователя.
//
// Возвращаемое значение:
// XDTO-пакеты.УдаленноеАдминистрированиеВМоделиСервиса.ОбновитьПользователя 
//
Функция СообщениеОбновитьПользователя() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетУдаленноеАдминистрирование(), "UpdateUser");
	
КонецФункции

// Возвращает тип сообщения УстановитьПолныеПраваОбластиДанных.
//
// Возвращаемое значение:
// XDTO-пакеты.УдаленноеАдминистрированиеВМоделиСервиса.УстановитьПолныеПраваОбластиДанных 
//
Функция СообщениеУстановитьПолныеПраваОбластиДанных() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетУдаленноеАдминистрирование(), "SetFullControl");
	
КонецФункции

// Возвращает тип сообщения УстановитьДоступКОбластиДанных.
//
// Возвращаемое значение:
// XDTO-пакеты.УдаленноеАдминистрированиеВМоделиСервиса.УстановитьДоступКОбластиДанных 
//
Функция СообщениеУстановитьДоступКОбластиДанных() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетУдаленноеАдминистрирование(), "SetApplicationAccess");
	
КонецФункции

// Возвращает тип сообщения УстановитьПраваПользователяПоУмолчанию.
//
// Возвращаемое значение:
// XDTO-пакеты.УдаленноеАдминистрированиеВМоделиСервиса.УстановитьПраваПользователяПоУмолчанию 
//
Функция СообщениеУстановитьПраваПользователяПоУмолчанию() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетУдаленноеАдминистрирование(), "SetDefaultUserRights");
	
КонецФункции

// Возвращает тип сообщения ПодготовитьОбластьДанных.
//
// Возвращаемое значение:
// XDTO-пакеты.УдаленноеАдминистрированиеВМоделиСервиса.ПодготовитьОбластьДанных 
//
Функция СообщениеПодготовитьОбластьДанных() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетУдаленноеАдминистрирование(), "PrepareApplication");
	
КонецФункции

// Возвращает тип сообщения УдалитьОбластьДанных.
//
// Возвращаемое значение:
// XDTO-пакеты.УдаленноеАдминистрированиеВМоделиСервиса.УдалитьОбластьДанных 
//
Функция СообщениеУдалитьОбластьДанных() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетУдаленноеАдминистрирование(), "DeleteApplication");
	
КонецФункции

// Возвращает тип сообщения УстановитьПараметрыОбластиДанных.
//
// Возвращаемое значение:
// XDTO-пакеты.УдаленноеАдминистрированиеВМоделиСервиса.УстановитьПараметрыОбластиДанных 
//
Функция СообщениеУстановитьПараметрыОбластиДанных() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетУдаленноеАдминистрирование(), "SetApplicationParams");
	
КонецФункции

// Возвращает тип сообщения ОбластьДанныхПодготовлена.
//
// Возвращаемое значение:
// XDTO-пакеты.КонтрольУдаленногоАдминистрирования.ОбластьДанныхПодготовлена
//
Функция СообщениеОбластьДанныхПодготовлена() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетКонтрольУдаленногоАдминистрирования(), "ApplicationPrepared");
	
КонецФункции

// Возвращает тип сообщения ОбластьДанныхУдалена.
//
// Возвращаемое значение:
// XDTO-пакеты.КонтрольУдаленногоАдминистрирования.ОбластьДанныхУдалена
//
Функция СообщениеОбластьДанныхУдалена() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетКонтрольУдаленногоАдминистрирования(), "ApplicationDeleted");
	
КонецФункции

// Возвращает тип сообщения ОшибкаПодготовкиОбластиДанных.ОшибкаПодготовкиОбластиДанных
//
// Возвращаемое значение:
// XDTO-пакеты.КонтрольУдаленногоАдминистрирования.
//
Функция СообщениеОшибкаПодготовкиОбластиДанных() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетКонтрольУдаленногоАдминистрирования(), "ApplicationPrepareFailed");
	
КонецФункции

// Возвращает тип сообщения ОшибкаУдаленияОбластиДанных.
//
// Возвращаемое значение:
// XDTO-пакеты.КонтрольУдаленногоАдминистрирования.ОшибкаУдаленияОбластиДанных
//
Функция СообщениеОшибкаУдаленияОбластиДанных() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетКонтрольУдаленногоАдминистрирования(), "ApplicationDeleteFailed");
	
КонецФункции

// Возвращает тип сообщения УстановитьПараметрыИБ.
//
// Возвращаемое значение:
// XDTO-пакеты.УдаленноеАдминистрированиеВМоделиСервиса.УстановитьПараметрыИБ
//
Функция СообщениеУстановитьПараметрыИБ() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетУдаленноеАдминистрирование(), "SetIBParams");
	
КонецФункции

// Возвращает тип сообщения УстановитьКонечнуюТочкуМенеджераСервиса.
//
// Возвращаемое значение:
// XDTO-пакеты.УдаленноеАдминистрированиеВМоделиСервиса.УстановитьКонечнуюТочкуМенеджераСервиса 
//
Функция СообщениеУстановитьКонечнуюТочкуМенеджераСервиса() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетУдаленноеАдминистрирование(), "SetServiceManagerEndPoint");
	
КонецФункции
