////////////////////////////////////////////////////////////////////////////////
// Подсистема "Файловые функции".
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Возвращает СписокРасширенийФайловOpenDocument.
Функция ПолучитьСписокРасширенийФайловOpenDocument() Экспорт
	
	Возврат ФайловыеФункцииСлужебный.ПолучитьСписокРасширенийФайловOpenDocument();
	
КонецФункции

// Возвращает СписокРасширенийТекстовыхФайлов.
Функция ПолучитьСписокРасширенийТекстовыхФайлов() Экспорт
	
	Возврат ФайловыеФункцииСлужебный.ПолучитьСписокРасширенийТекстовыхФайлов();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Настройки

// Возвращает структуру, содержащую различные персональные настройки
// по работе с файлами.
//
Функция ПолучитьПерсональныеНастройкиРаботыСФайлами() Экспорт
	
	Настройки = Новый Структура;
	
	СтандартныеПодсистемыПереопределяемый.ПолучитьПерсональныеНастройкиРаботыСФайлами(Настройки);
	ПолучитьПерсональныеНастройкиФайловыхФункций(Настройки);
	
	Возврат Настройки;
	
КонецФункции

// Устанавливает персональные настройки файловых функций.
Процедура ПолучитьПерсональныеНастройкиФайловыхФункций(Настройки)
	
	УстановитьПривилегированныйРежим(Истина);
	
	// МаксимальныйРазмерЛокальногоКэшаФайлов.
	МаксимальныйРазмерЛокальногоКэшаФайлов = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ЛокальныйКэшФайлов", "МаксимальныйРазмерЛокальногоКэшаФайлов");
	
	Если МаксимальныйРазмерЛокальногоКэшаФайлов = Неопределено Тогда
		МаксимальныйРазмерЛокальногоКэшаФайлов = 100*1024*1024; // 100 МБ.
		
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
			"ЛокальныйКэшФайлов",
			"МаксимальныйРазмерЛокальногоКэшаФайлов",
			МаксимальныйРазмерЛокальногоКэшаФайлов);
	КонецЕсли;
	
	Настройки.Вставить("МаксимальныйРазмерЛокальногоКэшаФайлов",
	                   МаксимальныйРазмерЛокальногоКэшаФайлов);
	
	// ПутьКЛокальномуКэшуФайлов.
	ПутьКЛокальномуКэшуФайлов = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ЛокальныйКэшФайлов", "ПутьКЛокальномуКэшуФайлов");
	// Не следует получать эту переменную непосредственно.
	// Нужно использовать функцию РабочийКаталогПользователя
	// модуля ФайловыеФункцииСлужебныйКлиент.
	Настройки.Вставить("ПутьКЛокальномуКэшуФайлов", ПутьКЛокальномуКэшуФайлов);
	
	// УдалятьФайлИзЛокальногоКэшаФайловПриЗавершенииРедактирования.
	УдалятьФайлИзЛокальногоКэшаФайловПриЗавершенииРедактирования =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"ЛокальныйКэшФайлов", "УдалятьФайлИзЛокальногоКэшаФайловПриЗавершенииРедактирования");
	
	Если УдалятьФайлИзЛокальногоКэшаФайловПриЗавершенииРедактирования = Неопределено Тогда
		УдалятьФайлИзЛокальногоКэшаФайловПриЗавершенииРедактирования = Ложь;
	КонецЕсли;
	
	Настройки.Вставить("УдалятьФайлИзЛокальногоКэшаФайловПриЗавершенииРедактирования",
	                   УдалятьФайлИзЛокальногоКэшаФайловПриЗавершенииРедактирования);
	
	// ПодтверждатьПриУдаленииИзЛокальногоКэшаФайлов.
	ПодтверждатьПриУдаленииИзЛокальногоКэшаФайлов =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"ЛокальныйКэшФайлов", "ПодтверждатьПриУдаленииИзЛокальногоКэшаФайлов");
	
	Если ПодтверждатьПриУдаленииИзЛокальногоКэшаФайлов = Неопределено Тогда
		ПодтверждатьПриУдаленииИзЛокальногоКэшаФайлов = Ложь;
	КонецЕсли;
	
	Настройки.Вставить("ПодтверждатьПриУдаленииИзЛокальногоКэшаФайлов",
	                   ПодтверждатьПриУдаленииИзЛокальногоКэшаФайлов);
	
	// ИзвлекатьТекстыФайловНаСервере.
	ИзвлекатьТекстыФайловНаСервере = Константы.ИзвлекатьТекстыФайловНаСервере.Получить();
	Если ИзвлекатьТекстыФайловНаСервере = Неопределено Тогда
		ИзвлекатьТекстыФайловНаСервере = Ложь;
	КонецЕсли;
	Настройки.Вставить("ИзвлекатьТекстыФайловНаСервере", ИзвлекатьТекстыФайловНаСервере);
	
	// МаксимальныйРазмерФайла.
	МаксимальныйРазмерФайла = ФайловыеФункцииСлужебный.ПолучитьМаксимальныйРазмерФайла();
	Настройки.Вставить("МаксимальныйРазмерФайла", МаксимальныйРазмерФайла);
	
	// ЗапрещатьЗагрузкуФайловПоРасширению.
	ЗапрещатьЗагрузкуФайловПоРасширению = Константы.ЗапрещатьЗагрузкуФайловПоРасширению.Получить();
	Если ЗапрещатьЗагрузкуФайловПоРасширению = Неопределено Тогда
		ЗапрещатьЗагрузкуФайловПоРасширению = Ложь;
		Константы.ЗапрещатьЗагрузкуФайловПоРасширению.Установить(ЗапрещатьЗагрузкуФайловПоРасширению);
	КонецЕсли;
	Настройки.Вставить("ЗапретЗагрузкиФайловПоРасширению", ЗапрещатьЗагрузкуФайловПоРасширению);
	
	// СписокЗапрещенныхРасширений.
	СписокЗапрещенныхРасширений = ФайловыеФункцииСлужебный.ПолучитьСписокЗапрещенныхРасширений();
	Настройки.Вставить("СписокЗапрещенныхРасширений", СписокЗапрещенныхРасширений);
	
	// СписокРасширенийФайловOpenDocument.
	СписокРасширенийФайловOpenDocument = ФайловыеФункцииСлужебныйПовтИсп.ПолучитьСписокРасширенийФайловOpenDocument();
	Настройки.Вставить("СписокРасширенийФайловOpenDocument", СписокРасширенийФайловOpenDocument);
	
	// СписокРасширенийТекстовыхФайлов.
	СписокРасширенийТекстовыхФайлов = Константы.СписокРасширенийТекстовыхФайлов.Получить();
	Если ПустаяСтрока(СписокРасширенийТекстовыхФайлов) Тогда
		СписокРасширенийТекстовыхФайлов = "TXT";
		Константы.СписокРасширенийТекстовыхФайлов.Установить(СписокРасширенийТекстовыхФайлов);
	КонецЕсли;	
	Настройки.Вставить("СписокРасширенийТекстовыхФайлов", СписокРасширенийТекстовыхФайлов);
	
	// ПоказыватьПодсказкиПриРедактированииФайлов.
	ПоказыватьПодсказкиПриРедактированииФайлов = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиПрограммы", "ПоказыватьПодсказкиПриРедактированииФайлов");
	
	Если ПоказыватьПодсказкиПриРедактированииФайлов = Неопределено Тогда
		ПоказыватьПодсказкиПриРедактированииФайлов = Истина;
		
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
			"НастройкиПрограммы",
			"ПоказыватьПодсказкиПриРедактированииФайлов",
			ПоказыватьПодсказкиПриРедактированииФайлов);
	КонецЕсли;
	Настройки.Вставить("ПоказыватьПодсказкиПриРедактированииФайлов",
	                    ПоказыватьПодсказкиПриРедактированииФайлов);
	
	// ОтпечатокЛичногоСертификатаДляШифрования.
	ОтпечатокЛичногоСертификатаДляШифрования = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"ЭЦП", "ОтпечатокЛичногоСертификатаДляШифрования");
	
	Настройки.Вставить("ОтпечатокЛичногоСертификатаДляШифрования",
	                   ОтпечатокЛичногоСертификатаДляШифрования);
	
	// ПоказыватьИнформациюЧтоФайлНеБылИзменен.
	ПоказыватьИнформациюЧтоФайлНеБылИзменен = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиПрограммы", "ПоказыватьИнформациюЧтоФайлНеБылИзменен");
	
	Если ПоказыватьИнформациюЧтоФайлНеБылИзменен = Неопределено Тогда
		ПоказыватьИнформациюЧтоФайлНеБылИзменен = Истина;
		
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
			"НастройкиПрограммы",
			"ПоказыватьИнформациюЧтоФайлНеБылИзменен",
			ПоказыватьИнформациюЧтоФайлНеБылИзменен);
	КонецЕсли;
	Настройки.Вставить("ПоказыватьИнформациюЧтоФайлНеБылИзменен",
	                   ПоказыватьИнформациюЧтоФайлНеБылИзменен);
	
	// Настройки открытия файлов.
	ТекстовыеФайлыРасширение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиОткрытияФайлов\ТекстовыеФайлы",
		"Расширение", "TXT XML INI");
	
	ТекстовыеФайлыСпособОткрытия = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиОткрытияФайлов\ТекстовыеФайлы", 
		"СпособОткрытия",
		Перечисления.СпособыОткрытияФайлаНаПросмотр.ВоВстроенномРедакторе);
	
	ГрафическиеСхемыРасширение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиОткрытияФайлов\ГрафическиеСхемы", "Расширение", "GRS");
	
	ГрафическиеСхемыСпособОткрытия = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиОткрытияФайлов\ГрафическиеСхемы",
		"СпособОткрытия",
		Перечисления.СпособыОткрытияФайлаНаПросмотр.ВоВстроенномРедакторе);
	
	Настройки.Вставить("ТекстовыеФайлыРасширение",       ТекстовыеФайлыРасширение);
	Настройки.Вставить("ТекстовыеФайлыСпособОткрытия",   ТекстовыеФайлыСпособОткрытия);
	Настройки.Вставить("ГрафическиеСхемыРасширение",     ГрафическиеСхемыРасширение);
	Настройки.Вставить("ГрафическиеСхемыСпособОткрытия", ГрафическиеСхемыСпособОткрытия);
	
КонецПроцедуры

