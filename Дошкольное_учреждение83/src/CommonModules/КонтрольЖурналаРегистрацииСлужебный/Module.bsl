////////////////////////////////////////////////////////////////////////////////
// Подсистема "Контроль журнала регистрации".
// 
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Обработчик регламентного задания КонтрольОшибокВЖурналеРегистрации.
Процедура ОбработкаРегламентногоЗадания_КонтрольОшибокВЖурналеРегистрации() Экспорт
	
	Если ПустаяСтрока(ИмяПользователя()) Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	ИмяСобытия = НСтр("ru = 'Контроль журнала регистрации'");
	
	ЗаписьЖурналаРегистрации(
		ИмяСобытия,
		УровеньЖурналаРегистрации.Информация, , ,
		НСтр("ru = 'Запуск'")
	);
	
	Попытка
		Обработки.КонтрольЖурналаРегистрации.СформироватьОтчетПоОшибкамИПослатьОтчет();
		ЗаписьЖурналаРегистрации(
			ИмяСобытия,
			УровеньЖурналаРегистрации.Информация, , ,
			НСтр("ru = 'Успешное завершение'")
		);
	Исключение
		ЗаписьЖурналаРегистрации(
			ИмяСобытия,
			УровеньЖурналаРегистрации.Ошибка, , ,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
	КонецПопытки;
	
КонецПроцедуры

// Возвращает адресатов получения отчета по контролю журнала регистрации.
Функция ПолучитьАдресатовПолученияОтчетаПоЖурналуРегистрации() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Константы.АдресатыПолученияОтчетаПоЖурналуРегистрации.Получить();
	
КонецФункции

// Устанавливает адресатов получения отчета по контролю журнала регистрации.
Процедура УстановитьАдресатовПолученияОтчетаПоЖурналуРегистрации(Адресаты) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Константы.АдресатыПолученияОтчетаПоЖурналуРегистрации.Установить(Адресаты);
	
КонецПроцедуры
