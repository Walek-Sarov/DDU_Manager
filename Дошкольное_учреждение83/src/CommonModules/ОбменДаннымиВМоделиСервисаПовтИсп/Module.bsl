////////////////////////////////////////////////////////////////////////////////
// ОбменДаннымиВМоделиСервисаПовтИсп: механизм обмена данными.
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Возвращает ссылку на объект WSПрокси сервиса обмена.
//
// Возвращаемое значение:
// WSПрокси.
//
Функция ПолучитьWSПроксиСервисаОбмена() Экспорт
	
	ИмяПользователя = Константы.ИмяСлужебногоПользователяМенеджераСервиса.Получить();
	ПарольПользователя = Константы.ПарольСлужебногоПользователяМенеджераСервиса.Получить();
	АдресСервиса = Константы.АдресВебСервисаОбменаДанными.Получить();
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("WSURLВебСервиса",   АдресСервиса);
	СтруктураНастроек.Вставить("WSИмяПользователя", ИмяПользователя);
	СтруктураНастроек.Вставить("WSПароль",          ПарольПользователя);
	СтруктураНастроек.Вставить("WSИмяСервиса",      "ManageApplicationExchange");
	СтруктураНастроек.Вставить("WSURLПространстваИменСервиса", "http://www.1c.ru/SaaS/1.0/WS/ManageApplicationExchange");
	СтруктураНастроек.Вставить("WSТаймаут", 20);
	
	Результат = ОбменДаннымиСервер.ПолучитьWSПроксиПоПараметрамПодключения(СтруктураНастроек);
	
	Если Результат = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка получения web-сервиса обмена данными управляющего приложения.'");
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

// Возвращает ссылку на объект WSПрокси сервиса обмена версии 1.0.6.5.
//
// Возвращаемое значение:
// WSПрокси.
//
Функция ПолучитьWSПроксиСервисаОбмена_1_0_6_5() Экспорт
	
	ИмяПользователя = Константы.ИмяСлужебногоПользователяМенеджераСервиса.Получить();
	ПарольПользователя = Константы.ПарольСлужебногоПользователяМенеджераСервиса.Получить();
	АдресСервиса = Константы.АдресВебСервисаОбменаДанными.Получить();
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("WSURLВебСервиса",   АдресСервиса);
	СтруктураНастроек.Вставить("WSИмяПользователя", ИмяПользователя);
	СтруктураНастроек.Вставить("WSПароль",          ПарольПользователя);
	СтруктураНастроек.Вставить("WSИмяСервиса",      "ManageApplicationExchange_1_0_6_5");
	СтруктураНастроек.Вставить("WSURLПространстваИменСервиса", "http://www.1c.ru/SaaS/1.0/WS/ManageApplicationExchange_1_0_6_5");
	СтруктураНастроек.Вставить("WSТаймаут", 20);
	
	Результат = ОбменДаннымиСервер.ПолучитьWSПроксиПоПараметрамПодключения(СтруктураНастроек);
	
	Если Результат = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка получения web-сервиса обмена данными управляющего приложения.'");
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

// Возвращает ссылку на объект WSПрокси корреспондента, идентифицируемого узлом плана обмена.
//
// Параметры:
// УзелИнформационнойБазы - ПланОбменаСсылка.
// СтрокаСообщенияОбОшибке - Строка - Текст сообщения об ошибке.
//
// Возвращаемое значение:
// WSПрокси.
//
Функция ПолучитьWSПроксиКорреспондента(УзелИнформационнойБазы, СтрокаСообщенияОбОшибке = "") Экспорт
	
	СтруктураНастроек = РегистрыСведений.НастройкиТранспортаОбмена.ПолучитьНастройкиТранспортаWS(УзелИнформационнойБазы);
	СтруктураНастроек.Вставить("WSИмяСервиса", "RemoteAdministrationOfExchange");
	СтруктураНастроек.Вставить("WSURLПространстваИменСервиса", "http://www.1c.ru/SaaS/1.0/WS/RemoteAdministrationOfExchange");
	СтруктураНастроек.Вставить("WSТаймаут", 20);
	
	Возврат ОбменДаннымиСервер.ПолучитьWSПроксиПоПараметрамПодключения(СтруктураНастроек, СтрокаСообщенияОбОшибке);
	
КонецФункции

// Возвращает ссылку на объект WSПрокси версии 2.0.1.6 корреспондента, идентифицируемого узлом плана обмена.
//
// Параметры:
// УзелИнформационнойБазы - ПланОбменаСсылка.
// СтрокаСообщенияОбОшибке - Строка - Текст сообщения об ошибке.
//
// Возвращаемое значение:
// WSПрокси.
//
Функция ПолучитьWSПроксиКорреспондента_2_0_1_6(УзелИнформационнойБазы, СтрокаСообщенияОбОшибке = "") Экспорт
	
	СтруктураНастроек = РегистрыСведений.НастройкиТранспортаОбмена.ПолучитьНастройкиТранспортаWS(УзелИнформационнойБазы);
	СтруктураНастроек.Вставить("WSИмяСервиса", "RemoteAdministrationOfExchange_2_0_1_6");
	СтруктураНастроек.Вставить("WSURLПространстваИменСервиса", "http://www.1c.ru/SaaS/1.0/WS/RemoteAdministrationOfExchange_2_0_1_6");
	СтруктураНастроек.Вставить("WSТаймаут", 20);
	
	Возврат ОбменДаннымиСервер.ПолучитьWSПроксиПоПараметрамПодключения(СтруктураНастроек, СтрокаСообщенияОбОшибке);
КонецФункции

// Определяет, используется ли план обмена, идентифицируемый именем, в модели сервиса.
// Чтобы дать возможность это определить, все планы обмена на уровне модуля менеджера 
// определяют функцию ПланОбменаИспользуетсяВМоделиСервиса(), 
// явно возвращающую значение Истина или Ложь.
//
// Параметры:
// ИмяПланаОбмена - Строка.
//
// Возвращаемое значение:
// Булево.
//
Функция ПланОбменаИспользуетсяВМоделиСервиса(Знач ИмяПланаОбмена) Экспорт
	
	Результат = Ложь;
	
	Если ОбменДаннымиПовтИсп.ПланыОбменаБСП().Найти(ИмяПланаОбмена) <> Неопределено
		И Не Метаданные.ПланыОбмена[ИмяПланаОбмена].РаспределеннаяИнформационнаяБаза Тогда
		
		Результат = ПланыОбмена[ИмяПланаОбмена].ПланОбменаИспользуетсяВМоделиСервиса();
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции
