
// Функция позволяет получить по экземпляру документа ассоциированное значение перечисления
// удуВидыУчетныхДокументов
//
// Параметры:
//  Ссылка       - ДокументСсылка - ссылка на учетный документ.
//
// Возвращаемое значение:
// Перечисление.удуВидыУчетныхДокументов
//				- если данный вид документа предназначен для автоматической регистрации
// Неопределено	- в противном случае
//                                  
Функция ПолучитьПеречислениеПоТипу(Ссылка) Экспорт
	
	Если Ссылка = Неопределено Тогда
		Возврат Неопределено;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.удуПриказОВыбытииИзГруппы") Тогда
		Возврат Перечисления.удуВидыУчетныхДокументов.ПриказОВыбытииРебенкаИзДОУ;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.удуПриказОЗачисленииРебенкаВГруппу") Тогда
		Возврат Перечисления.удуВидыУчетныхДокументов.ПриказОЗачисленииРебенкаВГруппу;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.удуПриказОПереводеВДругуюГруппу") Тогда
		Возврат Перечисления.удуВидыУчетныхДокументов.ПриказОПереводРебенка;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.удуЗаявкаНаЗачислениеРебенкаВДОУ") Тогда
		Возврат Перечисления.удуВидыУчетныхДокументов.ЗаявкаНаЗачисление;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.удуДоговорОЗачисленииРебенка") Тогда
		Возврат Перечисления.удуВидыУчетныхДокументов.ДоговорНаЗачислениеРебенка;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.удуОприходованиеТМЦ") Тогда
		Возврат Перечисления.удуВидыУчетныхДокументов.ОприходовываниеТМЦ;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.удуПеремещениеТМЦ") Тогда
		Возврат Перечисления.удуВидыУчетныхДокументов.ПеремещениеТМЦ;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.удуСписаниеТМЦ") Тогда
		Возврат Перечисления.удуВидыУчетныхДокументов.СписаниеТМЦ;
				
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.удуПриемНаРаботуВОрганизацию") Тогда
		Возврат Перечисления.удуВидыУчетныхДокументов.ПриемНаРаботу;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.удуКадровоеПеремещениеОрганизаций") Тогда
		Возврат Перечисления.удуВидыУчетныхДокументов.КадровоеПеремещение;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.удуУвольнениеИзОрганизаций") Тогда
		Возврат Перечисления.удуВидыУчетныхДокументов.УвольнениеСотрудника;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.удуВозвратНаРаботуОрганизаций") Тогда
		Возврат Перечисления.удуВидыУчетныхДокументов.ВозвратСотрудникаНаРаботу;
				
	Иначе Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

// Функция создает делопроизводственный документ для указанного учетного документа, если соответсвующая настройка
// сделана в регистре сведений удуНастройкиРегистрацииДокументов. Затем открывает карточку данного документа.
//
// Параметры:
//
// - Учетный документ	- учетный документ, для которого нужно зарегистрировать документ
//
// - Корреспондент		- корреспондент в отношении которого возник документ
//
// - СведенияОДетях		- массив детей, в отношении которых возник документ
//
// Возвращаемое значение:
// Структура
//
// - Документ,
// 		- СправочникСсылка.ВнутренниеДокументы ИЛИ
// 		- СправочникСсылка.ВходящиеДокументы ИЛИ
// 		- СправочникСсылка.ИсходящиеДокументы	- если документ был создан успешно
// ИЛИ
// 		- Неопределено в случае ошибки
//
// - Успешно, булево 	- Истина - успешно, Ложь - произошла ошибка
//
// - Сообщение, Строка	- Сообщение об ошибке
Функция РегистрироватьДокумент(УчетныйДокумент, Корреспондент = Неопределено, СведенияОДетях = Неопределено) Экспорт
	
	НачатьТранзакцию();
	
	Результат = Новый Структура("Успешно, Документ, Сообщение", Ложь, Неопределено, Нстр("ru = 'Документ успешно зарегистрирован.'"));
	
	// проверка наличия зарегистрированного документа
	Отбор = Новый Структура("УчетныйДокумент", УчетныйДокумент);
	Документ = РегистрыСведений.удуРегистрацияУчетныхДокументов.Получить(Отбор).ДокументДелопроизводства;
	Если Документ <> Неопределено Тогда
		Результат.Успешно = Ложь;
		Результат.Документ = Документ;                               
		Результат.Сообщение = НСтр("ru = 'Документ уже зарегистрирован в системе!'");
		Возврат Результат;
	КонецЕсли;
	
	// получаем настройки
	Отбор = Новый Структура("ВидУчетногоДокумента", ПолучитьПеречислениеПоТипу(УчетныйДокумент));
	Настройки = РегистрыСведений.удуНастройкиРегистрацииДокументов.Получить(Отбор);
	Если Настройки.ВидДокумента = Неопределено Тогда
		Результат.Успешно = Ложь;
		Результат.Сообщение = НСтр("ru = 'Для данного вида учетного документа не заданы настройки автоматической регистрации!'");
		Возврат Результат;
	КонецЕсли;
	
	// Запись документа.
	
	Если Корреспондент = Неопределено Тогда
		Корреспондент = ПолучитьКорреспондента(УчетныйДокумент.Ссылка);
	КонецЕсли;
	
	Корреспондент = ?(Корреспондент = Неопределено, Справочники.Корреспонденты.ПустаяСсылка(), Корреспондент);
	
	Если ТипЗнч(Настройки.ВидДокумента) = Тип("СправочникСсылка.ВидыВнутреннихДокументов") Тогда
		
		Документ = Справочники.ВнутренниеДокументы.СоздатьЭлемент();
		Документ.Папка = Настройки.Папка;
		
		Если Настройки.ВидДокумента.УчетПоКорреспондентам Тогда
			Документ.Корреспондент = Корреспондент;
		КонецЕсли;
		
		Документ.Подготовил = ОбщегоНазначения.ТекущийПользователь();
		
		Если СведенияОДетях = Неопределено Тогда
			СведенияОДетях = ПолучитьСведенияОДетях(УчетныйДокумент);
		КонецЕсли;
		
		Если СведенияОДетях <> Неопределено Тогда
			Для Каждого Ребенок Из СведенияОДетях Цикл
				Строка = Документ.удуДети.Добавить();
				Строка.Ребенок = Ребенок;
			КонецЦикла;
		КонецЕсли;
		
	Иначе
		
		Если ТипЗнч(Настройки.ВидДокумента) = Тип("СправочникСсылка.ВидыВходящихДокументов") Тогда
			Документ = Справочники.ВходящиеДокументы.СоздатьЭлемент();
			Документ.Отправитель = Корреспондент;
			
		Иначе	//исходящий документ
			
			Документ = Справочники.ИсходящиеДокументы.СоздатьЭлемент();
			Документ.Адресат = Корреспондент;
			Документ.Подготовил = ОбщегоНазначения.ТекущийПользователь();
			
		КонецЕсли;
		
		Если Константы.ИспользоватьГрифыДоступаКВходящимИИсходящимДокументам.Получить() Тогда
			Документ.ГрифДоступа = Настройки.ГрифДоступа;
		КонецЕсли;
		
	КонецЕсли;
	
	// Заполнение общих реквизитов.
	Документ.ВидДокумента = Настройки.ВидДокумента;
	
	Документ.Заголовок = УчетныйДокумент.Метаданные().Синоним;
	
	Если Константы.ИспользоватьУчетПоОрганизациям.Получить() Тогда
		Документ.Организация = Настройки.Организация;
	КонецЕсли;
	
	Если Документ.ВидДокумента.СпособНумерации = Перечисления.СпособыНумерации.Вручную Тогда
		Документ.РегистрационныйНомер = УчетныйДокумент.Код;
	КонецЕсли;	
			
	Документ.Записать();
	
		// Запись документа.
	
	// Записать соответствие между документами.
	МЗ = РегистрыСведений.удуРегистрацияУчетныхДокументов.СоздатьМенеджерЗаписи();
	МЗ.УчетныйДокумент = УчетныйДокумент;
	МЗ.ДокументДелопроизводства = Документ.Ссылка;
	МЗ.Записать(Ложь);
	
	// Записать информацию в связь между документами.
	МЗ = РегистрыСведений.удуСвязьДокументовСДелопроизводством.СоздатьМенеджерЗаписи();
	МЗ.ДокументДОУ = УчетныйДокумент;
	МЗ.ДокументДелопроизводства = Документ.Ссылка;
	МЗ.ВидДокумента = Документ.Метаданные().Синоним;
	МЗ.Комментарий = "Регистрация документа";
	МЗ.Записать(Ложь);             	
	
	ЗафиксироватьТранзакцию();
	
	Результат.Документ = Документ.Ссылка;
	Результат.Успешно = Истина;
	
	Возврат Результат;	
	
КонецФункции

// Функция извлекает перечень детей из учетного документа.
//
// Параметры:
//
// - Ссылка	- ссылка на учетный документ
//
// Возвращаемое значение:
// - Массив детей (СправочникСсылка.удуДети)
// - Неопределено, если документ не содержит сведений о детях
Функция ПолучитьСведенияОДетях(Ссылка)
	
	Если Ссылка = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
		
	Сведения = Неопределено;
	ТипДокумента = ТипЗнч(Ссылка);
		
	Если ТипДокумента = Тип("ДокументСсылка.удуПриказОВыбытииИзГруппы")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.удуПриказОПереводеВДругуюГруппу") Тогда
		Сведения = Ссылка.ТабличнаяЧастьВоспитанники.ВыгрузитьКолонку("Ребенок");
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.удуПриказОЗачисленииРебенкаВГруппу") Тогда
		Сведения = Ссылка.ТабличнаяЧастьЗачисление.ВыгрузитьКолонку("Ребенок");
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.удуЗаявкаНаЗачислениеРебенкаВДОУ")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.удуДоговорОЗачисленииРебенка") Тогда
		Сведения = Новый Массив();
		Сведения.Добавить(Ссылка.Ребенок);
	КонецЕсли;
	
	Возврат Сведения;
	
КонецФункции

// Функция извлекает возможных корреспондентов из учетного документа.
//
// Параметры:
//
// - Ссылка	- ссылка на учетный документ
//
// Возвращаемое значение:
// - Корреспондентов (СправочникСсылка.Корреспонденты)
// - Неопределено, если документ не содержит ссылки на Корреспондента
Функция ПолучитьКорреспондента(Ссылка)
	
	Родитель = Неопределено;
	
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.удуЗаявкаНаЗачислениеРебенкаВДОУ") Тогда
		Родитель = Ссылка.РодительПодавшийЗаявку;		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.удуДоговорОЗачисленииРебенка") Тогда
		Родитель = Ссылка.Родитель;
	КонецЕсли;
	
	Если Не Родитель = Неопределено Тогда
		Корреспондент = Справочники.Корреспонденты.НайтиПоРеквизиту("удуРодитель", Родитель);
		Если Не Корреспондент.Пустая() Тогда
			Родитель = Корреспондент;
		КонецЕсли;
	КонецЕсли;
		
	Возврат Родитель;
	
КонецФункции

&НаСервере
Процедура ЗаписатьСвязь(УчетныйДокумент, Документ, ТипДокумента, Комментарий) Экспорт
	
	// Записать информацию в связь между документами.
	МЗ = РегистрыСведений.удуСвязьДокументовСДелопроизводством.СоздатьМенеджерЗаписи();
	МЗ.ДокументДОУ = УчетныйДокумент;
	МЗ.ДокументДелопроизводства = Документ;
	МЗ.ВидДокумента = ТипДокумента;
	МЗ.Комментарий = Комментарий;
	МЗ.Записать(Ложь);
	
КонецПроцедуры
