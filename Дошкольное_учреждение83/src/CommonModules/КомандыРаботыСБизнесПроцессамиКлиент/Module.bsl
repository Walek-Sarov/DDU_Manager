////////////////////////////////////////////////////////////////////////////////
// Подсистема "Бизнес-процессы и задачи"
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Отмечает указанный бизнес-процесс как остановленный
//
Процедура Остановить(Знач ПараметрКоманды) Экспорт
	
	ТекстВопроса = "";
	
	ЧислоЗадач = 0;
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
		
		Если ПараметрКоманды.Количество() = 0 Тогда
			Предупреждение(НСтр("ru= 'Не выбран ни один бизнес-процесс.'"));
			Возврат;
		КонецЕсли;	
		
		Если ПараметрКоманды.Количество() = 1 И ТипЗнч(ПараметрКоманды[0]) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Предупреждение(НСтр("ru= 'Не выбран ни один бизнес-процесс.'"));
			Возврат;
		КонецЕсли;	
		
		ЧислоЗадач = БизнесПроцессыИЗадачиВызовСервера.КоличествоНевыполненныхЗадачБизнесПроцессов(ПараметрКоманды);
		Если ПараметрКоманды.Количество() = 1 Тогда
			Если ЧислоЗадач > 0 Тогда
				ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Будет выполнена остановка бизнес-процесса ""%1"" и всех его невыполненных задач (%2). Продолжить?'"), 
					Строка(ПараметрКоманды[0]), ЧислоЗадач);
			Иначе
				ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Будет выполнена остановка бизнес-процесса ""%1"". Продолжить?'"), 
					Строка(ПараметрКоманды[0]));
			КонецЕсли;		
		Иначе
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Будет выполнена остановка бизнес-процессов (%1) и всех их невыполненных задач (%2). Продолжить?'"), 
				ПараметрКоманды.Количество(), ЧислоЗадач);
		КонецЕсли;		
		
	Иначе
		
		Если ТипЗнч(ПараметрКоманды) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Предупреждение(НСтр("ru= 'Не выбран ни один бизнес-процесс'"));
			Возврат;
		КонецЕсли;	
		
		ЧислоЗадач = БизнесПроцессыИЗадачиВызовСервера.КоличествоНевыполненныхЗадачБизнесПроцесса(ПараметрКоманды);
		Если ЧислоЗадач > 0 Тогда
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Будет выполнена остановка бизнес-процесса ""%1"" и всех его невыполненных задач (%2). Продолжить?'"), 
				Строка(ПараметрКоманды), ЧислоЗадач);
		Иначе
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Будет выполнена остановка бизнес-процесса ""%1"". Продолжить?'"), 
				Строка(ПараметрКоманды));
		КонецЕсли;		
			
	КонецЕсли;
	
	Результат = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, НСтр("ru = 'Остановка бизнес-процесса'"));
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
			Если ПараметрКоманды.Количество() = 1 Тогда
				Состояние(НСтр("ru = 'Идет остановка бизнес-процесса. Пожалуйста подождите...'"));
			Иначе
				Состояние(НСтр("ru = 'Идет остановка бизнес-процессов. Пожалуйста подождите...'"));
			КонецЕсли;	
			
			БизнесПроцессыИЗадачиВызовСервера.ОстановитьБизнесПроцессы(ПараметрКоманды);
			
			Если ПараметрКоманды.Количество() = 1 Тогда
				Состояние(НСтр("ru = 'Бизнес-процесс остановлен.'"));
			Иначе	
				Состояние(НСтр("ru = 'Бизнес-процессы остановлены.'"));
			КонецЕсли;	
		Иначе	
			Состояние(НСтр("ru = 'Идет остановка бизнес-процесса. Пожалуйста подождите...'"));
			БизнесПроцессыИЗадачиВызовСервера.ОстановитьБизнесПроцесс(ПараметрКоманды);
			Состояние(НСтр("ru = 'Бизнес-процесс остановлен.'"));
		КонецЕсли;	
		
		Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
			
			Если ПараметрКоманды.Количество() <> 0 Тогда
				
				Для Каждого Параметр Из ПараметрКоманды Цикл
					
					Если ТипЗнч(Параметр) <> Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
						ОповеститьОбИзменении(ТипЗнч(Параметр));
						Прервать;
					КонецЕсли;	
					
				КонецЦикла;
				
			КонецЕсли;
			
		Иначе
			ОповеститьОбИзменении(ПараметрКоманды);	
		КонецЕсли;	
		
	КонецЕсли;	

КонецПроцедуры

// Отмечает указанный бизнес-процесс как остановленный.
// Предназначена для вызова из формы бизнес-процесса.
//
Процедура ОстановитьБизнесПроцессИзФормыОбъекта(Форма) Экспорт
	
	Форма.Объект.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияБизнесПроцессов.Остановлен");
	Форма.Записать();
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Бизнес-процесс остановлен'"),
		ПолучитьНавигационнуюСсылку(Форма.Объект.Ссылка),
		Строка(Форма.Объект.Ссылка),
		БиблиотекаКартинок.Информация32);
	ОповеститьОбИзменении(Форма.Объект.Ссылка);
	
КонецПроцедуры

// Отмечает указанный бизнес-процесс как активный
//
Процедура СделатьАктивным(Знач ПараметрКоманды) Экспорт
	
	ТекстВопроса = "";
	
	ЧислоЗадач = 0;
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
		
		Если ПараметрКоманды.Количество() = 0 Тогда
			Предупреждение(НСтр("ru= 'Не выбран ни один бизнес-процесс.'"));
			Возврат;
		КонецЕсли;	
		
		Если ПараметрКоманды.Количество() = 1 И ТипЗнч(ПараметрКоманды[0]) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Предупреждение(НСтр("ru= 'Не выбран ни один бизнес-процесс.'"));
			Возврат;
		КонецЕсли;	
		
		ЧислоЗадач = БизнесПроцессыИЗадачиВызовСервера.КоличествоНевыполненныхЗадачБизнесПроцессов(ПараметрКоманды);
		Если ПараметрКоманды.Количество() = 1 Тогда
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Бизнес-процесс ""%1"" и все его задачи (%2) будут сделаны активными. Продолжить?'"), 
				Строка(ПараметрКоманды[0]), ЧислоЗадач);
		Иначе		
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Бизнес-процессы (%1) и их задачи (%2) будут сделаны активными. Продолжить?'"), 
				ПараметрКоманды.Количество(), ЧислоЗадач);
		КонецЕсли;		
		
	Иначе
		
		Если ТипЗнч(ПараметрКоманды) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Предупреждение(НСтр("ru= 'Не выбран ни один бизнес-процесс.'"));
			Возврат;
		КонецЕсли;	
		
		ЧислоЗадач = БизнесПроцессыИЗадачиВызовСервера.КоличествоНевыполненныхЗадачБизнесПроцесса(ПараметрКоманды);
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Бизнес-процесс ""%1"" и все его задачи (%2) будут сделаны активными. Продолжить?'"), 
			Строка(ПараметрКоманды), ЧислоЗадач);
			
	КонецЕсли;
	
	Результат = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, НСтр("ru = 'Остановка бизнес-процесса'"));
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
			
			Если ПараметрКоманды.Количество() = 1 Тогда
				Состояние(НСтр("ru = 'Бизнес-процесс и его задачи делаются активными. Пожалуйста подождите...'"));
			Иначе	
				Состояние(НСтр("ru = 'Бизнес-процессы и их задачи делаются активными. Пожалуйста подождите...'"));
			КонецЕсли;	
			
			БизнесПроцессыИЗадачиВызовСервера.СделатьАктивнымБизнесПроцессы(ПараметрКоманды);
			
			Если ПараметрКоманды.Количество() = 1 Тогда
				Состояние(НСтр("ru = 'Бизнес-процесс и его задачи сделаны активными.'"));
			Иначе	
				Состояние(НСтр("ru = 'Бизнес-процессы и их задачи сделаны активными.'"));
			КонецЕсли;	
			
		Иначе	
			Состояние(НСтр("ru = 'Идет отмена остановки бизнес-процесса. Пожалуйста подождите...'"));
			БизнесПроцессыИЗадачиВызовСервера.СделатьАктивнымБизнесПроцесс(ПараметрКоманды);
			Состояние(НСтр("ru = 'Бизнес-процесс и его задачи сделаны активными.'"));
		КонецЕсли;	
		
		Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
			
			Если ПараметрКоманды.Количество() <> 0 Тогда
				
				Для Каждого Параметр Из ПараметрКоманды Цикл
					
					Если ТипЗнч(Параметр) <> Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
						ОповеститьОбИзменении(ТипЗнч(Параметр));
						Прервать;
					КонецЕсли;	
					
				КонецЦикла;
				
			КонецЕсли;
			
		Иначе
			ОповеститьОбИзменении(ПараметрКоманды);	
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

// Отмечает указанный бизнес-процесс как активный.
// Предназначена для вызова из формы бизнес-процесса.
//
Процедура ПродолжитьБизнесПроцессИзФормыОбъекта(Форма) Экспорт
	
	Форма.Объект.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияБизнесПроцессов.Активен");
	Форма.Записать();
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Бизнес-процесс сделан активным'"),
		ПолучитьНавигационнуюСсылку(Форма.Объект.Ссылка),
		Строка(Форма.Объект.Ссылка),
		БиблиотекаКартинок.Информация32);
	ОповеститьОбИзменении(Форма.Объект.Ссылка);
	
КонецПроцедуры

// Отмечает указанные задачи как принятые к исполнению
//
Процедура ПринятьЗадачиКИсполнению(Знач МассивЗадач) Экспорт
	
	БизнесПроцессыИЗадачиВызовСервера.ПринятьЗадачиКИсполнению(МассивЗадач);
	Если МассивЗадач.Количество() = 0 Тогда
		Предупреждение(НСтр("ru = 'Команда не может быть выполнена для указанного объекта.'"));
		Возврат;
	ИначеЕсли МассивЗадач.Количество() <> 1 Тогда
		Состояние(НСтр("ru = 'Задачи приняты к исполнению.'"));
	Иначе		
		Состояние(НСтр("ru = 'Задача принята к исполнению.'"));
	КонецЕсли;	
	
	ТипЗначенияЗадачи = Неопределено;
	Для каждого Задача Из МассивЗадач Цикл
		Если ТипЗнч(Задача) <> Тип("СтрокаГруппировкиДинамическогоСписка") Тогда 
			ТипЗначенияЗадачи = ТипЗнч(Задача);
			Прервать;
		КонецЕсли;	
	КонецЦикла;	
	Если ТипЗначенияЗадачи <> Неопределено Тогда
		ОповеститьОбИзменении(ТипЗначенияЗадачи);
	КонецЕсли;	
	
КонецПроцедуры

// Отмечает указанную задачу как принятую к исполнению
//
Процедура ПринятьЗадачуКИсполнению(Форма, ТекущийПользователь) Экспорт
	
	Форма.Объект.ПринятаКИсполнению = Истина;
	
	// ДатаПринятияКИсполнению устанавливается пустой - она будет проинициализирована 
	// текущей датой сеанса перед записью самой  задачи
	Форма.Объект.ДатаПринятияКИсполнению = Дата('00010101');
	Если Форма.Объект.Исполнитель.Пустая() Тогда
		Форма.Объект.Исполнитель = ТекущийПользователь;
	КонецЕсли;	
			
	Форма.Записать();
	Состояние(НСтр("ru = 'Задача принята к исполнению.'"));
	ОбновитьДоступностьКомандПринятияКИсполнению(Форма);
	ОповеститьОбИзменении(Форма.Объект.Ссылка);
	
КонецПроцедуры

// Отмечает указанные задачи как не принятые к исполнению
//
Процедура ОтменитьПринятиеЗадачКИсполнению(Знач МассивЗадач) Экспорт
	
	БизнесПроцессыИЗадачиВызовСервера.ОтменитьПринятиеЗадачКИсполнению(МассивЗадач);
	Если МассивЗадач.Количество() = 0 Тогда
		Предупреждение(НСтр("ru = 'Команда не может быть выполнена для указанного объекта.'"));
		Возврат;
	ИначеЕсли МассивЗадач.Количество() <> 1 Тогда
		Состояние(НСтр("ru = 'Задачи помечены как НЕ принятые к исполнению.'"));
	Иначе		
		Состояние(НСтр("ru = 'Задача помечена как НЕ принятая к исполнению.'"));
	КонецЕсли;		
	
	ТипЗначенияЗадачи = Неопределено;
	Для каждого Задача Из МассивЗадач Цикл
		Если ТипЗнч(Задача) <> Тип("СтрокаГруппировкиДинамическогоСписка") Тогда 
			ТипЗначенияЗадачи = ТипЗнч(Задача);
			Прервать;
		КонецЕсли;	
	КонецЦикла;	
	Если ТипЗначенияЗадачи <> Неопределено Тогда
		ОповеститьОбИзменении(ТипЗначенияЗадачи);
	КонецЕсли;	
	
КонецПроцедуры

// Отмечает указанную задачу как не принятую к исполнению
//
Процедура ОтменитьПринятиеЗадачиКИсполнению(Форма) Экспорт
	
	Форма.Объект.ПринятаКИсполнению = Ложь;
	Форма.Объект.ДатаПринятияКИсполнению = "00010101000000";
	Если Не Форма.Объект.РольИсполнителя.Пустая() Тогда
		Форма.Объект.Исполнитель = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	КонецЕсли;	
	
	Форма.Записать();
	Состояние(НСтр("ru = 'Задача помечена как НЕ принятая к исполнению.'"));
	ОбновитьДоступностьКомандПринятияКИсполнению(Форма);
	ОповеститьОбИзменении(Форма.Объект.Ссылка);
	
КонецПроцедуры

// Устанавливает доступность команд принятия к исполнению
//
Процедура ОбновитьДоступностьКомандПринятияКИсполнению(Форма) Экспорт
	
	Если Форма.Объект.ПринятаКИсполнению = Истина Тогда
		Форма.Элементы.ФормаПринятьКИсполнению.Доступность = Ложь;
		Форма.Элементы.ФормаОтменитьПринятиеКИсполнению.Доступность = Истина;
	Иначе	
		Форма.Элементы.ФормаПринятьКИсполнению.Доступность = Истина;
		Форма.Элементы.ФормаОтменитьПринятиеКИсполнению.Доступность = Ложь;
	КонецЕсли;	
		
КонецПроцедуры

