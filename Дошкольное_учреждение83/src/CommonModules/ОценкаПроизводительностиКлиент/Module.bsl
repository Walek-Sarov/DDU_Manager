////////////////////////////////////////////////////////////////////////////////
// Подсистема "Оценка производительности".
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет работу с ДиалогРаботыСФайлами с учетом веб-клиента.
//
// Параметры:
//  РежимДиалога - РежимДиалогаВыбораФайла, режим, в котором следует открыть диалог
//  РезультатВыбора - 
//  	Строка, результат выбора
//  	Неопределено, пользователь не выбрал каталог, но и не отказался от выполнения действий
//  МестоХранения - Строка, если действие выполняется в веб-клиенте необходим для запроса разрешения на действие
//  Расширение - Строка, расширение сохраняемого/загружаемого файла 
//
// Возвращаемое значение:
//  Булево - 
//  	Истина, диалог был вызван и пользователь выоплнил необходимые действия
//  	Ложь, пользователь отказался от выполнения каких-либо действий
//
Функция ВызватьДиалогРаботыСФайлами(Знач РежимДиалога, РезультатВыбора, Знач МестоХранения = "", Знач Расширение = "") Экспорт
	
	РасширениеПодключено = Ложь;
	Результат = ОбработатьРасширениеРаботыСФайлами(РасширениеПодключено);
	
	Если РасширениеПодключено Тогда
		
		ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалога);
		Если Не ПустаяСтрока(Расширение) Тогда
			ДиалогВыбора.Фильтр = "*." + Расширение + "| *." + Расширение;
			ДиалогВыбора.Расширение = Расширение;
		КонецЕсли;
		
		Если ДиалогВыбора.Выбрать() Тогда
			Если РежимДиалога = РежимДиалогаВыбораФайла.ВыборКаталога Тогда
				РезультатВыбора = ДиалогВыбора.Каталог;
			Иначе
				РезультатВыбора = ДиалогВыбора.ПолноеИмяФайла;
			КонецЕсли;
		Иначе
			Результат = Ложь;
		КонецЕсли;
		
	Иначе
		РезультатВыбора = Неопределено;
	КонецЕсли;
	
	#Если ВебКлиент Тогда
		Если РасширениеПодключено И Результат Тогда
			Если РежимДиалога = РежимДиалогаВыбораФайла.Сохранение Тогда
				Результат = ЗапроситьРазрешениеНаПолучениеФайла(МестоХранения, РезультатВыбора);
			ИначеЕсли РежимДиалога = РежимДиалогаВыбораФайла.Открытие Тогда
				
			КонецЕсли;
		КонецЕсли;
	#КонецЕсли
	
	Возврат Результат;
	
КонецФункции

// Выполняет попытку подключения расширения рабоыт с файлами
//
// Параметры:
//  РасширениеПодключено - Булево:
//  	Истина, расширение подключено
//  	Ложь, расширение не подключено
//
// Возвращаемое значение:
//  Булево - 
//  	Истина, расширение было или небыло подключено, пользователь не отказался от выполнения операции
//  	Ложь, пользователь отказался от выполнения операции
//
Функция ОбработатьРасширениеРаботыСФайлами(РасширениеПодключено)
	
	// Повторения строк:
	//
	// РасширениеПодключено = Ложь;
	// Результат = Истина;
	//
	// для очевидности и понятности логики.
	
	РасширениеПодключено = ПодключитьРасширениеРаботыСФайлами();
	Результат = РасширениеПодключено;
	
	Если Не РасширениеПодключено Тогда
		
		КодВозврата = Вопрос(НСтр("ru = 'Расширение работы с файлами не установлено, установить?
			|""Да"" - Выполнить попытку установки расширения
			|""Нет"" - Экспорт будет выполнен стандартными средствами браузера
			|""Отмена"" - Отменить экспорт'"), РежимДиалогаВопрос.ДаНетОтмена);
							
		Если КодВозврата = КодВозвратаДиалога.Да Тогда
			
			УстановитьРасширениеРаботыСФайлами();
			Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
				
				КодВозврата = Вопрос(НСтр("ru = 'Выполнить стандартными средствами браузера?'"), РежимДиалогаВопрос.ДаНет);
				Если КодВозврата = КодВозвратаДиалога.Да Тогда
					РасширениеПодключено = Ложь;
					Результат = Истина;
				ИначеЕсли КодВозврата = КодВозвратаДиалога.Нет Тогда
					РасширениеПодключено = Ложь;
					Результат = Ложь;
				КонецЕсли;
				
			Иначе
				РасширениеПодключено = Истина;
				Результат = Истина;
			КонецЕсли;
			
		ИначеЕсли КодВозврата = КодВозвратаДиалога.Нет Тогда
			РасширениеПодключено = Ложь;
			Результат = Истина;
		ИначеЕсли КодВозврата = КодВозвратаДиалога.Отмена Тогда
			РасширениеПодключено = Ложь;
			Результат = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Запрашивает разрешение у пользователя на получение файла
//
// Параметры:
//  Хранение - Строка, содержит положение файла на сервере
//  Имя - Строка, содержит положение файла на клиенте
//
// Возвращаемое значение:
//  Булево - 
//  	Истина, разрешение получено
//  	Ложь, разрешение не получено
//
Функция ЗапроситьРазрешениеНаПолучениеФайла(Хранение, Имя)
	
	ОписаниеПередаваемогоФайла = Новый ОписаниеПередаваемогоФайла;
	ОписаниеПередаваемогоФайла.Хранение = Хранение;
	ОписаниеПередаваемогоФайла.Имя = Имя;
	
	МассивФайлов = Новый Массив;
	МассивФайлов.Добавить(ОписаниеПередаваемогоФайла);
	
	ОписаниеВызова = Новый Массив;
	ОписаниеВызова.Добавить("ПолучитьФайлы");
	ОписаниеВызова.Добавить(МассивФайлов);
	ОписаниеВызова.Добавить("");
	ОписаниеВызова.Добавить("");
	ОписаниеВызова.Добавить(Ложь);
	
	Вызовы = Новый Массив;
	Вызовы.Добавить(ОписаниеВызова);
	
	
	Возврат ЗапроситьРазрешениеПользователя(Вызовы);
	
КонецФункции

Процедура ЗакончитьЗамерВремениАвтоНеГлобальный() Экспорт
	
	ОценкаПроизводительностиВызовСервераПолныеПрава.ЗафиксироватьВремяОкончания(
		ОценкаПроизводительностиЗамерВремени.Получить("КлючеваяОперация"),
		ОценкаПроизводительностиЗамерВремени.Получить("ВремяНачала"),
		Истина,
		ОценкаПроизводительностиЗамерВремени.Получить("ВремяНачалаПроверка")
		);
	
КонецПроцедуры